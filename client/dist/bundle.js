/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _angularSanitize = __webpack_require__(3);

	var _angularSanitize2 = _interopRequireDefault(_angularSanitize);

	var _angularScroll = __webpack_require__(5);

	var _angularScroll2 = _interopRequireDefault(_angularScroll);

	var _components = __webpack_require__(8);

	var _components2 = _interopRequireDefault(_components);

	var _data = __webpack_require__(15);

	var _erdman = __webpack_require__(16);

	var _erdman2 = _interopRequireDefault(_erdman);

	var _jquery = __webpack_require__(17);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_angular2.default.module("Erdman", ['duScroll', _components2.default]).value('duScrollOffset', 60).controller('ErdmanController', _erdman2.default).run(function ($rootScope, $window) {
	  $rootScope.$on('duScrollspy:becameActive', function ($event, $element, $target) {
	    (0, _jquery2.default)('.toc-item.expandible').each(function (k, v) {
	      if ((0, _jquery2.default)(v).find('.active').length || (0, _jquery2.default)(v).hasClass('active')) {
	        (0, _jquery2.default)(v).addClass('expanded');
	        /*if(jQuery(v)[0].id === $element[0].id && $element.hasClass('expanded')){
	          jQuery(v).removeClass('expanded');
	        } else {
	          jQuery(v).addClass('expanded');
	        }*/
	      } else {
	        (0, _jquery2.default)(v).removeClass('expanded');
	      }
	    });

	    /*if(jQuery($element).hasClass('expanded')){
	      jQuery($element).removeClass('expanded');
	    }*/
	  });

	  $rootScope.$on('newSearch', function () {
	    (0, _jquery2.default)('.search-results').animate({ scrollTop: 0 }, 'slow');
	  });

	  $rootScope.$on('expand', function ($event, $data) {
	    if ($rootScope.currentToc == $data.key) {
	      console.log('matching');
	      var element = (0, _jquery2.default)('#toc-' + $data.key);
	      if (element.hasClass('expanded')) {
	        element.removeClass('expanded');
	      } else {
	        element.addClass('expanded');
	      }
	    }
	    $rootScope.currentToc = $data.key;
	  });
	}).config(function ($locationProvider) {
	  $locationProvider.html5Mode(true).hashPrefix('!');
	});

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(2);
	module.exports = angular;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
	 * @license AngularJS v1.8.3
	 * (c) 2010-2020 Google LLC. http://angularjs.org
	 * License: MIT
	 */(function(window){'use strict';/* exported
	  minErrConfig,
	  errorHandlingConfig,
	  isValidObjectMaxDepth
	*/var minErrConfig={objectMaxDepth:5,urlErrorParamsEnabled:true};/**
	 * @ngdoc function
	 * @name angular.errorHandlingConfig
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Configure several aspects of error handling in AngularJS if used as a setter or return the
	 * current configuration if used as a getter. The following options are supported:
	 *
	 * - **objectMaxDepth**: The maximum depth to which objects are traversed when stringified for error messages.
	 *
	 * Omitted or undefined options will leave the corresponding configuration values unchanged.
	 *
	 * @param {Object=} config - The configuration object. May only contain the options that need to be
	 *     updated. Supported keys:
	 *
	 * * `objectMaxDepth`  **{Number}** - The max depth for stringifying objects. Setting to a
	 *   non-positive or non-numeric value, removes the max depth limit.
	 *   Default: 5
	 *
	 * * `urlErrorParamsEnabled`  **{Boolean}** - Specifies whether the generated error url will
	 *   contain the parameters of the thrown error. Disabling the parameters can be useful if the
	 *   generated error url is very long.
	 *
	 *   Default: true. When used without argument, it returns the current value.
	 */function errorHandlingConfig(config){if(isObject(config)){if(isDefined(config.objectMaxDepth)){minErrConfig.objectMaxDepth=isValidObjectMaxDepth(config.objectMaxDepth)?config.objectMaxDepth:NaN;}if(isDefined(config.urlErrorParamsEnabled)&&isBoolean(config.urlErrorParamsEnabled)){minErrConfig.urlErrorParamsEnabled=config.urlErrorParamsEnabled;}}else{return minErrConfig;}}/**
	 * @private
	 * @param {Number} maxDepth
	 * @return {boolean}
	 */function isValidObjectMaxDepth(maxDepth){return isNumber(maxDepth)&&maxDepth>0;}/**
	 * @description
	 *
	 * This object provides a utility for producing rich Error messages within
	 * AngularJS. It can be called as follows:
	 *
	 * var exampleMinErr = minErr('example');
	 * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);
	 *
	 * The above creates an instance of minErr in the example namespace. The
	 * resulting error will have a namespaced error code of example.one.  The
	 * resulting error will replace {0} with the value of foo, and {1} with the
	 * value of bar. The object is not restricted in the number of arguments it can
	 * take.
	 *
	 * If fewer arguments are specified than necessary for interpolation, the extra
	 * interpolation markers will be preserved in the final string.
	 *
	 * Since data will be parsed statically during a build step, some restrictions
	 * are applied with respect to how minErr instances are created and called.
	 * Instances should have names of the form namespaceMinErr for a minErr created
	 * using minErr('namespace'). Error codes, namespaces and template strings
	 * should all be static strings, not variables or general expressions.
	 *
	 * @param {string} module The namespace to use for the new minErr instance.
	 * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning
	 *   error from returned function, for cases when a particular type of error is useful.
	 * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance
	 */function minErr(module,ErrorConstructor){ErrorConstructor=ErrorConstructor||Error;var url='https://errors.angularjs.org/1.8.3/';var regex=url.replace('.','\\.')+'[\\s\\S]*';var errRegExp=new RegExp(regex,'g');return function(){var code=arguments[0],template=arguments[1],message='['+(module?module+':':'')+code+'] ',templateArgs=sliceArgs(arguments,2).map(function(arg){return toDebugString(arg,minErrConfig.objectMaxDepth);}),paramPrefix,i;// A minErr message has two parts: the message itself and the url that contains the
	// encoded message.
	// The message's parameters can contain other error messages which also include error urls.
	// To prevent the messages from getting too long, we strip the error urls from the parameters.
	message+=template.replace(/\{\d+\}/g,function(match){var index=+match.slice(1,-1);if(index<templateArgs.length){return templateArgs[index].replace(errRegExp,'');}return match;});message+='\n'+url+(module?module+'/':'')+code;if(minErrConfig.urlErrorParamsEnabled){for(i=0,paramPrefix='?';i<templateArgs.length;i++,paramPrefix='&'){message+=paramPrefix+'p'+i+'='+encodeURIComponent(templateArgs[i]);}}return new ErrorConstructor(message);};}/* We need to tell ESLint what variables are being exported *//* exported
	  angular,
	  msie,
	  jqLite,
	  jQuery,
	  slice,
	  splice,
	  push,
	  toString,
	  minErrConfig,
	  errorHandlingConfig,
	  isValidObjectMaxDepth,
	  ngMinErr,
	  angularModule,
	  uid,
	  REGEX_STRING_REGEXP,
	  VALIDITY_STATE_PROPERTY,

	  lowercase,
	  uppercase,
	  nodeName_,
	  isArrayLike,
	  forEach,
	  forEachSorted,
	  reverseParams,
	  nextUid,
	  setHashKey,
	  extend,
	  toInt,
	  inherit,
	  merge,
	  noop,
	  identity,
	  valueFn,
	  isUndefined,
	  isDefined,
	  isObject,
	  isBlankObject,
	  isString,
	  isNumber,
	  isNumberNaN,
	  isDate,
	  isError,
	  isArray,
	  isFunction,
	  isRegExp,
	  isWindow,
	  isScope,
	  isFile,
	  isFormData,
	  isBlob,
	  isBoolean,
	  isPromiseLike,
	  trim,
	  escapeForRegexp,
	  isElement,
	  makeMap,
	  includes,
	  arrayRemove,
	  copy,
	  simpleCompare,
	  equals,
	  csp,
	  jq,
	  concat,
	  sliceArgs,
	  bind,
	  toJsonReplacer,
	  toJson,
	  fromJson,
	  convertTimezoneToLocal,
	  timezoneToOffset,
	  addDateMinutes,
	  startingTag,
	  tryDecodeURIComponent,
	  parseKeyValue,
	  toKeyValue,
	  encodeUriSegment,
	  encodeUriQuery,
	  angularInit,
	  bootstrap,
	  getTestability,
	  snake_case,
	  bindJQuery,
	  assertArg,
	  assertArgFn,
	  assertNotHasOwnProperty,
	  getter,
	  getBlockNodes,
	  hasOwnProperty,
	  createMap,
	  stringify,
	  UNSAFE_restoreLegacyJqLiteXHTMLReplacement,

	  NODE_TYPE_ELEMENT,
	  NODE_TYPE_ATTRIBUTE,
	  NODE_TYPE_TEXT,
	  NODE_TYPE_COMMENT,
	  NODE_TYPE_DOCUMENT,
	  NODE_TYPE_DOCUMENT_FRAGMENT
	*/////////////////////////////////////
	/**
	 * @ngdoc module
	 * @name ng
	 * @module ng
	 * @installation
	 * @description
	 *
	 * The ng module is loaded by default when an AngularJS application is started. The module itself
	 * contains the essential components for an AngularJS application to function. The table below
	 * lists a high level breakdown of each of the services/factories, filters, directives and testing
	 * components available within this core module.
	 *
	 */var REGEX_STRING_REGEXP=/^\/(.+)\/([a-z]*)$/;// The name of a form control's ValidityState property.
	// This is used so that it's possible for internal tests to create mock ValidityStates.
	var VALIDITY_STATE_PROPERTY='validity';var hasOwnProperty=Object.prototype.hasOwnProperty;/**
	 * @private
	 *
	 * @description Converts the specified string to lowercase.
	 * @param {string} string String to be converted to lowercase.
	 * @returns {string} Lowercased string.
	 */var lowercase=function lowercase(string){return isString(string)?string.toLowerCase():string;};/**
	 * @private
	 *
	 * @description Converts the specified string to uppercase.
	 * @param {string} string String to be converted to uppercase.
	 * @returns {string} Uppercased string.
	 */var uppercase=function uppercase(string){return isString(string)?string.toUpperCase():string;};var msie,// holds major version number for IE, or NaN if UA is not IE.
	jqLite,// delay binding since jQuery could be loaded after us.
	jQuery,// delay binding
	slice=[].slice,splice=[].splice,push=[].push,toString=Object.prototype.toString,getPrototypeOf=Object.getPrototypeOf,ngMinErr=minErr('ng'),/** @name angular */angular=window.angular||(window.angular={}),angularModule,uid=0;// Support: IE 9-11 only
	/**
	 * documentMode is an IE-only property
	 * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx
	 */msie=window.document.documentMode;/**
	 * @private
	 * @param {*} obj
	 * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,
	 *                   String ...)
	 */function isArrayLike(obj){// `null`, `undefined` and `window` are not array-like
	if(obj==null||isWindow(obj))return false;// arrays, strings and jQuery/jqLite objects are array like
	// * jqLite is either the jQuery or jqLite constructor function
	// * we have to check the existence of jqLite first as this method is called
	//   via the forEach method when constructing the jqLite object in the first place
	if(isArray(obj)||isString(obj)||jqLite&&obj instanceof jqLite)return true;// Support: iOS 8.2 (not reproducible in simulator)
	// "length" in obj used to prevent JIT error (gh-11508)
	var length='length'in Object(obj)&&obj.length;// NodeList objects (with `item` method) and
	// other objects with suitable length characteristics are array-like
	return isNumber(length)&&(length>=0&&length-1 in obj||typeof obj.item==='function');}/**
	 * @ngdoc function
	 * @name angular.forEach
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Invokes the `iterator` function once for each item in `obj` collection, which can be either an
	 * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`
	 * is the value of an object property or an array element, `key` is the object property key or
	 * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.
	 *
	 * It is worth noting that `.forEach` does not iterate over inherited properties because it filters
	 * using the `hasOwnProperty` method.
	 *
	 * Unlike ES262's
	 * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),
	 * providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just
	 * return the value provided.
	 *
	   ```js
	     var values = {name: 'misko', gender: 'male'};
	     var log = [];
	     angular.forEach(values, function(value, key) {
	       this.push(key + ': ' + value);
	     }, log);
	     expect(log).toEqual(['name: misko', 'gender: male']);
	   ```
	 *
	 * @param {Object|Array} obj Object to iterate over.
	 * @param {Function} iterator Iterator function.
	 * @param {Object=} context Object to become context (`this`) for the iterator function.
	 * @returns {Object|Array} Reference to `obj`.
	 */function forEach(obj,iterator,context){var key,length;if(obj){if(isFunction(obj)){for(key in obj){if(key!=='prototype'&&key!=='length'&&key!=='name'&&obj.hasOwnProperty(key)){iterator.call(context,obj[key],key,obj);}}}else if(isArray(obj)||isArrayLike(obj)){var isPrimitive=(typeof obj==='undefined'?'undefined':_typeof(obj))!=='object';for(key=0,length=obj.length;key<length;key++){if(isPrimitive||key in obj){iterator.call(context,obj[key],key,obj);}}}else if(obj.forEach&&obj.forEach!==forEach){obj.forEach(iterator,context,obj);}else if(isBlankObject(obj)){// createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
	for(key in obj){iterator.call(context,obj[key],key,obj);}}else if(typeof obj.hasOwnProperty==='function'){// Slow path for objects inheriting Object.prototype, hasOwnProperty check needed
	for(key in obj){if(obj.hasOwnProperty(key)){iterator.call(context,obj[key],key,obj);}}}else{// Slow path for objects which do not have a method `hasOwnProperty`
	for(key in obj){if(hasOwnProperty.call(obj,key)){iterator.call(context,obj[key],key,obj);}}}}return obj;}function forEachSorted(obj,iterator,context){var keys=Object.keys(obj).sort();for(var i=0;i<keys.length;i++){iterator.call(context,obj[keys[i]],keys[i]);}return keys;}/**
	 * when using forEach the params are value, key, but it is often useful to have key, value.
	 * @param {function(string, *)} iteratorFn
	 * @returns {function(*, string)}
	 */function reverseParams(iteratorFn){return function(value,key){iteratorFn(key,value);};}/**
	 * A consistent way of creating unique IDs in angular.
	 *
	 * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before
	 * we hit number precision issues in JavaScript.
	 *
	 * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M
	 *
	 * @returns {number} an unique alpha-numeric string
	 */function nextUid(){return++uid;}/**
	 * Set or clear the hashkey for an object.
	 * @param obj object
	 * @param h the hashkey (!truthy to delete the hashkey)
	 */function setHashKey(obj,h){if(h){obj.$$hashKey=h;}else{delete obj.$$hashKey;}}function baseExtend(dst,objs,deep){var h=dst.$$hashKey;for(var i=0,ii=objs.length;i<ii;++i){var obj=objs[i];if(!isObject(obj)&&!isFunction(obj))continue;var keys=Object.keys(obj);for(var j=0,jj=keys.length;j<jj;j++){var key=keys[j];var src=obj[key];if(deep&&isObject(src)){if(isDate(src)){dst[key]=new Date(src.valueOf());}else if(isRegExp(src)){dst[key]=new RegExp(src);}else if(src.nodeName){dst[key]=src.cloneNode(true);}else if(isElement(src)){dst[key]=src.clone();}else{if(key!=='__proto__'){if(!isObject(dst[key]))dst[key]=isArray(src)?[]:{};baseExtend(dst[key],[src],true);}}}else{dst[key]=src;}}}setHashKey(dst,h);return dst;}/**
	 * @ngdoc function
	 * @name angular.extend
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
	 * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
	 * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.
	 *
	 * **Note:** Keep in mind that `angular.extend` does not support recursive merge (deep copy). Use
	 * {@link angular.merge} for this.
	 *
	 * @param {Object} dst Destination object.
	 * @param {...Object} src Source object(s).
	 * @returns {Object} Reference to `dst`.
	 */function extend(dst){return baseExtend(dst,slice.call(arguments,1),false);}/**
	* @ngdoc function
	* @name angular.merge
	* @module ng
	* @kind function
	*
	* @description
	* Deeply extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
	* to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
	* by passing an empty object as the target: `var object = angular.merge({}, object1, object2)`.
	*
	* Unlike {@link angular.extend extend()}, `merge()` recursively descends into object properties of source
	* objects, performing a deep copy.
	*
	* @deprecated
	* sinceVersion="1.6.5"
	* This function is deprecated, but will not be removed in the 1.x lifecycle.
	* There are edge cases (see {@link angular.merge#known-issues known issues}) that are not
	* supported by this function. We suggest using another, similar library for all-purpose merging,
	* such as [lodash's merge()](https://lodash.com/docs/4.17.4#merge).
	*
	* @knownIssue
	* This is a list of (known) object types that are not handled correctly by this function:
	* - [`Blob`](https://developer.mozilla.org/docs/Web/API/Blob)
	* - [`MediaStream`](https://developer.mozilla.org/docs/Web/API/MediaStream)
	* - [`CanvasGradient`](https://developer.mozilla.org/docs/Web/API/CanvasGradient)
	* - AngularJS {@link $rootScope.Scope scopes};
	*
	* `angular.merge` also does not support merging objects with circular references.
	*
	* @param {Object} dst Destination object.
	* @param {...Object} src Source object(s).
	* @returns {Object} Reference to `dst`.
	*/function merge(dst){return baseExtend(dst,slice.call(arguments,1),true);}function toInt(str){return parseInt(str,10);}var isNumberNaN=Number.isNaN||function isNumberNaN(num){// eslint-disable-next-line no-self-compare
	return num!==num;};function inherit(parent,extra){return extend(Object.create(parent),extra);}/**
	 * @ngdoc function
	 * @name angular.noop
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * A function that performs no operations. This function can be useful when writing code in the
	 * functional style.
	   ```js
	     function foo(callback) {
	       var result = calculateResult();
	       (callback || angular.noop)(result);
	     }
	   ```
	 */function noop(){}noop.$inject=[];/**
	 * @ngdoc function
	 * @name angular.identity
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * A function that returns its first argument. This function is useful when writing code in the
	 * functional style.
	 *
	   ```js
	   function transformer(transformationFn, value) {
	     return (transformationFn || angular.identity)(value);
	   };

	   // E.g.
	   function getResult(fn, input) {
	     return (fn || angular.identity)(input);
	   };

	   getResult(function(n) { return n * 2; }, 21);   // returns 42
	   getResult(null, 21);                            // returns 21
	   getResult(undefined, 21);                       // returns 21
	   ```
	 *
	 * @param {*} value to be returned.
	 * @returns {*} the value passed in.
	 */function identity($){return $;}identity.$inject=[];function valueFn(value){return function valueRef(){return value;};}function hasCustomToString(obj){return isFunction(obj.toString)&&obj.toString!==toString;}/**
	 * @ngdoc function
	 * @name angular.isUndefined
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is undefined.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is undefined.
	 */function isUndefined(value){return typeof value==='undefined';}/**
	 * @ngdoc function
	 * @name angular.isDefined
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is defined.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is defined.
	 */function isDefined(value){return typeof value!=='undefined';}/**
	 * @ngdoc function
	 * @name angular.isObject
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not
	 * considered to be objects. Note that JavaScript arrays are objects.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is an `Object` but not `null`.
	 */function isObject(value){// http://jsperf.com/isobject4
	return value!==null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object';}/**
	 * Determine if a value is an object with a null prototype
	 *
	 * @returns {boolean} True if `value` is an `Object` with a null prototype
	 */function isBlankObject(value){return value!==null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object'&&!getPrototypeOf(value);}/**
	 * @ngdoc function
	 * @name angular.isString
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is a `String`.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a `String`.
	 */function isString(value){return typeof value==='string';}/**
	 * @ngdoc function
	 * @name angular.isNumber
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is a `Number`.
	 *
	 * This includes the "special" numbers `NaN`, `+Infinity` and `-Infinity`.
	 *
	 * If you wish to exclude these then you can use the native
	 * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)
	 * method.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a `Number`.
	 */function isNumber(value){return typeof value==='number';}/**
	 * @ngdoc function
	 * @name angular.isDate
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a value is a date.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a `Date`.
	 */function isDate(value){return toString.call(value)==='[object Date]';}/**
	 * @ngdoc function
	 * @name angular.isArray
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is an `Array`.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is an `Array`.
	 */function isArray(arr){return Array.isArray(arr)||arr instanceof Array;}/**
	 * @description
	 * Determines if a reference is an `Error`.
	 * Loosely based on https://www.npmjs.com/package/iserror
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is an `Error`.
	 */function isError(value){var tag=toString.call(value);switch(tag){case'[object Error]':return true;case'[object Exception]':return true;case'[object DOMException]':return true;default:return value instanceof Error;}}/**
	 * @ngdoc function
	 * @name angular.isFunction
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is a `Function`.
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a `Function`.
	 */function isFunction(value){return typeof value==='function';}/**
	 * Determines if a value is a regular expression object.
	 *
	 * @private
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a `RegExp`.
	 */function isRegExp(value){return toString.call(value)==='[object RegExp]';}/**
	 * Checks if `obj` is a window object.
	 *
	 * @private
	 * @param {*} obj Object to check
	 * @returns {boolean} True if `obj` is a window obj.
	 */function isWindow(obj){return obj&&obj.window===obj;}function isScope(obj){return obj&&obj.$evalAsync&&obj.$watch;}function isFile(obj){return toString.call(obj)==='[object File]';}function isFormData(obj){return toString.call(obj)==='[object FormData]';}function isBlob(obj){return toString.call(obj)==='[object Blob]';}function isBoolean(value){return typeof value==='boolean';}function isPromiseLike(obj){return obj&&isFunction(obj.then);}var TYPED_ARRAY_REGEXP=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/;function isTypedArray(value){return value&&isNumber(value.length)&&TYPED_ARRAY_REGEXP.test(toString.call(value));}function isArrayBuffer(obj){return toString.call(obj)==='[object ArrayBuffer]';}var trim=function trim(value){return isString(value)?value.trim():value;};// Copied from:
	// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021
	// Prereq: s is a string.
	var escapeForRegexp=function escapeForRegexp(s){return s.replace(/([-()[\]{}+?*.$^|,:#<!\\])/g,'\\$1')// eslint-disable-next-line no-control-regex
	.replace(/\x08/g,'\\x08');};/**
	 * @ngdoc function
	 * @name angular.isElement
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if a reference is a DOM element (or wrapped jQuery element).
	 *
	 * @param {*} value Reference to check.
	 * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).
	 */function isElement(node){return!!(node&&(node.nodeName// We are a direct element.
	||node.prop&&node.attr&&node.find));// We have an on and find method part of jQuery API.
	}/**
	 * @param str 'key1,key2,...'
	 * @returns {object} in the form of {key1:true, key2:true, ...}
	 */function makeMap(str){var obj={},items=str.split(','),i;for(i=0;i<items.length;i++){obj[items[i]]=true;}return obj;}function nodeName_(element){return lowercase(element.nodeName||element[0]&&element[0].nodeName);}function includes(array,obj){return Array.prototype.indexOf.call(array,obj)!==-1;}function arrayRemove(array,value){var index=array.indexOf(value);if(index>=0){array.splice(index,1);}return index;}/**
	 * @ngdoc function
	 * @name angular.copy
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Creates a deep copy of `source`, which should be an object or an array. This functions is used
	 * internally, mostly in the change-detection code. It is not intended as an all-purpose copy
	 * function, and has several limitations (see below).
	 *
	 * * If no destination is supplied, a copy of the object or array is created.
	 * * If a destination is provided, all of its elements (for arrays) or properties (for objects)
	 *   are deleted and then all elements/properties from the source are copied to it.
	 * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.
	 * * If `source` is identical to `destination` an exception will be thrown.
	 *
	 * <br />
	 *
	 * <div class="alert alert-warning">
	 *   Only enumerable properties are taken into account. Non-enumerable properties (both on `source`
	 *   and on `destination`) will be ignored.
	 * </div>
	 *
	 * <div class="alert alert-warning">
	 *   `angular.copy` does not check if destination and source are of the same type. It's the
	 *   developer's responsibility to make sure they are compatible.
	 * </div>
	 *
	 * @knownIssue
	 * This is a non-exhaustive list of object types / features that are not handled correctly by
	 * `angular.copy`. Note that since this functions is used by the change detection code, this
	 * means binding or watching objects of these types (or that include these types) might not work
	 * correctly.
	 * - [`File`](https://developer.mozilla.org/docs/Web/API/File)
	 * - [`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map)
	 * - [`ImageData`](https://developer.mozilla.org/docs/Web/API/ImageData)
	 * - [`MediaStream`](https://developer.mozilla.org/docs/Web/API/MediaStream)
	 * - [`Set`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)
	 * - [`WeakMap`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)
	 * - [`getter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get)/
	 *   [`setter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)
	 *
	 * @param {*} source The source that will be used to make a copy. Can be any type, including
	 *     primitives, `null`, and `undefined`.
	 * @param {(Object|Array)=} destination Destination into which the source is copied. If provided,
	 *     must be of the same type as `source`.
	 * @returns {*} The copy or updated `destination`, if `destination` was specified.
	 *
	 * @example
	  <example module="copyExample" name="angular-copy">
	    <file name="index.html">
	      <div ng-controller="ExampleController">
	        <form novalidate class="simple-form">
	          <label>Name: <input type="text" ng-model="user.name" /></label><br />
	          <label>Age:  <input type="number" ng-model="user.age" /></label><br />
	          Gender: <label><input type="radio" ng-model="user.gender" value="male" />male</label>
	                  <label><input type="radio" ng-model="user.gender" value="female" />female</label><br />
	          <button ng-click="reset()">RESET</button>
	          <button ng-click="update(user)">SAVE</button>
	        </form>
	        <pre>form = {{user | json}}</pre>
	        <pre>leader = {{leader | json}}</pre>
	      </div>
	    </file>
	    <file name="script.js">
	      // Module: copyExample
	      angular.
	        module('copyExample', []).
	        controller('ExampleController', ['$scope', function($scope) {
	          $scope.leader = {};

	          $scope.reset = function() {
	            // Example with 1 argument
	            $scope.user = angular.copy($scope.leader);
	          };

	          $scope.update = function(user) {
	            // Example with 2 arguments
	            angular.copy(user, $scope.leader);
	          };

	          $scope.reset();
	        }]);
	    </file>
	  </example>
	 */function copy(source,destination,maxDepth){var stackSource=[];var stackDest=[];maxDepth=isValidObjectMaxDepth(maxDepth)?maxDepth:NaN;if(destination){if(isTypedArray(destination)||isArrayBuffer(destination)){throw ngMinErr('cpta','Can\'t copy! TypedArray destination cannot be mutated.');}if(source===destination){throw ngMinErr('cpi','Can\'t copy! Source and destination are identical.');}// Empty the destination object
	if(isArray(destination)){destination.length=0;}else{forEach(destination,function(value,key){if(key!=='$$hashKey'){delete destination[key];}});}stackSource.push(source);stackDest.push(destination);return copyRecurse(source,destination,maxDepth);}return copyElement(source,maxDepth);function copyRecurse(source,destination,maxDepth){maxDepth--;if(maxDepth<0){return'...';}var h=destination.$$hashKey;var key;if(isArray(source)){for(var i=0,ii=source.length;i<ii;i++){destination.push(copyElement(source[i],maxDepth));}}else if(isBlankObject(source)){// createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
	for(key in source){destination[key]=copyElement(source[key],maxDepth);}}else if(source&&typeof source.hasOwnProperty==='function'){// Slow path, which must rely on hasOwnProperty
	for(key in source){if(source.hasOwnProperty(key)){destination[key]=copyElement(source[key],maxDepth);}}}else{// Slowest path --- hasOwnProperty can't be called as a method
	for(key in source){if(hasOwnProperty.call(source,key)){destination[key]=copyElement(source[key],maxDepth);}}}setHashKey(destination,h);return destination;}function copyElement(source,maxDepth){// Simple values
	if(!isObject(source)){return source;}// Already copied values
	var index=stackSource.indexOf(source);if(index!==-1){return stackDest[index];}if(isWindow(source)||isScope(source)){throw ngMinErr('cpws','Can\'t copy! Making copies of Window or Scope instances is not supported.');}var needsRecurse=false;var destination=copyType(source);if(destination===undefined){destination=isArray(source)?[]:Object.create(getPrototypeOf(source));needsRecurse=true;}stackSource.push(source);stackDest.push(destination);return needsRecurse?copyRecurse(source,destination,maxDepth):destination;}function copyType(source){switch(toString.call(source)){case'[object Int8Array]':case'[object Int16Array]':case'[object Int32Array]':case'[object Float32Array]':case'[object Float64Array]':case'[object Uint8Array]':case'[object Uint8ClampedArray]':case'[object Uint16Array]':case'[object Uint32Array]':return new source.constructor(copyElement(source.buffer),source.byteOffset,source.length);case'[object ArrayBuffer]':// Support: IE10
	if(!source.slice){// If we're in this case we know the environment supports ArrayBuffer
	/* eslint-disable no-undef */var copied=new ArrayBuffer(source.byteLength);new Uint8Array(copied).set(new Uint8Array(source));/* eslint-enable */return copied;}return source.slice(0);case'[object Boolean]':case'[object Number]':case'[object String]':case'[object Date]':return new source.constructor(source.valueOf());case'[object RegExp]':var re=new RegExp(source.source,source.toString().match(/[^/]*$/)[0]);re.lastIndex=source.lastIndex;return re;case'[object Blob]':return new source.constructor([source],{type:source.type});}if(isFunction(source.cloneNode)){return source.cloneNode(true);}}}// eslint-disable-next-line no-self-compare
	function simpleCompare(a,b){return a===b||a!==a&&b!==b;}/**
	 * @ngdoc function
	 * @name angular.equals
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Determines if two objects or two values are equivalent. Supports value types, regular
	 * expressions, arrays and objects.
	 *
	 * Two objects or values are considered equivalent if at least one of the following is true:
	 *
	 * * Both objects or values pass `===` comparison.
	 * * Both objects or values are of the same type and all of their properties are equal by
	 *   comparing them with `angular.equals`.
	 * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)
	 * * Both values represent the same regular expression (In JavaScript,
	 *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual
	 *   representation matches).
	 *
	 * During a property comparison, properties of `function` type and properties with names
	 * that begin with `$` are ignored.
	 *
	 * Scope and DOMWindow objects are being compared only by identify (`===`).
	 *
	 * @param {*} o1 Object or value to compare.
	 * @param {*} o2 Object or value to compare.
	 * @returns {boolean} True if arguments are equal.
	 *
	 * @example
	   <example module="equalsExample" name="equalsExample">
	     <file name="index.html">
	      <div ng-controller="ExampleController">
	        <form novalidate>
	          <h3>User 1</h3>
	          Name: <input type="text" ng-model="user1.name">
	          Age: <input type="number" ng-model="user1.age">

	          <h3>User 2</h3>
	          Name: <input type="text" ng-model="user2.name">
	          Age: <input type="number" ng-model="user2.age">

	          <div>
	            <br/>
	            <input type="button" value="Compare" ng-click="compare()">
	          </div>
	          User 1: <pre>{{user1 | json}}</pre>
	          User 2: <pre>{{user2 | json}}</pre>
	          Equal: <pre>{{result}}</pre>
	        </form>
	      </div>
	    </file>
	    <file name="script.js">
	        angular.module('equalsExample', []).controller('ExampleController', ['$scope', function($scope) {
	          $scope.user1 = {};
	          $scope.user2 = {};
	          $scope.compare = function() {
	            $scope.result = angular.equals($scope.user1, $scope.user2);
	          };
	        }]);
	    </file>
	  </example>
	 */function equals(o1,o2){if(o1===o2)return true;if(o1===null||o2===null)return false;// eslint-disable-next-line no-self-compare
	if(o1!==o1&&o2!==o2)return true;// NaN === NaN
	var t1=typeof o1==='undefined'?'undefined':_typeof(o1),t2=typeof o2==='undefined'?'undefined':_typeof(o2),length,key,keySet;if(t1===t2&&t1==='object'){if(isArray(o1)){if(!isArray(o2))return false;if((length=o1.length)===o2.length){for(key=0;key<length;key++){if(!equals(o1[key],o2[key]))return false;}return true;}}else if(isDate(o1)){if(!isDate(o2))return false;return simpleCompare(o1.getTime(),o2.getTime());}else if(isRegExp(o1)){if(!isRegExp(o2))return false;return o1.toString()===o2.toString();}else{if(isScope(o1)||isScope(o2)||isWindow(o1)||isWindow(o2)||isArray(o2)||isDate(o2)||isRegExp(o2))return false;keySet=createMap();for(key in o1){if(key.charAt(0)==='$'||isFunction(o1[key]))continue;if(!equals(o1[key],o2[key]))return false;keySet[key]=true;}for(key in o2){if(!(key in keySet)&&key.charAt(0)!=='$'&&isDefined(o2[key])&&!isFunction(o2[key]))return false;}return true;}}return false;}var csp=function csp(){if(!isDefined(csp.rules)){var ngCspElement=window.document.querySelector('[ng-csp]')||window.document.querySelector('[data-ng-csp]');if(ngCspElement){var ngCspAttribute=ngCspElement.getAttribute('ng-csp')||ngCspElement.getAttribute('data-ng-csp');csp.rules={noUnsafeEval:!ngCspAttribute||ngCspAttribute.indexOf('no-unsafe-eval')!==-1,noInlineStyle:!ngCspAttribute||ngCspAttribute.indexOf('no-inline-style')!==-1};}else{csp.rules={noUnsafeEval:noUnsafeEval(),noInlineStyle:false};}}return csp.rules;function noUnsafeEval(){try{// eslint-disable-next-line no-new, no-new-func
	new Function('');return false;}catch(e){return true;}}};/**
	 * @ngdoc directive
	 * @module ng
	 * @name ngJq
	 *
	 * @element ANY
	 * @param {string=} ngJq the name of the library available under `window`
	 * to be used for angular.element
	 * @description
	 * Use this directive to force the angular.element library.  This should be
	 * used to force either jqLite by leaving ng-jq blank or setting the name of
	 * the jquery variable under window (eg. jQuery).
	 *
	 * Since AngularJS looks for this directive when it is loaded (doesn't wait for the
	 * DOMContentLoaded event), it must be placed on an element that comes before the script
	 * which loads angular. Also, only the first instance of `ng-jq` will be used and all
	 * others ignored.
	 *
	 * @example
	 * This example shows how to force jqLite using the `ngJq` directive to the `html` tag.
	 ```html
	 <!doctype html>
	 <html ng-app ng-jq>
	 ...
	 ...
	 </html>
	 ```
	 * @example
	 * This example shows how to use a jQuery based library of a different name.
	 * The library name must be available at the top most 'window'.
	 ```html
	 <!doctype html>
	 <html ng-app ng-jq="jQueryLib">
	 ...
	 ...
	 </html>
	 ```
	 */var jq=function jq(){if(isDefined(jq.name_))return jq.name_;var el;var i,ii=ngAttrPrefixes.length,prefix,name;for(i=0;i<ii;++i){prefix=ngAttrPrefixes[i];el=window.document.querySelector('['+prefix.replace(':','\\:')+'jq]');if(el){name=el.getAttribute(prefix+'jq');break;}}return jq.name_=name;};function concat(array1,array2,index){return array1.concat(slice.call(array2,index));}function sliceArgs(args,startIndex){return slice.call(args,startIndex||0);}/**
	 * @ngdoc function
	 * @name angular.bind
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for
	 * `fn`). You can supply optional `args` that are prebound to the function. This feature is also
	 * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as
	 * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).
	 *
	 * @param {Object} self Context which `fn` should be evaluated in.
	 * @param {function()} fn Function to be bound.
	 * @param {...*} args Optional arguments to be prebound to the `fn` function call.
	 * @returns {function()} Function that wraps the `fn` with all the specified bindings.
	 */function bind(self,fn){var curryArgs=arguments.length>2?sliceArgs(arguments,2):[];if(isFunction(fn)&&!(fn instanceof RegExp)){return curryArgs.length?function(){return arguments.length?fn.apply(self,concat(curryArgs,arguments,0)):fn.apply(self,curryArgs);}:function(){return arguments.length?fn.apply(self,arguments):fn.call(self);};}else{// In IE, native methods are not functions so they cannot be bound (note: they don't need to be).
	return fn;}}function toJsonReplacer(key,value){var val=value;if(typeof key==='string'&&key.charAt(0)==='$'&&key.charAt(1)==='$'){val=undefined;}else if(isWindow(value)){val='$WINDOW';}else if(value&&window.document===value){val='$DOCUMENT';}else if(isScope(value)){val='$SCOPE';}return val;}/**
	 * @ngdoc function
	 * @name angular.toJson
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be
	 * stripped since AngularJS uses this notation internally.
	 *
	 * @param {Object|Array|Date|string|number|boolean} obj Input to be serialized into JSON.
	 * @param {boolean|number} [pretty=2] If set to true, the JSON output will contain newlines and whitespace.
	 *    If set to an integer, the JSON output will contain that many spaces per indentation.
	 * @returns {string|undefined} JSON-ified string representing `obj`.
	 * @knownIssue
	 *
	 * The Safari browser throws a `RangeError` instead of returning `null` when it tries to stringify a `Date`
	 * object with an invalid date value. The only reliable way to prevent this is to monkeypatch the
	 * `Date.prototype.toJSON` method as follows:
	 *
	 * ```
	 * var _DatetoJSON = Date.prototype.toJSON;
	 * Date.prototype.toJSON = function() {
	 *   try {
	 *     return _DatetoJSON.call(this);
	 *   } catch(e) {
	 *     if (e instanceof RangeError) {
	 *       return null;
	 *     }
	 *     throw e;
	 *   }
	 * };
	 * ```
	 *
	 * See https://github.com/angular/angular.js/pull/14221 for more information.
	 */function toJson(obj,pretty){if(isUndefined(obj))return undefined;if(!isNumber(pretty)){pretty=pretty?2:null;}return JSON.stringify(obj,toJsonReplacer,pretty);}/**
	 * @ngdoc function
	 * @name angular.fromJson
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Deserializes a JSON string.
	 *
	 * @param {string} json JSON string to deserialize.
	 * @returns {Object|Array|string|number} Deserialized JSON string.
	 */function fromJson(json){return isString(json)?JSON.parse(json):json;}var ALL_COLONS=/:/g;function timezoneToOffset(timezone,fallback){// Support: IE 9-11 only, Edge 13-15+
	// IE/Edge do not "understand" colon (`:`) in timezone
	timezone=timezone.replace(ALL_COLONS,'');var requestedTimezoneOffset=Date.parse('Jan 01, 1970 00:00:00 '+timezone)/60000;return isNumberNaN(requestedTimezoneOffset)?fallback:requestedTimezoneOffset;}function addDateMinutes(date,minutes){date=new Date(date.getTime());date.setMinutes(date.getMinutes()+minutes);return date;}function convertTimezoneToLocal(date,timezone,reverse){reverse=reverse?-1:1;var dateTimezoneOffset=date.getTimezoneOffset();var timezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);return addDateMinutes(date,reverse*(timezoneOffset-dateTimezoneOffset));}/**
	 * @returns {string} Returns the string representation of the element.
	 */function startingTag(element){element=jqLite(element).clone().empty();var elemHtml=jqLite('<div></div>').append(element).html();try{return element[0].nodeType===NODE_TYPE_TEXT?lowercase(elemHtml):elemHtml.match(/^(<[^>]+>)/)[1].replace(/^<([\w-]+)/,function(match,nodeName){return'<'+lowercase(nodeName);});}catch(e){return lowercase(elemHtml);}}/////////////////////////////////////////////////
	/**
	 * Tries to decode the URI component without throwing an exception.
	 *
	 * @private
	 * @param str value potential URI component to check.
	 * @returns {boolean} True if `value` can be decoded
	 * with the decodeURIComponent function.
	 */function tryDecodeURIComponent(value){try{return decodeURIComponent(value);}catch(e){// Ignore any invalid uri component.
	}}/**
	 * Parses an escaped url query string into key-value pairs.
	 * @returns {Object.<string,boolean|Array>}
	 */function parseKeyValue(/**string*/keyValue){var obj={};forEach((keyValue||'').split('&'),function(keyValue){var splitPoint,key,val;if(keyValue){key=keyValue=keyValue.replace(/\+/g,'%20');splitPoint=keyValue.indexOf('=');if(splitPoint!==-1){key=keyValue.substring(0,splitPoint);val=keyValue.substring(splitPoint+1);}key=tryDecodeURIComponent(key);if(isDefined(key)){val=isDefined(val)?tryDecodeURIComponent(val):true;if(!hasOwnProperty.call(obj,key)){obj[key]=val;}else if(isArray(obj[key])){obj[key].push(val);}else{obj[key]=[obj[key],val];}}}});return obj;}function toKeyValue(obj){var parts=[];forEach(obj,function(value,key){if(isArray(value)){forEach(value,function(arrayValue){parts.push(encodeUriQuery(key,true)+(arrayValue===true?'':'='+encodeUriQuery(arrayValue,true)));});}else{parts.push(encodeUriQuery(key,true)+(value===true?'':'='+encodeUriQuery(value,true)));}});return parts.length?parts.join('&'):'';}/**
	 * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
	 * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path
	 * segments:
	 *    segment       = *pchar
	 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
	 *    pct-encoded   = "%" HEXDIG HEXDIG
	 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
	 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
	 *                     / "*" / "+" / "," / ";" / "="
	 */function encodeUriSegment(val){return encodeUriQuery(val,true).replace(/%26/gi,'&').replace(/%3D/gi,'=').replace(/%2B/gi,'+');}/**
	 * This method is intended for encoding *key* or *value* parts of query component. We need a custom
	 * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be
	 * encoded per http://tools.ietf.org/html/rfc3986:
	 *    query         = *( pchar / "/" / "?" )
	 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
	 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
	 *    pct-encoded   = "%" HEXDIG HEXDIG
	 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
	 *                     / "*" / "+" / "," / ";" / "="
	 */function encodeUriQuery(val,pctEncodeSpaces){return encodeURIComponent(val).replace(/%40/gi,'@').replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',').replace(/%3B/gi,';').replace(/%20/g,pctEncodeSpaces?'%20':'+');}var ngAttrPrefixes=['ng-','data-ng-','ng:','x-ng-'];function getNgAttribute(element,ngAttr){var attr,i,ii=ngAttrPrefixes.length;for(i=0;i<ii;++i){attr=ngAttrPrefixes[i]+ngAttr;if(isString(attr=element.getAttribute(attr))){return attr;}}return null;}function allowAutoBootstrap(document){var script=document.currentScript;if(!script){// Support: IE 9-11 only
	// IE does not have `document.currentScript`
	return true;}// If the `currentScript` property has been clobbered just return false, since this indicates a probable attack
	if(!(script instanceof window.HTMLScriptElement||script instanceof window.SVGScriptElement)){return false;}var attributes=script.attributes;var srcs=[attributes.getNamedItem('src'),attributes.getNamedItem('href'),attributes.getNamedItem('xlink:href')];return srcs.every(function(src){if(!src){return true;}if(!src.value){return false;}var link=document.createElement('a');link.href=src.value;if(document.location.origin===link.origin){// Same-origin resources are always allowed, even for banned URL schemes.
	return true;}// Disabled bootstrapping unless angular.js was loaded from a known scheme used on the web.
	// This is to prevent angular.js bundled with browser extensions from being used to bypass the
	// content security policy in web pages and other browser extensions.
	switch(link.protocol){case'http:':case'https:':case'ftp:':case'blob:':case'file:':case'data:':return true;default:return false;}});}// Cached as it has to run during loading so that document.currentScript is available.
	var isAutoBootstrapAllowed=allowAutoBootstrap(window.document);/**
	 * @ngdoc directive
	 * @name ngApp
	 * @module ng
	 *
	 * @element ANY
	 * @param {angular.Module} ngApp an optional application
	 *   {@link angular.module module} name to load.
	 * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be
	 *   created in "strict-di" mode. This means that the application will fail to invoke functions which
	 *   do not use explicit function annotation (and are thus unsuitable for minification), as described
	 *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in
	 *   tracking down the root of these bugs.
	 *
	 * @description
	 *
	 * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive
	 * designates the **root element** of the application and is typically placed near the root element
	 * of the page - e.g. on the `<body>` or `<html>` tags.
	 *
	 * There are a few things to keep in mind when using `ngApp`:
	 * - only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`
	 *   found in the document will be used to define the root element to auto-bootstrap as an
	 *   application. To run multiple applications in an HTML document you must manually bootstrap them using
	 *   {@link angular.bootstrap} instead.
	 * - AngularJS applications cannot be nested within each other.
	 * - Do not use a directive that uses {@link ng.$compile#transclusion transclusion} on the same element as `ngApp`.
	 *   This includes directives such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and
	 *   {@link ngRoute.ngView `ngView`}.
	 *   Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
	 *   causing animations to stop working and making the injector inaccessible from outside the app.
	 *
	 * You can specify an **AngularJS module** to be used as the root module for the application.  This
	 * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It
	 * should contain the application code needed or have dependencies on other modules that will
	 * contain the code. See {@link angular.module} for more information.
	 *
	 * In the example below if the `ngApp` directive were not placed on the `html` element then the
	 * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`
	 * would not be resolved to `3`.
	 *
	 * @example
	 *
	 * ### Simple Usage
	 *
	 * `ngApp` is the easiest, and most common way to bootstrap an application.
	 *
	 <example module="ngAppDemo" name="ng-app">
	   <file name="index.html">
	   <div ng-controller="ngAppDemoController">
	     I can add: {{a}} + {{b}} =  {{ a+b }}
	   </div>
	   </file>
	   <file name="script.js">
	   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {
	     $scope.a = 1;
	     $scope.b = 2;
	   });
	   </file>
	 </example>
	 *
	 * @example
	 *
	 * ### With `ngStrictDi`
	 *
	 * Using `ngStrictDi`, you would see something like this:
	 *
	 <example ng-app-included="true" name="strict-di">
	   <file name="index.html">
	   <div ng-app="ngAppStrictDemo" ng-strict-di>
	       <div ng-controller="GoodController1">
	           I can add: {{a}} + {{b}} =  {{ a+b }}

	           <p>This renders because the controller does not fail to
	              instantiate, by using explicit annotation style (see
	              script.js for details)
	           </p>
	       </div>

	       <div ng-controller="GoodController2">
	           Name: <input ng-model="name"><br />
	           Hello, {{name}}!

	           <p>This renders because the controller does not fail to
	              instantiate, by using explicit annotation style
	              (see script.js for details)
	           </p>
	       </div>

	       <div ng-controller="BadController">
	           I can add: {{a}} + {{b}} =  {{ a+b }}

	           <p>The controller could not be instantiated, due to relying
	              on automatic function annotations (which are disabled in
	              strict mode). As such, the content of this section is not
	              interpolated, and there should be an error in your web console.
	           </p>
	       </div>
	   </div>
	   </file>
	   <file name="script.js">
	   angular.module('ngAppStrictDemo', [])
	     // BadController will fail to instantiate, due to relying on automatic function annotation,
	     // rather than an explicit annotation
	     .controller('BadController', function($scope) {
	       $scope.a = 1;
	       $scope.b = 2;
	     })
	     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,
	     // due to using explicit annotations using the array style and $inject property, respectively.
	     .controller('GoodController1', ['$scope', function($scope) {
	       $scope.a = 1;
	       $scope.b = 2;
	     }])
	     .controller('GoodController2', GoodController2);
	     function GoodController2($scope) {
	       $scope.name = 'World';
	     }
	     GoodController2.$inject = ['$scope'];
	   </file>
	   <file name="style.css">
	   div[ng-controller] {
	       margin-bottom: 1em;
	       -webkit-border-radius: 4px;
	       border-radius: 4px;
	       border: 1px solid;
	       padding: .5em;
	   }
	   div[ng-controller^=Good] {
	       border-color: #d6e9c6;
	       background-color: #dff0d8;
	       color: #3c763d;
	   }
	   div[ng-controller^=Bad] {
	       border-color: #ebccd1;
	       background-color: #f2dede;
	       color: #a94442;
	       margin-bottom: 0;
	   }
	   </file>
	 </example>
	 */function angularInit(element,bootstrap){var appElement,module,config={};// The element `element` has priority over any other element.
	forEach(ngAttrPrefixes,function(prefix){var name=prefix+'app';if(!appElement&&element.hasAttribute&&element.hasAttribute(name)){appElement=element;module=element.getAttribute(name);}});forEach(ngAttrPrefixes,function(prefix){var name=prefix+'app';var candidate;if(!appElement&&(candidate=element.querySelector('['+name.replace(':','\\:')+']'))){appElement=candidate;module=candidate.getAttribute(name);}});if(appElement){if(!isAutoBootstrapAllowed){window.console.error('AngularJS: disabling automatic bootstrap. <script> protocol indicates '+'an extension, document.location.href does not match.');return;}config.strictDi=getNgAttribute(appElement,'strict-di')!==null;bootstrap(appElement,module?[module]:[],config);}}/**
	 * @ngdoc function
	 * @name angular.bootstrap
	 * @module ng
	 * @description
	 * Use this function to manually start up AngularJS application.
	 *
	 * For more information, see the {@link guide/bootstrap Bootstrap guide}.
	 *
	 * AngularJS will detect if it has been loaded into the browser more than once and only allow the
	 * first loaded script to be bootstrapped and will report a warning to the browser console for
	 * each of the subsequent scripts. This prevents strange results in applications, where otherwise
	 * multiple instances of AngularJS try to work on the DOM.
	 *
	 * <div class="alert alert-warning">
	 * **Note:** Protractor based end-to-end tests cannot use this function to bootstrap manually.
	 * They must use {@link ng.directive:ngApp ngApp}.
	 * </div>
	 *
	 * <div class="alert alert-warning">
	 * **Note:** Do not bootstrap the app on an element with a directive that uses {@link ng.$compile#transclusion transclusion},
	 * such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and {@link ngRoute.ngView `ngView`}.
	 * Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
	 * causing animations to stop working and making the injector inaccessible from outside the app.
	 * </div>
	 *
	 * ```html
	 * <!doctype html>
	 * <html>
	 * <body>
	 * <div ng-controller="WelcomeController">
	 *   {{greeting}}
	 * </div>
	 *
	 * <script src="angular.js"></script>
	 * <script>
	 *   var app = angular.module('demo', [])
	 *   .controller('WelcomeController', function($scope) {
	 *       $scope.greeting = 'Welcome!';
	 *   });
	 *   angular.bootstrap(document, ['demo']);
	 * </script>
	 * </body>
	 * </html>
	 * ```
	 *
	 * @param {DOMElement} element DOM element which is the root of AngularJS application.
	 * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.
	 *     Each item in the array should be the name of a predefined module or a (DI annotated)
	 *     function that will be invoked by the injector as a `config` block.
	 *     See: {@link angular.module modules}
	 * @param {Object=} config an object for defining configuration options for the application. The
	 *     following keys are supported:
	 *
	 * * `strictDi` - disable automatic function annotation for the application. This is meant to
	 *   assist in finding bugs which break minified code. Defaults to `false`.
	 *
	 * @returns {auto.$injector} Returns the newly created injector for this app.
	 */function bootstrap(element,modules,config){if(!isObject(config))config={};var defaultConfig={strictDi:false};config=extend(defaultConfig,config);var doBootstrap=function doBootstrap(){element=jqLite(element);if(element.injector()){var tag=element[0]===window.document?'document':startingTag(element);// Encode angle brackets to prevent input from being sanitized to empty string #8683.
	throw ngMinErr('btstrpd','App already bootstrapped with this element \'{0}\'',tag.replace(/</,'&lt;').replace(/>/,'&gt;'));}modules=modules||[];modules.unshift(['$provide',function($provide){$provide.value('$rootElement',element);}]);if(config.debugInfoEnabled){// Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.
	modules.push(['$compileProvider',function($compileProvider){$compileProvider.debugInfoEnabled(true);}]);}modules.unshift('ng');var injector=createInjector(modules,config.strictDi);injector.invoke(['$rootScope','$rootElement','$compile','$injector',function bootstrapApply(scope,element,compile,injector){scope.$apply(function(){element.data('$injector',injector);compile(element)(scope);});}]);return injector;};var NG_ENABLE_DEBUG_INFO=/^NG_ENABLE_DEBUG_INFO!/;var NG_DEFER_BOOTSTRAP=/^NG_DEFER_BOOTSTRAP!/;if(window&&NG_ENABLE_DEBUG_INFO.test(window.name)){config.debugInfoEnabled=true;window.name=window.name.replace(NG_ENABLE_DEBUG_INFO,'');}if(window&&!NG_DEFER_BOOTSTRAP.test(window.name)){return doBootstrap();}window.name=window.name.replace(NG_DEFER_BOOTSTRAP,'');angular.resumeBootstrap=function(extraModules){forEach(extraModules,function(module){modules.push(module);});return doBootstrap();};if(isFunction(angular.resumeDeferredBootstrap)){angular.resumeDeferredBootstrap();}}/**
	 * @ngdoc function
	 * @name angular.reloadWithDebugInfo
	 * @module ng
	 * @description
	 * Use this function to reload the current application with debug information turned on.
	 * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.
	 *
	 * See {@link ng.$compileProvider#debugInfoEnabled} for more.
	 */function reloadWithDebugInfo(){window.name='NG_ENABLE_DEBUG_INFO!'+window.name;window.location.reload();}/**
	 * @name angular.getTestability
	 * @module ng
	 * @description
	 * Get the testability service for the instance of AngularJS on the given
	 * element.
	 * @param {DOMElement} element DOM element which is the root of AngularJS application.
	 */function getTestability(rootElement){var injector=angular.element(rootElement).injector();if(!injector){throw ngMinErr('test','no injector found for element argument to getTestability');}return injector.get('$$testability');}var SNAKE_CASE_REGEXP=/[A-Z]/g;function snake_case(name,separator){separator=separator||'_';return name.replace(SNAKE_CASE_REGEXP,function(letter,pos){return(pos?separator:'')+letter.toLowerCase();});}var bindJQueryFired=false;function bindJQuery(){var originalCleanData;if(bindJQueryFired){return;}// bind to jQuery if present;
	var jqName=jq();jQuery=isUndefined(jqName)?window.jQuery:// use jQuery (if present)
	!jqName?undefined:// use jqLite
	window[jqName];// use jQuery specified by `ngJq`
	// Use jQuery if it exists with proper functionality, otherwise default to us.
	// AngularJS 1.2+ requires jQuery 1.7+ for on()/off() support.
	// AngularJS 1.3+ technically requires at least jQuery 2.1+ but it may work with older
	// versions. It will not work for sure with jQuery <1.7, though.
	if(jQuery&&jQuery.fn.on){jqLite=jQuery;extend(jQuery.fn,{scope:JQLitePrototype.scope,isolateScope:JQLitePrototype.isolateScope,controller:/** @type {?} */JQLitePrototype.controller,injector:JQLitePrototype.injector,inheritedData:JQLitePrototype.inheritedData});}else{jqLite=JQLite;}// All nodes removed from the DOM via various jqLite/jQuery APIs like .remove()
	// are passed through jqLite/jQuery.cleanData. Monkey-patch this method to fire
	// the $destroy event on all removed nodes.
	originalCleanData=jqLite.cleanData;jqLite.cleanData=function(elems){var events;for(var i=0,elem;(elem=elems[i])!=null;i++){events=(jqLite._data(elem)||{}).events;if(events&&events.$destroy){jqLite(elem).triggerHandler('$destroy');}}originalCleanData(elems);};angular.element=jqLite;// Prevent double-proxying.
	bindJQueryFired=true;}/**
	 * @ngdoc function
	 * @name angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Restores the pre-1.8 behavior of jqLite that turns XHTML-like strings like
	 * `<div /><span />` to `<div></div><span></span>` instead of `<div><span></span></div>`.
	 * The new behavior is a security fix. Thus, if you need to call this function, please try to adjust
	 * your code for this change and remove your use of this function as soon as possible.

	 * Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the
	 * [jQuery 3.5 upgrade guide](https://jquery.com/upgrade-guide/3.5/) for more details
	 * about the workarounds.
	 */function UNSAFE_restoreLegacyJqLiteXHTMLReplacement(){JQLite.legacyXHTMLReplacement=true;}/**
	 * throw error if the argument is falsy.
	 */function assertArg(arg,name,reason){if(!arg){throw ngMinErr('areq','Argument \'{0}\' is {1}',name||'?',reason||'required');}return arg;}function assertArgFn(arg,name,acceptArrayAnnotation){if(acceptArrayAnnotation&&isArray(arg)){arg=arg[arg.length-1];}assertArg(isFunction(arg),name,'not a function, got '+(arg&&(typeof arg==='undefined'?'undefined':_typeof(arg))==='object'?arg.constructor.name||'Object':typeof arg==='undefined'?'undefined':_typeof(arg)));return arg;}/**
	 * throw error if the name given is hasOwnProperty
	 * @param  {String} name    the name to test
	 * @param  {String} context the context in which the name is used, such as module or directive
	 */function assertNotHasOwnProperty(name,context){if(name==='hasOwnProperty'){throw ngMinErr('badname','hasOwnProperty is not a valid {0} name',context);}}/**
	 * Return the value accessible from the object by path. Any undefined traversals are ignored
	 * @param {Object} obj starting object
	 * @param {String} path path to traverse
	 * @param {boolean} [bindFnToScope=true]
	 * @returns {Object} value as accessible by path
	 *///TODO(misko): this function needs to be removed
	function getter(obj,path,bindFnToScope){if(!path)return obj;var keys=path.split('.');var key;var lastInstance=obj;var len=keys.length;for(var i=0;i<len;i++){key=keys[i];if(obj){obj=(lastInstance=obj)[key];}}if(!bindFnToScope&&isFunction(obj)){return bind(lastInstance,obj);}return obj;}/**
	 * Return the DOM siblings between the first and last node in the given array.
	 * @param {Array} array like object
	 * @returns {Array} the inputted object or a jqLite collection containing the nodes
	 */function getBlockNodes(nodes){// TODO(perf): update `nodes` instead of creating a new object?
	var node=nodes[0];var endNode=nodes[nodes.length-1];var blockNodes;for(var i=1;node!==endNode&&(node=node.nextSibling);i++){if(blockNodes||nodes[i]!==node){if(!blockNodes){blockNodes=jqLite(slice.call(nodes,0,i));}blockNodes.push(node);}}return blockNodes||nodes;}/**
	 * Creates a new object without a prototype. This object is useful for lookup without having to
	 * guard against prototypically inherited properties via hasOwnProperty.
	 *
	 * Related micro-benchmarks:
	 * - http://jsperf.com/object-create2
	 * - http://jsperf.com/proto-map-lookup/2
	 * - http://jsperf.com/for-in-vs-object-keys2
	 *
	 * @returns {Object}
	 */function createMap(){return Object.create(null);}function stringify(value){if(value==null){// null || undefined
	return'';}switch(typeof value==='undefined'?'undefined':_typeof(value)){case'string':break;case'number':value=''+value;break;default:if(hasCustomToString(value)&&!isArray(value)&&!isDate(value)){value=value.toString();}else{value=toJson(value);}}return value;}var NODE_TYPE_ELEMENT=1;var NODE_TYPE_ATTRIBUTE=2;var NODE_TYPE_TEXT=3;var NODE_TYPE_COMMENT=8;var NODE_TYPE_DOCUMENT=9;var NODE_TYPE_DOCUMENT_FRAGMENT=11;/**
	 * @ngdoc type
	 * @name angular.Module
	 * @module ng
	 * @description
	 *
	 * Interface for configuring AngularJS {@link angular.module modules}.
	 */function setupModuleLoader(window){var $injectorMinErr=minErr('$injector');var ngMinErr=minErr('ng');function ensure(obj,name,factory){return obj[name]||(obj[name]=factory());}var angular=ensure(window,'angular',Object);// We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap
	angular.$$minErr=angular.$$minErr||minErr;return ensure(angular,'module',function(){/** @type {Object.<string, angular.Module>} */var modules={};/**
	     * @ngdoc function
	     * @name angular.module
	     * @module ng
	     * @description
	     *
	     * The `angular.module` is a global place for creating, registering and retrieving AngularJS
	     * modules.
	     * All modules (AngularJS core or 3rd party) that should be available to an application must be
	     * registered using this mechanism.
	     *
	     * Passing one argument retrieves an existing {@link angular.Module},
	     * whereas passing more than one argument creates a new {@link angular.Module}
	     *
	     *
	     * # Module
	     *
	     * A module is a collection of services, directives, controllers, filters, and configuration information.
	     * `angular.module` is used to configure the {@link auto.$injector $injector}.
	     *
	     * ```js
	     * // Create a new module
	     * var myModule = angular.module('myModule', []);
	     *
	     * // register a new service
	     * myModule.value('appName', 'MyCoolApp');
	     *
	     * // configure existing services inside initialization blocks.
	     * myModule.config(['$locationProvider', function($locationProvider) {
	     *   // Configure existing providers
	     *   $locationProvider.hashPrefix('!');
	     * }]);
	     * ```
	     *
	     * Then you can create an injector and load your modules like this:
	     *
	     * ```js
	     * var injector = angular.injector(['ng', 'myModule'])
	     * ```
	     *
	     * However it's more likely that you'll just use
	     * {@link ng.directive:ngApp ngApp} or
	     * {@link angular.bootstrap} to simplify this process for you.
	     *
	     * @param {!string} name The name of the module to create or retrieve.
	     * @param {!Array.<string>=} requires If specified then new module is being created. If
	     *        unspecified then the module is being retrieved for further configuration.
	     * @param {Function=} configFn Optional configuration function for the module. Same as
	     *        {@link angular.Module#config Module#config()}.
	     * @returns {angular.Module} new module with the {@link angular.Module} api.
	     */return function module(name,requires,configFn){var _info={};var assertNotHasOwnProperty=function assertNotHasOwnProperty(name,context){if(name==='hasOwnProperty'){throw ngMinErr('badname','hasOwnProperty is not a valid {0} name',context);}};assertNotHasOwnProperty(name,'module');if(requires&&modules.hasOwnProperty(name)){modules[name]=null;}return ensure(modules,name,function(){if(!requires){throw $injectorMinErr('nomod','Module \'{0}\' is not available! You either misspelled '+'the module name or forgot to load it. If registering a module ensure that you '+'specify the dependencies as the second argument.',name);}/** @type {!Array.<Array.<*>>} */var invokeQueue=[];/** @type {!Array.<Function>} */var configBlocks=[];/** @type {!Array.<Function>} */var runBlocks=[];var config=invokeLater('$injector','invoke','push',configBlocks);/** @type {angular.Module} */var moduleInstance={// Private state
	_invokeQueue:invokeQueue,_configBlocks:configBlocks,_runBlocks:runBlocks,/**
	           * @ngdoc method
	           * @name angular.Module#info
	           * @module ng
	           *
	           * @param {Object=} info Information about the module
	           * @returns {Object|Module} The current info object for this module if called as a getter,
	           *                          or `this` if called as a setter.
	           *
	           * @description
	           * Read and write custom information about this module.
	           * For example you could put the version of the module in here.
	           *
	           * ```js
	           * angular.module('myModule', []).info({ version: '1.0.0' });
	           * ```
	           *
	           * The version could then be read back out by accessing the module elsewhere:
	           *
	           * ```
	           * var version = angular.module('myModule').info().version;
	           * ```
	           *
	           * You can also retrieve this information during runtime via the
	           * {@link $injector#modules `$injector.modules`} property:
	           *
	           * ```js
	           * var version = $injector.modules['myModule'].info().version;
	           * ```
	           */info:function info(value){if(isDefined(value)){if(!isObject(value))throw ngMinErr('aobj','Argument \'{0}\' must be an object','value');_info=value;return this;}return _info;},/**
	           * @ngdoc property
	           * @name angular.Module#requires
	           * @module ng
	           *
	           * @description
	           * Holds the list of modules which the injector will load before the current module is
	           * loaded.
	           */requires:requires,/**
	           * @ngdoc property
	           * @name angular.Module#name
	           * @module ng
	           *
	           * @description
	           * Name of the module.
	           */name:name,/**
	           * @ngdoc method
	           * @name angular.Module#provider
	           * @module ng
	           * @param {string} name service name
	           * @param {Function} providerType Construction function for creating new instance of the
	           *                                service.
	           * @description
	           * See {@link auto.$provide#provider $provide.provider()}.
	           */provider:invokeLaterAndSetModuleName('$provide','provider'),/**
	           * @ngdoc method
	           * @name angular.Module#factory
	           * @module ng
	           * @param {string} name service name
	           * @param {Function} providerFunction Function for creating new instance of the service.
	           * @description
	           * See {@link auto.$provide#factory $provide.factory()}.
	           */factory:invokeLaterAndSetModuleName('$provide','factory'),/**
	           * @ngdoc method
	           * @name angular.Module#service
	           * @module ng
	           * @param {string} name service name
	           * @param {Function} constructor A constructor function that will be instantiated.
	           * @description
	           * See {@link auto.$provide#service $provide.service()}.
	           */service:invokeLaterAndSetModuleName('$provide','service'),/**
	           * @ngdoc method
	           * @name angular.Module#value
	           * @module ng
	           * @param {string} name service name
	           * @param {*} object Service instance object.
	           * @description
	           * See {@link auto.$provide#value $provide.value()}.
	           */value:invokeLater('$provide','value'),/**
	           * @ngdoc method
	           * @name angular.Module#constant
	           * @module ng
	           * @param {string} name constant name
	           * @param {*} object Constant value.
	           * @description
	           * Because the constants are fixed, they get applied before other provide methods.
	           * See {@link auto.$provide#constant $provide.constant()}.
	           */constant:invokeLater('$provide','constant','unshift'),/**
	           * @ngdoc method
	           * @name angular.Module#decorator
	           * @module ng
	           * @param {string} name The name of the service to decorate.
	           * @param {Function} decorFn This function will be invoked when the service needs to be
	           *                           instantiated and should return the decorated service instance.
	           * @description
	           * See {@link auto.$provide#decorator $provide.decorator()}.
	           */decorator:invokeLaterAndSetModuleName('$provide','decorator',configBlocks),/**
	           * @ngdoc method
	           * @name angular.Module#animation
	           * @module ng
	           * @param {string} name animation name
	           * @param {Function} animationFactory Factory function for creating new instance of an
	           *                                    animation.
	           * @description
	           *
	           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.
	           *
	           *
	           * Defines an animation hook that can be later used with
	           * {@link $animate $animate} service and directives that use this service.
	           *
	           * ```js
	           * module.animation('.animation-name', function($inject1, $inject2) {
	           *   return {
	           *     eventName : function(element, done) {
	           *       //code to run the animation
	           *       //once complete, then run done()
	           *       return function cancellationFunction(element) {
	           *         //code to cancel the animation
	           *       }
	           *     }
	           *   }
	           * })
	           * ```
	           *
	           * See {@link ng.$animateProvider#register $animateProvider.register()} and
	           * {@link ngAnimate ngAnimate module} for more information.
	           */animation:invokeLaterAndSetModuleName('$animateProvider','register'),/**
	           * @ngdoc method
	           * @name angular.Module#filter
	           * @module ng
	           * @param {string} name Filter name - this must be a valid AngularJS expression identifier
	           * @param {Function} filterFactory Factory function for creating new instance of filter.
	           * @description
	           * See {@link ng.$filterProvider#register $filterProvider.register()}.
	           *
	           * <div class="alert alert-warning">
	           * **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
	           * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
	           * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
	           * (`myapp_subsection_filterx`).
	           * </div>
	           */filter:invokeLaterAndSetModuleName('$filterProvider','register'),/**
	           * @ngdoc method
	           * @name angular.Module#controller
	           * @module ng
	           * @param {string|Object} name Controller name, or an object map of controllers where the
	           *    keys are the names and the values are the constructors.
	           * @param {Function} constructor Controller constructor function.
	           * @description
	           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.
	           */controller:invokeLaterAndSetModuleName('$controllerProvider','register'),/**
	           * @ngdoc method
	           * @name angular.Module#directive
	           * @module ng
	           * @param {string|Object} name Directive name, or an object map of directives where the
	           *    keys are the names and the values are the factories.
	           * @param {Function} directiveFactory Factory function for creating new instance of
	           * directives.
	           * @description
	           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.
	           */directive:invokeLaterAndSetModuleName('$compileProvider','directive'),/**
	           * @ngdoc method
	           * @name angular.Module#component
	           * @module ng
	           * @param {string|Object} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`),
	           *    or an object map of components where the keys are the names and the values are the component definition objects.
	           * @param {Object} options Component definition object (a simplified
	           *    {@link ng.$compile#directive-definition-object directive definition object})
	           *
	           * @description
	           * See {@link ng.$compileProvider#component $compileProvider.component()}.
	           */component:invokeLaterAndSetModuleName('$compileProvider','component'),/**
	           * @ngdoc method
	           * @name angular.Module#config
	           * @module ng
	           * @param {Function} configFn Execute this function on module load. Useful for service
	           *    configuration.
	           * @description
	           * Use this method to configure services by injecting their
	           * {@link angular.Module#provider `providers`}, e.g. for adding routes to the
	           * {@link ngRoute.$routeProvider $routeProvider}.
	           *
	           * Note that you can only inject {@link angular.Module#provider `providers`} and
	           * {@link angular.Module#constant `constants`} into this function.
	           *
	           * For more about how to configure services, see
	           * {@link providers#provider-recipe Provider Recipe}.
	           */config:config,/**
	           * @ngdoc method
	           * @name angular.Module#run
	           * @module ng
	           * @param {Function} initializationFn Execute this function after injector creation.
	           *    Useful for application initialization.
	           * @description
	           * Use this method to register work which should be performed when the injector is done
	           * loading all modules.
	           */run:function run(block){runBlocks.push(block);return this;}};if(configFn){config(configFn);}return moduleInstance;/**
	         * @param {string} provider
	         * @param {string} method
	         * @param {String=} insertMethod
	         * @returns {angular.Module}
	         */function invokeLater(provider,method,insertMethod,queue){if(!queue)queue=invokeQueue;return function(){queue[insertMethod||'push']([provider,method,arguments]);return moduleInstance;};}/**
	         * @param {string} provider
	         * @param {string} method
	         * @returns {angular.Module}
	         */function invokeLaterAndSetModuleName(provider,method,queue){if(!queue)queue=invokeQueue;return function(recipeName,factoryFunction){if(factoryFunction&&isFunction(factoryFunction))factoryFunction.$$moduleName=name;queue.push([provider,method,arguments]);return moduleInstance;};}});};});}/* global shallowCopy: true *//**
	 * Creates a shallow copy of an object, an array or a primitive.
	 *
	 * Assumes that there are no proto properties for objects.
	 */function shallowCopy(src,dst){if(isArray(src)){dst=dst||[];for(var i=0,ii=src.length;i<ii;i++){dst[i]=src[i];}}else if(isObject(src)){dst=dst||{};for(var key in src){if(!(key.charAt(0)==='$'&&key.charAt(1)==='$')){dst[key]=src[key];}}}return dst||src;}/* exported toDebugString */function serializeObject(obj,maxDepth){var seen=[];// There is no direct way to stringify object until reaching a specific depth
	// and a very deep object can cause a performance issue, so we copy the object
	// based on this specific depth and then stringify it.
	if(isValidObjectMaxDepth(maxDepth)){// This file is also included in `angular-loader`, so `copy()` might not always be available in
	// the closure. Therefore, it is lazily retrieved as `angular.copy()` when needed.
	obj=angular.copy(obj,null,maxDepth);}return JSON.stringify(obj,function(key,val){val=toJsonReplacer(key,val);if(isObject(val)){if(seen.indexOf(val)>=0)return'...';seen.push(val);}return val;});}function toDebugString(obj,maxDepth){if(typeof obj==='function'){return obj.toString().replace(/ \{[\s\S]*$/,'');}else if(isUndefined(obj)){return'undefined';}else if(typeof obj!=='string'){return serializeObject(obj,maxDepth);}return obj;}/* global angularModule: true,
	  version: true,

	  $CompileProvider,

	  htmlAnchorDirective,
	  inputDirective,
	  hiddenInputBrowserCacheDirective,
	  formDirective,
	  scriptDirective,
	  selectDirective,
	  optionDirective,
	  ngBindDirective,
	  ngBindHtmlDirective,
	  ngBindTemplateDirective,
	  ngClassDirective,
	  ngClassEvenDirective,
	  ngClassOddDirective,
	  ngCloakDirective,
	  ngControllerDirective,
	  ngFormDirective,
	  ngHideDirective,
	  ngIfDirective,
	  ngIncludeDirective,
	  ngIncludeFillContentDirective,
	  ngInitDirective,
	  ngNonBindableDirective,
	  ngPluralizeDirective,
	  ngRefDirective,
	  ngRepeatDirective,
	  ngShowDirective,
	  ngStyleDirective,
	  ngSwitchDirective,
	  ngSwitchWhenDirective,
	  ngSwitchDefaultDirective,
	  ngOptionsDirective,
	  ngTranscludeDirective,
	  ngModelDirective,
	  ngListDirective,
	  ngChangeDirective,
	  patternDirective,
	  patternDirective,
	  requiredDirective,
	  requiredDirective,
	  minlengthDirective,
	  minlengthDirective,
	  maxlengthDirective,
	  maxlengthDirective,
	  ngValueDirective,
	  ngModelOptionsDirective,
	  ngAttributeAliasDirectives,
	  ngEventDirectives,

	  $AnchorScrollProvider,
	  $AnimateProvider,
	  $CoreAnimateCssProvider,
	  $$CoreAnimateJsProvider,
	  $$CoreAnimateQueueProvider,
	  $$AnimateRunnerFactoryProvider,
	  $$AnimateAsyncRunFactoryProvider,
	  $BrowserProvider,
	  $CacheFactoryProvider,
	  $ControllerProvider,
	  $DateProvider,
	  $DocumentProvider,
	  $$IsDocumentHiddenProvider,
	  $ExceptionHandlerProvider,
	  $FilterProvider,
	  $$ForceReflowProvider,
	  $InterpolateProvider,
	  $$IntervalFactoryProvider,
	  $IntervalProvider,
	  $HttpProvider,
	  $HttpParamSerializerProvider,
	  $HttpParamSerializerJQLikeProvider,
	  $HttpBackendProvider,
	  $xhrFactoryProvider,
	  $jsonpCallbacksProvider,
	  $LocationProvider,
	  $LogProvider,
	  $$MapProvider,
	  $ParseProvider,
	  $RootScopeProvider,
	  $QProvider,
	  $$QProvider,
	  $$SanitizeUriProvider,
	  $SceProvider,
	  $SceDelegateProvider,
	  $SnifferProvider,
	  $$TaskTrackerFactoryProvider,
	  $TemplateCacheProvider,
	  $TemplateRequestProvider,
	  $$TestabilityProvider,
	  $TimeoutProvider,
	  $$RAFProvider,
	  $WindowProvider,
	  $$jqLiteProvider,
	  $$CookieReaderProvider
	*//**
	 * @ngdoc object
	 * @name angular.version
	 * @module ng
	 * @description
	 * An object that contains information about the current AngularJS version.
	 *
	 * This object has the following properties:
	 *
	 * - `full` – `{string}` – Full version string, such as "0.9.18".
	 * - `major` – `{number}` – Major version number, such as "0".
	 * - `minor` – `{number}` – Minor version number, such as "9".
	 * - `dot` – `{number}` – Dot version number, such as "18".
	 * - `codeName` – `{string}` – Code name of the release, such as "jiggling-armfat".
	 */var version={// These placeholder strings will be replaced by grunt's `build` task.
	// They need to be double- or single-quoted.
	full:'1.8.3',major:1,minor:8,dot:3,codeName:'ultimate-farewell'};function publishExternalAPI(angular){extend(angular,{'errorHandlingConfig':errorHandlingConfig,'bootstrap':bootstrap,'copy':copy,'extend':extend,'merge':merge,'equals':equals,'element':jqLite,'forEach':forEach,'injector':createInjector,'noop':noop,'bind':bind,'toJson':toJson,'fromJson':fromJson,'identity':identity,'isUndefined':isUndefined,'isDefined':isDefined,'isString':isString,'isFunction':isFunction,'isObject':isObject,'isNumber':isNumber,'isElement':isElement,'isArray':isArray,'version':version,'isDate':isDate,'callbacks':{$$counter:0},'getTestability':getTestability,'reloadWithDebugInfo':reloadWithDebugInfo,'UNSAFE_restoreLegacyJqLiteXHTMLReplacement':UNSAFE_restoreLegacyJqLiteXHTMLReplacement,'$$minErr':minErr,'$$csp':csp,'$$encodeUriSegment':encodeUriSegment,'$$encodeUriQuery':encodeUriQuery,'$$lowercase':lowercase,'$$stringify':stringify,'$$uppercase':uppercase});angularModule=setupModuleLoader(window);angularModule('ng',['ngLocale'],['$provide',function ngModule($provide){// $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.
	$provide.provider({$$sanitizeUri:$$SanitizeUriProvider});$provide.provider('$compile',$CompileProvider).directive({a:htmlAnchorDirective,input:inputDirective,textarea:inputDirective,form:formDirective,script:scriptDirective,select:selectDirective,option:optionDirective,ngBind:ngBindDirective,ngBindHtml:ngBindHtmlDirective,ngBindTemplate:ngBindTemplateDirective,ngClass:ngClassDirective,ngClassEven:ngClassEvenDirective,ngClassOdd:ngClassOddDirective,ngCloak:ngCloakDirective,ngController:ngControllerDirective,ngForm:ngFormDirective,ngHide:ngHideDirective,ngIf:ngIfDirective,ngInclude:ngIncludeDirective,ngInit:ngInitDirective,ngNonBindable:ngNonBindableDirective,ngPluralize:ngPluralizeDirective,ngRef:ngRefDirective,ngRepeat:ngRepeatDirective,ngShow:ngShowDirective,ngStyle:ngStyleDirective,ngSwitch:ngSwitchDirective,ngSwitchWhen:ngSwitchWhenDirective,ngSwitchDefault:ngSwitchDefaultDirective,ngOptions:ngOptionsDirective,ngTransclude:ngTranscludeDirective,ngModel:ngModelDirective,ngList:ngListDirective,ngChange:ngChangeDirective,pattern:patternDirective,ngPattern:patternDirective,required:requiredDirective,ngRequired:requiredDirective,minlength:minlengthDirective,ngMinlength:minlengthDirective,maxlength:maxlengthDirective,ngMaxlength:maxlengthDirective,ngValue:ngValueDirective,ngModelOptions:ngModelOptionsDirective}).directive({ngInclude:ngIncludeFillContentDirective,input:hiddenInputBrowserCacheDirective}).directive(ngAttributeAliasDirectives).directive(ngEventDirectives);$provide.provider({$anchorScroll:$AnchorScrollProvider,$animate:$AnimateProvider,$animateCss:$CoreAnimateCssProvider,$$animateJs:$$CoreAnimateJsProvider,$$animateQueue:$$CoreAnimateQueueProvider,$$AnimateRunner:$$AnimateRunnerFactoryProvider,$$animateAsyncRun:$$AnimateAsyncRunFactoryProvider,$browser:$BrowserProvider,$cacheFactory:$CacheFactoryProvider,$controller:$ControllerProvider,$document:$DocumentProvider,$$isDocumentHidden:$$IsDocumentHiddenProvider,$exceptionHandler:$ExceptionHandlerProvider,$filter:$FilterProvider,$$forceReflow:$$ForceReflowProvider,$interpolate:$InterpolateProvider,$interval:$IntervalProvider,$$intervalFactory:$$IntervalFactoryProvider,$http:$HttpProvider,$httpParamSerializer:$HttpParamSerializerProvider,$httpParamSerializerJQLike:$HttpParamSerializerJQLikeProvider,$httpBackend:$HttpBackendProvider,$xhrFactory:$xhrFactoryProvider,$jsonpCallbacks:$jsonpCallbacksProvider,$location:$LocationProvider,$log:$LogProvider,$parse:$ParseProvider,$rootScope:$RootScopeProvider,$q:$QProvider,$$q:$$QProvider,$sce:$SceProvider,$sceDelegate:$SceDelegateProvider,$sniffer:$SnifferProvider,$$taskTrackerFactory:$$TaskTrackerFactoryProvider,$templateCache:$TemplateCacheProvider,$templateRequest:$TemplateRequestProvider,$$testability:$$TestabilityProvider,$timeout:$TimeoutProvider,$window:$WindowProvider,$$rAF:$$RAFProvider,$$jqLite:$$jqLiteProvider,$$Map:$$MapProvider,$$cookieReader:$$CookieReaderProvider});}]).info({angularVersion:'1.8.3'});}/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 *     Any commits to this file should be reviewed with security in mind.  *
	 *   Changes to this file can potentially create security vulnerabilities. *
	 *          An approval from 2 Core members with history of modifying      *
	 *                         this file is required.                          *
	 *                                                                         *
	 *  Does the change somehow allow for arbitrary javascript to be executed? *
	 *    Or allows for someone to change the prototype of built-in objects?   *
	 *     Or gives undesired access to variables likes document or window?    *
	 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *//* global
	  JQLitePrototype: true,
	  BOOLEAN_ATTR: true,
	  ALIASED_ATTR: true
	*///////////////////////////////////
	//JQLite
	//////////////////////////////////
	/**
	 * @ngdoc function
	 * @name angular.element
	 * @module ng
	 * @kind function
	 *
	 * @description
	 * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.
	 *
	 * If jQuery is available, `angular.element` is an alias for the
	 * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`
	 * delegates to AngularJS's built-in subset of jQuery, called "jQuery lite" or **jqLite**.
	 *
	 * jqLite is a tiny, API-compatible subset of jQuery that allows
	 * AngularJS to manipulate the DOM in a cross-browser compatible way. jqLite implements only the most
	 * commonly needed functionality with the goal of having a very small footprint.
	 *
	 * To use `jQuery`, simply ensure it is loaded before the `angular.js` file. You can also use the
	 * {@link ngJq `ngJq`} directive to specify that jqlite should be used over jQuery, or to use a
	 * specific version of jQuery if multiple versions exist on the page.
	 *
	 * <div class="alert alert-info">**Note:** All element references in AngularJS are always wrapped with jQuery or
	 * jqLite (such as the element argument in a directive's compile / link function). They are never raw DOM references.</div>
	 *
	 * <div class="alert alert-warning">**Note:** Keep in mind that this function will not find elements
	 * by tag name / CSS selector. For lookups by tag name, try instead `angular.element(document).find(...)`
	 * or `$document.find()`, or use the standard DOM APIs, e.g. `document.querySelectorAll()`.</div>
	 *
	 * ## AngularJS's jqLite
	 * jqLite provides only the following jQuery methods:
	 *
	 * - [`addClass()`](http://api.jquery.com/addClass/) - Does not support a function as first argument
	 * - [`after()`](http://api.jquery.com/after/)
	 * - [`append()`](http://api.jquery.com/append/) - Contrary to jQuery, this doesn't clone elements
	 *   so will not work correctly when invoked on a jqLite object containing more than one DOM node
	 * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters
	 * - [`bind()`](http://api.jquery.com/bind/) (_deprecated_, use [`on()`](http://api.jquery.com/on/)) - Does not support namespaces, selectors or eventData
	 * - [`children()`](http://api.jquery.com/children/) - Does not support selectors
	 * - [`clone()`](http://api.jquery.com/clone/)
	 * - [`contents()`](http://api.jquery.com/contents/)
	 * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`.
	 *   As a setter, does not convert numbers to strings or append 'px', and also does not have automatic property prefixing.
	 * - [`data()`](http://api.jquery.com/data/)
	 * - [`detach()`](http://api.jquery.com/detach/)
	 * - [`empty()`](http://api.jquery.com/empty/)
	 * - [`eq()`](http://api.jquery.com/eq/)
	 * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name
	 * - [`hasClass()`](http://api.jquery.com/hasClass/)
	 * - [`html()`](http://api.jquery.com/html/)
	 * - [`next()`](http://api.jquery.com/next/) - Does not support selectors
	 * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData
	 * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces, selectors or event object as parameter
	 * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors
	 * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors
	 * - [`prepend()`](http://api.jquery.com/prepend/)
	 * - [`prop()`](http://api.jquery.com/prop/)
	 * - [`ready()`](http://api.jquery.com/ready/) (_deprecated_, use `angular.element(callback)` instead of `angular.element(document).ready(callback)`)
	 * - [`remove()`](http://api.jquery.com/remove/)
	 * - [`removeAttr()`](http://api.jquery.com/removeAttr/) - Does not support multiple attributes
	 * - [`removeClass()`](http://api.jquery.com/removeClass/) - Does not support a function as first argument
	 * - [`removeData()`](http://api.jquery.com/removeData/)
	 * - [`replaceWith()`](http://api.jquery.com/replaceWith/)
	 * - [`text()`](http://api.jquery.com/text/)
	 * - [`toggleClass()`](http://api.jquery.com/toggleClass/) - Does not support a function as first argument
	 * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers
	 * - [`unbind()`](http://api.jquery.com/unbind/) (_deprecated_, use [`off()`](http://api.jquery.com/off/)) - Does not support namespaces or event object as parameter
	 * - [`val()`](http://api.jquery.com/val/)
	 * - [`wrap()`](http://api.jquery.com/wrap/)
	 *
	 * jqLite also provides a method restoring pre-1.8 insecure treatment of XHTML-like tags.
	 * This legacy behavior turns input like `<div /><span />` to `<div></div><span></span>`
	 * instead of `<div><span></span></div>` like version 1.8 & newer do. To restore it, invoke:
	 * ```js
	 * angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement();
	 * ```
	 * Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the
	 * [jQuery 3.5 upgrade guide](https://jquery.com/upgrade-guide/3.5/) for more details
	 * about the workarounds.
	 *
	 * ## jQuery/jqLite Extras
	 * AngularJS also provides the following additional methods and events to both jQuery and jqLite:
	 *
	 * ### Events
	 * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event
	 *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM
	 *    element before it is removed.
	 *
	 * ### Methods
	 * - `controller(name)` - retrieves the controller of the current element or its parent. By default
	 *   retrieves controller associated with the `ngController` directive. If `name` is provided as
	 *   camelCase directive name, then the controller for this directive will be retrieved (e.g.
	 *   `'ngModel'`).
	 * - `injector()` - retrieves the injector of the current element or its parent.
	 * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current
	 *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to
	 *   be enabled.
	 * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the
	 *   current element. This getter should be used only on elements that contain a directive which starts a new isolate
	 *   scope. Calling `scope()` on this element always returns the original non-isolate scope.
	 *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.
	 * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top
	 *   parent element is reached.
	 *
	 * @knownIssue You cannot spy on `angular.element` if you are using Jasmine version 1.x. See
	 * https://github.com/angular/angular.js/issues/14251 for more information.
	 *
	 * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.
	 * @returns {Object} jQuery object.
	 */JQLite.expando='ng339';var jqCache=JQLite.cache={},jqId=1;/*
	 * !!! This is an undocumented "private" function !!!
	 */JQLite._data=function(node){//jQuery always returns an object on cache miss
	return this.cache[node[this.expando]]||{};};function jqNextId(){return++jqId;}var DASH_LOWERCASE_REGEXP=/-([a-z])/g;var MS_HACK_REGEXP=/^-ms-/;var MOUSE_EVENT_MAP={mouseleave:'mouseout',mouseenter:'mouseover'};var jqLiteMinErr=minErr('jqLite');/**
	 * Converts kebab-case to camelCase.
	 * There is also a special case for the ms prefix starting with a lowercase letter.
	 * @param name Name to normalize
	 */function cssKebabToCamel(name){return kebabToCamel(name.replace(MS_HACK_REGEXP,'ms-'));}function fnCamelCaseReplace(all,letter){return letter.toUpperCase();}/**
	 * Converts kebab-case to camelCase.
	 * @param name Name to normalize
	 */function kebabToCamel(name){return name.replace(DASH_LOWERCASE_REGEXP,fnCamelCaseReplace);}var SINGLE_TAG_REGEXP=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;var HTML_REGEXP=/<|&#?\w+;/;var TAG_NAME_REGEXP=/<([\w:-]+)/;var XHTML_TAG_REGEXP=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;// Table parts need to be wrapped with `<table>` or they're
	// stripped to their contents when put in a div.
	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do, so we cannot shorten
	// this by omitting <tbody> or other required elements.
	var wrapMap={thead:['table'],col:['colgroup','table'],tr:['tbody','table'],td:['tr','tbody','table']};wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;// Support: IE <10 only
	// IE 9 requires an option wrapper & it needs to have the whole table structure
	// set up in advance; assigning `"<td></td>"` to `tr.innerHTML` doesn't work, etc.
	var wrapMapIE9={option:[1,'<select multiple="multiple">','</select>'],_default:[0,'','']};for(var key in wrapMap){var wrapMapValueClosing=wrapMap[key];var wrapMapValue=wrapMapValueClosing.slice().reverse();wrapMapIE9[key]=[wrapMapValue.length,'<'+wrapMapValue.join('><')+'>','</'+wrapMapValueClosing.join('></')+'>'];}wrapMapIE9.optgroup=wrapMapIE9.option;function jqLiteIsTextNode(html){return!HTML_REGEXP.test(html);}function jqLiteAcceptsData(node){// The window object can accept data but has no nodeType
	// Otherwise we are only interested in elements (1) and documents (9)
	var nodeType=node.nodeType;return nodeType===NODE_TYPE_ELEMENT||!nodeType||nodeType===NODE_TYPE_DOCUMENT;}function jqLiteHasData(node){for(var key in jqCache[node.ng339]){return true;}return false;}function jqLiteBuildFragment(html,context){var tmp,tag,wrap,finalHtml,fragment=context.createDocumentFragment(),nodes=[],i;if(jqLiteIsTextNode(html)){// Convert non-html into a text node
	nodes.push(context.createTextNode(html));}else{// Convert html into DOM nodes
	tmp=fragment.appendChild(context.createElement('div'));tag=(TAG_NAME_REGEXP.exec(html)||['',''])[1].toLowerCase();finalHtml=JQLite.legacyXHTMLReplacement?html.replace(XHTML_TAG_REGEXP,'<$1></$2>'):html;if(msie<10){wrap=wrapMapIE9[tag]||wrapMapIE9._default;tmp.innerHTML=wrap[1]+finalHtml+wrap[2];// Descend through wrappers to the right content
	i=wrap[0];while(i--){tmp=tmp.firstChild;}}else{wrap=wrapMap[tag]||[];// Create wrappers & descend into them
	i=wrap.length;while(--i>-1){tmp.appendChild(window.document.createElement(wrap[i]));tmp=tmp.firstChild;}tmp.innerHTML=finalHtml;}nodes=concat(nodes,tmp.childNodes);tmp=fragment.firstChild;tmp.textContent='';}// Remove wrapper from fragment
	fragment.textContent='';fragment.innerHTML='';// Clear inner HTML
	forEach(nodes,function(node){fragment.appendChild(node);});return fragment;}function jqLiteParseHTML(html,context){context=context||window.document;var parsed;if(parsed=SINGLE_TAG_REGEXP.exec(html)){return[context.createElement(parsed[1])];}if(parsed=jqLiteBuildFragment(html,context)){return parsed.childNodes;}return[];}function jqLiteWrapNode(node,wrapper){var parent=node.parentNode;if(parent){parent.replaceChild(wrapper,node);}wrapper.appendChild(node);}// IE9-11 has no method "contains" in SVG element and in Node.prototype. Bug #10259.
	var jqLiteContains=window.Node.prototype.contains||/** @this */function(arg){// eslint-disable-next-line no-bitwise
	return!!(this.compareDocumentPosition(arg)&16);};/////////////////////////////////////////////
	function JQLite(element){if(element instanceof JQLite){return element;}var argIsString;if(isString(element)){element=trim(element);argIsString=true;}if(!(this instanceof JQLite)){if(argIsString&&element.charAt(0)!=='<'){throw jqLiteMinErr('nosel','Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');}return new JQLite(element);}if(argIsString){jqLiteAddNodes(this,jqLiteParseHTML(element));}else if(isFunction(element)){jqLiteReady(element);}else{jqLiteAddNodes(this,element);}}function jqLiteClone(element){return element.cloneNode(true);}function jqLiteDealoc(element,onlyDescendants){if(!onlyDescendants&&jqLiteAcceptsData(element))jqLite.cleanData([element]);if(element.querySelectorAll){jqLite.cleanData(element.querySelectorAll('*'));}}function isEmptyObject(obj){var name;for(name in obj){return false;}return true;}function removeIfEmptyData(element){var expandoId=element.ng339;var expandoStore=expandoId&&jqCache[expandoId];var events=expandoStore&&expandoStore.events;var data=expandoStore&&expandoStore.data;if((!data||isEmptyObject(data))&&(!events||isEmptyObject(events))){delete jqCache[expandoId];element.ng339=undefined;// don't delete DOM expandos. IE and Chrome don't like it
	}}function jqLiteOff(element,type,fn,unsupported){if(isDefined(unsupported))throw jqLiteMinErr('offargs','jqLite#off() does not support the `selector` argument');var expandoStore=jqLiteExpandoStore(element);var events=expandoStore&&expandoStore.events;var handle=expandoStore&&expandoStore.handle;if(!handle)return;//no listeners registered
	if(!type){for(type in events){if(type!=='$destroy'){element.removeEventListener(type,handle);}delete events[type];}}else{var removeHandler=function removeHandler(type){var listenerFns=events[type];if(isDefined(fn)){arrayRemove(listenerFns||[],fn);}if(!(isDefined(fn)&&listenerFns&&listenerFns.length>0)){element.removeEventListener(type,handle);delete events[type];}};forEach(type.split(' '),function(type){removeHandler(type);if(MOUSE_EVENT_MAP[type]){removeHandler(MOUSE_EVENT_MAP[type]);}});}removeIfEmptyData(element);}function jqLiteRemoveData(element,name){var expandoId=element.ng339;var expandoStore=expandoId&&jqCache[expandoId];if(expandoStore){if(name){delete expandoStore.data[name];}else{expandoStore.data={};}removeIfEmptyData(element);}}function jqLiteExpandoStore(element,createIfNecessary){var expandoId=element.ng339,expandoStore=expandoId&&jqCache[expandoId];if(createIfNecessary&&!expandoStore){element.ng339=expandoId=jqNextId();expandoStore=jqCache[expandoId]={events:{},data:{},handle:undefined};}return expandoStore;}function jqLiteData(element,key,value){if(jqLiteAcceptsData(element)){var prop;var isSimpleSetter=isDefined(value);var isSimpleGetter=!isSimpleSetter&&key&&!isObject(key);var massGetter=!key;var expandoStore=jqLiteExpandoStore(element,!isSimpleGetter);var data=expandoStore&&expandoStore.data;if(isSimpleSetter){// data('key', value)
	data[kebabToCamel(key)]=value;}else{if(massGetter){// data()
	return data;}else{if(isSimpleGetter){// data('key')
	// don't force creation of expandoStore if it doesn't exist yet
	return data&&data[kebabToCamel(key)];}else{// mass-setter: data({key1: val1, key2: val2})
	for(prop in key){data[kebabToCamel(prop)]=key[prop];}}}}}}function jqLiteHasClass(element,selector){if(!element.getAttribute)return false;return(' '+(element.getAttribute('class')||'')+' ').replace(/[\n\t]/g,' ').indexOf(' '+selector+' ')>-1;}function jqLiteRemoveClass(element,cssClasses){if(cssClasses&&element.setAttribute){var existingClasses=(' '+(element.getAttribute('class')||'')+' ').replace(/[\n\t]/g,' ');var newClasses=existingClasses;forEach(cssClasses.split(' '),function(cssClass){cssClass=trim(cssClass);newClasses=newClasses.replace(' '+cssClass+' ',' ');});if(newClasses!==existingClasses){element.setAttribute('class',trim(newClasses));}}}function jqLiteAddClass(element,cssClasses){if(cssClasses&&element.setAttribute){var existingClasses=(' '+(element.getAttribute('class')||'')+' ').replace(/[\n\t]/g,' ');var newClasses=existingClasses;forEach(cssClasses.split(' '),function(cssClass){cssClass=trim(cssClass);if(newClasses.indexOf(' '+cssClass+' ')===-1){newClasses+=cssClass+' ';}});if(newClasses!==existingClasses){element.setAttribute('class',trim(newClasses));}}}function jqLiteAddNodes(root,elements){// THIS CODE IS VERY HOT. Don't make changes without benchmarking.
	if(elements){// if a Node (the most common case)
	if(elements.nodeType){root[root.length++]=elements;}else{var length=elements.length;// if an Array or NodeList and not a Window
	if(typeof length==='number'&&elements.window!==elements){if(length){for(var i=0;i<length;i++){root[root.length++]=elements[i];}}}else{root[root.length++]=elements;}}}}function jqLiteController(element,name){return jqLiteInheritedData(element,'$'+(name||'ngController')+'Controller');}function jqLiteInheritedData(element,name,value){// if element is the document object work with the html element instead
	// this makes $(document).scope() possible
	if(element.nodeType===NODE_TYPE_DOCUMENT){element=element.documentElement;}var names=isArray(name)?name:[name];while(element){for(var i=0,ii=names.length;i<ii;i++){if(isDefined(value=jqLite.data(element,names[i])))return value;}// If dealing with a document fragment node with a host element, and no parent, use the host
	// element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM
	// to lookup parent controllers.
	element=element.parentNode||element.nodeType===NODE_TYPE_DOCUMENT_FRAGMENT&&element.host;}}function jqLiteEmpty(element){jqLiteDealoc(element,true);while(element.firstChild){element.removeChild(element.firstChild);}}function jqLiteRemove(element,keepData){if(!keepData)jqLiteDealoc(element);var parent=element.parentNode;if(parent)parent.removeChild(element);}function jqLiteDocumentLoaded(action,win){win=win||window;if(win.document.readyState==='complete'){// Force the action to be run async for consistent behavior
	// from the action's point of view
	// i.e. it will definitely not be in a $apply
	win.setTimeout(action);}else{// No need to unbind this handler as load is only ever called once
	jqLite(win).on('load',action);}}function jqLiteReady(fn){function trigger(){window.document.removeEventListener('DOMContentLoaded',trigger);window.removeEventListener('load',trigger);fn();}// check if document is already loaded
	if(window.document.readyState==='complete'){window.setTimeout(fn);}else{// We can not use jqLite since we are not done loading and jQuery could be loaded later.
	// Works for modern browsers and IE9
	window.document.addEventListener('DOMContentLoaded',trigger);// Fallback to window.onload for others
	window.addEventListener('load',trigger);}}//////////////////////////////////////////
	// Functions which are declared directly.
	//////////////////////////////////////////
	var JQLitePrototype=JQLite.prototype={ready:jqLiteReady,toString:function toString(){var value=[];forEach(this,function(e){value.push(''+e);});return'['+value.join(', ')+']';},eq:function eq(index){return index>=0?jqLite(this[index]):jqLite(this[this.length+index]);},length:0,push:push,sort:[].sort,splice:[].splice};//////////////////////////////////////////
	// Functions iterating getter/setters.
	// these functions return self on setter and
	// value on get.
	//////////////////////////////////////////
	var BOOLEAN_ATTR={};forEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','),function(value){BOOLEAN_ATTR[lowercase(value)]=value;});var BOOLEAN_ELEMENTS={};forEach('input,select,option,textarea,button,form,details'.split(','),function(value){BOOLEAN_ELEMENTS[value]=true;});var ALIASED_ATTR={'ngMinlength':'minlength','ngMaxlength':'maxlength','ngMin':'min','ngMax':'max','ngPattern':'pattern','ngStep':'step'};function getBooleanAttrName(element,name){// check dom last since we will most likely fail on name
	var booleanAttr=BOOLEAN_ATTR[name.toLowerCase()];// booleanAttr is here twice to minimize DOM access
	return booleanAttr&&BOOLEAN_ELEMENTS[nodeName_(element)]&&booleanAttr;}function getAliasedAttrName(name){return ALIASED_ATTR[name];}forEach({data:jqLiteData,removeData:jqLiteRemoveData,hasData:jqLiteHasData,cleanData:function jqLiteCleanData(nodes){for(var i=0,ii=nodes.length;i<ii;i++){jqLiteRemoveData(nodes[i]);jqLiteOff(nodes[i]);}}},function(fn,name){JQLite[name]=fn;});forEach({data:jqLiteData,inheritedData:jqLiteInheritedData,scope:function scope(element){// Can't use jqLiteData here directly so we stay compatible with jQuery!
	return jqLite.data(element,'$scope')||jqLiteInheritedData(element.parentNode||element,['$isolateScope','$scope']);},isolateScope:function isolateScope(element){// Can't use jqLiteData here directly so we stay compatible with jQuery!
	return jqLite.data(element,'$isolateScope')||jqLite.data(element,'$isolateScopeNoTemplate');},controller:jqLiteController,injector:function injector(element){return jqLiteInheritedData(element,'$injector');},removeAttr:function removeAttr(element,name){element.removeAttribute(name);},hasClass:jqLiteHasClass,css:function css(element,name,value){name=cssKebabToCamel(name);if(isDefined(value)){element.style[name]=value;}else{return element.style[name];}},attr:function attr(element,name,value){var ret;var nodeType=element.nodeType;if(nodeType===NODE_TYPE_TEXT||nodeType===NODE_TYPE_ATTRIBUTE||nodeType===NODE_TYPE_COMMENT||!element.getAttribute){return;}var lowercasedName=lowercase(name);var isBooleanAttr=BOOLEAN_ATTR[lowercasedName];if(isDefined(value)){// setter
	if(value===null||value===false&&isBooleanAttr){element.removeAttribute(name);}else{element.setAttribute(name,isBooleanAttr?lowercasedName:value);}}else{// getter
	ret=element.getAttribute(name);if(isBooleanAttr&&ret!==null){ret=lowercasedName;}// Normalize non-existing attributes to undefined (as jQuery).
	return ret===null?undefined:ret;}},prop:function prop(element,name,value){if(isDefined(value)){element[name]=value;}else{return element[name];}},text:function(){getText.$dv='';return getText;function getText(element,value){if(isUndefined(value)){var nodeType=element.nodeType;return nodeType===NODE_TYPE_ELEMENT||nodeType===NODE_TYPE_TEXT?element.textContent:'';}element.textContent=value;}}(),val:function val(element,value){if(isUndefined(value)){if(element.multiple&&nodeName_(element)==='select'){var result=[];forEach(element.options,function(option){if(option.selected){result.push(option.value||option.text);}});return result;}return element.value;}element.value=value;},html:function html(element,value){if(isUndefined(value)){return element.innerHTML;}jqLiteDealoc(element,true);element.innerHTML=value;},empty:jqLiteEmpty},function(fn,name){/**
	   * Properties: writes return selection, reads return first value
	   */JQLite.prototype[name]=function(arg1,arg2){var i,key;var nodeCount=this.length;// jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it
	// in a way that survives minification.
	// jqLiteEmpty takes no arguments but is a setter.
	if(fn!==jqLiteEmpty&&isUndefined(fn.length===2&&fn!==jqLiteHasClass&&fn!==jqLiteController?arg1:arg2)){if(isObject(arg1)){// we are a write, but the object properties are the key/values
	for(i=0;i<nodeCount;i++){if(fn===jqLiteData){// data() takes the whole object in jQuery
	fn(this[i],arg1);}else{for(key in arg1){fn(this[i],key,arg1[key]);}}}// return self for chaining
	return this;}else{// we are a read, so read the first child.
	// TODO: do we still need this?
	var value=fn.$dv;// Only if we have $dv do we iterate over all, otherwise it is just the first element.
	var jj=isUndefined(value)?Math.min(nodeCount,1):nodeCount;for(var j=0;j<jj;j++){var nodeValue=fn(this[j],arg1,arg2);value=value?value+nodeValue:nodeValue;}return value;}}else{// we are a write, so apply to all children
	for(i=0;i<nodeCount;i++){fn(this[i],arg1,arg2);}// return self for chaining
	return this;}};});function createEventHandler(element,events){var eventHandler=function eventHandler(event,type){// jQuery specific api
	event.isDefaultPrevented=function(){return event.defaultPrevented;};var eventFns=events[type||event.type];var eventFnsLength=eventFns?eventFns.length:0;if(!eventFnsLength)return;if(isUndefined(event.immediatePropagationStopped)){var originalStopImmediatePropagation=event.stopImmediatePropagation;event.stopImmediatePropagation=function(){event.immediatePropagationStopped=true;if(event.stopPropagation){event.stopPropagation();}if(originalStopImmediatePropagation){originalStopImmediatePropagation.call(event);}};}event.isImmediatePropagationStopped=function(){return event.immediatePropagationStopped===true;};// Some events have special handlers that wrap the real handler
	var handlerWrapper=eventFns.specialHandlerWrapper||defaultHandlerWrapper;// Copy event handlers in case event handlers array is modified during execution.
	if(eventFnsLength>1){eventFns=shallowCopy(eventFns);}for(var i=0;i<eventFnsLength;i++){if(!event.isImmediatePropagationStopped()){handlerWrapper(element,event,eventFns[i]);}}};// TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all
	//       events on `element`
	eventHandler.elem=element;return eventHandler;}function defaultHandlerWrapper(element,event,handler){handler.call(element,event);}function specialMouseHandlerWrapper(target,event,handler){// Refer to jQuery's implementation of mouseenter & mouseleave
	// Read about mouseenter and mouseleave:
	// http://www.quirksmode.org/js/events_mouse.html#link8
	var related=event.relatedTarget;// For mousenter/leave call the handler if related is outside the target.
	// NB: No relatedTarget if the mouse left/entered the browser window
	if(!related||related!==target&&!jqLiteContains.call(target,related)){handler.call(target,event);}}//////////////////////////////////////////
	// Functions iterating traversal.
	// These functions chain results into a single
	// selector.
	//////////////////////////////////////////
	forEach({removeData:jqLiteRemoveData,on:function jqLiteOn(element,type,fn,unsupported){if(isDefined(unsupported))throw jqLiteMinErr('onargs','jqLite#on() does not support the `selector` or `eventData` parameters');// Do not add event handlers to non-elements because they will not be cleaned up.
	if(!jqLiteAcceptsData(element)){return;}var expandoStore=jqLiteExpandoStore(element,true);var events=expandoStore.events;var handle=expandoStore.handle;if(!handle){handle=expandoStore.handle=createEventHandler(element,events);}// http://jsperf.com/string-indexof-vs-split
	var types=type.indexOf(' ')>=0?type.split(' '):[type];var i=types.length;var addHandler=function addHandler(type,specialHandlerWrapper,noEventListener){var eventFns=events[type];if(!eventFns){eventFns=events[type]=[];eventFns.specialHandlerWrapper=specialHandlerWrapper;if(type!=='$destroy'&&!noEventListener){element.addEventListener(type,handle);}}eventFns.push(fn);};while(i--){type=types[i];if(MOUSE_EVENT_MAP[type]){addHandler(MOUSE_EVENT_MAP[type],specialMouseHandlerWrapper);addHandler(type,undefined,true);}else{addHandler(type);}}},off:jqLiteOff,one:function one(element,type,fn){element=jqLite(element);//add the listener twice so that when it is called
	//you can remove the original function and still be
	//able to call element.off(ev, fn) normally
	element.on(type,function onFn(){element.off(type,fn);element.off(type,onFn);});element.on(type,fn);},replaceWith:function replaceWith(element,replaceNode){var index,parent=element.parentNode;jqLiteDealoc(element);forEach(new JQLite(replaceNode),function(node){if(index){parent.insertBefore(node,index.nextSibling);}else{parent.replaceChild(node,element);}index=node;});},children:function children(element){var children=[];forEach(element.childNodes,function(element){if(element.nodeType===NODE_TYPE_ELEMENT){children.push(element);}});return children;},contents:function contents(element){return element.contentDocument||element.childNodes||[];},append:function append(element,node){var nodeType=element.nodeType;if(nodeType!==NODE_TYPE_ELEMENT&&nodeType!==NODE_TYPE_DOCUMENT_FRAGMENT)return;node=new JQLite(node);for(var i=0,ii=node.length;i<ii;i++){var child=node[i];element.appendChild(child);}},prepend:function prepend(element,node){if(element.nodeType===NODE_TYPE_ELEMENT){var index=element.firstChild;forEach(new JQLite(node),function(child){element.insertBefore(child,index);});}},wrap:function wrap(element,wrapNode){jqLiteWrapNode(element,jqLite(wrapNode).eq(0).clone()[0]);},remove:jqLiteRemove,detach:function detach(element){jqLiteRemove(element,true);},after:function after(element,newElement){var index=element,parent=element.parentNode;if(parent){newElement=new JQLite(newElement);for(var i=0,ii=newElement.length;i<ii;i++){var node=newElement[i];parent.insertBefore(node,index.nextSibling);index=node;}}},addClass:jqLiteAddClass,removeClass:jqLiteRemoveClass,toggleClass:function toggleClass(element,selector,condition){if(selector){forEach(selector.split(' '),function(className){var classCondition=condition;if(isUndefined(classCondition)){classCondition=!jqLiteHasClass(element,className);}(classCondition?jqLiteAddClass:jqLiteRemoveClass)(element,className);});}},parent:function parent(element){var parent=element.parentNode;return parent&&parent.nodeType!==NODE_TYPE_DOCUMENT_FRAGMENT?parent:null;},next:function next(element){return element.nextElementSibling;},find:function find(element,selector){if(element.getElementsByTagName){return element.getElementsByTagName(selector);}else{return[];}},clone:jqLiteClone,triggerHandler:function triggerHandler(element,event,extraParameters){var dummyEvent,eventFnsCopy,handlerArgs;var eventName=event.type||event;var expandoStore=jqLiteExpandoStore(element);var events=expandoStore&&expandoStore.events;var eventFns=events&&events[eventName];if(eventFns){// Create a dummy event to pass to the handlers
	dummyEvent={preventDefault:function preventDefault(){this.defaultPrevented=true;},isDefaultPrevented:function isDefaultPrevented(){return this.defaultPrevented===true;},stopImmediatePropagation:function stopImmediatePropagation(){this.immediatePropagationStopped=true;},isImmediatePropagationStopped:function isImmediatePropagationStopped(){return this.immediatePropagationStopped===true;},stopPropagation:noop,type:eventName,target:element};// If a custom event was provided then extend our dummy event with it
	if(event.type){dummyEvent=extend(dummyEvent,event);}// Copy event handlers in case event handlers array is modified during execution.
	eventFnsCopy=shallowCopy(eventFns);handlerArgs=extraParameters?[dummyEvent].concat(extraParameters):[dummyEvent];forEach(eventFnsCopy,function(fn){if(!dummyEvent.isImmediatePropagationStopped()){fn.apply(element,handlerArgs);}});}}},function(fn,name){/**
	   * chaining functions
	   */JQLite.prototype[name]=function(arg1,arg2,arg3){var value;for(var i=0,ii=this.length;i<ii;i++){if(isUndefined(value)){value=fn(this[i],arg1,arg2,arg3);if(isDefined(value)){// any function which returns a value needs to be wrapped
	value=jqLite(value);}}else{jqLiteAddNodes(value,fn(this[i],arg1,arg2,arg3));}}return isDefined(value)?value:this;};});// bind legacy bind/unbind to on/off
	JQLite.prototype.bind=JQLite.prototype.on;JQLite.prototype.unbind=JQLite.prototype.off;// Provider for private $$jqLite service
	/** @this */function $$jqLiteProvider(){this.$get=function $$jqLite(){return extend(JQLite,{hasClass:function hasClass(node,classes){if(node.attr)node=node[0];return jqLiteHasClass(node,classes);},addClass:function addClass(node,classes){if(node.attr)node=node[0];return jqLiteAddClass(node,classes);},removeClass:function removeClass(node,classes){if(node.attr)node=node[0];return jqLiteRemoveClass(node,classes);}});};}/**
	 * Computes a hash of an 'obj'.
	 * Hash of a:
	 *  string is string
	 *  number is number as string
	 *  object is either result of calling $$hashKey function on the object or uniquely generated id,
	 *         that is also assigned to the $$hashKey property of the object.
	 *
	 * @param obj
	 * @returns {string} hash string such that the same input will have the same hash string.
	 *         The resulting string key is in 'type:hashKey' format.
	 */function hashKey(obj,nextUidFn){var key=obj&&obj.$$hashKey;if(key){if(typeof key==='function'){key=obj.$$hashKey();}return key;}var objType=typeof obj==='undefined'?'undefined':_typeof(obj);if(objType==='function'||objType==='object'&&obj!==null){key=obj.$$hashKey=objType+':'+(nextUidFn||nextUid)();}else{key=objType+':'+obj;}return key;}// A minimal ES2015 Map implementation.
	// Should be bug/feature equivalent to the native implementations of supported browsers
	// (for the features required in Angular).
	// See https://kangax.github.io/compat-table/es6/#test-Map
	var nanKey=Object.create(null);function NgMapShim(){this._keys=[];this._values=[];this._lastKey=NaN;this._lastIndex=-1;}NgMapShim.prototype={_idx:function _idx(key){if(key!==this._lastKey){this._lastKey=key;this._lastIndex=this._keys.indexOf(key);}return this._lastIndex;},_transformKey:function _transformKey(key){return isNumberNaN(key)?nanKey:key;},get:function get(key){key=this._transformKey(key);var idx=this._idx(key);if(idx!==-1){return this._values[idx];}},has:function has(key){key=this._transformKey(key);var idx=this._idx(key);return idx!==-1;},set:function set(key,value){key=this._transformKey(key);var idx=this._idx(key);if(idx===-1){idx=this._lastIndex=this._keys.length;}this._keys[idx]=key;this._values[idx]=value;// Support: IE11
	// Do not `return this` to simulate the partial IE11 implementation
	},delete:function _delete(key){key=this._transformKey(key);var idx=this._idx(key);if(idx===-1){return false;}this._keys.splice(idx,1);this._values.splice(idx,1);this._lastKey=NaN;this._lastIndex=-1;return true;}};// For now, always use `NgMapShim`, even if `window.Map` is available. Some native implementations
	// are still buggy (often in subtle ways) and can cause hard-to-debug failures. When native `Map`
	// implementations get more stable, we can reconsider switching to `window.Map` (when available).
	var NgMap=NgMapShim;var $$MapProvider=[/** @this */function(){this.$get=[function(){return NgMap;}];}];/**
	 * @ngdoc function
	 * @module ng
	 * @name angular.injector
	 * @kind function
	 *
	 * @description
	 * Creates an injector object that can be used for retrieving services as well as for
	 * dependency injection (see {@link guide/di dependency injection}).
	 *
	 * @param {Array.<string|Function>} modules A list of module functions or their aliases. See
	 *     {@link angular.module}. The `ng` module must be explicitly added.
	 * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which
	 *     disallows argument name annotation inference.
	 * @returns {injector} Injector object. See {@link auto.$injector $injector}.
	 *
	 * @example
	 * Typical usage
	 * ```js
	 *   // create an injector
	 *   var $injector = angular.injector(['ng']);
	 *
	 *   // use the injector to kick off your application
	 *   // use the type inference to auto inject arguments, or use implicit injection
	 *   $injector.invoke(function($rootScope, $compile, $document) {
	 *     $compile($document)($rootScope);
	 *     $rootScope.$digest();
	 *   });
	 * ```
	 *
	 * Sometimes you want to get access to the injector of a currently running AngularJS app
	 * from outside AngularJS. Perhaps, you want to inject and compile some markup after the
	 * application has been bootstrapped. You can do this using the extra `injector()` added
	 * to JQuery/jqLite elements. See {@link angular.element}.
	 *
	 * *This is fairly rare but could be the case if a third party library is injecting the
	 * markup.*
	 *
	 * In the following example a new block of HTML containing a `ng-controller`
	 * directive is added to the end of the document body by JQuery. We then compile and link
	 * it into the current AngularJS scope.
	 *
	 * ```js
	 * var $div = $('<div ng-controller="MyCtrl">{{content.label}}</div>');
	 * $(document.body).append($div);
	 *
	 * angular.element(document).injector().invoke(function($compile) {
	 *   var scope = angular.element($div).scope();
	 *   $compile($div)(scope);
	 * });
	 * ```
	 *//**
	 * @ngdoc module
	 * @name auto
	 * @installation
	 * @description
	 *
	 * Implicit module which gets automatically added to each {@link auto.$injector $injector}.
	 */var ARROW_ARG=/^([^(]+?)=>/;var FN_ARGS=/^[^(]*\(\s*([^)]*)\)/m;var FN_ARG_SPLIT=/,/;var FN_ARG=/^\s*(_?)(\S+?)\1\s*$/;var STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;var $injectorMinErr=minErr('$injector');function stringifyFn(fn){return Function.prototype.toString.call(fn);}function extractArgs(fn){var fnText=stringifyFn(fn).replace(STRIP_COMMENTS,''),args=fnText.match(ARROW_ARG)||fnText.match(FN_ARGS);return args;}function anonFn(fn){// For anonymous functions, showing at the very least the function signature can help in
	// debugging.
	var args=extractArgs(fn);if(args){return'function('+(args[1]||'').replace(/[\s\r\n]+/,' ')+')';}return'fn';}function annotate(fn,strictDi,name){var $inject,argDecl,last;if(typeof fn==='function'){if(!($inject=fn.$inject)){$inject=[];if(fn.length){if(strictDi){if(!isString(name)||!name){name=fn.name||anonFn(fn);}throw $injectorMinErr('strictdi','{0} is not using explicit annotation and cannot be invoked in strict mode',name);}argDecl=extractArgs(fn);forEach(argDecl[1].split(FN_ARG_SPLIT),function(arg){arg.replace(FN_ARG,function(all,underscore,name){$inject.push(name);});});}fn.$inject=$inject;}}else if(isArray(fn)){last=fn.length-1;assertArgFn(fn[last],'fn');$inject=fn.slice(0,last);}else{assertArgFn(fn,'fn',true);}return $inject;}///////////////////////////////////////
	/**
	 * @ngdoc service
	 * @name $injector
	 *
	 * @description
	 *
	 * `$injector` is used to retrieve object instances as defined by
	 * {@link auto.$provide provider}, instantiate types, invoke methods,
	 * and load modules.
	 *
	 * The following always holds true:
	 *
	 * ```js
	 *   var $injector = angular.injector();
	 *   expect($injector.get('$injector')).toBe($injector);
	 *   expect($injector.invoke(function($injector) {
	 *     return $injector;
	 *   })).toBe($injector);
	 * ```
	 *
	 * ## Injection Function Annotation
	 *
	 * JavaScript does not have annotations, and annotations are needed for dependency injection. The
	 * following are all valid ways of annotating function with injection arguments and are equivalent.
	 *
	 * ```js
	 *   // inferred (only works if code not minified/obfuscated)
	 *   $injector.invoke(function(serviceA){});
	 *
	 *   // annotated
	 *   function explicit(serviceA) {};
	 *   explicit.$inject = ['serviceA'];
	 *   $injector.invoke(explicit);
	 *
	 *   // inline
	 *   $injector.invoke(['serviceA', function(serviceA){}]);
	 * ```
	 *
	 * ### Inference
	 *
	 * In JavaScript calling `toString()` on a function returns the function definition. The definition
	 * can then be parsed and the function arguments can be extracted. This method of discovering
	 * annotations is disallowed when the injector is in strict mode.
	 * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the
	 * argument names.
	 *
	 * ### `$inject` Annotation
	 * By adding an `$inject` property onto a function the injection parameters can be specified.
	 *
	 * ### Inline
	 * As an array of injection names, where the last item in the array is the function to call.
	 *//**
	 * @ngdoc property
	 * @name $injector#modules
	 * @type {Object}
	 * @description
	 * A hash containing all the modules that have been loaded into the
	 * $injector.
	 *
	 * You can use this property to find out information about a module via the
	 * {@link angular.Module#info `myModule.info(...)`} method.
	 *
	 * For example:
	 *
	 * ```
	 * var info = $injector.modules['ngAnimate'].info();
	 * ```
	 *
	 * **Do not use this property to attempt to modify the modules after the application
	 * has been bootstrapped.**
	 *//**
	 * @ngdoc method
	 * @name $injector#get
	 *
	 * @description
	 * Return an instance of the service.
	 *
	 * @param {string} name The name of the instance to retrieve.
	 * @param {string=} caller An optional string to provide the origin of the function call for error messages.
	 * @return {*} The instance.
	 *//**
	 * @ngdoc method
	 * @name $injector#invoke
	 *
	 * @description
	 * Invoke the method and supply the method arguments from the `$injector`.
	 *
	 * @param {Function|Array.<string|Function>} fn The injectable function to invoke. Function parameters are
	 *   injected according to the {@link guide/di $inject Annotation} rules.
	 * @param {Object=} self The `this` for the invoked method.
	 * @param {Object=} locals Optional object. If preset then any argument names are read from this
	 *                         object first, before the `$injector` is consulted.
	 * @returns {*} the value returned by the invoked `fn` function.
	 *//**
	 * @ngdoc method
	 * @name $injector#has
	 *
	 * @description
	 * Allows the user to query if the particular service exists.
	 *
	 * @param {string} name Name of the service to query.
	 * @returns {boolean} `true` if injector has given service.
	 *//**
	 * @ngdoc method
	 * @name $injector#instantiate
	 * @description
	 * Create a new instance of JS type. The method takes a constructor function, invokes the new
	 * operator, and supplies all of the arguments to the constructor function as specified by the
	 * constructor annotation.
	 *
	 * @param {Function} Type Annotated constructor function.
	 * @param {Object=} locals Optional object. If preset then any argument names are read from this
	 * object first, before the `$injector` is consulted.
	 * @returns {Object} new instance of `Type`.
	 *//**
	 * @ngdoc method
	 * @name $injector#annotate
	 *
	 * @description
	 * Returns an array of service names which the function is requesting for injection. This API is
	 * used by the injector to determine which services need to be injected into the function when the
	 * function is invoked. There are three ways in which the function can be annotated with the needed
	 * dependencies.
	 *
	 * #### Argument names
	 *
	 * The simplest form is to extract the dependencies from the arguments of the function. This is done
	 * by converting the function into a string using `toString()` method and extracting the argument
	 * names.
	 * ```js
	 *   // Given
	 *   function MyController($scope, $route) {
	 *     // ...
	 *   }
	 *
	 *   // Then
	 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
	 * ```
	 *
	 * You can disallow this method by using strict injection mode.
	 *
	 * This method does not work with code minification / obfuscation. For this reason the following
	 * annotation strategies are supported.
	 *
	 * #### The `$inject` property
	 *
	 * If a function has an `$inject` property and its value is an array of strings, then the strings
	 * represent names of services to be injected into the function.
	 * ```js
	 *   // Given
	 *   var MyController = function(obfuscatedScope, obfuscatedRoute) {
	 *     // ...
	 *   }
	 *   // Define function dependencies
	 *   MyController['$inject'] = ['$scope', '$route'];
	 *
	 *   // Then
	 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
	 * ```
	 *
	 * #### The array notation
	 *
	 * It is often desirable to inline Injected functions and that's when setting the `$inject` property
	 * is very inconvenient. In these situations using the array notation to specify the dependencies in
	 * a way that survives minification is a better choice:
	 *
	 * ```js
	 *   // We wish to write this (not minification / obfuscation safe)
	 *   injector.invoke(function($compile, $rootScope) {
	 *     // ...
	 *   });
	 *
	 *   // We are forced to write break inlining
	 *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {
	 *     // ...
	 *   };
	 *   tmpFn.$inject = ['$compile', '$rootScope'];
	 *   injector.invoke(tmpFn);
	 *
	 *   // To better support inline function the inline annotation is supported
	 *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {
	 *     // ...
	 *   }]);
	 *
	 *   // Therefore
	 *   expect(injector.annotate(
	 *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])
	 *    ).toEqual(['$compile', '$rootScope']);
	 * ```
	 *
	 * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to
	 * be retrieved as described above.
	 *
	 * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.
	 *
	 * @returns {Array.<string>} The names of the services which the function requires.
	 *//**
	 * @ngdoc method
	 * @name $injector#loadNewModules
	 *
	 * @description
	 *
	 * **This is a dangerous API, which you use at your own risk!**
	 *
	 * Add the specified modules to the current injector.
	 *
	 * This method will add each of the injectables to the injector and execute all of the config and run
	 * blocks for each module passed to the method.
	 *
	 * If a module has already been loaded into the injector then it will not be loaded again.
	 *
	 * * The application developer is responsible for loading the code containing the modules; and for
	 * ensuring that lazy scripts are not downloaded and executed more often that desired.
	 * * Previously compiled HTML will not be affected by newly loaded directives, filters and components.
	 * * Modules cannot be unloaded.
	 *
	 * You can use {@link $injector#modules `$injector.modules`} to check whether a module has been loaded
	 * into the injector, which may indicate whether the script has been executed already.
	 *
	 * @example
	 * Here is an example of loading a bundle of modules, with a utility method called `getScript`:
	 *
	 * ```javascript
	 * app.factory('loadModule', function($injector) {
	 *   return function loadModule(moduleName, bundleUrl) {
	 *     return getScript(bundleUrl).then(function() { $injector.loadNewModules([moduleName]); });
	 *   };
	 * })
	 * ```
	 *
	 * @param {Array<String|Function|Array>=} mods an array of modules to load into the application.
	 *     Each item in the array should be the name of a predefined module or a (DI annotated)
	 *     function that will be invoked by the injector as a `config` block.
	 *     See: {@link angular.module modules}
	 *//**
	 * @ngdoc service
	 * @name $provide
	 *
	 * @description
	 *
	 * The {@link auto.$provide $provide} service has a number of methods for registering components
	 * with the {@link auto.$injector $injector}. Many of these functions are also exposed on
	 * {@link angular.Module}.
	 *
	 * An AngularJS **service** is a singleton object created by a **service factory**.  These **service
	 * factories** are functions which, in turn, are created by a **service provider**.
	 * The **service providers** are constructor functions. When instantiated they must contain a
	 * property called `$get`, which holds the **service factory** function.
	 *
	 * When you request a service, the {@link auto.$injector $injector} is responsible for finding the
	 * correct **service provider**, instantiating it and then calling its `$get` **service factory**
	 * function to get the instance of the **service**.
	 *
	 * Often services have no configuration options and there is no need to add methods to the service
	 * provider.  The provider will be no more than a constructor function with a `$get` property. For
	 * these cases the {@link auto.$provide $provide} service has additional helper methods to register
	 * services without specifying a provider.
	 *
	 * * {@link auto.$provide#provider provider(name, provider)} - registers a **service provider** with the
	 *     {@link auto.$injector $injector}
	 * * {@link auto.$provide#constant constant(name, obj)} - registers a value/object that can be accessed by
	 *     providers and services.
	 * * {@link auto.$provide#value value(name, obj)} - registers a value/object that can only be accessed by
	 *     services, not providers.
	 * * {@link auto.$provide#factory factory(name, fn)} - registers a service **factory function**
	 *     that will be wrapped in a **service provider** object, whose `$get` property will contain the
	 *     given factory function.
	 * * {@link auto.$provide#service service(name, Fn)} - registers a **constructor function**
	 *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate
	 *      a new object using the given constructor function.
	 * * {@link auto.$provide#decorator decorator(name, decorFn)} - registers a **decorator function** that
	 *      will be able to modify or replace the implementation of another service.
	 *
	 * See the individual methods for more information and examples.
	 *//**
	 * @ngdoc method
	 * @name $provide#provider
	 * @description
	 *
	 * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions
	 * are constructor functions, whose instances are responsible for "providing" a factory for a
	 * service.
	 *
	 * Service provider names start with the name of the service they provide followed by `Provider`.
	 * For example, the {@link ng.$log $log} service has a provider called
	 * {@link ng.$logProvider $logProvider}.
	 *
	 * Service provider objects can have additional methods which allow configuration of the provider
	 * and its service. Importantly, you can configure what kind of service is created by the `$get`
	 * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a
	 * method {@link ng.$logProvider#debugEnabled debugEnabled}
	 * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the
	 * console or not.
	 *
	 * It is possible to inject other providers into the provider function,
	 * but the injected provider must have been defined before the one that requires it.
	 *
	 * @param {string} name The name of the instance. NOTE: the provider will be available under `name +
	                        'Provider'` key.
	 * @param {(Object|function())} provider If the provider is:
	 *
	 *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using
	 *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.
	 *   - `Constructor`: a new instance of the provider will be created using
	 *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.
	 *
	 * @returns {Object} registered provider instance

	 * @example
	 *
	 * The following example shows how to create a simple event tracking service and register it using
	 * {@link auto.$provide#provider $provide.provider()}.
	 *
	 * ```js
	 *  // Define the eventTracker provider
	 *  function EventTrackerProvider() {
	 *    var trackingUrl = '/track';
	 *
	 *    // A provider method for configuring where the tracked events should been saved
	 *    this.setTrackingUrl = function(url) {
	 *      trackingUrl = url;
	 *    };
	 *
	 *    // The service factory function
	 *    this.$get = ['$http', function($http) {
	 *      var trackedEvents = {};
	 *      return {
	 *        // Call this to track an event
	 *        event: function(event) {
	 *          var count = trackedEvents[event] || 0;
	 *          count += 1;
	 *          trackedEvents[event] = count;
	 *          return count;
	 *        },
	 *        // Call this to save the tracked events to the trackingUrl
	 *        save: function() {
	 *          $http.post(trackingUrl, trackedEvents);
	 *        }
	 *      };
	 *    }];
	 *  }
	 *
	 *  describe('eventTracker', function() {
	 *    var postSpy;
	 *
	 *    beforeEach(module(function($provide) {
	 *      // Register the eventTracker provider
	 *      $provide.provider('eventTracker', EventTrackerProvider);
	 *    }));
	 *
	 *    beforeEach(module(function(eventTrackerProvider) {
	 *      // Configure eventTracker provider
	 *      eventTrackerProvider.setTrackingUrl('/custom-track');
	 *    }));
	 *
	 *    it('tracks events', inject(function(eventTracker) {
	 *      expect(eventTracker.event('login')).toEqual(1);
	 *      expect(eventTracker.event('login')).toEqual(2);
	 *    }));
	 *
	 *    it('saves to the tracking url', inject(function(eventTracker, $http) {
	 *      postSpy = spyOn($http, 'post');
	 *      eventTracker.event('login');
	 *      eventTracker.save();
	 *      expect(postSpy).toHaveBeenCalled();
	 *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');
	 *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');
	 *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });
	 *    }));
	 *  });
	 * ```
	 *//**
	 * @ngdoc method
	 * @name $provide#factory
	 * @description
	 *
	 * Register a **service factory**, which will be called to return the service instance.
	 * This is short for registering a service where its provider consists of only a `$get` property,
	 * which is the given service factory function.
	 * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to
	 * configure your service in a provider.
	 *
	 * @param {string} name The name of the instance.
	 * @param {Function|Array.<string|Function>} $getFn The injectable $getFn for the instance creation.
	 *                      Internally this is a short hand for `$provide.provider(name, {$get: $getFn})`.
	 * @returns {Object} registered provider instance
	 *
	 * @example
	 * Here is an example of registering a service
	 * ```js
	 *   $provide.factory('ping', ['$http', function($http) {
	 *     return function ping() {
	 *       return $http.send('/ping');
	 *     };
	 *   }]);
	 * ```
	 * You would then inject and use this service like this:
	 * ```js
	 *   someModule.controller('Ctrl', ['ping', function(ping) {
	 *     ping();
	 *   }]);
	 * ```
	 *//**
	 * @ngdoc method
	 * @name $provide#service
	 * @description
	 *
	 * Register a **service constructor**, which will be invoked with `new` to create the service
	 * instance.
	 * This is short for registering a service where its provider's `$get` property is a factory
	 * function that returns an instance instantiated by the injector from the service constructor
	 * function.
	 *
	 * Internally it looks a bit like this:
	 *
	 * ```
	 * {
	 *   $get: function() {
	 *     return $injector.instantiate(constructor);
	 *   }
	 * }
	 * ```
	 *
	 *
	 * You should use {@link auto.$provide#service $provide.service(class)} if you define your service
	 * as a type/class.
	 *
	 * @param {string} name The name of the instance.
	 * @param {Function|Array.<string|Function>} constructor An injectable class (constructor function)
	 *     that will be instantiated.
	 * @returns {Object} registered provider instance
	 *
	 * @example
	 * Here is an example of registering a service using
	 * {@link auto.$provide#service $provide.service(class)}.
	 * ```js
	 *   var Ping = function($http) {
	 *     this.$http = $http;
	 *   };
	 *
	 *   Ping.$inject = ['$http'];
	 *
	 *   Ping.prototype.send = function() {
	 *     return this.$http.get('/ping');
	 *   };
	 *   $provide.service('ping', Ping);
	 * ```
	 * You would then inject and use this service like this:
	 * ```js
	 *   someModule.controller('Ctrl', ['ping', function(ping) {
	 *     ping.send();
	 *   }]);
	 * ```
	 *//**
	 * @ngdoc method
	 * @name $provide#value
	 * @description
	 *
	 * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a
	 * number, an array, an object or a function. This is short for registering a service where its
	 * provider's `$get` property is a factory function that takes no arguments and returns the **value
	 * service**. That also means it is not possible to inject other services into a value service.
	 *
	 * Value services are similar to constant services, except that they cannot be injected into a
	 * module configuration function (see {@link angular.Module#config}) but they can be overridden by
	 * an AngularJS {@link auto.$provide#decorator decorator}.
	 *
	 * @param {string} name The name of the instance.
	 * @param {*} value The value.
	 * @returns {Object} registered provider instance
	 *
	 * @example
	 * Here are some examples of creating value services.
	 * ```js
	 *   $provide.value('ADMIN_USER', 'admin');
	 *
	 *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });
	 *
	 *   $provide.value('halfOf', function(value) {
	 *     return value / 2;
	 *   });
	 * ```
	 *//**
	 * @ngdoc method
	 * @name $provide#constant
	 * @description
	 *
	 * Register a **constant service** with the {@link auto.$injector $injector}, such as a string,
	 * a number, an array, an object or a function. Like the {@link auto.$provide#value value}, it is not
	 * possible to inject other services into a constant.
	 *
	 * But unlike {@link auto.$provide#value value}, a constant can be
	 * injected into a module configuration function (see {@link angular.Module#config}) and it cannot
	 * be overridden by an AngularJS {@link auto.$provide#decorator decorator}.
	 *
	 * @param {string} name The name of the constant.
	 * @param {*} value The constant value.
	 * @returns {Object} registered instance
	 *
	 * @example
	 * Here a some examples of creating constants:
	 * ```js
	 *   $provide.constant('SHARD_HEIGHT', 306);
	 *
	 *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);
	 *
	 *   $provide.constant('double', function(value) {
	 *     return value * 2;
	 *   });
	 * ```
	 *//**
	 * @ngdoc method
	 * @name $provide#decorator
	 * @description
	 *
	 * Register a **decorator function** with the {@link auto.$injector $injector}. A decorator function
	 * intercepts the creation of a service, allowing it to override or modify the behavior of the
	 * service. The return value of the decorator function may be the original service, or a new service
	 * that replaces (or wraps and delegates to) the original service.
	 *
	 * You can find out more about using decorators in the {@link guide/decorators} guide.
	 *
	 * @param {string} name The name of the service to decorate.
	 * @param {Function|Array.<string|Function>} decorator This function will be invoked when the service needs to be
	 *    provided and should return the decorated service instance. The function is called using
	 *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.
	 *    Local injection arguments:
	 *
	 *    * `$delegate` - The original service instance, which can be replaced, monkey patched, configured,
	 *      decorated or delegated to.
	 *
	 * @example
	 * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting
	 * calls to {@link ng.$log#error $log.warn()}.
	 * ```js
	 *   $provide.decorator('$log', ['$delegate', function($delegate) {
	 *     $delegate.warn = $delegate.error;
	 *     return $delegate;
	 *   }]);
	 * ```
	 */function createInjector(modulesToLoad,strictDi){strictDi=strictDi===true;var INSTANTIATING={},providerSuffix='Provider',path=[],loadedModules=new NgMap(),providerCache={$provide:{provider:supportObject(provider),factory:supportObject(factory),service:supportObject(service),value:supportObject(value),constant:supportObject(constant),decorator:decorator}},providerInjector=providerCache.$injector=createInternalInjector(providerCache,function(serviceName,caller){if(angular.isString(caller)){path.push(caller);}throw $injectorMinErr('unpr','Unknown provider: {0}',path.join(' <- '));}),instanceCache={},protoInstanceInjector=createInternalInjector(instanceCache,function(serviceName,caller){var provider=providerInjector.get(serviceName+providerSuffix,caller);return instanceInjector.invoke(provider.$get,provider,undefined,serviceName);}),instanceInjector=protoInstanceInjector;providerCache['$injector'+providerSuffix]={$get:valueFn(protoInstanceInjector)};instanceInjector.modules=providerInjector.modules=createMap();var runBlocks=loadModules(modulesToLoad);instanceInjector=protoInstanceInjector.get('$injector');instanceInjector.strictDi=strictDi;forEach(runBlocks,function(fn){if(fn)instanceInjector.invoke(fn);});instanceInjector.loadNewModules=function(mods){forEach(loadModules(mods),function(fn){if(fn)instanceInjector.invoke(fn);});};return instanceInjector;////////////////////////////////////
	// $provider
	////////////////////////////////////
	function supportObject(delegate){return function(key,value){if(isObject(key)){forEach(key,reverseParams(delegate));}else{return delegate(key,value);}};}function provider(name,provider_){assertNotHasOwnProperty(name,'service');if(isFunction(provider_)||isArray(provider_)){provider_=providerInjector.instantiate(provider_);}if(!provider_.$get){throw $injectorMinErr('pget','Provider \'{0}\' must define $get factory method.',name);}return providerCache[name+providerSuffix]=provider_;}function enforceReturnValue(name,factory){return(/** @this */function enforcedReturnValue(){var result=instanceInjector.invoke(factory,this);if(isUndefined(result)){throw $injectorMinErr('undef','Provider \'{0}\' must return a value from $get factory method.',name);}return result;});}function factory(name,factoryFn,enforce){return provider(name,{$get:enforce!==false?enforceReturnValue(name,factoryFn):factoryFn});}function service(name,constructor){return factory(name,['$injector',function($injector){return $injector.instantiate(constructor);}]);}function value(name,val){return factory(name,valueFn(val),false);}function constant(name,value){assertNotHasOwnProperty(name,'constant');providerCache[name]=value;instanceCache[name]=value;}function decorator(serviceName,decorFn){var origProvider=providerInjector.get(serviceName+providerSuffix),orig$get=origProvider.$get;origProvider.$get=function(){var origInstance=instanceInjector.invoke(orig$get,origProvider);return instanceInjector.invoke(decorFn,null,{$delegate:origInstance});};}////////////////////////////////////
	// Module Loading
	////////////////////////////////////
	function loadModules(modulesToLoad){assertArg(isUndefined(modulesToLoad)||isArray(modulesToLoad),'modulesToLoad','not an array');var runBlocks=[],moduleFn;forEach(modulesToLoad,function(module){if(loadedModules.get(module))return;loadedModules.set(module,true);function runInvokeQueue(queue){var i,ii;for(i=0,ii=queue.length;i<ii;i++){var invokeArgs=queue[i],provider=providerInjector.get(invokeArgs[0]);provider[invokeArgs[1]].apply(provider,invokeArgs[2]);}}try{if(isString(module)){moduleFn=angularModule(module);instanceInjector.modules[module]=moduleFn;runBlocks=runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);runInvokeQueue(moduleFn._invokeQueue);runInvokeQueue(moduleFn._configBlocks);}else if(isFunction(module)){runBlocks.push(providerInjector.invoke(module));}else if(isArray(module)){runBlocks.push(providerInjector.invoke(module));}else{assertArgFn(module,'module');}}catch(e){if(isArray(module)){module=module[module.length-1];}if(e.message&&e.stack&&e.stack.indexOf(e.message)===-1){// Safari & FF's stack traces don't contain error.message content
	// unlike those of Chrome and IE
	// So if stack doesn't contain message, we create a new string that contains both.
	// Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.
	// eslint-disable-next-line no-ex-assign
	e=e.message+'\n'+e.stack;}throw $injectorMinErr('modulerr','Failed to instantiate module {0} due to:\n{1}',module,e.stack||e.message||e);}});return runBlocks;}////////////////////////////////////
	// internal Injector
	////////////////////////////////////
	function createInternalInjector(cache,factory){function getService(serviceName,caller){if(cache.hasOwnProperty(serviceName)){if(cache[serviceName]===INSTANTIATING){throw $injectorMinErr('cdep','Circular dependency found: {0}',serviceName+' <- '+path.join(' <- '));}return cache[serviceName];}else{try{path.unshift(serviceName);cache[serviceName]=INSTANTIATING;cache[serviceName]=factory(serviceName,caller);return cache[serviceName];}catch(err){if(cache[serviceName]===INSTANTIATING){delete cache[serviceName];}throw err;}finally{path.shift();}}}function injectionArgs(fn,locals,serviceName){var args=[],$inject=createInjector.$$annotate(fn,strictDi,serviceName);for(var i=0,length=$inject.length;i<length;i++){var key=$inject[i];if(typeof key!=='string'){throw $injectorMinErr('itkn','Incorrect injection token! Expected service name as string, got {0}',key);}args.push(locals&&locals.hasOwnProperty(key)?locals[key]:getService(key,serviceName));}return args;}function isClass(func){// Support: IE 9-11 only
	// IE 9-11 do not support classes and IE9 leaks with the code below.
	if(msie||typeof func!=='function'){return false;}var result=func.$$ngIsClass;if(!isBoolean(result)){result=func.$$ngIsClass=/^class\b/.test(stringifyFn(func));}return result;}function invoke(fn,self,locals,serviceName){if(typeof locals==='string'){serviceName=locals;locals=null;}var args=injectionArgs(fn,locals,serviceName);if(isArray(fn)){fn=fn[fn.length-1];}if(!isClass(fn)){// http://jsperf.com/angularjs-invoke-apply-vs-switch
	// #5388
	return fn.apply(self,args);}else{args.unshift(null);return new(Function.prototype.bind.apply(fn,args))();}}function instantiate(Type,locals,serviceName){// Check if Type is annotated and use just the given function at n-1 as parameter
	// e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);
	var ctor=isArray(Type)?Type[Type.length-1]:Type;var args=injectionArgs(Type,locals,serviceName);// Empty object at position 0 is ignored for invocation with `new`, but required.
	args.unshift(null);return new(Function.prototype.bind.apply(ctor,args))();}return{invoke:invoke,instantiate:instantiate,get:getService,annotate:createInjector.$$annotate,has:function has(name){return providerCache.hasOwnProperty(name+providerSuffix)||cache.hasOwnProperty(name);}};}}createInjector.$$annotate=annotate;/**
	 * @ngdoc provider
	 * @name $anchorScrollProvider
	 * @this
	 *
	 * @description
	 * Use `$anchorScrollProvider` to disable automatic scrolling whenever
	 * {@link ng.$location#hash $location.hash()} changes.
	 */function $AnchorScrollProvider(){var autoScrollingEnabled=true;/**
	   * @ngdoc method
	   * @name $anchorScrollProvider#disableAutoScrolling
	   *
	   * @description
	   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to
	   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />
	   * Use this method to disable automatic scrolling.
	   *
	   * If automatic scrolling is disabled, one must explicitly call
	   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the
	   * current hash.
	   */this.disableAutoScrolling=function(){autoScrollingEnabled=false;};/**
	   * @ngdoc service
	   * @name $anchorScroll
	   * @kind function
	   * @requires $window
	   * @requires $location
	   * @requires $rootScope
	   *
	   * @description
	   * When called, it scrolls to the element related to the specified `hash` or (if omitted) to the
	   * current value of {@link ng.$location#hash $location.hash()}, according to the rules specified
	   * in the
	   * [HTML5 spec](http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document).
	   *
	   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to
	   * match any anchor whenever it changes. This can be disabled by calling
	   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.
	   *
	   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a
	   * vertical scroll-offset (either fixed or dynamic).
	   *
	   * @param {string=} hash The hash specifying the element to scroll to. If omitted, the value of
	   *                       {@link ng.$location#hash $location.hash()} will be used.
	   *
	   * @property {(number|function|jqLite)} yOffset
	   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed
	   * positioned elements at the top of the page, such as navbars, headers etc.
	   *
	   * `yOffset` can be specified in various ways:
	   * - **number**: A fixed number of pixels to be used as offset.<br /><br />
	   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return
	   *   a number representing the offset (in pixels).<br /><br />
	   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from
	   *   the top of the page to the element's bottom will be used as offset.<br />
	   *   **Note**: The element will be taken into account only as long as its `position` is set to
	   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust
	   *   their height and/or positioning according to the viewport's size.
	   *
	   * <br />
	   * <div class="alert alert-warning">
	   * In order for `yOffset` to work properly, scrolling should take place on the document's root and
	   * not some child element.
	   * </div>
	   *
	   * @example
	     <example module="anchorScrollExample" name="anchor-scroll">
	       <file name="index.html">
	         <div id="scrollArea" ng-controller="ScrollController">
	           <a ng-click="gotoBottom()">Go to bottom</a>
	           <a id="bottom"></a> You're at the bottom!
	         </div>
	       </file>
	       <file name="script.js">
	         angular.module('anchorScrollExample', [])
	           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',
	             function($scope, $location, $anchorScroll) {
	               $scope.gotoBottom = function() {
	                 // set the location.hash to the id of
	                 // the element you wish to scroll to.
	                 $location.hash('bottom');

	                 // call $anchorScroll()
	                 $anchorScroll();
	               };
	             }]);
	       </file>
	       <file name="style.css">
	         #scrollArea {
	           height: 280px;
	           overflow: auto;
	         }

	         #bottom {
	           display: block;
	           margin-top: 2000px;
	         }
	       </file>
	     </example>
	   *
	   * <hr />
	   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).
	   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.
	   *
	   * @example
	     <example module="anchorScrollOffsetExample" name="anchor-scroll-offset">
	       <file name="index.html">
	         <div class="fixed-header" ng-controller="headerCtrl">
	           <a href="" ng-click="gotoAnchor(x)" ng-repeat="x in [1,2,3,4,5]">
	             Go to anchor {{x}}
	           </a>
	         </div>
	         <div id="anchor{{x}}" class="anchor" ng-repeat="x in [1,2,3,4,5]">
	           Anchor {{x}} of 5
	         </div>
	       </file>
	       <file name="script.js">
	         angular.module('anchorScrollOffsetExample', [])
	           .run(['$anchorScroll', function($anchorScroll) {
	             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels
	           }])
	           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',
	             function($anchorScroll, $location, $scope) {
	               $scope.gotoAnchor = function(x) {
	                 var newHash = 'anchor' + x;
	                 if ($location.hash() !== newHash) {
	                   // set the $location.hash to `newHash` and
	                   // $anchorScroll will automatically scroll to it
	                   $location.hash('anchor' + x);
	                 } else {
	                   // call $anchorScroll() explicitly,
	                   // since $location.hash hasn't changed
	                   $anchorScroll();
	                 }
	               };
	             }
	           ]);
	       </file>
	       <file name="style.css">
	         body {
	           padding-top: 50px;
	         }

	         .anchor {
	           border: 2px dashed DarkOrchid;
	           padding: 10px 10px 200px 10px;
	         }

	         .fixed-header {
	           background-color: rgba(0, 0, 0, 0.2);
	           height: 50px;
	           position: fixed;
	           top: 0; left: 0; right: 0;
	         }

	         .fixed-header > a {
	           display: inline-block;
	           margin: 5px 15px;
	         }
	       </file>
	     </example>
	   */this.$get=['$window','$location','$rootScope',function($window,$location,$rootScope){var document=$window.document;// Helper function to get first anchor from a NodeList
	// (using `Array#some()` instead of `angular#forEach()` since it's more performant
	//  and working in all supported browsers.)
	function getFirstAnchor(list){var result=null;Array.prototype.some.call(list,function(element){if(nodeName_(element)==='a'){result=element;return true;}});return result;}function getYOffset(){var offset=scroll.yOffset;if(isFunction(offset)){offset=offset();}else if(isElement(offset)){var elem=offset[0];var style=$window.getComputedStyle(elem);if(style.position!=='fixed'){offset=0;}else{offset=elem.getBoundingClientRect().bottom;}}else if(!isNumber(offset)){offset=0;}return offset;}function scrollTo(elem){if(elem){elem.scrollIntoView();var offset=getYOffset();if(offset){// `offset` is the number of pixels we should scroll UP in order to align `elem` properly.
	// This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the
	// top of the viewport.
	//
	// IF the number of pixels from the top of `elem` to the end of the page's content is less
	// than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some
	// way down the page.
	//
	// This is often the case for elements near the bottom of the page.
	//
	// In such cases we do not need to scroll the whole `offset` up, just the difference between
	// the top of the element and the offset, which is enough to align the top of `elem` at the
	// desired position.
	var elemTop=elem.getBoundingClientRect().top;$window.scrollBy(0,elemTop-offset);}}else{$window.scrollTo(0,0);}}function scroll(hash){// Allow numeric hashes
	hash=isString(hash)?hash:isNumber(hash)?hash.toString():$location.hash();var elm;// empty hash, scroll to the top of the page
	if(!hash)scrollTo(null);// element with given id
	else if(elm=document.getElementById(hash))scrollTo(elm);// first anchor with given name :-D
	else if(elm=getFirstAnchor(document.getElementsByName(hash)))scrollTo(elm);// no element and hash === 'top', scroll to the top of the page
	else if(hash==='top')scrollTo(null);}// does not scroll when user clicks on anchor link that is currently on
	// (no url change, no $location.hash() change), browser native does scroll
	if(autoScrollingEnabled){$rootScope.$watch(function autoScrollWatch(){return $location.hash();},function autoScrollWatchAction(newVal,oldVal){// skip the initial scroll if $location.hash is empty
	if(newVal===oldVal&&newVal==='')return;jqLiteDocumentLoaded(function(){$rootScope.$evalAsync(scroll);});});}return scroll;}];}var $animateMinErr=minErr('$animate');var ELEMENT_NODE=1;var NG_ANIMATE_CLASSNAME='ng-animate';function mergeClasses(a,b){if(!a&&!b)return'';if(!a)return b;if(!b)return a;if(isArray(a))a=a.join(' ');if(isArray(b))b=b.join(' ');return a+' '+b;}function extractElementNode(element){for(var i=0;i<element.length;i++){var elm=element[i];if(elm.nodeType===ELEMENT_NODE){return elm;}}}function splitClasses(classes){if(isString(classes)){classes=classes.split(' ');}// Use createMap() to prevent class assumptions involving property names in
	// Object.prototype
	var obj=createMap();forEach(classes,function(klass){// sometimes the split leaves empty string values
	// incase extra spaces were applied to the options
	if(klass.length){obj[klass]=true;}});return obj;}// if any other type of options value besides an Object value is
	// passed into the $animate.method() animation then this helper code
	// will be run which will ignore it. While this patch is not the
	// greatest solution to this, a lot of existing plugins depend on
	// $animate to either call the callback (< 1.2) or return a promise
	// that can be changed. This helper function ensures that the options
	// are wiped clean incase a callback function is provided.
	function prepareAnimateOptions(options){return isObject(options)?options:{};}var $$CoreAnimateJsProvider=/** @this */function $$CoreAnimateJsProvider(){this.$get=noop;};// this is prefixed with Core since it conflicts with
	// the animateQueueProvider defined in ngAnimate/animateQueue.js
	var $$CoreAnimateQueueProvider=/** @this */function $$CoreAnimateQueueProvider(){var postDigestQueue=new NgMap();var postDigestElements=[];this.$get=['$$AnimateRunner','$rootScope',function($$AnimateRunner,$rootScope){return{enabled:noop,on:noop,off:noop,pin:noop,push:function push(element,event,options,domOperation){if(domOperation){domOperation();}options=options||{};if(options.from){element.css(options.from);}if(options.to){element.css(options.to);}if(options.addClass||options.removeClass){addRemoveClassesPostDigest(element,options.addClass,options.removeClass);}var runner=new $$AnimateRunner();// since there are no animations to run the runner needs to be
	// notified that the animation call is complete.
	runner.complete();return runner;}};function updateData(data,classes,value){var changed=false;if(classes){classes=isString(classes)?classes.split(' '):isArray(classes)?classes:[];forEach(classes,function(className){if(className){changed=true;data[className]=value;}});}return changed;}function handleCSSClassChanges(){forEach(postDigestElements,function(element){var data=postDigestQueue.get(element);if(data){var existing=splitClasses(element.attr('class'));var toAdd='';var toRemove='';forEach(data,function(status,className){var hasClass=!!existing[className];if(status!==hasClass){if(status){toAdd+=(toAdd.length?' ':'')+className;}else{toRemove+=(toRemove.length?' ':'')+className;}}});forEach(element,function(elm){if(toAdd){jqLiteAddClass(elm,toAdd);}if(toRemove){jqLiteRemoveClass(elm,toRemove);}});postDigestQueue.delete(element);}});postDigestElements.length=0;}function addRemoveClassesPostDigest(element,add,remove){var data=postDigestQueue.get(element)||{};var classesAdded=updateData(data,add,true);var classesRemoved=updateData(data,remove,false);if(classesAdded||classesRemoved){postDigestQueue.set(element,data);postDigestElements.push(element);if(postDigestElements.length===1){$rootScope.$$postDigest(handleCSSClassChanges);}}}}];};/**
	 * @ngdoc provider
	 * @name $animateProvider
	 *
	 * @description
	 * Default implementation of $animate that doesn't perform any animations, instead just
	 * synchronously performs DOM updates and resolves the returned runner promise.
	 *
	 * In order to enable animations the `ngAnimate` module has to be loaded.
	 *
	 * To see the functional implementation check out `src/ngAnimate/animate.js`.
	 */var $AnimateProvider=['$provide',/** @this */function($provide){var provider=this;var classNameFilter=null;var customFilter=null;this.$$registeredAnimations=Object.create(null);/**
	   * @ngdoc method
	   * @name $animateProvider#register
	   *
	   * @description
	   * Registers a new injectable animation factory function. The factory function produces the
	   * animation object which contains callback functions for each event that is expected to be
	   * animated.
	   *
	   *   * `eventFn`: `function(element, ... , doneFunction, options)`
	   *   The element to animate, the `doneFunction` and the options fed into the animation. Depending
	   *   on the type of animation additional arguments will be injected into the animation function. The
	   *   list below explains the function signatures for the different animation methods:
	   *
	   *   - setClass: function(element, addedClasses, removedClasses, doneFunction, options)
	   *   - addClass: function(element, addedClasses, doneFunction, options)
	   *   - removeClass: function(element, removedClasses, doneFunction, options)
	   *   - enter, leave, move: function(element, doneFunction, options)
	   *   - animate: function(element, fromStyles, toStyles, doneFunction, options)
	   *
	   *   Make sure to trigger the `doneFunction` once the animation is fully complete.
	   *
	   * ```js
	   *   return {
	   *     //enter, leave, move signature
	   *     eventFn : function(element, done, options) {
	   *       //code to run the animation
	   *       //once complete, then run done()
	   *       return function endFunction(wasCancelled) {
	   *         //code to cancel the animation
	   *       }
	   *     }
	   *   }
	   * ```
	   *
	   * @param {string} name The name of the animation (this is what the class-based CSS value will be compared to).
	   * @param {Function} factory The factory function that will be executed to return the animation
	   *                           object.
	   */this.register=function(name,factory){if(name&&name.charAt(0)!=='.'){throw $animateMinErr('notcsel','Expecting class selector starting with \'.\' got \'{0}\'.',name);}var key=name+'-animation';provider.$$registeredAnimations[name.substr(1)]=key;$provide.factory(key,factory);};/**
	   * @ngdoc method
	   * @name $animateProvider#customFilter
	   *
	   * @description
	   * Sets and/or returns the custom filter function that is used to "filter" animations, i.e.
	   * determine if an animation is allowed or not. When no filter is specified (the default), no
	   * animation will be blocked. Setting the `customFilter` value will only allow animations for
	   * which the filter function's return value is truthy.
	   *
	   * This allows to easily create arbitrarily complex rules for filtering animations, such as
	   * allowing specific events only, or enabling animations on specific subtrees of the DOM, etc.
	   * Filtering animations can also boost performance for low-powered devices, as well as
	   * applications containing a lot of structural operations.
	   *
	   * <div class="alert alert-success">
	   *   **Best Practice:**
	   *   Keep the filtering function as lean as possible, because it will be called for each DOM
	   *   action (e.g. insertion, removal, class change) performed by "animation-aware" directives.
	   *   See {@link guide/animations#which-directives-support-animations- here} for a list of built-in
	   *   directives that support animations.
	   *   Performing computationally expensive or time-consuming operations on each call of the
	   *   filtering function can make your animations sluggish.
	   * </div>
	   *
	   * **Note:** If present, `customFilter` will be checked before
	   * {@link $animateProvider#classNameFilter classNameFilter}.
	   *
	   * @param {Function=} filterFn - The filter function which will be used to filter all animations.
	   *   If a falsy value is returned, no animation will be performed. The function will be called
	   *   with the following arguments:
	   *   - **node** `{DOMElement}` - The DOM element to be animated.
	   *   - **event** `{String}` - The name of the animation event (e.g. `enter`, `leave`, `addClass`
	   *     etc).
	   *   - **options** `{Object}` - A collection of options/styles used for the animation.
	   * @return {Function} The current filter function or `null` if there is none set.
	   */this.customFilter=function(filterFn){if(arguments.length===1){customFilter=isFunction(filterFn)?filterFn:null;}return customFilter;};/**
	   * @ngdoc method
	   * @name $animateProvider#classNameFilter
	   *
	   * @description
	   * Sets and/or returns the CSS class regular expression that is checked when performing
	   * an animation. Upon bootstrap the classNameFilter value is not set at all and will
	   * therefore enable $animate to attempt to perform an animation on any element that is triggered.
	   * When setting the `classNameFilter` value, animations will only be performed on elements
	   * that successfully match the filter expression. This in turn can boost performance
	   * for low-powered devices as well as applications containing a lot of structural operations.
	   *
	   * **Note:** If present, `classNameFilter` will be checked after
	   * {@link $animateProvider#customFilter customFilter}. If `customFilter` is present and returns
	   * false, `classNameFilter` will not be checked.
	   *
	   * @param {RegExp=} expression The className expression which will be checked against all animations
	   * @return {RegExp} The current CSS className expression value. If null then there is no expression value
	   */this.classNameFilter=function(expression){if(arguments.length===1){classNameFilter=expression instanceof RegExp?expression:null;if(classNameFilter){var reservedRegex=new RegExp('[(\\s|\\/)]'+NG_ANIMATE_CLASSNAME+'[(\\s|\\/)]');if(reservedRegex.test(classNameFilter.toString())){classNameFilter=null;throw $animateMinErr('nongcls','$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.',NG_ANIMATE_CLASSNAME);}}}return classNameFilter;};this.$get=['$$animateQueue',function($$animateQueue){function domInsert(element,parentElement,afterElement){// if for some reason the previous element was removed
	// from the dom sometime before this code runs then let's
	// just stick to using the parent element as the anchor
	if(afterElement){var afterNode=extractElementNode(afterElement);if(afterNode&&!afterNode.parentNode&&!afterNode.previousElementSibling){afterElement=null;}}if(afterElement){afterElement.after(element);}else{parentElement.prepend(element);}}/**
	     * @ngdoc service
	     * @name $animate
	     * @description The $animate service exposes a series of DOM utility methods that provide support
	     * for animation hooks. The default behavior is the application of DOM operations, however,
	     * when an animation is detected (and animations are enabled), $animate will do the heavy lifting
	     * to ensure that animation runs with the triggered DOM operation.
	     *
	     * By default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't
	     * included and only when it is active then the animation hooks that `$animate` triggers will be
	     * functional. Once active then all structural `ng-` directives will trigger animations as they perform
	     * their DOM-related operations (enter, leave and move). Other directives such as `ngClass`,
	     * `ngShow`, `ngHide` and `ngMessages` also provide support for animations.
	     *
	     * It is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.
	     *
	     * To learn more about enabling animation support, click here to visit the
	     * {@link ngAnimate ngAnimate module page}.
	     */return{// we don't call it directly since non-existant arguments may
	// be interpreted as null within the sub enabled function
	/**
	       *
	       * @ngdoc method
	       * @name $animate#on
	       * @kind function
	       * @description Sets up an event listener to fire whenever the animation event (enter, leave, move, etc...)
	       *    has fired on the given element or among any of its children. Once the listener is fired, the provided callback
	       *    is fired with the following params:
	       *
	       * ```js
	       * $animate.on('enter', container,
	       *    function callback(element, phase) {
	       *      // cool we detected an enter animation within the container
	       *    }
	       * );
	       * ```
	       *
	       * <div class="alert alert-warning">
	       * **Note**: Generally, the events that are fired correspond 1:1 to `$animate` method names,
	       * e.g. {@link ng.$animate#addClass addClass()} will fire `addClass`, and {@link ng.ngClass}
	       * will fire `addClass` if classes are added, and `removeClass` if classes are removed.
	       * However, there are two exceptions:
	       *
	       * <ul>
	       *   <li>if both an {@link ng.$animate#addClass addClass()} and a
	       *   {@link ng.$animate#removeClass removeClass()} action are performed during the same
	       *   animation, the event fired will be `setClass`. This is true even for `ngClass`.</li>
	       *   <li>an {@link ng.$animate#animate animate()} call that adds and removes classes will fire
	       *   the `setClass` event, but if it either removes or adds classes,
	       *   it will fire `animate` instead.</li>
	       * </ul>
	       *
	       * </div>
	       *
	       * @param {string} event the animation event that will be captured (e.g. enter, leave, move, addClass, removeClass, etc...)
	       * @param {DOMElement} container the container element that will capture each of the animation events that are fired on itself
	       *     as well as among its children
	       * @param {Function} callback the callback function that will be fired when the listener is triggered.
	       *
	       * The arguments present in the callback function are:
	       * * `element` - The captured DOM element that the animation was fired on.
	       * * `phase` - The phase of the animation. The two possible phases are **start** (when the animation starts) and **close** (when it ends).
	       * * `data` - an object with these properties:
	       *     * addClass - `{string|null}` - space-separated CSS classes to add to the element
	       *     * removeClass - `{string|null}` - space-separated CSS classes to remove from the element
	       *     * from - `{Object|null}` - CSS properties & values at the beginning of the animation
	       *     * to - `{Object|null}` - CSS properties & values at the end of the animation
	       *
	       * Note that the callback does not trigger a scope digest. Wrap your call into a
	       * {@link $rootScope.Scope#$apply scope.$apply} to propagate changes to the scope.
	       */on:$$animateQueue.on,/**
	       *
	       * @ngdoc method
	       * @name $animate#off
	       * @kind function
	       * @description Deregisters an event listener based on the event which has been associated with the provided element. This method
	       * can be used in three different ways depending on the arguments:
	       *
	       * ```js
	       * // remove all the animation event listeners listening for `enter`
	       * $animate.off('enter');
	       *
	       * // remove listeners for all animation events from the container element
	       * $animate.off(container);
	       *
	       * // remove all the animation event listeners listening for `enter` on the given element and its children
	       * $animate.off('enter', container);
	       *
	       * // remove the event listener function provided by `callback` that is set
	       * // to listen for `enter` on the given `container` as well as its children
	       * $animate.off('enter', container, callback);
	       * ```
	       *
	       * @param {string|DOMElement} event|container the animation event (e.g. enter, leave, move,
	       * addClass, removeClass, etc...), or the container element. If it is the element, all other
	       * arguments are ignored.
	       * @param {DOMElement=} container the container element the event listener was placed on
	       * @param {Function=} callback the callback function that was registered as the listener
	       */off:$$animateQueue.off,/**
	       * @ngdoc method
	       * @name $animate#pin
	       * @kind function
	       * @description Associates the provided element with a host parent element to allow the element to be animated even if it exists
	       *    outside of the DOM structure of the AngularJS application. By doing so, any animation triggered via `$animate` can be issued on the
	       *    element despite being outside the realm of the application or within another application. Say for example if the application
	       *    was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated
	       *    as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind
	       *    that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.
	       *
	       *    Note that this feature is only active when the `ngAnimate` module is used.
	       *
	       * @param {DOMElement} element the external element that will be pinned
	       * @param {DOMElement} parentElement the host parent element that will be associated with the external element
	       */pin:$$animateQueue.pin,/**
	       *
	       * @ngdoc method
	       * @name $animate#enabled
	       * @kind function
	       * @description Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This
	       * function can be called in four ways:
	       *
	       * ```js
	       * // returns true or false
	       * $animate.enabled();
	       *
	       * // changes the enabled state for all animations
	       * $animate.enabled(false);
	       * $animate.enabled(true);
	       *
	       * // returns true or false if animations are enabled for an element
	       * $animate.enabled(element);
	       *
	       * // changes the enabled state for an element and its children
	       * $animate.enabled(element, true);
	       * $animate.enabled(element, false);
	       * ```
	       *
	       * @param {DOMElement=} element the element that will be considered for checking/setting the enabled state
	       * @param {boolean=} enabled whether or not the animations will be enabled for the element
	       *
	       * @return {boolean} whether or not animations are enabled
	       */enabled:$$animateQueue.enabled,/**
	       * @ngdoc method
	       * @name $animate#cancel
	       * @kind function
	       * @description Cancels the provided animation and applies the end state of the animation.
	       * Note that this does not cancel the underlying operation, e.g. the setting of classes or
	       * adding the element to the DOM.
	       *
	       * @param {animationRunner} animationRunner An animation runner returned by an $animate function.
	       *
	       * @example
	        <example module="animationExample" deps="angular-animate.js" animations="true" name="animate-cancel">
	          <file name="app.js">
	            angular.module('animationExample', ['ngAnimate']).component('cancelExample', {
	              templateUrl: 'template.html',
	              controller: function($element, $animate) {
	                this.runner = null;

	                this.addClass = function() {
	                  this.runner = $animate.addClass($element.find('div'), 'red');
	                  var ctrl = this;
	                  this.runner.finally(function() {
	                    ctrl.runner = null;
	                  });
	                };

	                this.removeClass = function() {
	                  this.runner = $animate.removeClass($element.find('div'), 'red');
	                  var ctrl = this;
	                  this.runner.finally(function() {
	                    ctrl.runner = null;
	                  });
	                };

	                this.cancel = function() {
	                  $animate.cancel(this.runner);
	                };
	              }
	            });
	          </file>
	          <file name="template.html">
	            <p>
	              <button id="add" ng-click="$ctrl.addClass()">Add</button>
	              <button ng-click="$ctrl.removeClass()">Remove</button>
	              <br>
	              <button id="cancel" ng-click="$ctrl.cancel()" ng-disabled="!$ctrl.runner">Cancel</button>
	              <br>
	              <div id="target">CSS-Animated Text</div>
	            </p>
	          </file>
	          <file name="index.html">
	            <cancel-example></cancel-example>
	          </file>
	          <file name="style.css">
	            .red-add, .red-remove {
	              transition: all 4s cubic-bezier(0.250, 0.460, 0.450, 0.940);
	            }

	            .red,
	            .red-add.red-add-active {
	              color: #FF0000;
	              font-size: 40px;
	            }

	            .red-remove.red-remove-active {
	              font-size: 10px;
	              color: black;
	            }

	          </file>
	        </example>
	       */cancel:function cancel(runner){if(runner.cancel){runner.cancel();}},/**
	       *
	       * @ngdoc method
	       * @name $animate#enter
	       * @kind function
	       * @description Inserts the element into the DOM either after the `after` element (if provided) or
	       *   as the first child within the `parent` element and then triggers an animation.
	       *   A promise is returned that will be resolved during the next digest once the animation
	       *   has completed.
	       *
	       * @param {DOMElement} element the element which will be inserted into the DOM
	       * @param {DOMElement} parent the parent element which will append the element as
	       *   a child (so long as the after element is not present)
	       * @param {DOMElement=} after the sibling element after which the element will be appended
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */enter:function enter(element,parent,after,options){parent=parent&&jqLite(parent);after=after&&jqLite(after);parent=parent||after.parent();domInsert(element,parent,after);return $$animateQueue.push(element,'enter',prepareAnimateOptions(options));},/**
	       *
	       * @ngdoc method
	       * @name $animate#move
	       * @kind function
	       * @description Inserts (moves) the element into its new position in the DOM either after
	       *   the `after` element (if provided) or as the first child within the `parent` element
	       *   and then triggers an animation. A promise is returned that will be resolved
	       *   during the next digest once the animation has completed.
	       *
	       * @param {DOMElement} element the element which will be moved into the new DOM position
	       * @param {DOMElement} parent the parent element which will append the element as
	       *   a child (so long as the after element is not present)
	       * @param {DOMElement=} after the sibling element after which the element will be appended
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */move:function move(element,parent,after,options){parent=parent&&jqLite(parent);after=after&&jqLite(after);parent=parent||after.parent();domInsert(element,parent,after);return $$animateQueue.push(element,'move',prepareAnimateOptions(options));},/**
	       * @ngdoc method
	       * @name $animate#leave
	       * @kind function
	       * @description Triggers an animation and then removes the element from the DOM.
	       * When the function is called a promise is returned that will be resolved during the next
	       * digest once the animation has completed.
	       *
	       * @param {DOMElement} element the element which will be removed from the DOM
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */leave:function leave(element,options){return $$animateQueue.push(element,'leave',prepareAnimateOptions(options),function(){element.remove();});},/**
	       * @ngdoc method
	       * @name $animate#addClass
	       * @kind function
	       *
	       * @description Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon
	       *   execution, the addClass operation will only be handled after the next digest and it will not trigger an
	       *   animation if element already contains the CSS class or if the class is removed at a later step.
	       *   Note that class-based animations are treated differently compared to structural animations
	       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
	       *   depending if CSS or JavaScript animations are used.
	       *
	       * @param {DOMElement} element the element which the CSS classes will be applied to
	       * @param {string} className the CSS class(es) that will be added (multiple classes are separated via spaces)
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} animationRunner the animation runner
	       */addClass:function addClass(element,className,options){options=prepareAnimateOptions(options);options.addClass=mergeClasses(options.addclass,className);return $$animateQueue.push(element,'addClass',options);},/**
	       * @ngdoc method
	       * @name $animate#removeClass
	       * @kind function
	       *
	       * @description Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon
	       *   execution, the removeClass operation will only be handled after the next digest and it will not trigger an
	       *   animation if element does not contain the CSS class or if the class is added at a later step.
	       *   Note that class-based animations are treated differently compared to structural animations
	       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
	       *   depending if CSS or JavaScript animations are used.
	       *
	       * @param {DOMElement} element the element which the CSS classes will be applied to
	       * @param {string} className the CSS class(es) that will be removed (multiple classes are separated via spaces)
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */removeClass:function removeClass(element,className,options){options=prepareAnimateOptions(options);options.removeClass=mergeClasses(options.removeClass,className);return $$animateQueue.push(element,'removeClass',options);},/**
	       * @ngdoc method
	       * @name $animate#setClass
	       * @kind function
	       *
	       * @description Performs both the addition and removal of a CSS classes on an element and (during the process)
	       *    triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and
	       *    `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has
	       *    passed. Note that class-based animations are treated differently compared to structural animations
	       *    (like enter, move and leave) since the CSS classes may be added/removed at different points
	       *    depending if CSS or JavaScript animations are used.
	       *
	       * @param {DOMElement} element the element which the CSS classes will be applied to
	       * @param {string} add the CSS class(es) that will be added (multiple classes are separated via spaces)
	       * @param {string} remove the CSS class(es) that will be removed (multiple classes are separated via spaces)
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */setClass:function setClass(element,add,remove,options){options=prepareAnimateOptions(options);options.addClass=mergeClasses(options.addClass,add);options.removeClass=mergeClasses(options.removeClass,remove);return $$animateQueue.push(element,'setClass',options);},/**
	       * @ngdoc method
	       * @name $animate#animate
	       * @kind function
	       *
	       * @description Performs an inline animation on the element which applies the provided to and from CSS styles to the element.
	       * If any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take
	       * on the provided styles. For example, if a transition animation is set for the given className, then the provided `from` and
	       * `to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding
	       * style in `to`, the style in `from` is applied immediately, and no animation is run.
	       * If a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`
	       * method (or as part of the `options` parameter):
	       *
	       * ```js
	       * ngModule.animation('.my-inline-animation', function() {
	       *   return {
	       *     animate : function(element, from, to, done, options) {
	       *       //animation
	       *       done();
	       *     }
	       *   }
	       * });
	       * ```
	       *
	       * @param {DOMElement} element the element which the CSS styles will be applied to
	       * @param {object} from the from (starting) CSS styles that will be applied to the element and across the animation.
	       * @param {object} to the to (destination) CSS styles that will be applied to the element and across the animation.
	       * @param {string=} className an optional CSS class that will be applied to the element for the duration of the animation. If
	       *    this value is left as empty then a CSS class of `ng-inline-animate` will be applied to the element.
	       *    (Note that if no animation is detected then this value will not be applied to the element.)
	       * @param {object=} options an optional collection of options/styles that will be applied to the element.
	       *   The object can have the following properties:
	       *
	       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
	       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
	       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
	       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
	       *
	       * @return {Runner} the animation runner
	       */animate:function animate(element,from,to,className,options){options=prepareAnimateOptions(options);options.from=options.from?extend(options.from,from):from;options.to=options.to?extend(options.to,to):to;className=className||'ng-inline-animate';options.tempClasses=mergeClasses(options.tempClasses,className);return $$animateQueue.push(element,'animate',options);}};}];}];var $$AnimateAsyncRunFactoryProvider=/** @this */function $$AnimateAsyncRunFactoryProvider(){this.$get=['$$rAF',function($$rAF){var waitQueue=[];function waitForTick(fn){waitQueue.push(fn);if(waitQueue.length>1)return;$$rAF(function(){for(var i=0;i<waitQueue.length;i++){waitQueue[i]();}waitQueue=[];});}return function(){var passed=false;waitForTick(function(){passed=true;});return function(callback){if(passed){callback();}else{waitForTick(callback);}};};}];};var $$AnimateRunnerFactoryProvider=/** @this */function $$AnimateRunnerFactoryProvider(){this.$get=['$q','$sniffer','$$animateAsyncRun','$$isDocumentHidden','$timeout',function($q,$sniffer,$$animateAsyncRun,$$isDocumentHidden,$timeout){var INITIAL_STATE=0;var DONE_PENDING_STATE=1;var DONE_COMPLETE_STATE=2;AnimateRunner.chain=function(chain,callback){var index=0;next();function next(){if(index===chain.length){callback(true);return;}chain[index](function(response){if(response===false){callback(false);return;}index++;next();});}};AnimateRunner.all=function(runners,callback){var count=0;var status=true;forEach(runners,function(runner){runner.done(onProgress);});function onProgress(response){status=status&&response;if(++count===runners.length){callback(status);}}};function AnimateRunner(host){this.setHost(host);var rafTick=$$animateAsyncRun();var timeoutTick=function timeoutTick(fn){$timeout(fn,0,false);};this._doneCallbacks=[];this._tick=function(fn){if($$isDocumentHidden()){timeoutTick(fn);}else{rafTick(fn);}};this._state=0;}AnimateRunner.prototype={setHost:function setHost(host){this.host=host||{};},done:function done(fn){if(this._state===DONE_COMPLETE_STATE){fn();}else{this._doneCallbacks.push(fn);}},progress:noop,getPromise:function getPromise(){if(!this.promise){var self=this;this.promise=$q(function(resolve,reject){self.done(function(status){if(status===false){reject();}else{resolve();}});});}return this.promise;},then:function then(resolveHandler,rejectHandler){return this.getPromise().then(resolveHandler,rejectHandler);},'catch':function _catch(handler){return this.getPromise()['catch'](handler);},'finally':function _finally(handler){return this.getPromise()['finally'](handler);},pause:function pause(){if(this.host.pause){this.host.pause();}},resume:function resume(){if(this.host.resume){this.host.resume();}},end:function end(){if(this.host.end){this.host.end();}this._resolve(true);},cancel:function cancel(){if(this.host.cancel){this.host.cancel();}this._resolve(false);},complete:function complete(response){var self=this;if(self._state===INITIAL_STATE){self._state=DONE_PENDING_STATE;self._tick(function(){self._resolve(response);});}},_resolve:function _resolve(response){if(this._state!==DONE_COMPLETE_STATE){forEach(this._doneCallbacks,function(fn){fn(response);});this._doneCallbacks.length=0;this._state=DONE_COMPLETE_STATE;}}};return AnimateRunner;}];};/* exported $CoreAnimateCssProvider *//**
	 * @ngdoc service
	 * @name $animateCss
	 * @kind object
	 * @this
	 *
	 * @description
	 * This is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,
	 * then the `$animateCss` service will actually perform animations.
	 *
	 * Click here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.
	 */var $CoreAnimateCssProvider=function $CoreAnimateCssProvider(){this.$get=['$$rAF','$q','$$AnimateRunner',function($$rAF,$q,$$AnimateRunner){return function(element,initialOptions){// all of the animation functions should create
	// a copy of the options data, however, if a
	// parent service has already created a copy then
	// we should stick to using that
	var options=initialOptions||{};if(!options.$$prepared){options=copy(options);}// there is no point in applying the styles since
	// there is no animation that goes on at all in
	// this version of $animateCss.
	if(options.cleanupStyles){options.from=options.to=null;}if(options.from){element.css(options.from);options.from=null;}var closed,runner=new $$AnimateRunner();return{start:run,end:run};function run(){$$rAF(function(){applyAnimationContents();if(!closed){runner.complete();}closed=true;});return runner;}function applyAnimationContents(){if(options.addClass){element.addClass(options.addClass);options.addClass=null;}if(options.removeClass){element.removeClass(options.removeClass);options.removeClass=null;}if(options.to){element.css(options.to);options.to=null;}}};}];};/* global getHash: true, stripHash: false */function getHash(url){var index=url.indexOf('#');return index===-1?'':url.substr(index);}function trimEmptyHash(url){return url.replace(/#$/,'');}/**
	 * ! This is a private undocumented service !
	 *
	 * @name $browser
	 * @requires $log
	 * @description
	 * This object has two goals:
	 *
	 * - hide all the global state in the browser caused by the window object
	 * - abstract away all the browser specific features and inconsistencies
	 *
	 * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`
	 * service, which can be used for convenient testing of the application without the interaction with
	 * the real browser apis.
	 *//**
	 * @param {object} window The global window object.
	 * @param {object} document jQuery wrapped document.
	 * @param {object} $log window.console or an object with the same interface.
	 * @param {object} $sniffer $sniffer service
	 */function Browser(window,document,$log,$sniffer,$$taskTrackerFactory){var self=this,location=window.location,history=window.history,setTimeout=window.setTimeout,clearTimeout=window.clearTimeout,pendingDeferIds={},taskTracker=$$taskTrackerFactory($log);self.isMock=false;//////////////////////////////////////////////////////////////
	// Task-tracking API
	//////////////////////////////////////////////////////////////
	// TODO(vojta): remove this temporary api
	self.$$completeOutstandingRequest=taskTracker.completeTask;self.$$incOutstandingRequestCount=taskTracker.incTaskCount;// TODO(vojta): prefix this method with $$ ?
	self.notifyWhenNoOutstandingRequests=taskTracker.notifyWhenNoPendingTasks;//////////////////////////////////////////////////////////////
	// URL API
	//////////////////////////////////////////////////////////////
	var cachedState,lastHistoryState,lastBrowserUrl=location.href,baseElement=document.find('base'),pendingLocation=null,getCurrentState=!$sniffer.history?noop:function getCurrentState(){try{return history.state;}catch(e){// MSIE can reportedly throw when there is no state (UNCONFIRMED).
	}};cacheState();/**
	   * @name $browser#url
	   *
	   * @description
	   * GETTER:
	   * Without any argument, this method just returns current value of `location.href` (with a
	   * trailing `#` stripped of if the hash is empty).
	   *
	   * SETTER:
	   * With at least one argument, this method sets url to new value.
	   * If html5 history api supported, `pushState`/`replaceState` is used, otherwise
	   * `location.href`/`location.replace` is used.
	   * Returns its own instance to allow chaining.
	   *
	   * NOTE: this api is intended for use only by the `$location` service. Please use the
	   * {@link ng.$location $location service} to change url.
	   *
	   * @param {string} url New url (when used as setter)
	   * @param {boolean=} replace Should new url replace current history record?
	   * @param {object=} state State object to use with `pushState`/`replaceState`
	   */self.url=function(url,replace,state){// In modern browsers `history.state` is `null` by default; treating it separately
	// from `undefined` would cause `$browser.url('/foo')` to change `history.state`
	// to undefined via `pushState`. Instead, let's change `undefined` to `null` here.
	if(isUndefined(state)){state=null;}// Android Browser BFCache causes location, history reference to become stale.
	if(location!==window.location)location=window.location;if(history!==window.history)history=window.history;// setter
	if(url){var sameState=lastHistoryState===state;// Normalize the inputted URL
	url=urlResolve(url).href;// Don't change anything if previous and current URLs and states match. This also prevents
	// IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.
	// See https://github.com/angular/angular.js/commit/ffb2701
	if(lastBrowserUrl===url&&(!$sniffer.history||sameState)){return self;}var sameBase=lastBrowserUrl&&stripHash(lastBrowserUrl)===stripHash(url);lastBrowserUrl=url;lastHistoryState=state;// Don't use history API if only the hash changed
	// due to a bug in IE10/IE11 which leads
	// to not firing a `hashchange` nor `popstate` event
	// in some cases (see #9143).
	if($sniffer.history&&(!sameBase||!sameState)){history[replace?'replaceState':'pushState'](state,'',url);cacheState();}else{if(!sameBase){pendingLocation=url;}if(replace){location.replace(url);}else if(!sameBase){location.href=url;}else{location.hash=getHash(url);}if(location.href!==url){pendingLocation=url;}}if(pendingLocation){pendingLocation=url;}return self;// getter
	}else{// - pendingLocation is needed as browsers don't allow to read out
	//   the new location.href if a reload happened or if there is a bug like in iOS 9 (see
	//   https://openradar.appspot.com/22186109).
	return trimEmptyHash(pendingLocation||location.href);}};/**
	   * @name $browser#state
	   *
	   * @description
	   * This method is a getter.
	   *
	   * Return history.state or null if history.state is undefined.
	   *
	   * @returns {object} state
	   */self.state=function(){return cachedState;};var urlChangeListeners=[],urlChangeInit=false;function cacheStateAndFireUrlChange(){pendingLocation=null;fireStateOrUrlChange();}// This variable should be used *only* inside the cacheState function.
	var lastCachedState=null;function cacheState(){// This should be the only place in $browser where `history.state` is read.
	cachedState=getCurrentState();cachedState=isUndefined(cachedState)?null:cachedState;// Prevent callbacks fo fire twice if both hashchange & popstate were fired.
	if(equals(cachedState,lastCachedState)){cachedState=lastCachedState;}lastCachedState=cachedState;lastHistoryState=cachedState;}function fireStateOrUrlChange(){var prevLastHistoryState=lastHistoryState;cacheState();if(lastBrowserUrl===self.url()&&prevLastHistoryState===cachedState){return;}lastBrowserUrl=self.url();lastHistoryState=cachedState;forEach(urlChangeListeners,function(listener){listener(self.url(),cachedState);});}/**
	   * @name $browser#onUrlChange
	   *
	   * @description
	   * Register callback function that will be called, when url changes.
	   *
	   * It's only called when the url is changed from outside of AngularJS:
	   * - user types different url into address bar
	   * - user clicks on history (forward/back) button
	   * - user clicks on a link
	   *
	   * It's not called when url is changed by $browser.url() method
	   *
	   * The listener gets called with new url as parameter.
	   *
	   * NOTE: this api is intended for use only by the $location service. Please use the
	   * {@link ng.$location $location service} to monitor url changes in AngularJS apps.
	   *
	   * @param {function(string)} listener Listener function to be called when url changes.
	   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.
	   */self.onUrlChange=function(callback){// TODO(vojta): refactor to use node's syntax for events
	if(!urlChangeInit){// We listen on both (hashchange/popstate) when available, as some browsers don't
	// fire popstate when user changes the address bar and don't fire hashchange when url
	// changed by push/replaceState
	// html5 history api - popstate event
	if($sniffer.history)jqLite(window).on('popstate',cacheStateAndFireUrlChange);// hashchange event
	jqLite(window).on('hashchange',cacheStateAndFireUrlChange);urlChangeInit=true;}urlChangeListeners.push(callback);return callback;};/**
	   * @private
	   * Remove popstate and hashchange handler from window.
	   *
	   * NOTE: this api is intended for use only by $rootScope.
	   */self.$$applicationDestroyed=function(){jqLite(window).off('hashchange popstate',cacheStateAndFireUrlChange);};/**
	   * Checks whether the url has changed outside of AngularJS.
	   * Needs to be exported to be able to check for changes that have been done in sync,
	   * as hashchange/popstate events fire in async.
	   */self.$$checkUrlChange=fireStateOrUrlChange;//////////////////////////////////////////////////////////////
	// Misc API
	//////////////////////////////////////////////////////////////
	/**
	   * @name $browser#baseHref
	   *
	   * @description
	   * Returns current <base href>
	   * (always relative - without domain)
	   *
	   * @returns {string} The current base href
	   */self.baseHref=function(){var href=baseElement.attr('href');return href?href.replace(/^(https?:)?\/\/[^/]*/,''):'';};/**
	   * @name $browser#defer
	   * @param {function()} fn A function, who's execution should be deferred.
	   * @param {number=} [delay=0] Number of milliseconds to defer the function execution.
	   * @param {string=} [taskType=DEFAULT_TASK_TYPE] The type of task that is deferred.
	   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.
	   *
	   * @description
	   * Executes a fn asynchronously via `setTimeout(fn, delay)`.
	   *
	   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using
	   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed
	   * via `$browser.defer.flush()`.
	   *
	   */self.defer=function(fn,delay,taskType){var timeoutId;delay=delay||0;taskType=taskType||taskTracker.DEFAULT_TASK_TYPE;taskTracker.incTaskCount(taskType);timeoutId=setTimeout(function(){delete pendingDeferIds[timeoutId];taskTracker.completeTask(fn,taskType);},delay);pendingDeferIds[timeoutId]=taskType;return timeoutId;};/**
	   * @name $browser#defer.cancel
	   *
	   * @description
	   * Cancels a deferred task identified with `deferId`.
	   *
	   * @param {*} deferId Token returned by the `$browser.defer` function.
	   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
	   *                    canceled.
	   */self.defer.cancel=function(deferId){if(pendingDeferIds.hasOwnProperty(deferId)){var taskType=pendingDeferIds[deferId];delete pendingDeferIds[deferId];clearTimeout(deferId);taskTracker.completeTask(noop,taskType);return true;}return false;};}/** @this */function $BrowserProvider(){this.$get=['$window','$log','$sniffer','$document','$$taskTrackerFactory',function($window,$log,$sniffer,$document,$$taskTrackerFactory){return new Browser($window,$document,$log,$sniffer,$$taskTrackerFactory);}];}/**
	 * @ngdoc service
	 * @name $cacheFactory
	 * @this
	 *
	 * @description
	 * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to
	 * them.
	 *
	 * ```js
	 *
	 *  var cache = $cacheFactory('cacheId');
	 *  expect($cacheFactory.get('cacheId')).toBe(cache);
	 *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();
	 *
	 *  cache.put("key", "value");
	 *  cache.put("another key", "another value");
	 *
	 *  // We've specified no options on creation
	 *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});
	 *
	 * ```
	 *
	 *
	 * @param {string} cacheId Name or id of the newly created cache.
	 * @param {object=} options Options object that specifies the cache behavior. Properties:
	 *
	 *   - `{number=}` `capacity` — turns the cache into LRU cache.
	 *
	 * @returns {object} Newly created cache object with the following set of methods:
	 *
	 * - `{object}` `info()` — Returns id, size, and options of cache.
	 * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns
	 *   it.
	 * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.
	 * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.
	 * - `{void}` `removeAll()` — Removes all cached values.
	 * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.
	 *
	 * @example
	   <example module="cacheExampleApp" name="cache-factory">
	     <file name="index.html">
	       <div ng-controller="CacheController">
	         <input ng-model="newCacheKey" placeholder="Key">
	         <input ng-model="newCacheValue" placeholder="Value">
	         <button ng-click="put(newCacheKey, newCacheValue)">Cache</button>

	         <p ng-if="keys.length">Cached Values</p>
	         <div ng-repeat="key in keys">
	           <span ng-bind="key"></span>
	           <span>: </span>
	           <b ng-bind="cache.get(key)"></b>
	         </div>

	         <p>Cache Info</p>
	         <div ng-repeat="(key, value) in cache.info()">
	           <span ng-bind="key"></span>
	           <span>: </span>
	           <b ng-bind="value"></b>
	         </div>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('cacheExampleApp', []).
	         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {
	           $scope.keys = [];
	           $scope.cache = $cacheFactory('cacheId');
	           $scope.put = function(key, value) {
	             if (angular.isUndefined($scope.cache.get(key))) {
	               $scope.keys.push(key);
	             }
	             $scope.cache.put(key, angular.isUndefined(value) ? null : value);
	           };
	         }]);
	     </file>
	     <file name="style.css">
	       p {
	         margin: 10px 0 3px;
	       }
	     </file>
	   </example>
	 */function $CacheFactoryProvider(){this.$get=function(){var caches={};function cacheFactory(cacheId,options){if(cacheId in caches){throw minErr('$cacheFactory')('iid','CacheId \'{0}\' is already taken!',cacheId);}var size=0,stats=extend({},options,{id:cacheId}),data=createMap(),capacity=options&&options.capacity||Number.MAX_VALUE,lruHash=createMap(),freshEnd=null,staleEnd=null;/**
	       * @ngdoc type
	       * @name $cacheFactory.Cache
	       *
	       * @description
	       * A cache object used to store and retrieve data, primarily used by
	       * {@link $templateRequest $templateRequest} and the {@link ng.directive:script script}
	       * directive to cache templates and other data.
	       *
	       * ```js
	       *  angular.module('superCache')
	       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {
	       *      return $cacheFactory('super-cache');
	       *    }]);
	       * ```
	       *
	       * Example test:
	       *
	       * ```js
	       *  it('should behave like a cache', inject(function(superCache) {
	       *    superCache.put('key', 'value');
	       *    superCache.put('another key', 'another value');
	       *
	       *    expect(superCache.info()).toEqual({
	       *      id: 'super-cache',
	       *      size: 2
	       *    });
	       *
	       *    superCache.remove('another key');
	       *    expect(superCache.get('another key')).toBeUndefined();
	       *
	       *    superCache.removeAll();
	       *    expect(superCache.info()).toEqual({
	       *      id: 'super-cache',
	       *      size: 0
	       *    });
	       *  }));
	       * ```
	       */return caches[cacheId]={/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#put
	         * @kind function
	         *
	         * @description
	         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be
	         * retrieved later, and incrementing the size of the cache if the key was not already
	         * present in the cache. If behaving like an LRU cache, it will also remove stale
	         * entries from the set.
	         *
	         * It will not insert undefined values into the cache.
	         *
	         * @param {string} key the key under which the cached data is stored.
	         * @param {*} value the value to store alongside the key. If it is undefined, the key
	         *    will not be stored.
	         * @returns {*} the value stored.
	         */put:function put(key,value){if(isUndefined(value))return;if(capacity<Number.MAX_VALUE){var lruEntry=lruHash[key]||(lruHash[key]={key:key});refresh(lruEntry);}if(!(key in data))size++;data[key]=value;if(size>capacity){this.remove(staleEnd.key);}return value;},/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#get
	         * @kind function
	         *
	         * @description
	         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.
	         *
	         * @param {string} key the key of the data to be retrieved
	         * @returns {*} the value stored.
	         */get:function get(key){if(capacity<Number.MAX_VALUE){var lruEntry=lruHash[key];if(!lruEntry)return;refresh(lruEntry);}return data[key];},/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#remove
	         * @kind function
	         *
	         * @description
	         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.
	         *
	         * @param {string} key the key of the entry to be removed
	         */remove:function remove(key){if(capacity<Number.MAX_VALUE){var lruEntry=lruHash[key];if(!lruEntry)return;if(lruEntry===freshEnd)freshEnd=lruEntry.p;if(lruEntry===staleEnd)staleEnd=lruEntry.n;link(lruEntry.n,lruEntry.p);delete lruHash[key];}if(!(key in data))return;delete data[key];size--;},/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#removeAll
	         * @kind function
	         *
	         * @description
	         * Clears the cache object of any entries.
	         */removeAll:function removeAll(){data=createMap();size=0;lruHash=createMap();freshEnd=staleEnd=null;},/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#destroy
	         * @kind function
	         *
	         * @description
	         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,
	         * removing it from the {@link $cacheFactory $cacheFactory} set.
	         */destroy:function destroy(){data=null;stats=null;lruHash=null;delete caches[cacheId];},/**
	         * @ngdoc method
	         * @name $cacheFactory.Cache#info
	         * @kind function
	         *
	         * @description
	         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.
	         *
	         * @returns {object} an object with the following properties:
	         *   <ul>
	         *     <li>**id**: the id of the cache instance</li>
	         *     <li>**size**: the number of entries kept in the cache instance</li>
	         *     <li>**...**: any additional properties from the options object when creating the
	         *       cache.</li>
	         *   </ul>
	         */info:function info(){return extend({},stats,{size:size});}};/**
	       * makes the `entry` the freshEnd of the LRU linked list
	       */function refresh(entry){if(entry!==freshEnd){if(!staleEnd){staleEnd=entry;}else if(staleEnd===entry){staleEnd=entry.n;}link(entry.n,entry.p);link(entry,freshEnd);freshEnd=entry;freshEnd.n=null;}}/**
	       * bidirectionally links two entries of the LRU linked list
	       */function link(nextEntry,prevEntry){if(nextEntry!==prevEntry){if(nextEntry)nextEntry.p=prevEntry;//p stands for previous, 'prev' didn't minify
	if(prevEntry)prevEntry.n=nextEntry;//n stands for next, 'next' didn't minify
	}}}/**
	   * @ngdoc method
	   * @name $cacheFactory#info
	   *
	   * @description
	   * Get information about all the caches that have been created
	   *
	   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`
	   */cacheFactory.info=function(){var info={};forEach(caches,function(cache,cacheId){info[cacheId]=cache.info();});return info;};/**
	   * @ngdoc method
	   * @name $cacheFactory#get
	   *
	   * @description
	   * Get access to a cache object by the `cacheId` used when it was created.
	   *
	   * @param {string} cacheId Name or id of a cache to access.
	   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.
	   */cacheFactory.get=function(cacheId){return caches[cacheId];};return cacheFactory;};}/**
	 * @ngdoc service
	 * @name $templateCache
	 * @this
	 *
	 * @description
	 * `$templateCache` is a {@link $cacheFactory.Cache Cache object} created by the
	 * {@link ng.$cacheFactory $cacheFactory}.
	 *
	 * The first time a template is used, it is loaded in the template cache for quick retrieval. You
	 * can load templates directly into the cache in a `script` tag, by using {@link $templateRequest},
	 * or by consuming the `$templateCache` service directly.
	 *
	 * Adding via the `script` tag:
	 *
	 * ```html
	 *   <script type="text/ng-template" id="templateId.html">
	 *     <p>This is the content of the template</p>
	 *   </script>
	 * ```
	 *
	 * **Note:** the `script` tag containing the template does not need to be included in the `head` of
	 * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (e.g.
	 * element with {@link ngApp} attribute), otherwise the template will be ignored.
	 *
	 * Adding via the `$templateCache` service:
	 *
	 * ```js
	 * var myApp = angular.module('myApp', []);
	 * myApp.run(function($templateCache) {
	 *   $templateCache.put('templateId.html', 'This is the content of the template');
	 * });
	 * ```
	 *
	 * To retrieve the template later, simply use it in your component:
	 * ```js
	 * myApp.component('myComponent', {
	 *    templateUrl: 'templateId.html'
	 * });
	 * ```
	 *
	 * or get it via the `$templateCache` service:
	 * ```js
	 * $templateCache.get('templateId.html')
	 * ```
	 *
	 */function $TemplateCacheProvider(){this.$get=['$cacheFactory',function($cacheFactory){return $cacheFactory('templates');}];}/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 *     Any commits to this file should be reviewed with security in mind.  *
	 *   Changes to this file can potentially create security vulnerabilities. *
	 *          An approval from 2 Core members with history of modifying      *
	 *                         this file is required.                          *
	 *                                                                         *
	 *  Does the change somehow allow for arbitrary javascript to be executed? *
	 *    Or allows for someone to change the prototype of built-in objects?   *
	 *     Or gives undesired access to variables like document or window?    *
	 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *//* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!
	 *
	 * DOM-related variables:
	 *
	 * - "node" - DOM Node
	 * - "element" - DOM Element or Node
	 * - "$node" or "$element" - jqLite-wrapped node or element
	 *
	 *
	 * Compiler related stuff:
	 *
	 * - "linkFn" - linking fn of a single directive
	 * - "nodeLinkFn" - function that aggregates all linking fns for a particular node
	 * - "childLinkFn" -  function that aggregates all linking fns for child nodes of a particular node
	 * - "compositeLinkFn" - function that aggregates all linking fns for a compilation root (nodeList)
	 *//**
	 * @ngdoc service
	 * @name $compile
	 * @kind function
	 *
	 * @description
	 * Compiles an HTML string or DOM into a template and produces a template function, which
	 * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.
	 *
	 * The compilation is a process of walking the DOM tree and matching DOM elements to
	 * {@link ng.$compileProvider#directive directives}.
	 *
	 * <div class="alert alert-warning">
	 * **Note:** This document is an in-depth reference of all directive options.
	 * For a gentle introduction to directives with examples of common use cases,
	 * see the {@link guide/directive directive guide}.
	 * </div>
	 *
	 * ## Comprehensive Directive API
	 *
	 * There are many different options for a directive.
	 *
	 * The difference resides in the return value of the factory function.
	 * You can either return a {@link $compile#directive-definition-object Directive Definition Object (see below)}
	 * that defines the directive properties, or just the `postLink` function (all other properties will have
	 * the default values).
	 *
	 * <div class="alert alert-success">
	 * **Best Practice:** It's recommended to use the "directive definition object" form.
	 * </div>
	 *
	 * Here's an example directive declared with a Directive Definition Object:
	 *
	 * ```js
	 *   var myModule = angular.module(...);
	 *
	 *   myModule.directive('directiveName', function factory(injectables) {
	 *     var directiveDefinitionObject = {
	 *       {@link $compile#-priority- priority}: 0,
	 *       {@link $compile#-template- template}: '<div></div>', // or // function(tElement, tAttrs) { ... },
	 *       // or
	 *       // {@link $compile#-templateurl- templateUrl}: 'directive.html', // or // function(tElement, tAttrs) { ... },
	 *       {@link $compile#-transclude- transclude}: false,
	 *       {@link $compile#-restrict- restrict}: 'A',
	 *       {@link $compile#-templatenamespace- templateNamespace}: 'html',
	 *       {@link $compile#-scope- scope}: false,
	 *       {@link $compile#-controller- controller}: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },
	 *       {@link $compile#-controlleras- controllerAs}: 'stringIdentifier',
	 *       {@link $compile#-bindtocontroller- bindToController}: false,
	 *       {@link $compile#-require- require}: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],
	 *       {@link $compile#-multielement- multiElement}: false,
	 *       {@link $compile#-compile- compile}: function compile(tElement, tAttrs, transclude) {
	 *         return {
	 *            {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
	 *            {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
	 *         }
	 *         // or
	 *         // return function postLink( ... ) { ... }
	 *       },
	 *       // or
	 *       // {@link $compile#-link- link}: {
	 *       //  {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
	 *       //  {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
	 *       // }
	 *       // or
	 *       // {@link $compile#-link- link}: function postLink( ... ) { ... }
	 *     };
	 *     return directiveDefinitionObject;
	 *   });
	 * ```
	 *
	 * <div class="alert alert-warning">
	 * **Note:** Any unspecified options will use the default value. You can see the default values below.
	 * </div>
	 *
	 * Therefore the above can be simplified as:
	 *
	 * ```js
	 *   var myModule = angular.module(...);
	 *
	 *   myModule.directive('directiveName', function factory(injectables) {
	 *     var directiveDefinitionObject = {
	 *       link: function postLink(scope, iElement, iAttrs) { ... }
	 *     };
	 *     return directiveDefinitionObject;
	 *     // or
	 *     // return function postLink(scope, iElement, iAttrs) { ... }
	 *   });
	 * ```
	 *
	 * ### Life-cycle hooks
	 * Directive controllers can provide the following methods that are called by AngularJS at points in the life-cycle of the
	 * directive:
	 * * `$onInit()` - Called on each controller after all the controllers on an element have been constructed and
	 *   had their bindings initialized (and before the pre &amp; post linking functions for the directives on
	 *   this element). This is a good place to put initialization code for your controller.
	 * * `$onChanges(changesObj)` - Called whenever one-way (`<`) or interpolation (`@`) bindings are updated. The
	 *   `changesObj` is a hash whose keys are the names of the bound properties that have changed, and the values are an
	 *   object of the form `{ currentValue, previousValue, isFirstChange() }`. Use this hook to trigger updates within a
	 *   component such as cloning the bound value to prevent accidental mutation of the outer value. Note that this will
	 *   also be called when your bindings are initialized.
	 * * `$doCheck()` - Called on each turn of the digest cycle. Provides an opportunity to detect and act on
	 *   changes. Any actions that you wish to take in response to the changes that you detect must be
	 *   invoked from this hook; implementing this has no effect on when `$onChanges` is called. For example, this hook
	 *   could be useful if you wish to perform a deep equality check, or to check a Date object, changes to which would not
	 *   be detected by AngularJS's change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments;
	 *   if detecting changes, you must store the previous value(s) for comparison to the current values.
	 * * `$onDestroy()` - Called on a controller when its containing scope is destroyed. Use this hook for releasing
	 *   external resources, watches and event handlers. Note that components have their `$onDestroy()` hooks called in
	 *   the same order as the `$scope.$broadcast` events are triggered, which is top down. This means that parent
	 *   components will have their `$onDestroy()` hook called before child components.
	 * * `$postLink()` - Called after this controller's element and its children have been linked. Similar to the post-link
	 *   function this hook can be used to set up DOM event handlers and do direct DOM manipulation.
	 *   Note that child elements that contain `templateUrl` directives will not have been compiled and linked since
	 *   they are waiting for their template to load asynchronously and their own compilation and linking has been
	 *   suspended until that occurs.
	 *
	 * #### Comparison with life-cycle hooks in the new Angular
	 * The new Angular also uses life-cycle hooks for its components. While the AngularJS life-cycle hooks are similar there are
	 * some differences that you should be aware of, especially when it comes to moving your code from AngularJS to Angular:
	 *
	 * * AngularJS hooks are prefixed with `$`, such as `$onInit`. Angular hooks are prefixed with `ng`, such as `ngOnInit`.
	 * * AngularJS hooks can be defined on the controller prototype or added to the controller inside its constructor.
	 *   In Angular you can only define hooks on the prototype of the Component class.
	 * * Due to the differences in change-detection, you may get many more calls to `$doCheck` in AngularJS than you would to
	 *   `ngDoCheck` in Angular.
	 * * Changes to the model inside `$doCheck` will trigger new turns of the digest loop, which will cause the changes to be
	 *   propagated throughout the application.
	 *   Angular does not allow the `ngDoCheck` hook to trigger a change outside of the component. It will either throw an
	 *   error or do nothing depending upon the state of `enableProdMode()`.
	 *
	 * #### Life-cycle hook examples
	 *
	 * This example shows how you can check for mutations to a Date object even though the identity of the object
	 * has not changed.
	 *
	 * <example name="doCheckDateExample" module="do-check-module">
	 *   <file name="app.js">
	 *     angular.module('do-check-module', [])
	 *       .component('app', {
	 *         template:
	 *           'Month: <input ng-model="$ctrl.month" ng-change="$ctrl.updateDate()">' +
	 *           'Date: {{ $ctrl.date }}' +
	 *           '<test date="$ctrl.date"></test>',
	 *         controller: function() {
	 *           this.date = new Date();
	 *           this.month = this.date.getMonth();
	 *           this.updateDate = function() {
	 *             this.date.setMonth(this.month);
	 *           };
	 *         }
	 *       })
	 *       .component('test', {
	 *         bindings: { date: '<' },
	 *         template:
	 *           '<pre>{{ $ctrl.log | json }}</pre>',
	 *         controller: function() {
	 *           var previousValue;
	 *           this.log = [];
	 *           this.$doCheck = function() {
	 *             var currentValue = this.date && this.date.valueOf();
	 *             if (previousValue !== currentValue) {
	 *               this.log.push('doCheck: date mutated: ' + this.date);
	 *               previousValue = currentValue;
	 *             }
	 *           };
	 *         }
	 *       });
	 *   </file>
	 *   <file name="index.html">
	 *     <app></app>
	 *   </file>
	 * </example>
	 *
	 * This example show how you might use `$doCheck` to trigger changes in your component's inputs even if the
	 * actual identity of the component doesn't change. (Be aware that cloning and deep equality checks on large
	 * arrays or objects can have a negative impact on your application performance.)
	 *
	 * <example name="doCheckArrayExample" module="do-check-module">
	 *   <file name="index.html">
	 *     <div ng-init="items = []">
	 *       <button ng-click="items.push(items.length)">Add Item</button>
	 *       <button ng-click="items = []">Reset Items</button>
	 *       <pre>{{ items }}</pre>
	 *       <test items="items"></test>
	 *     </div>
	 *   </file>
	 *   <file name="app.js">
	 *      angular.module('do-check-module', [])
	 *        .component('test', {
	 *          bindings: { items: '<' },
	 *          template:
	 *            '<pre>{{ $ctrl.log | json }}</pre>',
	 *          controller: function() {
	 *            this.log = [];
	 *
	 *            this.$doCheck = function() {
	 *              if (this.items_ref !== this.items) {
	 *                this.log.push('doCheck: items changed');
	 *                this.items_ref = this.items;
	 *              }
	 *              if (!angular.equals(this.items_clone, this.items)) {
	 *                this.log.push('doCheck: items mutated');
	 *                this.items_clone = angular.copy(this.items);
	 *              }
	 *            };
	 *          }
	 *        });
	 *   </file>
	 * </example>
	 *
	 *
	 * ### Directive Definition Object
	 *
	 * The directive definition object provides instructions to the {@link ng.$compile
	 * compiler}. The attributes are:
	 *
	 * #### `multiElement`
	 * When this property is set to true (default is `false`), the HTML compiler will collect DOM nodes between
	 * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them
	 * together as the directive elements. It is recommended that this feature be used on directives
	 * which are not strictly behavioral (such as {@link ngClick}), and which
	 * do not manipulate or replace child nodes (such as {@link ngInclude}).
	 *
	 * #### `priority`
	 * When there are multiple directives defined on a single DOM element, sometimes it
	 * is necessary to specify the order in which the directives are applied. The `priority` is used
	 * to sort the directives before their `compile` functions get called. Priority is defined as a
	 * number. Directives with greater numerical `priority` are compiled first. Pre-link functions
	 * are also run in priority order, but post-link functions are run in reverse order. The order
	 * of directives with the same priority is undefined. The default priority is `0`.
	 *
	 * #### `terminal`
	 * If set to true then the current `priority` will be the last set of directives
	 * which will execute (any directives at the current priority will still execute
	 * as the order of execution on same `priority` is undefined). Note that expressions
	 * and other directives used in the directive's template will also be excluded from execution.
	 *
	 * #### `scope`
	 * The scope property can be `false`, `true`, or an object:
	 *
	 * * **`false` (default):** No scope will be created for the directive. The directive will use its
	 * parent's scope.
	 *
	 * * **`true`:** A new child scope that prototypically inherits from its parent will be created for
	 * the directive's element. If multiple directives on the same element request a new scope,
	 * only one new scope is created.
	 *
	 * * **`{...}` (an object hash):** A new "isolate" scope is created for the directive's template.
	 * The 'isolate' scope differs from normal scope in that it does not prototypically
	 * inherit from its parent scope. This is useful when creating reusable components, which should not
	 * accidentally read or modify data in the parent scope. Note that an isolate scope
	 * directive without a `template` or `templateUrl` will not apply the isolate scope
	 * to its children elements.
	 *
	 * The 'isolate' scope object hash defines a set of local scope properties derived from attributes on the
	 * directive's element. These local properties are useful for aliasing values for templates. The keys in
	 * the object hash map to the name of the property on the isolate scope; the values define how the property
	 * is bound to the parent scope, via matching attributes on the directive's element:
	 *
	 * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is
	 *   always a string since DOM attributes are strings. If no `attr` name is specified then the
	 *   attribute name is assumed to be the same as the local name. Given `<my-component
	 *   my-attr="hello {{name}}">` and the isolate scope definition `scope: { localName:'@myAttr' }`,
	 *   the directive's scope property `localName` will reflect the interpolated value of `hello
	 *   {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's
	 *   scope. The `name` is read from the parent scope (not the directive's scope).
	 *
	 * * `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression
	 *   passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.
	 *   If no `attr` name is specified then the attribute name is assumed to be the same as the local
	 *   name. Given `<my-component my-attr="parentModel">` and the isolate scope definition `scope: {
	 *   localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the
	 *   value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in
	 *   `localModel` and vice versa. If the binding expression is non-assignable, or if the attribute
	 *   isn't  optional and doesn't exist, an exception
	 *   ({@link error/$compile/nonassign `$compile:nonassign`}) will be thrown upon discovering changes
	 *   to the local value, since it will be impossible to sync them back to the parent scope.
	 *
	 *   By default, the {@link ng.$rootScope.Scope#$watch `$watch`}
	 *   method is used for tracking changes, and the equality check is based on object identity.
	 *   However, if an object literal or an array literal is passed as the binding expression, the
	 *   equality check is done by value (using the {@link angular.equals} function). It's also possible
	 *   to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection
	 *   `$watchCollection`}: use `=*` or `=*attr`
	 *
	  * * `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an
	 *   expression passed via the attribute `attr`. The expression is evaluated in the context of the
	 *   parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the
	 *   local name.
	 *
	 *   For example, given `<my-component my-attr="parentModel">` and directive definition of
	 *   `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the
	 *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected
	 *   in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however
	 *   two caveats:
	 *     1. one-way binding does not copy the value from the parent to the isolate scope, it simply
	 *     sets the same value. That means if your bound value is an object, changes to its properties
	 *     in the isolated scope will be reflected in the parent scope (because both reference the same object).
	 *     2. one-way binding watches changes to the **identity** of the parent value. That means the
	 *     {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference
	 *     to the value has changed. In most cases, this should not be of concern, but can be important
	 *     to know if you one-way bind to an object, and then replace that object in the isolated scope.
	 *     If you now change a property of the object in your parent scope, the change will not be
	 *     propagated to the isolated scope, because the identity of the object on the parent scope
	 *     has not changed. Instead you must assign a new object.
	 *
	 *   One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings
	 *   back to the parent. However, it does not make this completely impossible.
	 *
	 *   By default, the {@link ng.$rootScope.Scope#$watch `$watch`}
	 *   method is used for tracking changes, and the equality check is based on object identity.
	 *   It's also possible to watch the evaluated value shallowly with
	 *   {@link ng.$rootScope.Scope#$watchCollection `$watchCollection`}: use `<*` or `<*attr`
	 *
	 * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If
	 *   no `attr` name is specified then the attribute name is assumed to be the same as the local name.
	 *   Given `<my-component my-attr="count = count + value">` and the isolate scope definition `scope: {
	 *   localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for
	 *   the `count = count + value` expression. Often it's desirable to pass data from the isolated scope
	 *   via an expression to the parent scope. This can be done by passing a map of local variable names
	 *   and values into the expression wrapper fn. For example, if the expression is `increment(amount)`
	 *   then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.
	 *
	 * All 4 kinds of bindings (`@`, `=`, `<`, and `&`) can be made optional by adding `?` to the expression.
	 * The marker must come after the mode and before the attribute name.
	 * See the {@link error/$compile/iscp Invalid Isolate Scope Definition error} for definition examples.
	 * This is useful to refine the interface directives provide.
	 * One subtle difference between optional and non-optional happens **when the binding attribute is not
	 * set**:
	 * - the binding is optional: the property will not be defined
	 * - the binding is not optional: the property is defined
	 *
	 * ```js
	 *app.directive('testDir', function() {
	    return {
	      scope: {
	        notoptional: '=',
	        optional: '=?',
	      },
	      bindToController: true,
	      controller: function() {
	        this.$onInit = function() {
	          console.log(this.hasOwnProperty('notoptional')) // true
	          console.log(this.hasOwnProperty('optional')) // false
	        }
	      }
	    }
	  })
	 *```
	 *
	 *
	 * ##### Combining directives with different scope defintions
	 *
	 * In general it's possible to apply more than one directive to one element, but there might be limitations
	 * depending on the type of scope required by the directives. The following points will help explain these limitations.
	 * For simplicity only two directives are taken into account, but it is also applicable for several directives:
	 *
	 * * **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope
	 * * **child scope** + **no scope** =>  Both directives will share one single child scope
	 * * **child scope** + **child scope** =>  Both directives will share one single child scope
	 * * **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use
	 * its parent's scope
	 * * **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot
	 * be applied to the same element.
	 * * **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives
	 * cannot be applied to the same element.
	 *
	 *
	 * #### `bindToController`
	 * This property is used to bind scope properties directly to the controller. It can be either
	 * `true` or an object hash with the same format as the `scope` property.
	 *
	 * When an isolate scope is used for a directive (see above), `bindToController: true` will
	 * allow a component to have its properties bound to the controller, rather than to scope.
	 *
	 * After the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller
	 * properties. You can access these bindings once they have been initialized by providing a controller method called
	 * `$onInit`, which is called after all the controllers on an element have been constructed and had their bindings
	 * initialized.
	 *
	 * It is also possible to set `bindToController` to an object hash with the same format as the `scope` property.
	 * This will set up the scope bindings to the controller directly. Note that `scope` can still be used
	 * to define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate
	 * scope (useful for component directives).
	 *
	 * If both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.
	 *
	 *
	 * #### `controller`
	 * Controller constructor function. The controller is instantiated before the
	 * pre-linking phase and can be accessed by other directives (see
	 * `require` attribute). This allows the directives to communicate with each other and augment
	 * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:
	 *
	 * * `$scope` - Current scope associated with the element
	 * * `$element` - Current element
	 * * `$attrs` - Current attributes object for the element
	 * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:
	 *   `function([scope], cloneLinkingFn, futureParentElement, slotName)`:
	 *    * `scope`: (optional) override the scope.
	 *    * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.
	 *    * `futureParentElement` (optional):
	 *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.
	 *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.
	 *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)
	 *          and when the `cloneLinkingFn` is passed,
	 *          as those elements need to created and cloned in a special way when they are defined outside their
	 *          usual containers (e.g. like `<svg>`).
	 *        * See also the `directive.templateNamespace` property.
	 *    * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)
	 *      then the default transclusion is provided.
	 *    The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns
	 *    `true` if the specified slot contains content (i.e. one or more DOM nodes).
	 *
	 * #### `require`
	 * Require another directive and inject its controller as the fourth argument to the linking function. The
	 * `require` property can be a string, an array or an object:
	 * * a **string** containing the name of the directive to pass to the linking function
	 * * an **array** containing the names of directives to pass to the linking function. The argument passed to the
	 * linking function will be an array of controllers in the same order as the names in the `require` property
	 * * an **object** whose property values are the names of the directives to pass to the linking function. The argument
	 * passed to the linking function will also be an object with matching keys, whose values will hold the corresponding
	 * controllers.
	 *
	 * If the `require` property is an object and `bindToController` is truthy, then the required controllers are
	 * bound to the controller using the keys of the `require` property. This binding occurs after all the controllers
	 * have been constructed but before `$onInit` is called.
	 * If the name of the required controller is the same as the local name (the key), the name can be
	 * omitted. For example, `{parentDir: '^^'}` is equivalent to `{parentDir: '^^parentDir'}`.
	 * See the {@link $compileProvider#component} helper for an example of how this can be used.
	 * If no such required directive(s) can be found, or if the directive does not have a controller, then an error is
	 * raised (unless no link function is specified and the required controllers are not being bound to the directive
	 * controller, in which case error checking is skipped). The name can be prefixed with:
	 *
	 * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.
	 * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.
	 * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.
	 * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.
	 * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass
	 *   `null` to the `link` fn if not found.
	 * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass
	 *   `null` to the `link` fn if not found.
	 *
	 *
	 * #### `controllerAs`
	 * Identifier name for a reference to the controller in the directive's scope.
	 * This allows the controller to be referenced from the directive template. This is especially
	 * useful when a directive is used as component, i.e. with an `isolate` scope. It's also possible
	 * to use it in a directive without an `isolate` / `new` scope, but you need to be aware that the
	 * `controllerAs` reference might overwrite a property that already exists on the parent scope.
	 *
	 *
	 * #### `restrict`
	 * String of subset of `EACM` which restricts the directive to a specific directive
	 * declaration style. If omitted, the defaults (elements and attributes) are used.
	 *
	 * * `E` - Element name (default): `<my-directive></my-directive>`
	 * * `A` - Attribute (default): `<div my-directive="exp"></div>`
	 * * `C` - Class: `<div class="my-directive: exp;"></div>`
	 * * `M` - Comment: `<!-- directive: my-directive exp -->`
	 *
	 *
	 * #### `templateNamespace`
	 * String representing the document type used by the markup in the template.
	 * AngularJS needs this information as those elements need to be created and cloned
	 * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.
	 *
	 * * `html` - All root nodes in the template are HTML. Root nodes may also be
	 *   top-level elements such as `<svg>` or `<math>`.
	 * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).
	 * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).
	 *
	 * If no `templateNamespace` is specified, then the namespace is considered to be `html`.
	 *
	 * #### `template`
	 * HTML markup that may:
	 * * Replace the contents of the directive's element (default).
	 * * Replace the directive's element itself (if `replace` is true - DEPRECATED).
	 * * Wrap the contents of the directive's element (if `transclude` is true).
	 *
	 * Value may be:
	 *
	 * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.
	 * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`
	 *   function api below) and returns a string value.
	 *
	 *
	 * #### `templateUrl`
	 * This is similar to `template` but the template is loaded from the specified URL, asynchronously.
	 *
	 * Because template loading is asynchronous the compiler will suspend compilation of directives on that element
	 * for later when the template has been resolved.  In the meantime it will continue to compile and link
	 * sibling and parent elements as though this element had not contained any directives.
	 *
	 * The compiler does not suspend the entire compilation to wait for templates to be loaded because this
	 * would result in the whole app "stalling" until all templates are loaded asynchronously - even in the
	 * case when only one deeply nested directive has `templateUrl`.
	 *
	 * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}.
	 *
	 * You can specify `templateUrl` as a string representing the URL or as a function which takes two
	 * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns
	 * a string value representing the url.  In either case, the template URL is passed through {@link
	 * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.
	 *
	 *
	 * #### `replace`
	 * <div class="alert alert-danger">
	 * **Note:** `replace` is deprecated in AngularJS and has been removed in the new Angular (v2+).
	 * </div>
	 *
	 * Specifies what the template should replace. Defaults to `false`.
	 *
	 * * `true` - the template will replace the directive's element.
	 * * `false` - the template will replace the contents of the directive's element.
	 *
	 * The replacement process migrates all of the attributes / classes from the old element to the new
	 * one. See the {@link guide/directive#template-expanding-directive
	 * Directives Guide} for an example.
	 *
	 * There are very few scenarios where element replacement is required for the application function,
	 * the main one being reusable custom components that are used within SVG contexts
	 * (because SVG doesn't work with custom elements in the DOM tree).
	 *
	 * #### `transclude`
	 * Extract the contents of the element where the directive appears and make it available to the directive.
	 * The contents are compiled and provided to the directive as a **transclusion function**. See the
	 * {@link $compile#transclusion Transclusion} section below.
	 *
	 *
	 * #### `compile`
	 *
	 * ```js
	 *   function compile(tElement, tAttrs, transclude) { ... }
	 * ```
	 *
	 * The compile function deals with transforming the template DOM. Since most directives do not do
	 * template transformation, it is not used often. The compile function takes the following arguments:
	 *
	 *   * `tElement` - template element - The element where the directive has been declared. It is
	 *     safe to do template transformation on the element and child elements only.
	 *
	 *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared
	 *     between all directive compile functions.
	 *
	 *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`
	 *
	 * <div class="alert alert-warning">
	 * **Note:** The template instance and the link instance may be different objects if the template has
	 * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that
	 * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration
	 * should be done in a linking function rather than in a compile function.
	 * </div>

	 * <div class="alert alert-warning">
	 * **Note:** The compile function cannot handle directives that recursively use themselves in their
	 * own templates or compile functions. Compiling these directives results in an infinite loop and
	 * stack overflow errors.
	 *
	 * This can be avoided by manually using `$compile` in the postLink function to imperatively compile
	 * a directive's template instead of relying on automatic template compilation via `template` or
	 * `templateUrl` declaration or manual compilation inside the compile function.
	 * </div>
	 *
	 * <div class="alert alert-danger">
	 * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it
	 *   e.g. does not know about the right outer scope. Please use the transclude function that is passed
	 *   to the link function instead.
	 * </div>

	 * A compile function can have a return value which can be either a function or an object.
	 *
	 * * returning a (post-link) function - is equivalent to registering the linking function via the
	 *   `link` property of the config object when the compile function is empty.
	 *
	 * * returning an object with function(s) registered via `pre` and `post` properties - allows you to
	 *   control when a linking function should be called during the linking phase. See info about
	 *   pre-linking and post-linking functions below.
	 *
	 *
	 * #### `link`
	 * This property is used only if the `compile` property is not defined.
	 *
	 * ```js
	 *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }
	 * ```
	 *
	 * The link function is responsible for registering DOM listeners as well as updating the DOM. It is
	 * executed after the template has been cloned. This is where most of the directive logic will be
	 * put.
	 *
	 *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the
	 *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.
	 *
	 *   * `iElement` - instance element - The element where the directive is to be used. It is safe to
	 *     manipulate the children of the element only in `postLink` function since the children have
	 *     already been linked.
	 *
	 *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared
	 *     between all directive linking functions.
	 *
	 *   * `controller` - the directive's required controller instance(s) - Instances are shared
	 *     among all directives, which allows the directives to use the controllers as a communication
	 *     channel. The exact value depends on the directive's `require` property:
	 *       * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one
	 *       * `string`: the controller instance
	 *       * `array`: array of controller instances
	 *
	 *     If a required controller cannot be found, and it is optional, the instance is `null`,
	 *     otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.
	 *
	 *     Note that you can also require the directive's own controller - it will be made available like
	 *     any other controller.
	 *
	 *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.
	 *     This is the same as the `$transclude` parameter of directive controllers,
	 *     see {@link ng.$compile#-controller- the controller section for details}.
	 *     `function([scope], cloneLinkingFn, futureParentElement)`.
	 *
	 * #### Pre-linking function
	 *
	 * Executed before the child elements are linked. Not safe to do DOM transformation since the
	 * compiler linking function will fail to locate the correct elements for linking.
	 *
	 * #### Post-linking function
	 *
	 * Executed after the child elements are linked.
	 *
	 * Note that child elements that contain `templateUrl` directives will not have been compiled
	 * and linked since they are waiting for their template to load asynchronously and their own
	 * compilation and linking has been suspended until that occurs.
	 *
	 * It is safe to do DOM transformation in the post-linking function on elements that are not waiting
	 * for their async templates to be resolved.
	 *
	 *
	 * ### Transclusion
	 *
	 * Transclusion is the process of extracting a collection of DOM elements from one part of the DOM and
	 * copying them to another part of the DOM, while maintaining their connection to the original AngularJS
	 * scope from where they were taken.
	 *
	 * Transclusion is used (often with {@link ngTransclude}) to insert the
	 * original contents of a directive's element into a specified place in the template of the directive.
	 * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded
	 * content has access to the properties on the scope from which it was taken, even if the directive
	 * has isolated scope.
	 * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.
	 *
	 * This makes it possible for the widget to have private state for its template, while the transcluded
	 * content has access to its originating scope.
	 *
	 * <div class="alert alert-warning">
	 * **Note:** When testing an element transclude directive you must not place the directive at the root of the
	 * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives
	 * Testing Transclusion Directives}.
	 * </div>
	 *
	 * There are three kinds of transclusion depending upon whether you want to transclude just the contents of the
	 * directive's element, the entire element or multiple parts of the element contents:
	 *
	 * * `true` - transclude the content (i.e. the child nodes) of the directive's element.
	 * * `'element'` - transclude the whole of the directive's element including any directives on this
	 *   element that are defined at a lower priority than this directive. When used, the `template`
	 *   property is ignored.
	 * * **`{...}` (an object hash):** - map elements of the content onto transclusion "slots" in the template.
	 *
	 * **Multi-slot transclusion** is declared by providing an object for the `transclude` property.
	 *
	 * This object is a map where the keys are the name of the slot to fill and the value is an element selector
	 * used to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)
	 * and will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).
	 *
	 * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}.
	 *
	 * If the element selector is prefixed with a `?` then that slot is optional.
	 *
	 * For example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to
	 * the `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.
	 *
	 * Slots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements
	 * in the transclude content. If you wish to know if an optional slot was filled with content, then you can call
	 * `$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and
	 * injectable into the directive's controller.
	 *
	 *
	 * #### Transclusion Functions
	 *
	 * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion
	 * function** to the directive's `link` function and `controller`. This transclusion function is a special
	 * **linking function** that will return the compiled contents linked to a new transclusion scope.
	 *
	 * <div class="alert alert-info">
	 * If you are just using {@link ngTransclude} then you don't need to worry about this function, since
	 * ngTransclude will deal with it for us.
	 * </div>
	 *
	 * If you want to manually control the insertion and removal of the transcluded content in your directive
	 * then you must use this transclude function. When you call a transclude function it returns a jqLite/JQuery
	 * object that contains the compiled DOM, which is linked to the correct transclusion scope.
	 *
	 * When you call a transclusion function you can pass in a **clone attach function**. This function accepts
	 * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded
	 * content and the `scope` is the newly created transclusion scope, which the clone will be linked to.
	 *
	 * <div class="alert alert-info">
	 * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function
	 * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.
	 * </div>
	 *
	 * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone
	 * attach function**:
	 *
	 * ```js
	 * var transcludedContent, transclusionScope;
	 *
	 * $transclude(function(clone, scope) {
	 *   element.append(clone);
	 *   transcludedContent = clone;
	 *   transclusionScope = scope;
	 * });
	 * ```
	 *
	 * Later, if you want to remove the transcluded content from your DOM then you should also destroy the
	 * associated transclusion scope:
	 *
	 * ```js
	 * transcludedContent.remove();
	 * transclusionScope.$destroy();
	 * ```
	 *
	 * <div class="alert alert-info">
	 * **Best Practice**: if you intend to add and remove transcluded content manually in your directive
	 * (by calling the transclude function to get the DOM and calling `element.remove()` to remove it),
	 * then you are also responsible for calling `$destroy` on the transclusion scope.
	 * </div>
	 *
	 * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}
	 * automatically destroy their transcluded clones as necessary so you do not need to worry about this if
	 * you are simply using {@link ngTransclude} to inject the transclusion into your directive.
	 *
	 *
	 * #### Transclusion Scopes
	 *
	 * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion
	 * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed
	 * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it
	 * was taken.
	 *
	 * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look
	 * like this:
	 *
	 * ```html
	 * <div ng-app>
	 *   <div isolate>
	 *     <div transclusion>
	 *     </div>
	 *   </div>
	 * </div>
	 * ```
	 *
	 * The `$parent` scope hierarchy will look like this:
	 *
	   ```
	   - $rootScope
	     - isolate
	       - transclusion
	   ```
	 *
	 * but the scopes will inherit prototypically from different scopes to their `$parent`.
	 *
	   ```
	   - $rootScope
	     - transclusion
	   - isolate
	   ```
	 *
	 *
	 * ### Attributes
	 *
	 * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the
	 * `link()` or `compile()` functions. It has a variety of uses.
	 *
	 * * *Accessing normalized attribute names:* Directives like `ngBind` can be expressed in many ways:
	 *   `ng:bind`, `data-ng-bind`, or `x-ng-bind`. The attributes object allows for normalized access
	 *   to the attributes.
	 *
	 * * *Directive inter-communication:* All directives share the same instance of the attributes
	 *   object which allows the directives to use the attributes object as inter directive
	 *   communication.
	 *
	 * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object
	 *   allowing other directives to read the interpolated value.
	 *
	 * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes
	 *   that contain interpolation (e.g. `src="{{bar}}"`). Not only is this very efficient but it's also
	 *   the only way to easily get the actual value because during the linking phase the interpolation
	 *   hasn't been evaluated yet and so the value is at this time set to `undefined`.
	 *
	 * ```js
	 * function linkingFn(scope, elm, attrs, ctrl) {
	 *   // get the attribute value
	 *   console.log(attrs.ngModel);
	 *
	 *   // change the attribute
	 *   attrs.$set('ngModel', 'new value');
	 *
	 *   // observe changes to interpolated attribute
	 *   attrs.$observe('ngModel', function(value) {
	 *     console.log('ngModel has changed value to ' + value);
	 *   });
	 * }
	 * ```
	 *
	 * ## Example
	 *
	 * <div class="alert alert-warning">
	 * **Note**: Typically directives are registered with `module.directive`. The example below is
	 * to illustrate how `$compile` works.
	 * </div>
	 *
	 <example module="compileExample" name="compile">
	   <file name="index.html">
	    <script>
	      angular.module('compileExample', [], function($compileProvider) {
	        // Configure new 'compile' directive by passing a directive
	        // factory function. The factory function injects '$compile'.
	        $compileProvider.directive('compile', function($compile) {
	          // The directive factory creates a link function.
	          return function(scope, element, attrs) {
	            scope.$watch(
	              function(scope) {
	                // Watch the 'compile' expression for changes.
	                return scope.$eval(attrs.compile);
	              },
	              function(value) {
	                // When the 'compile' expression changes
	                // assign it into the current DOM.
	                element.html(value);

	                // Compile the new DOM and link it to the current scope.
	                // NOTE: we only compile '.childNodes' so that we
	                // don't get into an infinite loop compiling ourselves.
	                $compile(element.contents())(scope);
	              }
	            );
	          };
	        });
	      })
	      .controller('GreeterController', ['$scope', function($scope) {
	        $scope.name = 'AngularJS';
	        $scope.html = 'Hello {{name}}';
	      }]);
	    </script>
	    <div ng-controller="GreeterController">
	      <input ng-model="name"> <br/>
	      <textarea ng-model="html"></textarea> <br/>
	      <div compile="html"></div>
	    </div>
	   </file>
	   <file name="protractor.js" type="protractor">
	     it('should auto compile', function() {
	       var textarea = $('textarea');
	       var output = $('div[compile]');
	       // The initial state reads 'Hello AngularJS'.
	       expect(output.getText()).toBe('Hello AngularJS');
	       textarea.clear();
	       textarea.sendKeys('{{name}}!');
	       expect(output.getText()).toBe('AngularJS!');
	     });
	   </file>
	 </example>

	 *
	 *
	 * @param {string|DOMElement} element Element or HTML string to compile into a template function.
	 * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.
	 *
	 * <div class="alert alert-danger">
	 * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it
	 *   e.g. will not use the right outer scope. Please pass the transclude function as a
	 *   `parentBoundTranscludeFn` to the link function instead.
	 * </div>
	 *
	 * @param {number} maxPriority only apply directives lower than given priority (Only effects the
	 *                 root element(s), not their children)
	 * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template
	 * (a DOM element/tree) to a scope. Where:
	 *
	 *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.
	 *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the
	 *  `template` and call the `cloneAttachFn` function allowing the caller to attach the
	 *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is
	 *  called as: <br/> `cloneAttachFn(clonedElement, scope)` where:
	 *
	 *      * `clonedElement` - is a clone of the original `element` passed into the compiler.
	 *      * `scope` - is the current scope with which the linking function is working with.
	 *
	 *  * `options` - An optional object hash with linking options. If `options` is provided, then the following
	 *  keys may be used to control linking behavior:
	 *
	 *      * `parentBoundTranscludeFn` - the transclude function made available to
	 *        directives; if given, it will be passed through to the link functions of
	 *        directives found in `element` during compilation.
	 *      * `transcludeControllers` - an object hash with keys that map controller names
	 *        to a hash with the key `instance`, which maps to the controller instance;
	 *        if given, it will make the controllers available to directives on the compileNode:
	 *        ```
	 *        {
	 *          parent: {
	 *            instance: parentControllerInstance
	 *          }
	 *        }
	 *        ```
	 *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add
	 *        the cloned elements; only needed for transcludes that are allowed to contain non HTML
	 *        elements (e.g. SVG elements). See also the `directive.controller` property.
	 *
	 * Calling the linking function returns the element of the template. It is either the original
	 * element passed in, or the clone of the element if the `cloneAttachFn` is provided.
	 *
	 * After linking the view is not updated until after a call to `$digest`, which typically is done by
	 * AngularJS automatically.
	 *
	 * If you need access to the bound view, there are two ways to do it:
	 *
	 * - If you are not asking the linking function to clone the template, create the DOM element(s)
	 *   before you send them to the compiler and keep this reference around.
	 *   ```js
	 *     var element = angular.element('<p>{{total}}</p>');
	 *     $compile(element)(scope);
	 *   ```
	 *
	 * - if on the other hand, you need the element to be cloned, the view reference from the original
	 *   example would not point to the clone, but rather to the original template that was cloned. In
	 *   this case, you can access the clone either via the `cloneAttachFn` or the value returned by the
	 *   linking function:
	 *   ```js
	 *     var templateElement = angular.element('<p>{{total}}</p>');
	 *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {
	 *       // Attach the clone to DOM document at the right place.
	 *     });
	 *
	 *     // Now we have reference to the cloned DOM via `clonedElement`.
	 *     // NOTE: The `clonedElement` returned by the linking function is the same as the
	 *     //       `clonedElement` passed to `cloneAttachFn`.
	 *   ```
	 *
	 *
	 * For information on how the compiler works, see the
	 * {@link guide/compiler AngularJS HTML Compiler} section of the Developer Guide.
	 *
	 * @knownIssue
	 *
	 * ### Double Compilation
	 *
	   Double compilation occurs when an already compiled part of the DOM gets
	   compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues,
	   and memory leaks. Refer to the Compiler Guide {@link guide/compiler#double-compilation-and-how-to-avoid-it
	   section on double compilation} for an in-depth explanation and ways to avoid it.

	 * @knownIssue

	   ### Issues with `replace: true`
	 *
	 * <div class="alert alert-danger">
	 *   **Note**: {@link $compile#-replace- `replace: true`} is deprecated and not recommended to use,
	 *   mainly due to the issues listed here. It has been completely removed in the new Angular.
	 * </div>
	 *
	 * #### Attribute values are not merged
	 *
	 * When a `replace` directive encounters the same attribute on the original and the replace node,
	 * it will simply deduplicate the attribute and join the values with a space or with a `;` in case of
	 * the `style` attribute.
	 * ```html
	 * Original Node: <span class="original" style="color: red;"></span>
	 * Replace Template: <span class="replaced" style="background: blue;"></span>
	 * Result: <span class="original replaced" style="color: red; background: blue;"></span>
	 * ```
	 *
	 * That means attributes that contain AngularJS expressions will not be merged correctly, e.g.
	 * {@link ngShow} or {@link ngClass} will cause a {@link $parse} error:
	 *
	 * ```html
	 * Original Node: <span ng-class="{'something': something}" ng-show="!condition"></span>
	 * Replace Template: <span ng-class="{'else': else}" ng-show="otherCondition"></span>
	 * Result: <span ng-class="{'something': something} {'else': else}" ng-show="!condition otherCondition"></span>
	 * ```
	 *
	 * See issue [#5695](https://github.com/angular/angular.js/issues/5695).
	 *
	 * #### Directives are not deduplicated before compilation
	 *
	 * When the original node and the replace template declare the same directive(s), they will be
	 * {@link guide/compiler#double-compilation-and-how-to-avoid-it compiled twice} because the compiler
	 * does not deduplicate them. In many cases, this is not noticeable, but e.g. {@link ngModel} will
	 * attach `$formatters` and `$parsers` twice.
	 *
	 * See issue [#2573](https://github.com/angular/angular.js/issues/2573).
	 *
	 * #### `transclude: element` in the replace template root can have unexpected effects
	 *
	 * When the replace template has a directive at the root node that uses
	 * {@link $compile#-transclude- `transclude: element`}, e.g.
	 * {@link ngIf} or {@link ngRepeat}, the DOM structure or scope inheritance can be incorrect.
	 * See the following issues:
	 *
	 * - Incorrect scope on replaced element:
	 * [#9837](https://github.com/angular/angular.js/issues/9837)
	 * - Different DOM between `template` and `templateUrl`:
	 * [#10612](https://github.com/angular/angular.js/issues/14326)
	 *
	 *//**
	 * @ngdoc directive
	 * @name ngProp
	 * @restrict A
	 * @element ANY
	 *
	 * @usage
	 *
	 * ```html
	 * <ANY ng-prop-propname="expression">
	 * </ANY>
	 * ```
	 *
	 * or with uppercase letters in property (e.g. "propName"):
	 *
	 *
	 * ```html
	 * <ANY ng-prop-prop_name="expression">
	 * </ANY>
	 * ```
	 *
	 *
	 * @description
	 * The `ngProp` directive binds an expression to a DOM element property.
	 * `ngProp` allows writing to arbitrary properties by including
	 * the property name in the attribute, e.g. `ng-prop-value="'my value'"` binds 'my value' to
	 * the `value` property.
	 *
	 * Usually, it's not necessary to write to properties in AngularJS, as the built-in directives
	 * handle the most common use cases (instead of the above example, you would use {@link ngValue}).
	 *
	 * However, [custom elements](https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements)
	 * often use custom properties to hold data, and `ngProp` can be used to provide input to these
	 * custom elements.
	 *
	 * ## Binding to camelCase properties
	 *
	 * Since HTML attributes are case-insensitive, camelCase properties like `innerHTML` must be escaped.
	 * AngularJS uses the underscore (_) in front of a character to indicate that it is uppercase, so
	 * `innerHTML`  must be written as `ng-prop-inner_h_t_m_l="expression"` (Note that this is just an
	 * example, and for binding HTML {@link ngBindHtml} should be used.
	 *
	 * ## Security
	 *
	 * Binding expressions to arbitrary properties poses a security risk, as  properties like `innerHTML`
	 * can insert potentially dangerous HTML into the application, e.g. script tags that execute
	 * malicious code.
	 * For this reason, `ngProp` applies Strict Contextual Escaping with the {@link ng.$sce $sce service}.
	 * This means vulnerable properties require their content to be "trusted", based on the
	 * context of the property. For example, the `innerHTML` is in the `HTML` context, and the
	 * `iframe.src` property is in the `RESOURCE_URL` context, which requires that values written to
	 * this property are trusted as a `RESOURCE_URL`.
	 *
	 * This can be set explicitly by calling $sce.trustAs(type, value) on the value that is
	 * trusted before passing it to the `ng-prop-*` directive. There are exist shorthand methods for
	 * each context type in the form of {@link ng.$sce#trustAsResourceUrl $sce.trustAsResourceUrl()} et al.
	 *
	 * In some cases you can also rely upon automatic sanitization of untrusted values - see below.
	 *
	 * Based on the context, other options may exist to mark a value as trusted / configure the behavior
	 * of {@link ng.$sce}. For example, to restrict the `RESOURCE_URL` context to specific origins, use
	 * the {@link $sceDelegateProvider#trustedResourceUrlList trustedResourceUrlList()}
	 * and {@link $sceDelegateProvider#bannedResourceUrlList bannedResourceUrlList()}.
	 *
	 * {@link ng.$sce#what-trusted-context-types-are-supported- Find out more about the different context types}.
	 *
	 * ### HTML Sanitization
	 *
	 * By default, `$sce` will throw an error if it detects untrusted HTML content, and will not bind the
	 * content.
	 * However, if you include the {@link ngSanitize ngSanitize module}, it will try to sanitize the
	 * potentially dangerous HTML, e.g. strip non-trusted tags and attributes when binding to
	 * `innerHTML`.
	 *
	 * @example
	 * ### Binding to different contexts
	 *
	 * <example name="ngProp" module="exampleNgProp">
	 *   <file name="app.js">
	 *     angular.module('exampleNgProp', [])
	 *       .component('main', {
	 *         templateUrl: 'main.html',
	 *         controller: function($sce) {
	 *           this.safeContent = '<strong>Safe content</strong>';
	 *           this.unsafeContent = '<button onclick="alert(\'Hello XSS!\')">Click for XSS</button>';
	 *           this.trustedUnsafeContent = $sce.trustAsHtml(this.unsafeContent);
	 *         }
	 *       });
	 *   </file>
	 *   <file name="main.html">
	 *     <div>
	 *       <div class="prop-unit">
	 *         Binding to a property without security context:
	 *         <div class="prop-binding" ng-prop-inner_text="$ctrl.safeContent"></div>
	 *         <span class="prop-note">innerText</span> (safeContent)
	 *       </div>
	 *
	 *       <div class="prop-unit">
	 *         "Safe" content that requires a security context will throw because the contents could potentially be dangerous ...
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.safeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (safeContent)
	 *       </div>
	 *
	 *       <div class="prop-unit">
	 *         ... so that actually dangerous content cannot be executed:
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.unsafeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (unsafeContent)
	 *       </div>
	 *
	 *       <div class="prop-unit">
	 *         ... but unsafe Content that has been trusted explicitly works - only do this if you are 100% sure!
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.trustedUnsafeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (trustedUnsafeContent)
	 *       </div>
	 *     </div>
	 *   </file>
	 *   <file name="index.html">
	 *     <main></main>
	 *   </file>
	 *   <file name="styles.css">
	 *     .prop-unit {
	 *       margin-bottom: 10px;
	 *     }
	 *
	 *     .prop-binding {
	 *       min-height: 30px;
	 *       border: 1px solid blue;
	 *     }
	 *
	 *     .prop-note {
	 *       font-family: Monospace;
	 *     }
	 *   </file>
	 * </example>
	 *
	 *
	 * @example
	 * ### Binding to innerHTML with ngSanitize
	 *
	 * <example name="ngProp" module="exampleNgProp" deps="angular-sanitize.js">
	 *   <file name="app.js">
	 *     angular.module('exampleNgProp', ['ngSanitize'])
	 *       .component('main', {
	 *         templateUrl: 'main.html',
	 *         controller: function($sce) {
	 *           this.safeContent = '<strong>Safe content</strong>';
	 *           this.unsafeContent = '<button onclick="alert(\'Hello XSS!\')">Click for XSS</button>';
	 *           this.trustedUnsafeContent = $sce.trustAsHtml(this.unsafeContent);
	 *         }
	 *       });
	 *   </file>
	 *   <file name="main.html">
	 *     <div>
	 *       <div class="prop-unit">
	 *         "Safe" content will be sanitized ...
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.safeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (safeContent)
	 *       </div>
	 *
	 *       <div class="prop-unit">
	 *         ... as will dangerous content:
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.unsafeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (unsafeContent)
	 *       </div>
	 *
	 *       <div class="prop-unit">
	 *         ... and content that has been trusted explicitly works the same as without ngSanitize:
	 *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.trustedUnsafeContent"></div>
	 *         <span class="prop-note">innerHTML</span> (trustedUnsafeContent)
	 *       </div>
	 *     </div>
	 *   </file>
	 *   <file name="index.html">
	 *     <main></main>
	 *   </file>
	 *   <file name="styles.css">
	 *     .prop-unit {
	 *       margin-bottom: 10px;
	 *     }
	 *
	 *     .prop-binding {
	 *       min-height: 30px;
	 *       border: 1px solid blue;
	 *     }
	 *
	 *     .prop-note {
	 *       font-family: Monospace;
	 *     }
	 *   </file>
	 * </example>
	 *
	 *//** @ngdoc directive
	 * @name ngOn
	 * @restrict A
	 * @element ANY
	 *
	 * @usage
	 *
	 * ```html
	 * <ANY ng-on-eventname="expression">
	 * </ANY>
	 * ```
	 *
	 * or with uppercase letters in property (e.g. "eventName"):
	 *
	 *
	 * ```html
	 * <ANY ng-on-event_name="expression">
	 * </ANY>
	 * ```
	 *
	 * @description
	 * The `ngOn` directive adds an event listener to a DOM element via
	 * {@link angular.element angular.element().on()}, and evaluates an expression when the event is
	 * fired.
	 * `ngOn` allows adding listeners for arbitrary events by including
	 * the event name in the attribute, e.g. `ng-on-drop="onDrop()"` executes the 'onDrop()' expression
	 * when the `drop` event is fired.
	 *
	 * AngularJS provides specific directives for many events, such as {@link ngClick}, so in most
	 * cases it is not necessary to use `ngOn`. However, AngularJS does not support all events
	 * (e.g. the `drop` event in the example above), and new events might be introduced in later DOM
	 * standards.
	 *
	 * Another use-case for `ngOn` is listening to
	 * [custom events](https://developer.mozilla.org/docs/Web/Guide/Events/Creating_and_triggering_events)
	 * fired by
	 * [custom elements](https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements).
	 *
	 * ## Binding to camelCase properties
	 *
	 * Since HTML attributes are case-insensitive, camelCase properties like `myEvent` must be escaped.
	 * AngularJS uses the underscore (_) in front of a character to indicate that it is uppercase, so
	 * `myEvent` must be written as `ng-on-my_event="expression"`.
	 *
	 * @example
	 * ### Bind to built-in DOM events
	 *
	 * <example name="ngOn" module="exampleNgOn">
	 *   <file name="app.js">
	 *     angular.module('exampleNgOn', [])
	 *       .component('main', {
	 *         templateUrl: 'main.html',
	 *         controller: function() {
	 *           this.clickCount = 0;
	 *           this.mouseoverCount = 0;
	 *
	 *           this.loadingState = 0;
	 *         }
	 *       });
	 *   </file>
	 *   <file name="main.html">
	 *     <div>
	 *       This is equivalent to `ngClick` and `ngMouseover`:<br>
	 *       <button
	 *         ng-on-click="$ctrl.clickCount = $ctrl.clickCount + 1"
	 *         ng-on-mouseover="$ctrl.mouseoverCount = $ctrl.mouseoverCount + 1">Click or mouseover</button><br>
	 *       clickCount: {{$ctrl.clickCount}}<br>
	 *       mouseover: {{$ctrl.mouseoverCount}}
	 *
	 *       <hr>
	 *
	 *       For the `error` and `load` event on images no built-in AngularJS directives exist:<br>
	 *       <img src="thisimagedoesnotexist.png" ng-on-error="$ctrl.loadingState = -1" ng-on-load="$ctrl.loadingState = 1"><br>
	 *       <div ng-switch="$ctrl.loadingState">
	 *         <span ng-switch-when="0">Image is loading</span>
	 *         <span ng-switch-when="-1">Image load error</span>
	 *         <span ng-switch-when="1">Image loaded successfully</span>
	 *       </div>
	 *     </div>
	 *   </file>
	 *   <file name="index.html">
	 *     <main></main>
	 *   </file>
	 * </example>
	 *
	 *
	 * @example
	 * ### Bind to custom DOM events
	 *
	 * <example name="ngOnCustom" module="exampleNgOn">
	 *   <file name="app.js">
	 *     angular.module('exampleNgOn', [])
	 *       .component('main', {
	 *         templateUrl: 'main.html',
	 *         controller: function() {
	 *           this.eventLog = '';
	 *
	 *           this.listener = function($event) {
	 *             this.eventLog = 'Event with type "' + $event.type + '" fired at ' + $event.detail;
	 *           };
	 *         }
	 *       })
	 *       .component('childComponent', {
	 *         templateUrl: 'child.html',
	 *         controller: function($element) {
	 *           this.fireEvent = function() {
	 *             var event = new CustomEvent('customtype', { detail: new Date()});
	 *
	 *             $element[0].dispatchEvent(event);
	 *           };
	 *         }
	 *       });
	 *   </file>
	 *   <file name="main.html">
	 *     <child-component ng-on-customtype="$ctrl.listener($event)"></child-component><br>
	 *     <span>Event log: {{$ctrl.eventLog}}</span>
	 *   </file>
	 *   <file name="child.html">
	      <button ng-click="$ctrl.fireEvent()">Fire custom event</button>
	 *   </file>
	 *   <file name="index.html">
	 *     <main></main>
	 *   </file>
	 * </example>
	 */var $compileMinErr=minErr('$compile');function UNINITIALIZED_VALUE(){}var _UNINITIALIZED_VALUE=new UNINITIALIZED_VALUE();/**
	 * @ngdoc provider
	 * @name $compileProvider
	 *
	 * @description
	 */$CompileProvider.$inject=['$provide','$$sanitizeUriProvider'];/** @this */function $CompileProvider($provide,$$sanitizeUriProvider){var hasDirectives={},Suffix='Directive',COMMENT_DIRECTIVE_REGEXP=/^\s*directive:\s*([\w-]+)\s+(.*)$/,CLASS_DIRECTIVE_REGEXP=/(([\w-]+)(?::([^;]+))?;?)/,ALL_OR_NOTHING_ATTRS=makeMap('ngSrc,ngSrcset,src,srcset'),REQUIRE_PREFIX_REGEXP=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/;// Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes
	// The assumption is that future DOM event attribute names will begin with
	// 'on' and be composed of only English letters.
	var EVENT_HANDLER_ATTR_REGEXP=/^(on[a-z]+|formaction)$/;var bindingCache=createMap();function parseIsolateBindings(scope,directiveName,isController){var LOCAL_REGEXP=/^([@&]|[=<](\*?))(\??)\s*([\w$]*)$/;var bindings=createMap();forEach(scope,function(definition,scopeName){definition=definition.trim();if(definition in bindingCache){bindings[scopeName]=bindingCache[definition];return;}var match=definition.match(LOCAL_REGEXP);if(!match){throw $compileMinErr('iscp','Invalid {3} for directive \'{0}\'.'+' Definition: {... {1}: \'{2}\' ...}',directiveName,scopeName,definition,isController?'controller bindings definition':'isolate scope definition');}bindings[scopeName]={mode:match[1][0],collection:match[2]==='*',optional:match[3]==='?',attrName:match[4]||scopeName};if(match[4]){bindingCache[definition]=bindings[scopeName];}});return bindings;}function parseDirectiveBindings(directive,directiveName){var bindings={isolateScope:null,bindToController:null};if(isObject(directive.scope)){if(directive.bindToController===true){bindings.bindToController=parseIsolateBindings(directive.scope,directiveName,true);bindings.isolateScope={};}else{bindings.isolateScope=parseIsolateBindings(directive.scope,directiveName,false);}}if(isObject(directive.bindToController)){bindings.bindToController=parseIsolateBindings(directive.bindToController,directiveName,true);}if(bindings.bindToController&&!directive.controller){// There is no controller
	throw $compileMinErr('noctrl','Cannot bind to controller without directive \'{0}\'s controller.',directiveName);}return bindings;}function assertValidDirectiveName(name){var letter=name.charAt(0);if(!letter||letter!==lowercase(letter)){throw $compileMinErr('baddir','Directive/Component name \'{0}\' is invalid. The first character must be a lowercase letter',name);}if(name!==name.trim()){throw $compileMinErr('baddir','Directive/Component name \'{0}\' is invalid. The name should not contain leading or trailing whitespaces',name);}}function getDirectiveRequire(directive){var require=directive.require||directive.controller&&directive.name;if(!isArray(require)&&isObject(require)){forEach(require,function(value,key){var match=value.match(REQUIRE_PREFIX_REGEXP);var name=value.substring(match[0].length);if(!name)require[key]=match[0]+key;});}return require;}function getDirectiveRestrict(restrict,name){if(restrict&&!(isString(restrict)&&/[EACM]/.test(restrict))){throw $compileMinErr('badrestrict','Restrict property \'{0}\' of directive \'{1}\' is invalid',restrict,name);}return restrict||'EA';}/**
	   * @ngdoc method
	   * @name $compileProvider#directive
	   * @kind function
	   *
	   * @description
	   * Register a new directive with the compiler.
	   *
	   * @param {string|Object} name Name of the directive in camel-case (i.e. `ngBind` which will match
	   *    as `ng-bind`), or an object map of directives where the keys are the names and the values
	   *    are the factories.
	   * @param {Function|Array} directiveFactory An injectable directive factory function. See the
	   *    {@link guide/directive directive guide} and the {@link $compile compile API} for more info.
	   * @returns {ng.$compileProvider} Self for chaining.
	   */this.directive=function registerDirective(name,directiveFactory){assertArg(name,'name');assertNotHasOwnProperty(name,'directive');if(isString(name)){assertValidDirectiveName(name);assertArg(directiveFactory,'directiveFactory');if(!hasDirectives.hasOwnProperty(name)){hasDirectives[name]=[];$provide.factory(name+Suffix,['$injector','$exceptionHandler',function($injector,$exceptionHandler){var directives=[];forEach(hasDirectives[name],function(directiveFactory,index){try{var directive=$injector.invoke(directiveFactory);if(isFunction(directive)){directive={compile:valueFn(directive)};}else if(!directive.compile&&directive.link){directive.compile=valueFn(directive.link);}directive.priority=directive.priority||0;directive.index=index;directive.name=directive.name||name;directive.require=getDirectiveRequire(directive);directive.restrict=getDirectiveRestrict(directive.restrict,name);directive.$$moduleName=directiveFactory.$$moduleName;directives.push(directive);}catch(e){$exceptionHandler(e);}});return directives;}]);}hasDirectives[name].push(directiveFactory);}else{forEach(name,reverseParams(registerDirective));}return this;};/**
	   * @ngdoc method
	   * @name $compileProvider#component
	   * @module ng
	   * @param {string|Object} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`),
	   *    or an object map of components where the keys are the names and the values are the component definition objects.
	   * @param {Object} options Component definition object (a simplified
	   *    {@link ng.$compile#directive-definition-object directive definition object}),
	   *    with the following properties (all optional):
	   *
	   *    - `controller` – `{(string|function()=}` – controller constructor function that should be
	   *      associated with newly created scope or the name of a {@link ng.$compile#-controller-
	   *      registered controller} if passed as a string. An empty `noop` function by default.
	   *    - `controllerAs` – `{string=}` – identifier name for to reference the controller in the component's scope.
	   *      If present, the controller will be published to scope under the `controllerAs` name.
	   *      If not present, this will default to be `$ctrl`.
	   *    - `template` – `{string=|function()=}` – html template as a string or a function that
	   *      returns an html template as a string which should be used as the contents of this component.
	   *      Empty string by default.
	   *
	   *      If `template` is a function, then it is {@link auto.$injector#invoke injected} with
	   *      the following locals:
	   *
	   *      - `$element` - Current element
	   *      - `$attrs` - Current attributes object for the element
	   *
	   *    - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html
	   *      template that should be used  as the contents of this component.
	   *
	   *      If `templateUrl` is a function, then it is {@link auto.$injector#invoke injected} with
	   *      the following locals:
	   *
	   *      - `$element` - Current element
	   *      - `$attrs` - Current attributes object for the element
	   *
	   *    - `bindings` – `{object=}` – defines bindings between DOM attributes and component properties.
	   *      Component properties are always bound to the component controller and not to the scope.
	   *      See {@link ng.$compile#-bindtocontroller- `bindToController`}.
	   *    - `transclude` – `{boolean=}` – whether {@link $compile#transclusion content transclusion} is enabled.
	   *      Disabled by default.
	   *    - `require` - `{Object<string, string>=}` - requires the controllers of other directives and binds them to
	   *      this component's controller. The object keys specify the property names under which the required
	   *      controllers (object values) will be bound. See {@link ng.$compile#-require- `require`}.
	   *    - `$...` – additional properties to attach to the directive factory function and the controller
	   *      constructor function. (This is used by the component router to annotate)
	   *
	   * @returns {ng.$compileProvider} the compile provider itself, for chaining of function calls.
	   * @description
	   * Register a **component definition** with the compiler. This is a shorthand for registering a special
	   * type of directive, which represents a self-contained UI component in your application. Such components
	   * are always isolated (i.e. `scope: {}`) and are always restricted to elements (i.e. `restrict: 'E'`).
	   *
	   * Component definitions are very simple and do not require as much configuration as defining general
	   * directives. Component definitions usually consist only of a template and a controller backing it.
	   *
	   * In order to make the definition easier, components enforce best practices like use of `controllerAs`,
	   * `bindToController`. They always have **isolate scope** and are restricted to elements.
	   *
	   * Here are a few examples of how you would usually define components:
	   *
	   * ```js
	   *   var myMod = angular.module(...);
	   *   myMod.component('myComp', {
	   *     template: '<div>My name is {{$ctrl.name}}</div>',
	   *     controller: function() {
	   *       this.name = 'shahar';
	   *     }
	   *   });
	   *
	   *   myMod.component('myComp', {
	   *     template: '<div>My name is {{$ctrl.name}}</div>',
	   *     bindings: {name: '@'}
	   *   });
	   *
	   *   myMod.component('myComp', {
	   *     templateUrl: 'views/my-comp.html',
	   *     controller: 'MyCtrl',
	   *     controllerAs: 'ctrl',
	   *     bindings: {name: '@'}
	   *   });
	   *
	   * ```
	   * For more examples, and an in-depth guide, see the {@link guide/component component guide}.
	   *
	   * <br />
	   * See also {@link ng.$compileProvider#directive $compileProvider.directive()}.
	   */this.component=function registerComponent(name,options){if(!isString(name)){forEach(name,reverseParams(bind(this,registerComponent)));return this;}var controller=options.controller||function(){};function factory($injector){function makeInjectable(fn){if(isFunction(fn)||isArray(fn)){return(/** @this */function(tElement,tAttrs){return $injector.invoke(fn,this,{$element:tElement,$attrs:tAttrs});});}else{return fn;}}var template=!options.template&&!options.templateUrl?'':options.template;var ddo={controller:controller,controllerAs:identifierForController(options.controller)||options.controllerAs||'$ctrl',template:makeInjectable(template),templateUrl:makeInjectable(options.templateUrl),transclude:options.transclude,scope:{},bindToController:options.bindings||{},restrict:'E',require:options.require};// Copy annotations (starting with $) over to the DDO
	forEach(options,function(val,key){if(key.charAt(0)==='$')ddo[key]=val;});return ddo;}// TODO(pete) remove the following `forEach` before we release 1.6.0
	// The component-router@0.2.0 looks for the annotations on the controller constructor
	// Nothing in AngularJS looks for annotations on the factory function but we can't remove
	// it from 1.5.x yet.
	// Copy any annotation properties (starting with $) over to the factory and controller constructor functions
	// These could be used by libraries such as the new component router
	forEach(options,function(val,key){if(key.charAt(0)==='$'){factory[key]=val;// Don't try to copy over annotations to named controller
	if(isFunction(controller))controller[key]=val;}});factory.$inject=['$injector'];return this.directive(name,factory);};/**
	   * @ngdoc method
	   * @name $compileProvider#aHrefSanitizationTrustedUrlList
	   * @kind function
	   *
	   * @description
	   * Retrieves or overrides the default regular expression that is used for determining trusted safe
	   * urls during a[href] sanitization.
	   *
	   * The sanitization is a security measure aimed at preventing XSS attacks via html links.
	   *
	   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
	   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationTrustedUrlList`
	   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
	   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
	   *
	   * @param {RegExp=} regexp New regexp to trust urls with.
	   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
	   *    chaining otherwise.
	   */this.aHrefSanitizationTrustedUrlList=function(regexp){if(isDefined(regexp)){$$sanitizeUriProvider.aHrefSanitizationTrustedUrlList(regexp);return this;}else{return $$sanitizeUriProvider.aHrefSanitizationTrustedUrlList();}};/**
	   * @ngdoc method
	   * @name $compileProvider#aHrefSanitizationWhitelist
	   * @kind function
	   *
	   * @deprecated
	   * sinceVersion="1.8.1"
	   *
	   * This method is deprecated. Use {@link $compileProvider#aHrefSanitizationTrustedUrlList
	   * aHrefSanitizationTrustedUrlList} instead.
	   */Object.defineProperty(this,'aHrefSanitizationWhitelist',{get:function get(){return this.aHrefSanitizationTrustedUrlList;},set:function set(value){this.aHrefSanitizationTrustedUrlList=value;}});/**
	   * @ngdoc method
	   * @name $compileProvider#imgSrcSanitizationTrustedUrlList
	   * @kind function
	   *
	   * @description
	   * Retrieves or overrides the default regular expression that is used for determining trusted safe
	   * urls during img[src] sanitization.
	   *
	   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
	   *
	   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
	   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationTrustedUrlList`
	   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
	   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
	   *
	   * @param {RegExp=} regexp New regexp to trust urls with.
	   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
	   *    chaining otherwise.
	   */this.imgSrcSanitizationTrustedUrlList=function(regexp){if(isDefined(regexp)){$$sanitizeUriProvider.imgSrcSanitizationTrustedUrlList(regexp);return this;}else{return $$sanitizeUriProvider.imgSrcSanitizationTrustedUrlList();}};/**
	   * @ngdoc method
	   * @name $compileProvider#imgSrcSanitizationWhitelist
	   * @kind function
	   *
	   * @deprecated
	   * sinceVersion="1.8.1"
	   *
	   * This method is deprecated. Use {@link $compileProvider#imgSrcSanitizationTrustedUrlList
	   * imgSrcSanitizationTrustedUrlList} instead.
	   */Object.defineProperty(this,'imgSrcSanitizationWhitelist',{get:function get(){return this.imgSrcSanitizationTrustedUrlList;},set:function set(value){this.imgSrcSanitizationTrustedUrlList=value;}});/**
	   * @ngdoc method
	   * @name  $compileProvider#debugInfoEnabled
	   *
	   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the
	   * current debugInfoEnabled state
	   * @returns {*} current value if used as getter or itself (chaining) if used as setter
	   *
	   * @kind function
	   *
	   * @description
	   * Call this method to enable/disable various debug runtime information in the compiler such as adding
	   * binding information and a reference to the current scope on to DOM elements.
	   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope
	   * * `ng-binding` CSS class
	   * * `ng-scope` and `ng-isolated-scope` CSS classes
	   * * `$binding` data property containing an array of the binding expressions
	   * * Data properties used by the {@link angular.element#methods `scope()`/`isolateScope()` methods} to return
	   *   the element's scope.
	   * * Placeholder comments will contain information about what directive and binding caused the placeholder.
	   *   E.g. `<!-- ngIf: shouldShow() -->`.
	   *
	   * You may want to disable this in production for a significant performance boost. See
	   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.
	   *
	   * The default value is true.
	   */var debugInfoEnabled=true;this.debugInfoEnabled=function(enabled){if(isDefined(enabled)){debugInfoEnabled=enabled;return this;}return debugInfoEnabled;};/**
	   * @ngdoc method
	   * @name  $compileProvider#strictComponentBindingsEnabled
	   *
	   * @param {boolean=} enabled update the strictComponentBindingsEnabled state if provided,
	   * otherwise return the current strictComponentBindingsEnabled state.
	   * @returns {*} current value if used as getter or itself (chaining) if used as setter
	   *
	   * @kind function
	   *
	   * @description
	   * Call this method to enable / disable the strict component bindings check. If enabled, the
	   * compiler will enforce that all scope / controller bindings of a
	   * {@link $compileProvider#directive directive} / {@link $compileProvider#component component}
	   * that are not set as optional with `?`, must be provided when the directive is instantiated.
	   * If not provided, the compiler will throw the
	   * {@link error/$compile/missingattr $compile:missingattr error}.
	   *
	   * The default value is false.
	   */var strictComponentBindingsEnabled=false;this.strictComponentBindingsEnabled=function(enabled){if(isDefined(enabled)){strictComponentBindingsEnabled=enabled;return this;}return strictComponentBindingsEnabled;};var TTL=10;/**
	   * @ngdoc method
	   * @name $compileProvider#onChangesTtl
	   * @description
	   *
	   * Sets the number of times `$onChanges` hooks can trigger new changes before giving up and
	   * assuming that the model is unstable.
	   *
	   * The current default is 10 iterations.
	   *
	   * In complex applications it's possible that dependencies between `$onChanges` hooks and bindings will result
	   * in several iterations of calls to these hooks. However if an application needs more than the default 10
	   * iterations to stabilize then you should investigate what is causing the model to continuously change during
	   * the `$onChanges` hook execution.
	   *
	   * Increasing the TTL could have performance implications, so you should not change it without proper justification.
	   *
	   * @param {number} limit The number of `$onChanges` hook iterations.
	   * @returns {number|object} the current limit (or `this` if called as a setter for chaining)
	   */this.onChangesTtl=function(value){if(arguments.length){TTL=value;return this;}return TTL;};var commentDirectivesEnabledConfig=true;/**
	   * @ngdoc method
	   * @name $compileProvider#commentDirectivesEnabled
	   * @description
	   *
	   * It indicates to the compiler
	   * whether or not directives on comments should be compiled.
	   * Defaults to `true`.
	   *
	   * Calling this function with false disables the compilation of directives
	   * on comments for the whole application.
	   * This results in a compilation performance gain,
	   * as the compiler doesn't have to check comments when looking for directives.
	   * This should however only be used if you are sure that no comment directives are used in
	   * the application (including any 3rd party directives).
	   *
	   * @param {boolean} enabled `false` if the compiler may ignore directives on comments
	   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
	   */this.commentDirectivesEnabled=function(value){if(arguments.length){commentDirectivesEnabledConfig=value;return this;}return commentDirectivesEnabledConfig;};var cssClassDirectivesEnabledConfig=true;/**
	   * @ngdoc method
	   * @name $compileProvider#cssClassDirectivesEnabled
	   * @description
	   *
	   * It indicates to the compiler
	   * whether or not directives on element classes should be compiled.
	   * Defaults to `true`.
	   *
	   * Calling this function with false disables the compilation of directives
	   * on element classes for the whole application.
	   * This results in a compilation performance gain,
	   * as the compiler doesn't have to check element classes when looking for directives.
	   * This should however only be used if you are sure that no class directives are used in
	   * the application (including any 3rd party directives).
	   *
	   * @param {boolean} enabled `false` if the compiler may ignore directives on element classes
	   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
	   */this.cssClassDirectivesEnabled=function(value){if(arguments.length){cssClassDirectivesEnabledConfig=value;return this;}return cssClassDirectivesEnabledConfig;};/**
	   * The security context of DOM Properties.
	   * @private
	   */var PROP_CONTEXTS=createMap();/**
	   * @ngdoc method
	   * @name $compileProvider#addPropertySecurityContext
	   * @description
	   *
	   * Defines the security context for DOM properties bound by ng-prop-*.
	   *
	   * @param {string} elementName The element name or '*' to match any element.
	   * @param {string} propertyName The DOM property name.
	   * @param {string} ctx The {@link $sce} security context in which this value is safe for use, e.g. `$sce.URL`
	   * @returns {object} `this` for chaining
	   */this.addPropertySecurityContext=function(elementName,propertyName,ctx){var key=elementName.toLowerCase()+'|'+propertyName.toLowerCase();if(key in PROP_CONTEXTS&&PROP_CONTEXTS[key]!==ctx){throw $compileMinErr('ctxoverride','Property context \'{0}.{1}\' already set to \'{2}\', cannot override to \'{3}\'.',elementName,propertyName,PROP_CONTEXTS[key],ctx);}PROP_CONTEXTS[key]=ctx;return this;};/* Default property contexts.
	   *
	   * Copy of https://github.com/angular/angular/blob/6.0.6/packages/compiler/src/schema/dom_security_schema.ts#L31-L58
	   * Changing:
	   * - SecurityContext.* => SCE_CONTEXTS/$sce.*
	   * - STYLE => CSS
	   * - various URL => MEDIA_URL
	   * - *|formAction, form|action URL => RESOURCE_URL (like the attribute)
	   */(function registerNativePropertyContexts(){function registerContext(ctx,values){forEach(values,function(v){PROP_CONTEXTS[v.toLowerCase()]=ctx;});}registerContext(SCE_CONTEXTS.HTML,['iframe|srcdoc','*|innerHTML','*|outerHTML']);registerContext(SCE_CONTEXTS.CSS,['*|style']);registerContext(SCE_CONTEXTS.URL,['area|href','area|ping','a|href','a|ping','blockquote|cite','body|background','del|cite','input|src','ins|cite','q|cite']);registerContext(SCE_CONTEXTS.MEDIA_URL,['audio|src','img|src','img|srcset','source|src','source|srcset','track|src','video|src','video|poster']);registerContext(SCE_CONTEXTS.RESOURCE_URL,['*|formAction','applet|code','applet|codebase','base|href','embed|src','frame|src','form|action','head|profile','html|manifest','iframe|src','link|href','media|src','object|codebase','object|data','script|src']);})();this.$get=['$injector','$interpolate','$exceptionHandler','$templateRequest','$parse','$controller','$rootScope','$sce','$animate',function($injector,$interpolate,$exceptionHandler,$templateRequest,$parse,$controller,$rootScope,$sce,$animate){var SIMPLE_ATTR_NAME=/^\w/;var specialAttrHolder=window.document.createElement('div');var commentDirectivesEnabled=commentDirectivesEnabledConfig;var cssClassDirectivesEnabled=cssClassDirectivesEnabledConfig;var onChangesTtl=TTL;// The onChanges hooks should all be run together in a single digest
	// When changes occur, the call to trigger their hooks will be added to this queue
	var onChangesQueue;// This function is called in a $$postDigest to trigger all the onChanges hooks in a single digest
	function flushOnChangesQueue(){try{if(! --onChangesTtl){// We have hit the TTL limit so reset everything
	onChangesQueue=undefined;throw $compileMinErr('infchng','{0} $onChanges() iterations reached. Aborting!\n',TTL);}// We must run this hook in an apply since the $$postDigest runs outside apply
	$rootScope.$apply(function(){for(var i=0,ii=onChangesQueue.length;i<ii;++i){try{onChangesQueue[i]();}catch(e){$exceptionHandler(e);}}// Reset the queue to trigger a new schedule next time there is a change
	onChangesQueue=undefined;});}finally{onChangesTtl++;}}function sanitizeSrcset(value,invokeType){if(!value){return value;}if(!isString(value)){throw $compileMinErr('srcset','Can\'t pass trusted values to `{0}`: "{1}"',invokeType,value.toString());}// Such values are a bit too complex to handle automatically inside $sce.
	// Instead, we sanitize each of the URIs individually, which works, even dynamically.
	// It's not possible to work around this using `$sce.trustAsMediaUrl`.
	// If you want to programmatically set explicitly trusted unsafe URLs, you should use
	// `$sce.trustAsHtml` on the whole `img` tag and inject it into the DOM using the
	// `ng-bind-html` directive.
	var result='';// first check if there are spaces because it's not the same pattern
	var trimmedSrcset=trim(value);//                (   999x   ,|   999w   ,|   ,|,   )
	var srcPattern=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;var pattern=/\s/.test(trimmedSrcset)?srcPattern:/(,)/;// split srcset into tuple of uri and descriptor except for the last item
	var rawUris=trimmedSrcset.split(pattern);// for each tuples
	var nbrUrisWith2parts=Math.floor(rawUris.length/2);for(var i=0;i<nbrUrisWith2parts;i++){var innerIdx=i*2;// sanitize the uri
	result+=$sce.getTrustedMediaUrl(trim(rawUris[innerIdx]));// add the descriptor
	result+=' '+trim(rawUris[innerIdx+1]);}// split the last item into uri and descriptor
	var lastTuple=trim(rawUris[i*2]).split(/\s/);// sanitize the last uri
	result+=$sce.getTrustedMediaUrl(trim(lastTuple[0]));// and add the last descriptor if any
	if(lastTuple.length===2){result+=' '+trim(lastTuple[1]);}return result;}function Attributes(element,attributesToCopy){if(attributesToCopy){var keys=Object.keys(attributesToCopy);var i,l,key;for(i=0,l=keys.length;i<l;i++){key=keys[i];this[key]=attributesToCopy[key];}}else{this.$attr={};}this.$$element=element;}Attributes.prototype={/**
	       * @ngdoc method
	       * @name $compile.directive.Attributes#$normalize
	       * @kind function
	       *
	       * @description
	       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or
	       * `data-`) to its normalized, camelCase form.
	       *
	       * Also there is special case for Moz prefix starting with upper case letter.
	       *
	       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}
	       *
	       * @param {string} name Name to normalize
	       */$normalize:directiveNormalize,/**
	       * @ngdoc method
	       * @name $compile.directive.Attributes#$addClass
	       * @kind function
	       *
	       * @description
	       * Adds the CSS class value specified by the classVal parameter to the element. If animations
	       * are enabled then an animation will be triggered for the class addition.
	       *
	       * @param {string} classVal The className value that will be added to the element
	       */$addClass:function $addClass(classVal){if(classVal&&classVal.length>0){$animate.addClass(this.$$element,classVal);}},/**
	       * @ngdoc method
	       * @name $compile.directive.Attributes#$removeClass
	       * @kind function
	       *
	       * @description
	       * Removes the CSS class value specified by the classVal parameter from the element. If
	       * animations are enabled then an animation will be triggered for the class removal.
	       *
	       * @param {string} classVal The className value that will be removed from the element
	       */$removeClass:function $removeClass(classVal){if(classVal&&classVal.length>0){$animate.removeClass(this.$$element,classVal);}},/**
	       * @ngdoc method
	       * @name $compile.directive.Attributes#$updateClass
	       * @kind function
	       *
	       * @description
	       * Adds and removes the appropriate CSS class values to the element based on the difference
	       * between the new and old CSS class values (specified as newClasses and oldClasses).
	       *
	       * @param {string} newClasses The current CSS className value
	       * @param {string} oldClasses The former CSS className value
	       */$updateClass:function $updateClass(newClasses,oldClasses){var toAdd=tokenDifference(newClasses,oldClasses);if(toAdd&&toAdd.length){$animate.addClass(this.$$element,toAdd);}var toRemove=tokenDifference(oldClasses,newClasses);if(toRemove&&toRemove.length){$animate.removeClass(this.$$element,toRemove);}},/**
	       * Set a normalized attribute on the element in a way such that all directives
	       * can share the attribute. This function properly handles boolean attributes.
	       * @param {string} key Normalized key. (ie ngAttribute)
	       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.
	       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.
	       *     Defaults to true.
	       * @param {string=} attrName Optional none normalized name. Defaults to key.
	       */$set:function $set(key,value,writeAttr,attrName){// TODO: decide whether or not to throw an error if "class"
	// is set through this function since it may cause $updateClass to
	// become unstable.
	var node=this.$$element[0],booleanKey=getBooleanAttrName(node,key),aliasedKey=getAliasedAttrName(key),observer=key,nodeName;if(booleanKey){this.$$element.prop(key,value);attrName=booleanKey;}else if(aliasedKey){this[aliasedKey]=value;observer=aliasedKey;}this[key]=value;// translate normalized key to actual key
	if(attrName){this.$attr[key]=attrName;}else{attrName=this.$attr[key];if(!attrName){this.$attr[key]=attrName=snake_case(key,'-');}}nodeName=nodeName_(this.$$element);// Sanitize img[srcset] values.
	if(nodeName==='img'&&key==='srcset'){this[key]=value=sanitizeSrcset(value,'$set(\'srcset\', value)');}if(writeAttr!==false){if(value===null||isUndefined(value)){this.$$element.removeAttr(attrName);}else{if(SIMPLE_ATTR_NAME.test(attrName)){// jQuery skips special boolean attrs treatment in XML nodes for
	// historical reasons and hence AngularJS cannot freely call
	// `.attr(attrName, false) with such attributes. To avoid issues
	// in XHTML, call `removeAttr` in such cases instead.
	// See https://github.com/jquery/jquery/issues/4249
	if(booleanKey&&value===false){this.$$element.removeAttr(attrName);}else{this.$$element.attr(attrName,value);}}else{setSpecialAttr(this.$$element[0],attrName,value);}}}// fire observers
	var $$observers=this.$$observers;if($$observers){forEach($$observers[observer],function(fn){try{fn(value);}catch(e){$exceptionHandler(e);}});}},/**
	       * @ngdoc method
	       * @name $compile.directive.Attributes#$observe
	       * @kind function
	       *
	       * @description
	       * Observes an interpolated attribute.
	       *
	       * The observer function will be invoked once during the next `$digest` following
	       * compilation. The observer is then invoked whenever the interpolated value
	       * changes.
	       *
	       * @param {string} key Normalized key. (ie ngAttribute) .
	       * @param {function(interpolatedValue)} fn Function that will be called whenever
	                the interpolated value of the attribute changes.
	       *        See the {@link guide/interpolation#how-text-and-attribute-bindings-work Interpolation
	       *        guide} for more info.
	       * @returns {function()} Returns a deregistration function for this observer.
	       */$observe:function $observe(key,fn){var attrs=this,$$observers=attrs.$$observers||(attrs.$$observers=createMap()),listeners=$$observers[key]||($$observers[key]=[]);listeners.push(fn);$rootScope.$evalAsync(function(){if(!listeners.$$inter&&attrs.hasOwnProperty(key)&&!isUndefined(attrs[key])){// no one registered attribute interpolation function, so lets call it manually
	fn(attrs[key]);}});return function(){arrayRemove(listeners,fn);};}};function setSpecialAttr(element,attrName,value){// Attributes names that do not start with letters (such as `(click)`) cannot be set using `setAttribute`
	// so we have to jump through some hoops to get such an attribute
	// https://github.com/angular/angular.js/pull/13318
	specialAttrHolder.innerHTML='<span '+attrName+'>';var attributes=specialAttrHolder.firstChild.attributes;var attribute=attributes[0];// We have to remove the attribute from its container element before we can add it to the destination element
	attributes.removeNamedItem(attribute.name);attribute.value=value;element.attributes.setNamedItem(attribute);}function safeAddClass($element,className){try{$element.addClass(className);}catch(e){// ignore, since it means that we are trying to set class on
	// SVG element, where class name is read-only.
	}}var startSymbol=$interpolate.startSymbol(),endSymbol=$interpolate.endSymbol(),denormalizeTemplate=startSymbol==='{{'&&endSymbol==='}}'?identity:function denormalizeTemplate(template){return template.replace(/\{\{/g,startSymbol).replace(/}}/g,endSymbol);},NG_PREFIX_BINDING=/^ng(Attr|Prop|On)([A-Z].*)$/;var MULTI_ELEMENT_DIR_RE=/^(.+)Start$/;compile.$$addBindingInfo=debugInfoEnabled?function $$addBindingInfo($element,binding){var bindings=$element.data('$binding')||[];if(isArray(binding)){bindings=bindings.concat(binding);}else{bindings.push(binding);}$element.data('$binding',bindings);}:noop;compile.$$addBindingClass=debugInfoEnabled?function $$addBindingClass($element){safeAddClass($element,'ng-binding');}:noop;compile.$$addScopeInfo=debugInfoEnabled?function $$addScopeInfo($element,scope,isolated,noTemplate){var dataName=isolated?noTemplate?'$isolateScopeNoTemplate':'$isolateScope':'$scope';$element.data(dataName,scope);}:noop;compile.$$addScopeClass=debugInfoEnabled?function $$addScopeClass($element,isolated){safeAddClass($element,isolated?'ng-isolate-scope':'ng-scope');}:noop;compile.$$createComment=function(directiveName,comment){var content='';if(debugInfoEnabled){content=' '+(directiveName||'')+': ';if(comment)content+=comment+' ';}return window.document.createComment(content);};return compile;//================================
	function compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext){if(!($compileNodes instanceof jqLite)){// jquery always rewraps, whereas we need to preserve the original selector so that we can
	// modify it.
	$compileNodes=jqLite($compileNodes);}var compositeLinkFn=compileNodes($compileNodes,transcludeFn,$compileNodes,maxPriority,ignoreDirective,previousCompileContext);compile.$$addScopeClass($compileNodes);var namespace=null;return function publicLinkFn(scope,cloneConnectFn,options){if(!$compileNodes){throw $compileMinErr('multilink','This element has already been linked.');}assertArg(scope,'scope');if(previousCompileContext&&previousCompileContext.needsNewScope){// A parent directive did a replace and a directive on this element asked
	// for transclusion, which caused us to lose a layer of element on which
	// we could hold the new transclusion scope, so we will create it manually
	// here.
	scope=scope.$parent.$new();}options=options||{};var parentBoundTranscludeFn=options.parentBoundTranscludeFn,transcludeControllers=options.transcludeControllers,futureParentElement=options.futureParentElement;// When `parentBoundTranscludeFn` is passed, it is a
	// `controllersBoundTransclude` function (it was previously passed
	// as `transclude` to directive.link) so we must unwrap it to get
	// its `boundTranscludeFn`
	if(parentBoundTranscludeFn&&parentBoundTranscludeFn.$$boundTransclude){parentBoundTranscludeFn=parentBoundTranscludeFn.$$boundTransclude;}if(!namespace){namespace=detectNamespaceForChildElements(futureParentElement);}var $linkNode;if(namespace!=='html'){// When using a directive with replace:true and templateUrl the $compileNodes
	// (or a child element inside of them)
	// might change, so we need to recreate the namespace adapted compileNodes
	// for call to the link function.
	// Note: This will already clone the nodes...
	$linkNode=jqLite(wrapTemplate(namespace,jqLite('<div></div>').append($compileNodes).html()));}else if(cloneConnectFn){// important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart
	// and sometimes changes the structure of the DOM.
	$linkNode=JQLitePrototype.clone.call($compileNodes);}else{$linkNode=$compileNodes;}if(transcludeControllers){for(var controllerName in transcludeControllers){$linkNode.data('$'+controllerName+'Controller',transcludeControllers[controllerName].instance);}}compile.$$addScopeInfo($linkNode,scope);if(cloneConnectFn)cloneConnectFn($linkNode,scope);if(compositeLinkFn)compositeLinkFn(scope,$linkNode,$linkNode,parentBoundTranscludeFn);if(!cloneConnectFn){$compileNodes=compositeLinkFn=null;}return $linkNode;};}function detectNamespaceForChildElements(parentElement){// TODO: Make this detect MathML as well...
	var node=parentElement&&parentElement[0];if(!node){return'html';}else{return nodeName_(node)!=='foreignobject'&&toString.call(node).match(/SVG/)?'svg':'html';}}/**
	     * Compile function matches each node in nodeList against the directives. Once all directives
	     * for a particular node are collected their compile functions are executed. The compile
	     * functions return values - the linking functions - are combined into a composite linking
	     * function, which is the a linking function for the node.
	     *
	     * @param {NodeList} nodeList an array of nodes or NodeList to compile
	     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
	     *        scope argument is auto-generated to the new child of the transcluded parent scope.
	     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then
	     *        the rootElement must be set the jqLite collection of the compile root. This is
	     *        needed so that the jqLite collection items can be replaced with widgets.
	     * @param {number=} maxPriority Max directive priority.
	     * @returns {Function} A composite linking function of all of the matched directives or null.
	     */function compileNodes(nodeList,transcludeFn,$rootElement,maxPriority,ignoreDirective,previousCompileContext){var linkFns=[],// `nodeList` can be either an element's `.childNodes` (live NodeList)
	// or a jqLite/jQuery collection or an array
	notLiveList=isArray(nodeList)||nodeList instanceof jqLite,attrs,directives,nodeLinkFn,childNodes,childLinkFn,linkFnFound,nodeLinkFnFound;for(var i=0;i<nodeList.length;i++){attrs=new Attributes();// Support: IE 11 only
	// Workaround for #11781 and #14924
	if(msie===11){mergeConsecutiveTextNodes(nodeList,i,notLiveList);}// We must always refer to `nodeList[i]` hereafter,
	// since the nodes can be replaced underneath us.
	directives=collectDirectives(nodeList[i],[],attrs,i===0?maxPriority:undefined,ignoreDirective);nodeLinkFn=directives.length?applyDirectivesToNode(directives,nodeList[i],attrs,transcludeFn,$rootElement,null,[],[],previousCompileContext):null;if(nodeLinkFn&&nodeLinkFn.scope){compile.$$addScopeClass(attrs.$$element);}childLinkFn=nodeLinkFn&&nodeLinkFn.terminal||!(childNodes=nodeList[i].childNodes)||!childNodes.length?null:compileNodes(childNodes,nodeLinkFn?(nodeLinkFn.transcludeOnThisElement||!nodeLinkFn.templateOnThisElement)&&nodeLinkFn.transclude:transcludeFn);if(nodeLinkFn||childLinkFn){linkFns.push(i,nodeLinkFn,childLinkFn);linkFnFound=true;nodeLinkFnFound=nodeLinkFnFound||nodeLinkFn;}//use the previous context only for the first element in the virtual group
	previousCompileContext=null;}// return a linking function if we have found anything, null otherwise
	return linkFnFound?compositeLinkFn:null;function compositeLinkFn(scope,nodeList,$rootElement,parentBoundTranscludeFn){var nodeLinkFn,childLinkFn,node,childScope,i,ii,idx,childBoundTranscludeFn;var stableNodeList;if(nodeLinkFnFound){// copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our
	// offsets don't get screwed up
	var nodeListLength=nodeList.length;stableNodeList=new Array(nodeListLength);// create a sparse array by only copying the elements which have a linkFn
	for(i=0;i<linkFns.length;i+=3){idx=linkFns[i];stableNodeList[idx]=nodeList[idx];}}else{stableNodeList=nodeList;}for(i=0,ii=linkFns.length;i<ii;){node=stableNodeList[linkFns[i++]];nodeLinkFn=linkFns[i++];childLinkFn=linkFns[i++];if(nodeLinkFn){if(nodeLinkFn.scope){childScope=scope.$new();compile.$$addScopeInfo(jqLite(node),childScope);}else{childScope=scope;}if(nodeLinkFn.transcludeOnThisElement){childBoundTranscludeFn=createBoundTranscludeFn(scope,nodeLinkFn.transclude,parentBoundTranscludeFn);}else if(!nodeLinkFn.templateOnThisElement&&parentBoundTranscludeFn){childBoundTranscludeFn=parentBoundTranscludeFn;}else if(!parentBoundTranscludeFn&&transcludeFn){childBoundTranscludeFn=createBoundTranscludeFn(scope,transcludeFn);}else{childBoundTranscludeFn=null;}nodeLinkFn(childLinkFn,childScope,node,$rootElement,childBoundTranscludeFn);}else if(childLinkFn){childLinkFn(scope,node.childNodes,undefined,parentBoundTranscludeFn);}}}}function mergeConsecutiveTextNodes(nodeList,idx,notLiveList){var node=nodeList[idx];var parent=node.parentNode;var sibling;if(node.nodeType!==NODE_TYPE_TEXT){return;}while(true){sibling=parent?node.nextSibling:nodeList[idx+1];if(!sibling||sibling.nodeType!==NODE_TYPE_TEXT){break;}node.nodeValue=node.nodeValue+sibling.nodeValue;if(sibling.parentNode){sibling.parentNode.removeChild(sibling);}if(notLiveList&&sibling===nodeList[idx+1]){nodeList.splice(idx+1,1);}}}function createBoundTranscludeFn(scope,transcludeFn,previousBoundTranscludeFn){function boundTranscludeFn(transcludedScope,cloneFn,controllers,futureParentElement,containingScope){if(!transcludedScope){transcludedScope=scope.$new(false,containingScope);transcludedScope.$$transcluded=true;}return transcludeFn(transcludedScope,cloneFn,{parentBoundTranscludeFn:previousBoundTranscludeFn,transcludeControllers:controllers,futureParentElement:futureParentElement});}// We need  to attach the transclusion slots onto the `boundTranscludeFn`
	// so that they are available inside the `controllersBoundTransclude` function
	var boundSlots=boundTranscludeFn.$$slots=createMap();for(var slotName in transcludeFn.$$slots){if(transcludeFn.$$slots[slotName]){boundSlots[slotName]=createBoundTranscludeFn(scope,transcludeFn.$$slots[slotName],previousBoundTranscludeFn);}else{boundSlots[slotName]=null;}}return boundTranscludeFn;}/**
	     * Looks for directives on the given node and adds them to the directive collection which is
	     * sorted.
	     *
	     * @param node Node to search.
	     * @param directives An array to which the directives are added to. This array is sorted before
	     *        the function returns.
	     * @param attrs The shared attrs object which is used to populate the normalized attributes.
	     * @param {number=} maxPriority Max directive priority.
	     */function collectDirectives(node,directives,attrs,maxPriority,ignoreDirective){var nodeType=node.nodeType,attrsMap=attrs.$attr,match,nodeName,className;switch(nodeType){case NODE_TYPE_ELEMENT:/* Element */nodeName=nodeName_(node);// use the node name: <directive>
	addDirective(directives,directiveNormalize(nodeName),'E',maxPriority,ignoreDirective);// iterate over the attributes
	for(var attr,name,nName,value,ngPrefixMatch,nAttrs=node.attributes,j=0,jj=nAttrs&&nAttrs.length;j<jj;j++){var attrStartName=false;var attrEndName=false;var isNgAttr=false,isNgProp=false,isNgEvent=false;var multiElementMatch;attr=nAttrs[j];name=attr.name;value=attr.value;nName=directiveNormalize(name.toLowerCase());// Support ng-attr-*, ng-prop-* and ng-on-*
	if(ngPrefixMatch=nName.match(NG_PREFIX_BINDING)){isNgAttr=ngPrefixMatch[1]==='Attr';isNgProp=ngPrefixMatch[1]==='Prop';isNgEvent=ngPrefixMatch[1]==='On';// Normalize the non-prefixed name
	name=name.replace(PREFIX_REGEXP,'').toLowerCase().substr(4+ngPrefixMatch[1].length).replace(/_(.)/g,function(match,letter){return letter.toUpperCase();});// Support *-start / *-end multi element directives
	}else if((multiElementMatch=nName.match(MULTI_ELEMENT_DIR_RE))&&directiveIsMultiElement(multiElementMatch[1])){attrStartName=name;attrEndName=name.substr(0,name.length-5)+'end';name=name.substr(0,name.length-6);}if(isNgProp||isNgEvent){attrs[nName]=value;attrsMap[nName]=attr.name;if(isNgProp){addPropertyDirective(node,directives,nName,name);}else{addEventDirective(directives,nName,name);}}else{// Update nName for cases where a prefix was removed
	// NOTE: the .toLowerCase() is unnecessary and causes https://github.com/angular/angular.js/issues/16624 for ng-attr-*
	nName=directiveNormalize(name.toLowerCase());attrsMap[nName]=name;if(isNgAttr||!attrs.hasOwnProperty(nName)){attrs[nName]=value;if(getBooleanAttrName(node,nName)){attrs[nName]=true;// presence means true
	}}addAttrInterpolateDirective(node,directives,value,nName,isNgAttr);addDirective(directives,nName,'A',maxPriority,ignoreDirective,attrStartName,attrEndName);}}if(nodeName==='input'&&node.getAttribute('type')==='hidden'){// Hidden input elements can have strange behaviour when navigating back to the page
	// This tells the browser not to try to cache and reinstate previous values
	node.setAttribute('autocomplete','off');}// use class as directive
	if(!cssClassDirectivesEnabled)break;className=node.className;if(isObject(className)){// Maybe SVGAnimatedString
	className=className.animVal;}if(isString(className)&&className!==''){while(match=CLASS_DIRECTIVE_REGEXP.exec(className)){nName=directiveNormalize(match[2]);if(addDirective(directives,nName,'C',maxPriority,ignoreDirective)){attrs[nName]=trim(match[3]);}className=className.substr(match.index+match[0].length);}}break;case NODE_TYPE_TEXT:/* Text Node */addTextInterpolateDirective(directives,node.nodeValue);break;case NODE_TYPE_COMMENT:/* Comment */if(!commentDirectivesEnabled)break;collectCommentDirectives(node,directives,attrs,maxPriority,ignoreDirective);break;}directives.sort(byPriority);return directives;}function collectCommentDirectives(node,directives,attrs,maxPriority,ignoreDirective){// function created because of performance, try/catch disables
	// the optimization of the whole function #14848
	try{var match=COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);if(match){var nName=directiveNormalize(match[1]);if(addDirective(directives,nName,'M',maxPriority,ignoreDirective)){attrs[nName]=trim(match[2]);}}}catch(e){// turns out that under some circumstances IE9 throws errors when one attempts to read
	// comment's node value.
	// Just ignore it and continue. (Can't seem to reproduce in test case.)
	}}/**
	     * Given a node with a directive-start it collects all of the siblings until it finds
	     * directive-end.
	     * @param node
	     * @param attrStart
	     * @param attrEnd
	     * @returns {*}
	     */function groupScan(node,attrStart,attrEnd){var nodes=[];var depth=0;if(attrStart&&node.hasAttribute&&node.hasAttribute(attrStart)){do{if(!node){throw $compileMinErr('uterdir','Unterminated attribute, found \'{0}\' but no matching \'{1}\' found.',attrStart,attrEnd);}if(node.nodeType===NODE_TYPE_ELEMENT){if(node.hasAttribute(attrStart))depth++;if(node.hasAttribute(attrEnd))depth--;}nodes.push(node);node=node.nextSibling;}while(depth>0);}else{nodes.push(node);}return jqLite(nodes);}/**
	     * Wrapper for linking function which converts normal linking function into a grouped
	     * linking function.
	     * @param linkFn
	     * @param attrStart
	     * @param attrEnd
	     * @returns {Function}
	     */function groupElementsLinkFnWrapper(linkFn,attrStart,attrEnd){return function groupedElementsLink(scope,element,attrs,controllers,transcludeFn){element=groupScan(element[0],attrStart,attrEnd);return linkFn(scope,element,attrs,controllers,transcludeFn);};}/**
	     * A function generator that is used to support both eager and lazy compilation
	     * linking function.
	     * @param eager
	     * @param $compileNodes
	     * @param transcludeFn
	     * @param maxPriority
	     * @param ignoreDirective
	     * @param previousCompileContext
	     * @returns {Function}
	     */function compilationGenerator(eager,$compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext){var compiled;if(eager){return compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext);}return(/** @this */function lazyCompilation(){if(!compiled){compiled=compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext);// Null out all of these references in order to make them eligible for garbage collection
	// since this is a potentially long lived closure
	$compileNodes=transcludeFn=previousCompileContext=null;}return compiled.apply(this,arguments);});}/**
	     * Once the directives have been collected, their compile functions are executed. This method
	     * is responsible for inlining directive templates as well as terminating the application
	     * of the directives if the terminal directive has been reached.
	     *
	     * @param {Array} directives Array of collected directives to execute their compile function.
	     *        this needs to be pre-sorted by priority order.
	     * @param {Node} compileNode The raw DOM node to apply the compile functions to
	     * @param {Object} templateAttrs The shared attribute function
	     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
	     *                                                  scope argument is auto-generated to the new
	     *                                                  child of the transcluded parent scope.
	     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this
	     *                              argument has the root jqLite array so that we can replace nodes
	     *                              on it.
	     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when
	     *                                           compiling the transclusion.
	     * @param {Array.<Function>} preLinkFns
	     * @param {Array.<Function>} postLinkFns
	     * @param {Object} previousCompileContext Context used for previous compilation of the current
	     *                                        node
	     * @returns {Function} linkFn
	     */function applyDirectivesToNode(directives,compileNode,templateAttrs,transcludeFn,jqCollection,originalReplaceDirective,preLinkFns,postLinkFns,previousCompileContext){previousCompileContext=previousCompileContext||{};var terminalPriority=-Number.MAX_VALUE,newScopeDirective=previousCompileContext.newScopeDirective,controllerDirectives=previousCompileContext.controllerDirectives,newIsolateScopeDirective=previousCompileContext.newIsolateScopeDirective,templateDirective=previousCompileContext.templateDirective,nonTlbTranscludeDirective=previousCompileContext.nonTlbTranscludeDirective,hasTranscludeDirective=false,hasTemplate=false,hasElementTranscludeDirective=previousCompileContext.hasElementTranscludeDirective,$compileNode=templateAttrs.$$element=jqLite(compileNode),directive,directiveName,$template,replaceDirective=originalReplaceDirective,childTranscludeFn=transcludeFn,linkFn,didScanForMultipleTransclusion=false,mightHaveMultipleTransclusionError=false,directiveValue;// executes all directives on the current element
	for(var i=0,ii=directives.length;i<ii;i++){directive=directives[i];var attrStart=directive.$$start;var attrEnd=directive.$$end;// collect multiblock sections
	if(attrStart){$compileNode=groupScan(compileNode,attrStart,attrEnd);}$template=undefined;if(terminalPriority>directive.priority){break;// prevent further processing of directives
	}directiveValue=directive.scope;if(directiveValue){// skip the check for directives with async templates, we'll check the derived sync
	// directive when the template arrives
	if(!directive.templateUrl){if(isObject(directiveValue)){// This directive is trying to add an isolated scope.
	// Check that there is no scope of any kind already
	assertNoDuplicate('new/isolated scope',newIsolateScopeDirective||newScopeDirective,directive,$compileNode);newIsolateScopeDirective=directive;}else{// This directive is trying to add a child scope.
	// Check that there is no isolated scope already
	assertNoDuplicate('new/isolated scope',newIsolateScopeDirective,directive,$compileNode);}}newScopeDirective=newScopeDirective||directive;}directiveName=directive.name;// If we encounter a condition that can result in transclusion on the directive,
	// then scan ahead in the remaining directives for others that may cause a multiple
	// transclusion error to be thrown during the compilation process.  If a matching directive
	// is found, then we know that when we encounter a transcluded directive, we need to eagerly
	// compile the `transclude` function rather than doing it lazily in order to throw
	// exceptions at the correct time
	if(!didScanForMultipleTransclusion&&(directive.replace&&(directive.templateUrl||directive.template)||directive.transclude&&!directive.$$tlb)){var candidateDirective;for(var scanningIndex=i+1;candidateDirective=directives[scanningIndex++];){if(candidateDirective.transclude&&!candidateDirective.$$tlb||candidateDirective.replace&&(candidateDirective.templateUrl||candidateDirective.template)){mightHaveMultipleTransclusionError=true;break;}}didScanForMultipleTransclusion=true;}if(!directive.templateUrl&&directive.controller){controllerDirectives=controllerDirectives||createMap();assertNoDuplicate('\''+directiveName+'\' controller',controllerDirectives[directiveName],directive,$compileNode);controllerDirectives[directiveName]=directive;}directiveValue=directive.transclude;if(directiveValue){hasTranscludeDirective=true;// Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.
	// This option should only be used by directives that know how to safely handle element transclusion,
	// where the transcluded nodes are added or replaced after linking.
	if(!directive.$$tlb){assertNoDuplicate('transclusion',nonTlbTranscludeDirective,directive,$compileNode);nonTlbTranscludeDirective=directive;}if(directiveValue==='element'){hasElementTranscludeDirective=true;terminalPriority=directive.priority;$template=$compileNode;$compileNode=templateAttrs.$$element=jqLite(compile.$$createComment(directiveName,templateAttrs[directiveName]));compileNode=$compileNode[0];replaceWith(jqCollection,sliceArgs($template),compileNode);childTranscludeFn=compilationGenerator(mightHaveMultipleTransclusionError,$template,transcludeFn,terminalPriority,replaceDirective&&replaceDirective.name,{// Don't pass in:
	// - controllerDirectives - otherwise we'll create duplicates controllers
	// - newIsolateScopeDirective or templateDirective - combining templates with
	//   element transclusion doesn't make sense.
	//
	// We need only nonTlbTranscludeDirective so that we prevent putting transclusion
	// on the same element more than once.
	nonTlbTranscludeDirective:nonTlbTranscludeDirective});}else{var slots=createMap();if(!isObject(directiveValue)){$template=jqLite(jqLiteClone(compileNode)).contents();}else{// We have transclusion slots,
	// collect them up, compile them and store their transclusion functions
	$template=window.document.createDocumentFragment();var slotMap=createMap();var filledSlots=createMap();// Parse the element selectors
	forEach(directiveValue,function(elementSelector,slotName){// If an element selector starts with a ? then it is optional
	var optional=elementSelector.charAt(0)==='?';elementSelector=optional?elementSelector.substring(1):elementSelector;slotMap[elementSelector]=slotName;// We explicitly assign `null` since this implies that a slot was defined but not filled.
	// Later when calling boundTransclusion functions with a slot name we only error if the
	// slot is `undefined`
	slots[slotName]=null;// filledSlots contains `true` for all slots that are either optional or have been
	// filled. This is used to check that we have not missed any required slots
	filledSlots[slotName]=optional;});// Add the matching elements into their slot
	forEach($compileNode.contents(),function(node){var slotName=slotMap[directiveNormalize(nodeName_(node))];if(slotName){filledSlots[slotName]=true;slots[slotName]=slots[slotName]||window.document.createDocumentFragment();slots[slotName].appendChild(node);}else{$template.appendChild(node);}});// Check for required slots that were not filled
	forEach(filledSlots,function(filled,slotName){if(!filled){throw $compileMinErr('reqslot','Required transclusion slot `{0}` was not filled.',slotName);}});for(var slotName in slots){if(slots[slotName]){// Only define a transclusion function if the slot was filled
	var slotCompileNodes=jqLite(slots[slotName].childNodes);slots[slotName]=compilationGenerator(mightHaveMultipleTransclusionError,slotCompileNodes,transcludeFn);}}$template=jqLite($template.childNodes);}$compileNode.empty();// clear contents
	childTranscludeFn=compilationGenerator(mightHaveMultipleTransclusionError,$template,transcludeFn,undefined,undefined,{needsNewScope:directive.$$isolateScope||directive.$$newScope});childTranscludeFn.$$slots=slots;}}if(directive.template){hasTemplate=true;assertNoDuplicate('template',templateDirective,directive,$compileNode);templateDirective=directive;directiveValue=isFunction(directive.template)?directive.template($compileNode,templateAttrs):directive.template;directiveValue=denormalizeTemplate(directiveValue);if(directive.replace){replaceDirective=directive;if(jqLiteIsTextNode(directiveValue)){$template=[];}else{$template=removeComments(wrapTemplate(directive.templateNamespace,trim(directiveValue)));}compileNode=$template[0];if($template.length!==1||compileNode.nodeType!==NODE_TYPE_ELEMENT){throw $compileMinErr('tplrt','Template for directive \'{0}\' must have exactly one root element. {1}',directiveName,'');}replaceWith(jqCollection,$compileNode,compileNode);var newTemplateAttrs={$attr:{}};// combine directives from the original node and from the template:
	// - take the array of directives for this element
	// - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)
	// - collect directives from the template and sort them by priority
	// - combine directives as: processed + template + unprocessed
	var templateDirectives=collectDirectives(compileNode,[],newTemplateAttrs);var unprocessedDirectives=directives.splice(i+1,directives.length-(i+1));if(newIsolateScopeDirective||newScopeDirective){// The original directive caused the current element to be replaced but this element
	// also needs to have a new scope, so we need to tell the template directives
	// that they would need to get their scope from further up, if they require transclusion
	markDirectiveScope(templateDirectives,newIsolateScopeDirective,newScopeDirective);}directives=directives.concat(templateDirectives).concat(unprocessedDirectives);mergeTemplateAttributes(templateAttrs,newTemplateAttrs);ii=directives.length;}else{$compileNode.html(directiveValue);}}if(directive.templateUrl){hasTemplate=true;assertNoDuplicate('template',templateDirective,directive,$compileNode);templateDirective=directive;if(directive.replace){replaceDirective=directive;}// eslint-disable-next-line no-func-assign
	nodeLinkFn=compileTemplateUrl(directives.splice(i,directives.length-i),$compileNode,templateAttrs,jqCollection,hasTranscludeDirective&&childTranscludeFn,preLinkFns,postLinkFns,{controllerDirectives:controllerDirectives,newScopeDirective:newScopeDirective!==directive&&newScopeDirective,newIsolateScopeDirective:newIsolateScopeDirective,templateDirective:templateDirective,nonTlbTranscludeDirective:nonTlbTranscludeDirective});ii=directives.length;}else if(directive.compile){try{linkFn=directive.compile($compileNode,templateAttrs,childTranscludeFn);var context=directive.$$originalDirective||directive;if(isFunction(linkFn)){addLinkFns(null,bind(context,linkFn),attrStart,attrEnd);}else if(linkFn){addLinkFns(bind(context,linkFn.pre),bind(context,linkFn.post),attrStart,attrEnd);}}catch(e){$exceptionHandler(e,startingTag($compileNode));}}if(directive.terminal){nodeLinkFn.terminal=true;terminalPriority=Math.max(terminalPriority,directive.priority);}}nodeLinkFn.scope=newScopeDirective&&newScopeDirective.scope===true;nodeLinkFn.transcludeOnThisElement=hasTranscludeDirective;nodeLinkFn.templateOnThisElement=hasTemplate;nodeLinkFn.transclude=childTranscludeFn;previousCompileContext.hasElementTranscludeDirective=hasElementTranscludeDirective;// might be normal or delayed nodeLinkFn depending on if templateUrl is present
	return nodeLinkFn;////////////////////
	function addLinkFns(pre,post,attrStart,attrEnd){if(pre){if(attrStart)pre=groupElementsLinkFnWrapper(pre,attrStart,attrEnd);pre.require=directive.require;pre.directiveName=directiveName;if(newIsolateScopeDirective===directive||directive.$$isolateScope){pre=cloneAndAnnotateFn(pre,{isolateScope:true});}preLinkFns.push(pre);}if(post){if(attrStart)post=groupElementsLinkFnWrapper(post,attrStart,attrEnd);post.require=directive.require;post.directiveName=directiveName;if(newIsolateScopeDirective===directive||directive.$$isolateScope){post=cloneAndAnnotateFn(post,{isolateScope:true});}postLinkFns.push(post);}}function nodeLinkFn(childLinkFn,scope,linkNode,$rootElement,boundTranscludeFn){var i,ii,linkFn,isolateScope,controllerScope,elementControllers,transcludeFn,$element,attrs,scopeBindingInfo;if(compileNode===linkNode){attrs=templateAttrs;$element=templateAttrs.$$element;}else{$element=jqLite(linkNode);attrs=new Attributes($element,templateAttrs);}controllerScope=scope;if(newIsolateScopeDirective){isolateScope=scope.$new(true);}else if(newScopeDirective){controllerScope=scope.$parent;}if(boundTranscludeFn){// track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`
	// is later passed as `parentBoundTranscludeFn` to `publicLinkFn`
	transcludeFn=controllersBoundTransclude;transcludeFn.$$boundTransclude=boundTranscludeFn;// expose the slots on the `$transclude` function
	transcludeFn.isSlotFilled=function(slotName){return!!boundTranscludeFn.$$slots[slotName];};}if(controllerDirectives){elementControllers=setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope,newIsolateScopeDirective);}if(newIsolateScopeDirective){// Initialize isolate scope bindings for new isolate scope directive.
	compile.$$addScopeInfo($element,isolateScope,true,!(templateDirective&&(templateDirective===newIsolateScopeDirective||templateDirective===newIsolateScopeDirective.$$originalDirective)));compile.$$addScopeClass($element,true);isolateScope.$$isolateBindings=newIsolateScopeDirective.$$isolateBindings;scopeBindingInfo=initializeDirectiveBindings(scope,attrs,isolateScope,isolateScope.$$isolateBindings,newIsolateScopeDirective);if(scopeBindingInfo.removeWatches){isolateScope.$on('$destroy',scopeBindingInfo.removeWatches);}}// Initialize bindToController bindings
	for(var name in elementControllers){var controllerDirective=controllerDirectives[name];var controller=elementControllers[name];var bindings=controllerDirective.$$bindings.bindToController;controller.instance=controller();$element.data('$'+controllerDirective.name+'Controller',controller.instance);controller.bindingInfo=initializeDirectiveBindings(controllerScope,attrs,controller.instance,bindings,controllerDirective);}// Bind the required controllers to the controller, if `require` is an object and `bindToController` is truthy
	forEach(controllerDirectives,function(controllerDirective,name){var require=controllerDirective.require;if(controllerDirective.bindToController&&!isArray(require)&&isObject(require)){extend(elementControllers[name].instance,getControllers(name,require,$element,elementControllers));}});// Handle the init and destroy lifecycle hooks on all controllers that have them
	forEach(elementControllers,function(controller){var controllerInstance=controller.instance;if(isFunction(controllerInstance.$onChanges)){try{controllerInstance.$onChanges(controller.bindingInfo.initialChanges);}catch(e){$exceptionHandler(e);}}if(isFunction(controllerInstance.$onInit)){try{controllerInstance.$onInit();}catch(e){$exceptionHandler(e);}}if(isFunction(controllerInstance.$doCheck)){controllerScope.$watch(function(){controllerInstance.$doCheck();});controllerInstance.$doCheck();}if(isFunction(controllerInstance.$onDestroy)){controllerScope.$on('$destroy',function callOnDestroyHook(){controllerInstance.$onDestroy();});}});// PRELINKING
	for(i=0,ii=preLinkFns.length;i<ii;i++){linkFn=preLinkFns[i];invokeLinkFn(linkFn,linkFn.isolateScope?isolateScope:scope,$element,attrs,linkFn.require&&getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),transcludeFn);}// RECURSION
	// We only pass the isolate scope, if the isolate directive has a template,
	// otherwise the child elements do not belong to the isolate directive.
	var scopeToChild=scope;if(newIsolateScopeDirective&&(newIsolateScopeDirective.template||newIsolateScopeDirective.templateUrl===null)){scopeToChild=isolateScope;}if(childLinkFn){childLinkFn(scopeToChild,linkNode.childNodes,undefined,boundTranscludeFn);}// POSTLINKING
	for(i=postLinkFns.length-1;i>=0;i--){linkFn=postLinkFns[i];invokeLinkFn(linkFn,linkFn.isolateScope?isolateScope:scope,$element,attrs,linkFn.require&&getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),transcludeFn);}// Trigger $postLink lifecycle hooks
	forEach(elementControllers,function(controller){var controllerInstance=controller.instance;if(isFunction(controllerInstance.$postLink)){controllerInstance.$postLink();}});// This is the function that is injected as `$transclude`.
	// Note: all arguments are optional!
	function controllersBoundTransclude(scope,cloneAttachFn,futureParentElement,slotName){var transcludeControllers;// No scope passed in:
	if(!isScope(scope)){slotName=futureParentElement;futureParentElement=cloneAttachFn;cloneAttachFn=scope;scope=undefined;}if(hasElementTranscludeDirective){transcludeControllers=elementControllers;}if(!futureParentElement){futureParentElement=hasElementTranscludeDirective?$element.parent():$element;}if(slotName){// slotTranscludeFn can be one of three things:
	//  * a transclude function - a filled slot
	//  * `null` - an optional slot that was not filled
	//  * `undefined` - a slot that was not declared (i.e. invalid)
	var slotTranscludeFn=boundTranscludeFn.$$slots[slotName];if(slotTranscludeFn){return slotTranscludeFn(scope,cloneAttachFn,transcludeControllers,futureParentElement,scopeToChild);}else if(isUndefined(slotTranscludeFn)){throw $compileMinErr('noslot','No parent directive that requires a transclusion with slot name "{0}". '+'Element: {1}',slotName,startingTag($element));}}else{return boundTranscludeFn(scope,cloneAttachFn,transcludeControllers,futureParentElement,scopeToChild);}}}}function getControllers(directiveName,require,$element,elementControllers){var value;if(isString(require)){var match=require.match(REQUIRE_PREFIX_REGEXP);var name=require.substring(match[0].length);var inheritType=match[1]||match[3];var optional=match[2]==='?';//If only parents then start at the parent element
	if(inheritType==='^^'){$element=$element.parent();//Otherwise attempt getting the controller from elementControllers in case
	//the element is transcluded (and has no data) and to avoid .data if possible
	}else{value=elementControllers&&elementControllers[name];value=value&&value.instance;}if(!value){var dataName='$'+name+'Controller';if(inheritType==='^^'&&$element[0]&&$element[0].nodeType===NODE_TYPE_DOCUMENT){// inheritedData() uses the documentElement when it finds the document, so we would
	// require from the element itself.
	value=null;}else{value=inheritType?$element.inheritedData(dataName):$element.data(dataName);}}if(!value&&!optional){throw $compileMinErr('ctreq','Controller \'{0}\', required by directive \'{1}\', can\'t be found!',name,directiveName);}}else if(isArray(require)){value=[];for(var i=0,ii=require.length;i<ii;i++){value[i]=getControllers(directiveName,require[i],$element,elementControllers);}}else if(isObject(require)){value={};forEach(require,function(controller,property){value[property]=getControllers(directiveName,controller,$element,elementControllers);});}return value||null;}function setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope,newIsolateScopeDirective){var elementControllers=createMap();for(var controllerKey in controllerDirectives){var directive=controllerDirectives[controllerKey];var locals={$scope:directive===newIsolateScopeDirective||directive.$$isolateScope?isolateScope:scope,$element:$element,$attrs:attrs,$transclude:transcludeFn};var controller=directive.controller;if(controller==='@'){controller=attrs[directive.name];}var controllerInstance=$controller(controller,locals,true,directive.controllerAs);// For directives with element transclusion the element is a comment.
	// In this case .data will not attach any data.
	// Instead, we save the controllers for the element in a local hash and attach to .data
	// later, once we have the actual element.
	elementControllers[directive.name]=controllerInstance;$element.data('$'+directive.name+'Controller',controllerInstance.instance);}return elementControllers;}// Depending upon the context in which a directive finds itself it might need to have a new isolated
	// or child scope created. For instance:
	// * if the directive has been pulled into a template because another directive with a higher priority
	// asked for element transclusion
	// * if the directive itself asks for transclusion but it is at the root of a template and the original
	// element was replaced. See https://github.com/angular/angular.js/issues/12936
	function markDirectiveScope(directives,isolateScope,newScope){for(var j=0,jj=directives.length;j<jj;j++){directives[j]=inherit(directives[j],{$$isolateScope:isolateScope,$$newScope:newScope});}}/**
	     * looks up the directive and decorates it with exception handling and proper parameters. We
	     * call this the boundDirective.
	     *
	     * @param {string} name name of the directive to look up.
	     * @param {string} location The directive must be found in specific format.
	     *   String containing any of theses characters:
	     *
	     *   * `E`: element name
	     *   * `A': attribute
	     *   * `C`: class
	     *   * `M`: comment
	     * @returns {boolean} true if directive was added.
	     */function addDirective(tDirectives,name,location,maxPriority,ignoreDirective,startAttrName,endAttrName){if(name===ignoreDirective)return null;var match=null;if(hasDirectives.hasOwnProperty(name)){for(var directive,directives=$injector.get(name+Suffix),i=0,ii=directives.length;i<ii;i++){directive=directives[i];if((isUndefined(maxPriority)||maxPriority>directive.priority)&&directive.restrict.indexOf(location)!==-1){if(startAttrName){directive=inherit(directive,{$$start:startAttrName,$$end:endAttrName});}if(!directive.$$bindings){var bindings=directive.$$bindings=parseDirectiveBindings(directive,directive.name);if(isObject(bindings.isolateScope)){directive.$$isolateBindings=bindings.isolateScope;}}tDirectives.push(directive);match=directive;}}}return match;}/**
	     * looks up the directive and returns true if it is a multi-element directive,
	     * and therefore requires DOM nodes between -start and -end markers to be grouped
	     * together.
	     *
	     * @param {string} name name of the directive to look up.
	     * @returns true if directive was registered as multi-element.
	     */function directiveIsMultiElement(name){if(hasDirectives.hasOwnProperty(name)){for(var directive,directives=$injector.get(name+Suffix),i=0,ii=directives.length;i<ii;i++){directive=directives[i];if(directive.multiElement){return true;}}}return false;}/**
	     * When the element is replaced with HTML template then the new attributes
	     * on the template need to be merged with the existing attributes in the DOM.
	     * The desired effect is to have both of the attributes present.
	     *
	     * @param {object} dst destination attributes (original DOM)
	     * @param {object} src source attributes (from the directive template)
	     */function mergeTemplateAttributes(dst,src){var srcAttr=src.$attr,dstAttr=dst.$attr;// reapply the old attributes to the new element
	forEach(dst,function(value,key){if(key.charAt(0)!=='$'){if(src[key]&&src[key]!==value){if(value.length){value+=(key==='style'?';':' ')+src[key];}else{value=src[key];}}dst.$set(key,value,true,srcAttr[key]);}});// copy the new attributes on the old attrs object
	forEach(src,function(value,key){// Check if we already set this attribute in the loop above.
	// `dst` will never contain hasOwnProperty as DOM parser won't let it.
	// You will get an "InvalidCharacterError: DOM Exception 5" error if you
	// have an attribute like "has-own-property" or "data-has-own-property", etc.
	if(!dst.hasOwnProperty(key)&&key.charAt(0)!=='$'){dst[key]=value;if(key!=='class'&&key!=='style'){dstAttr[key]=srcAttr[key];}}});}function compileTemplateUrl(directives,$compileNode,tAttrs,$rootElement,childTranscludeFn,preLinkFns,postLinkFns,previousCompileContext){var linkQueue=[],afterTemplateNodeLinkFn,afterTemplateChildLinkFn,beforeTemplateCompileNode=$compileNode[0],origAsyncDirective=directives.shift(),derivedSyncDirective=inherit(origAsyncDirective,{templateUrl:null,transclude:null,replace:null,$$originalDirective:origAsyncDirective}),templateUrl=isFunction(origAsyncDirective.templateUrl)?origAsyncDirective.templateUrl($compileNode,tAttrs):origAsyncDirective.templateUrl,templateNamespace=origAsyncDirective.templateNamespace;$compileNode.empty();$templateRequest(templateUrl).then(function(content){var compileNode,tempTemplateAttrs,$template,childBoundTranscludeFn;content=denormalizeTemplate(content);if(origAsyncDirective.replace){if(jqLiteIsTextNode(content)){$template=[];}else{$template=removeComments(wrapTemplate(templateNamespace,trim(content)));}compileNode=$template[0];if($template.length!==1||compileNode.nodeType!==NODE_TYPE_ELEMENT){throw $compileMinErr('tplrt','Template for directive \'{0}\' must have exactly one root element. {1}',origAsyncDirective.name,templateUrl);}tempTemplateAttrs={$attr:{}};replaceWith($rootElement,$compileNode,compileNode);var templateDirectives=collectDirectives(compileNode,[],tempTemplateAttrs);if(isObject(origAsyncDirective.scope)){// the original directive that caused the template to be loaded async required
	// an isolate scope
	markDirectiveScope(templateDirectives,true);}directives=templateDirectives.concat(directives);mergeTemplateAttributes(tAttrs,tempTemplateAttrs);}else{compileNode=beforeTemplateCompileNode;$compileNode.html(content);}directives.unshift(derivedSyncDirective);afterTemplateNodeLinkFn=applyDirectivesToNode(directives,compileNode,tAttrs,childTranscludeFn,$compileNode,origAsyncDirective,preLinkFns,postLinkFns,previousCompileContext);forEach($rootElement,function(node,i){if(node===compileNode){$rootElement[i]=$compileNode[0];}});afterTemplateChildLinkFn=compileNodes($compileNode[0].childNodes,childTranscludeFn);while(linkQueue.length){var scope=linkQueue.shift(),beforeTemplateLinkNode=linkQueue.shift(),linkRootElement=linkQueue.shift(),boundTranscludeFn=linkQueue.shift(),linkNode=$compileNode[0];if(scope.$$destroyed)continue;if(beforeTemplateLinkNode!==beforeTemplateCompileNode){var oldClasses=beforeTemplateLinkNode.className;if(!(previousCompileContext.hasElementTranscludeDirective&&origAsyncDirective.replace)){// it was cloned therefore we have to clone as well.
	linkNode=jqLiteClone(compileNode);}replaceWith(linkRootElement,jqLite(beforeTemplateLinkNode),linkNode);// Copy in CSS classes from original node
	safeAddClass(jqLite(linkNode),oldClasses);}if(afterTemplateNodeLinkFn.transcludeOnThisElement){childBoundTranscludeFn=createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn);}else{childBoundTranscludeFn=boundTranscludeFn;}afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,linkNode,$rootElement,childBoundTranscludeFn);}linkQueue=null;}).catch(function(error){if(isError(error)){$exceptionHandler(error);}});return function delayedNodeLinkFn(ignoreChildLinkFn,scope,node,rootElement,boundTranscludeFn){var childBoundTranscludeFn=boundTranscludeFn;if(scope.$$destroyed)return;if(linkQueue){linkQueue.push(scope,node,rootElement,childBoundTranscludeFn);}else{if(afterTemplateNodeLinkFn.transcludeOnThisElement){childBoundTranscludeFn=createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn);}afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,node,rootElement,childBoundTranscludeFn);}};}/**
	     * Sorting function for bound directives.
	     */function byPriority(a,b){var diff=b.priority-a.priority;if(diff!==0)return diff;if(a.name!==b.name)return a.name<b.name?-1:1;return a.index-b.index;}function assertNoDuplicate(what,previousDirective,directive,element){function wrapModuleNameIfDefined(moduleName){return moduleName?' (module: '+moduleName+')':'';}if(previousDirective){throw $compileMinErr('multidir','Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}',previousDirective.name,wrapModuleNameIfDefined(previousDirective.$$moduleName),directive.name,wrapModuleNameIfDefined(directive.$$moduleName),what,startingTag(element));}}function addTextInterpolateDirective(directives,text){var interpolateFn=$interpolate(text,true);if(interpolateFn){directives.push({priority:0,compile:function textInterpolateCompileFn(templateNode){var templateNodeParent=templateNode.parent(),hasCompileParent=!!templateNodeParent.length;// When transcluding a template that has bindings in the root
	// we don't have a parent and thus need to add the class during linking fn.
	if(hasCompileParent)compile.$$addBindingClass(templateNodeParent);return function textInterpolateLinkFn(scope,node){var parent=node.parent();if(!hasCompileParent)compile.$$addBindingClass(parent);compile.$$addBindingInfo(parent,interpolateFn.expressions);scope.$watch(interpolateFn,function interpolateFnWatchAction(value){node[0].nodeValue=value;});};}});}}function wrapTemplate(type,template){type=lowercase(type||'html');switch(type){case'svg':case'math':var wrapper=window.document.createElement('div');wrapper.innerHTML='<'+type+'>'+template+'</'+type+'>';return wrapper.childNodes[0].childNodes;default:return template;}}function getTrustedAttrContext(nodeName,attrNormalizedName){if(attrNormalizedName==='srcdoc'){return $sce.HTML;}// All nodes with src attributes require a RESOURCE_URL value, except for
	// img and various html5 media nodes, which require the MEDIA_URL context.
	if(attrNormalizedName==='src'||attrNormalizedName==='ngSrc'){if(['img','video','audio','source','track'].indexOf(nodeName)===-1){return $sce.RESOURCE_URL;}return $sce.MEDIA_URL;}else if(attrNormalizedName==='xlinkHref'){// Some xlink:href are okay, most aren't
	if(nodeName==='image')return $sce.MEDIA_URL;if(nodeName==='a')return $sce.URL;return $sce.RESOURCE_URL;}else if(// Formaction
	nodeName==='form'&&attrNormalizedName==='action'||// If relative URLs can go where they are not expected to, then
	// all sorts of trust issues can arise.
	nodeName==='base'&&attrNormalizedName==='href'||// links can be stylesheets or imports, which can run script in the current origin
	nodeName==='link'&&attrNormalizedName==='href'){return $sce.RESOURCE_URL;}else if(nodeName==='a'&&(attrNormalizedName==='href'||attrNormalizedName==='ngHref')){return $sce.URL;}}function getTrustedPropContext(nodeName,propNormalizedName){var prop=propNormalizedName.toLowerCase();return PROP_CONTEXTS[nodeName+'|'+prop]||PROP_CONTEXTS['*|'+prop];}function sanitizeSrcsetPropertyValue(value){return sanitizeSrcset($sce.valueOf(value),'ng-prop-srcset');}function addPropertyDirective(node,directives,attrName,propName){if(EVENT_HANDLER_ATTR_REGEXP.test(propName)){throw $compileMinErr('nodomevents','Property bindings for HTML DOM event properties are disallowed');}var nodeName=nodeName_(node);var trustedContext=getTrustedPropContext(nodeName,propName);var sanitizer=identity;// Sanitize img[srcset] + source[srcset] values.
	if(propName==='srcset'&&(nodeName==='img'||nodeName==='source')){sanitizer=sanitizeSrcsetPropertyValue;}else if(trustedContext){sanitizer=$sce.getTrusted.bind($sce,trustedContext);}directives.push({priority:100,compile:function ngPropCompileFn(_,attr){var ngPropGetter=$parse(attr[attrName]);var ngPropWatch=$parse(attr[attrName],function sceValueOf(val){// Unwrap the value to compare the actual inner safe value, not the wrapper object.
	return $sce.valueOf(val);});return{pre:function ngPropPreLinkFn(scope,$element){function applyPropValue(){var propValue=ngPropGetter(scope);$element[0][propName]=sanitizer(propValue);}applyPropValue();scope.$watch(ngPropWatch,applyPropValue);}};}});}function addEventDirective(directives,attrName,eventName){directives.push(createEventDirective($parse,$rootScope,$exceptionHandler,attrName,eventName,/*forceAsync=*/false));}function addAttrInterpolateDirective(node,directives,value,name,isNgAttr){var nodeName=nodeName_(node);var trustedContext=getTrustedAttrContext(nodeName,name);var mustHaveExpression=!isNgAttr;var allOrNothing=ALL_OR_NOTHING_ATTRS[name]||isNgAttr;var interpolateFn=$interpolate(value,mustHaveExpression,trustedContext,allOrNothing);// no interpolation found -> ignore
	if(!interpolateFn)return;if(name==='multiple'&&nodeName==='select'){throw $compileMinErr('selmulti','Binding to the \'multiple\' attribute is not supported. Element: {0}',startingTag(node));}if(EVENT_HANDLER_ATTR_REGEXP.test(name)){throw $compileMinErr('nodomevents','Interpolations for HTML DOM event attributes are disallowed');}directives.push({priority:100,compile:function compile(){return{pre:function attrInterpolatePreLinkFn(scope,element,attr){var $$observers=attr.$$observers||(attr.$$observers=createMap());// If the attribute has changed since last $interpolate()ed
	var newValue=attr[name];if(newValue!==value){// we need to interpolate again since the attribute value has been updated
	// (e.g. by another directive's compile function)
	// ensure unset/empty values make interpolateFn falsy
	interpolateFn=newValue&&$interpolate(newValue,true,trustedContext,allOrNothing);value=newValue;}// if attribute was updated so that there is no interpolation going on we don't want to
	// register any observers
	if(!interpolateFn)return;// initialize attr object so that it's ready in case we need the value for isolate
	// scope initialization, otherwise the value would not be available from isolate
	// directive's linking fn during linking phase
	attr[name]=interpolateFn(scope);($$observers[name]||($$observers[name]=[])).$$inter=true;(attr.$$observers&&attr.$$observers[name].$$scope||scope).$watch(interpolateFn,function interpolateFnWatchAction(newValue,oldValue){//special case for class attribute addition + removal
	//so that class changes can tap into the animation
	//hooks provided by the $animate service. Be sure to
	//skip animations when the first digest occurs (when
	//both the new and the old values are the same) since
	//the CSS classes are the non-interpolated values
	if(name==='class'&&newValue!==oldValue){attr.$updateClass(newValue,oldValue);}else{attr.$set(name,newValue);}});}};}});}/**
	     * This is a special jqLite.replaceWith, which can replace items which
	     * have no parents, provided that the containing jqLite collection is provided.
	     *
	     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes
	     *                               in the root of the tree.
	     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep
	     *                                  the shell, but replace its DOM node reference.
	     * @param {Node} newNode The new DOM node.
	     */function replaceWith($rootElement,elementsToRemove,newNode){var firstElementToRemove=elementsToRemove[0],removeCount=elementsToRemove.length,parent=firstElementToRemove.parentNode,i,ii;if($rootElement){for(i=0,ii=$rootElement.length;i<ii;i++){if($rootElement[i]===firstElementToRemove){$rootElement[i++]=newNode;for(var j=i,j2=j+removeCount-1,jj=$rootElement.length;j<jj;j++,j2++){if(j2<jj){$rootElement[j]=$rootElement[j2];}else{delete $rootElement[j];}}$rootElement.length-=removeCount-1;// If the replaced element is also the jQuery .context then replace it
	// .context is a deprecated jQuery api, so we should set it only when jQuery set it
	// http://api.jquery.com/context/
	if($rootElement.context===firstElementToRemove){$rootElement.context=newNode;}break;}}}if(parent){parent.replaceChild(newNode,firstElementToRemove);}// Append all the `elementsToRemove` to a fragment. This will...
	// - remove them from the DOM
	// - allow them to still be traversed with .nextSibling
	// - allow a single fragment.qSA to fetch all elements being removed
	var fragment=window.document.createDocumentFragment();for(i=0;i<removeCount;i++){fragment.appendChild(elementsToRemove[i]);}if(jqLite.hasData(firstElementToRemove)){// Copy over user data (that includes AngularJS's $scope etc.). Don't copy private
	// data here because there's no public interface in jQuery to do that and copying over
	// event listeners (which is the main use of private data) wouldn't work anyway.
	jqLite.data(newNode,jqLite.data(firstElementToRemove));// Remove $destroy event listeners from `firstElementToRemove`
	jqLite(firstElementToRemove).off('$destroy');}// Cleanup any data/listeners on the elements and children.
	// This includes invoking the $destroy event on any elements with listeners.
	jqLite.cleanData(fragment.querySelectorAll('*'));// Update the jqLite collection to only contain the `newNode`
	for(i=1;i<removeCount;i++){delete elementsToRemove[i];}elementsToRemove[0]=newNode;elementsToRemove.length=1;}function cloneAndAnnotateFn(fn,annotation){return extend(function(){return fn.apply(null,arguments);},fn,annotation);}function invokeLinkFn(linkFn,scope,$element,attrs,controllers,transcludeFn){try{linkFn(scope,$element,attrs,controllers,transcludeFn);}catch(e){$exceptionHandler(e,startingTag($element));}}function strictBindingsCheck(attrName,directiveName){if(strictComponentBindingsEnabled){throw $compileMinErr('missingattr','Attribute \'{0}\' of \'{1}\' is non-optional and must be set!',attrName,directiveName);}}// Set up $watches for isolate scope and controller bindings.
	function initializeDirectiveBindings(scope,attrs,destination,bindings,directive){var removeWatchCollection=[];var initialChanges={};var changes;forEach(bindings,function initializeBinding(definition,scopeName){var attrName=definition.attrName,optional=definition.optional,mode=definition.mode,// @, =, <, or &
	lastValue,parentGet,parentSet,compare,removeWatch;switch(mode){case'@':if(!optional&&!hasOwnProperty.call(attrs,attrName)){strictBindingsCheck(attrName,directive.name);destination[scopeName]=attrs[attrName]=undefined;}removeWatch=attrs.$observe(attrName,function(value){if(isString(value)||isBoolean(value)){var oldValue=destination[scopeName];recordChanges(scopeName,value,oldValue);destination[scopeName]=value;}});attrs.$$observers[attrName].$$scope=scope;lastValue=attrs[attrName];if(isString(lastValue)){// If the attribute has been provided then we trigger an interpolation to ensure
	// the value is there for use in the link fn
	destination[scopeName]=$interpolate(lastValue)(scope);}else if(isBoolean(lastValue)){// If the attributes is one of the BOOLEAN_ATTR then AngularJS will have converted
	// the value to boolean rather than a string, so we special case this situation
	destination[scopeName]=lastValue;}initialChanges[scopeName]=new SimpleChange(_UNINITIALIZED_VALUE,destination[scopeName]);removeWatchCollection.push(removeWatch);break;case'=':if(!hasOwnProperty.call(attrs,attrName)){if(optional)break;strictBindingsCheck(attrName,directive.name);attrs[attrName]=undefined;}if(optional&&!attrs[attrName])break;parentGet=$parse(attrs[attrName]);if(parentGet.literal){compare=equals;}else{compare=simpleCompare;}parentSet=parentGet.assign||function(){// reset the change, or we will throw this exception on every $digest
	lastValue=destination[scopeName]=parentGet(scope);throw $compileMinErr('nonassign','Expression \'{0}\' in attribute \'{1}\' used with directive \'{2}\' is non-assignable!',attrs[attrName],attrName,directive.name);};lastValue=destination[scopeName]=parentGet(scope);var parentValueWatch=function parentValueWatch(parentValue){if(!compare(parentValue,destination[scopeName])){// we are out of sync and need to copy
	if(!compare(parentValue,lastValue)){// parent changed and it has precedence
	destination[scopeName]=parentValue;}else{// if the parent can be assigned then do so
	parentSet(scope,parentValue=destination[scopeName]);}}lastValue=parentValue;return lastValue;};parentValueWatch.$stateful=true;if(definition.collection){removeWatch=scope.$watchCollection(attrs[attrName],parentValueWatch);}else{removeWatch=scope.$watch($parse(attrs[attrName],parentValueWatch),null,parentGet.literal);}removeWatchCollection.push(removeWatch);break;case'<':if(!hasOwnProperty.call(attrs,attrName)){if(optional)break;strictBindingsCheck(attrName,directive.name);attrs[attrName]=undefined;}if(optional&&!attrs[attrName])break;parentGet=$parse(attrs[attrName]);var isLiteral=parentGet.literal;var initialValue=destination[scopeName]=parentGet(scope);initialChanges[scopeName]=new SimpleChange(_UNINITIALIZED_VALUE,destination[scopeName]);removeWatch=scope[definition.collection?'$watchCollection':'$watch'](parentGet,function parentValueWatchAction(newValue,oldValue){if(oldValue===newValue){if(oldValue===initialValue||isLiteral&&equals(oldValue,initialValue)){return;}oldValue=initialValue;}recordChanges(scopeName,newValue,oldValue);destination[scopeName]=newValue;});removeWatchCollection.push(removeWatch);break;case'&':if(!optional&&!hasOwnProperty.call(attrs,attrName)){strictBindingsCheck(attrName,directive.name);}// Don't assign Object.prototype method to scope
	parentGet=attrs.hasOwnProperty(attrName)?$parse(attrs[attrName]):noop;// Don't assign noop to destination if expression is not valid
	if(parentGet===noop&&optional)break;destination[scopeName]=function(locals){return parentGet(scope,locals);};break;}});function recordChanges(key,currentValue,previousValue){if(isFunction(destination.$onChanges)&&!simpleCompare(currentValue,previousValue)){// If we have not already scheduled the top level onChangesQueue handler then do so now
	if(!onChangesQueue){scope.$$postDigest(flushOnChangesQueue);onChangesQueue=[];}// If we have not already queued a trigger of onChanges for this controller then do so now
	if(!changes){changes={};onChangesQueue.push(triggerOnChangesHook);}// If the has been a change on this property already then we need to reuse the previous value
	if(changes[key]){previousValue=changes[key].previousValue;}// Store this change
	changes[key]=new SimpleChange(previousValue,currentValue);}}function triggerOnChangesHook(){destination.$onChanges(changes);// Now clear the changes so that we schedule onChanges when more changes arrive
	changes=undefined;}return{initialChanges:initialChanges,removeWatches:removeWatchCollection.length&&function removeWatches(){for(var i=0,ii=removeWatchCollection.length;i<ii;++i){removeWatchCollection[i]();}}};}}];}function SimpleChange(previous,current){this.previousValue=previous;this.currentValue=current;}SimpleChange.prototype.isFirstChange=function(){return this.previousValue===_UNINITIALIZED_VALUE;};var PREFIX_REGEXP=/^((?:x|data)[:\-_])/i;var SPECIAL_CHARS_REGEXP=/[:\-_]+(.)/g;/**
	 * Converts all accepted directives format into proper directive name.
	 * @param name Name to normalize
	 */function directiveNormalize(name){return name.replace(PREFIX_REGEXP,'').replace(SPECIAL_CHARS_REGEXP,function(_,letter,offset){return offset?letter.toUpperCase():letter;});}/**
	 * @ngdoc type
	 * @name $compile.directive.Attributes
	 *
	 * @description
	 * A shared object between directive compile / linking functions which contains normalized DOM
	 * element attributes. The values reflect current binding state `{{ }}`. The normalization is
	 * needed since all of these are treated as equivalent in AngularJS:
	 *
	 * ```
	 *    <span ng:bind="a" ng-bind="a" data-ng-bind="a" x-ng-bind="a">
	 * ```
	 *//**
	 * @ngdoc property
	 * @name $compile.directive.Attributes#$attr
	 *
	 * @description
	 * A map of DOM element attribute names to the normalized name. This is
	 * needed to do reverse lookup from normalized name back to actual name.
	 *//**
	 * @ngdoc method
	 * @name $compile.directive.Attributes#$set
	 * @kind function
	 *
	 * @description
	 * Set DOM element attribute value.
	 *
	 *
	 * @param {string} name Normalized element attribute name of the property to modify. The name is
	 *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}
	 *          property to the original name.
	 * @param {string} value Value to set the attribute to. The value can be an interpolated string.
	 *//**
	 * Closure compiler type information
	 */function nodesetLinkingFn(/* angular.Scope */scope,/* NodeList */nodeList,/* Element */rootElement,/* function(Function) */boundTranscludeFn){}function directiveLinkingFn(/* nodesetLinkingFn */nodesetLinkingFn,/* angular.Scope */scope,/* Node */node,/* Element */rootElement,/* function(Function) */boundTranscludeFn){}function tokenDifference(str1,str2){var values='',tokens1=str1.split(/\s+/),tokens2=str2.split(/\s+/);outer:for(var i=0;i<tokens1.length;i++){var token=tokens1[i];for(var j=0;j<tokens2.length;j++){if(token===tokens2[j])continue outer;}values+=(values.length>0?' ':'')+token;}return values;}function removeComments(jqNodes){jqNodes=jqLite(jqNodes);var i=jqNodes.length;if(i<=1){return jqNodes;}while(i--){var node=jqNodes[i];if(node.nodeType===NODE_TYPE_COMMENT||node.nodeType===NODE_TYPE_TEXT&&node.nodeValue.trim()===''){splice.call(jqNodes,i,1);}}return jqNodes;}var $controllerMinErr=minErr('$controller');var CNTRL_REG=/^(\S+)(\s+as\s+([\w$]+))?$/;function identifierForController(controller,ident){if(ident&&isString(ident))return ident;if(isString(controller)){var match=CNTRL_REG.exec(controller);if(match)return match[3];}}/**
	 * @ngdoc provider
	 * @name $controllerProvider
	 * @this
	 *
	 * @description
	 * The {@link ng.$controller $controller service} is used by AngularJS to create new
	 * controllers.
	 *
	 * This provider allows controller registration via the
	 * {@link ng.$controllerProvider#register register} method.
	 */function $ControllerProvider(){var controllers={};/**
	   * @ngdoc method
	   * @name $controllerProvider#has
	   * @param {string} name Controller name to check.
	   */this.has=function(name){return controllers.hasOwnProperty(name);};/**
	   * @ngdoc method
	   * @name $controllerProvider#register
	   * @param {string|Object} name Controller name, or an object map of controllers where the keys are
	   *    the names and the values are the constructors.
	   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI
	   *    annotations in the array notation).
	   */this.register=function(name,constructor){assertNotHasOwnProperty(name,'controller');if(isObject(name)){extend(controllers,name);}else{controllers[name]=constructor;}};this.$get=['$injector',function($injector){/**
	     * @ngdoc service
	     * @name $controller
	     * @requires $injector
	     *
	     * @param {Function|string} constructor If called with a function then it's considered to be the
	     *    controller constructor function. Otherwise it's considered to be a string which is used
	     *    to retrieve the controller constructor using the following steps:
	     *
	     *    * check if a controller with given name is registered via `$controllerProvider`
	     *    * check if evaluating the string on the current scope returns a constructor
	     *
	     *    The string can use the `controller as property` syntax, where the controller instance is published
	     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this
	     *    to work correctly.
	     *
	     * @param {Object} locals Injection locals for Controller.
	     * @return {Object} Instance of given controller.
	     *
	     * @description
	     * `$controller` service is responsible for instantiating controllers.
	     *
	     * It's just a simple call to {@link auto.$injector $injector}, but extracted into
	     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).
	     */return function $controller(expression,locals,later,ident){// PRIVATE API:
	//   param `later` --- indicates that the controller's constructor is invoked at a later time.
	//                     If true, $controller will allocate the object with the correct
	//                     prototype chain, but will not invoke the controller until a returned
	//                     callback is invoked.
	//   param `ident` --- An optional label which overrides the label parsed from the controller
	//                     expression, if any.
	var instance,match,constructor,identifier;later=later===true;if(ident&&isString(ident)){identifier=ident;}if(isString(expression)){match=expression.match(CNTRL_REG);if(!match){throw $controllerMinErr('ctrlfmt','Badly formed controller string \'{0}\'. '+'Must match `__name__ as __id__` or `__name__`.',expression);}constructor=match[1];identifier=identifier||match[3];expression=controllers.hasOwnProperty(constructor)?controllers[constructor]:getter(locals.$scope,constructor,true);if(!expression){throw $controllerMinErr('ctrlreg','The controller with the name \'{0}\' is not registered.',constructor);}assertArgFn(expression,constructor,true);}if(later){// Instantiate controller later:
	// This machinery is used to create an instance of the object before calling the
	// controller's constructor itself.
	//
	// This allows properties to be added to the controller before the constructor is
	// invoked. Primarily, this is used for isolate scope bindings in $compile.
	//
	// This feature is not intended for use by applications, and is thus not documented
	// publicly.
	// Object creation: http://jsperf.com/create-constructor/2
	var controllerPrototype=(isArray(expression)?expression[expression.length-1]:expression).prototype;instance=Object.create(controllerPrototype||null);if(identifier){addIdentifier(locals,identifier,instance,constructor||expression.name);}return extend(function $controllerInit(){var result=$injector.invoke(expression,instance,locals,constructor);if(result!==instance&&(isObject(result)||isFunction(result))){instance=result;if(identifier){// If result changed, re-assign controllerAs value to scope.
	addIdentifier(locals,identifier,instance,constructor||expression.name);}}return instance;},{instance:instance,identifier:identifier});}instance=$injector.instantiate(expression,locals,constructor);if(identifier){addIdentifier(locals,identifier,instance,constructor||expression.name);}return instance;};function addIdentifier(locals,identifier,instance,name){if(!(locals&&isObject(locals.$scope))){throw minErr('$controller')('noscp','Cannot export controller \'{0}\' as \'{1}\'! No $scope object provided via `locals`.',name,identifier);}locals.$scope[identifier]=instance;}}];}/**
	 * @ngdoc service
	 * @name $document
	 * @requires $window
	 * @this
	 *
	 * @description
	 * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.
	 *
	 * @example
	   <example module="documentExample" name="document">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <p>$document title: <b ng-bind="title"></b></p>
	         <p>window.document title: <b ng-bind="windowTitle"></b></p>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('documentExample', [])
	         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {
	           $scope.title = $document[0].title;
	           $scope.windowTitle = angular.element(window.document)[0].title;
	         }]);
	     </file>
	   </example>
	 */function $DocumentProvider(){this.$get=['$window',function(window){return jqLite(window.document);}];}/**
	 * @private
	 * @this
	 * Listens for document visibility change and makes the current status accessible.
	 */function $$IsDocumentHiddenProvider(){this.$get=['$document','$rootScope',function($document,$rootScope){var doc=$document[0];var hidden=doc&&doc.hidden;$document.on('visibilitychange',changeListener);$rootScope.$on('$destroy',function(){$document.off('visibilitychange',changeListener);});function changeListener(){hidden=doc.hidden;}return function(){return hidden;};}];}/**
	 * @ngdoc service
	 * @name $exceptionHandler
	 * @requires ng.$log
	 * @this
	 *
	 * @description
	 * Any uncaught exception in AngularJS expressions is delegated to this service.
	 * The default implementation simply delegates to `$log.error` which logs it into
	 * the browser console.
	 *
	 * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by
	 * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.
	 *
	 * ## Example:
	 *
	 * The example below will overwrite the default `$exceptionHandler` in order to (a) log uncaught
	 * errors to the backend for later inspection by the developers and (b) to use `$log.warn()` instead
	 * of `$log.error()`.
	 *
	 * ```js
	 *   angular.
	 *     module('exceptionOverwrite', []).
	 *     factory('$exceptionHandler', ['$log', 'logErrorsToBackend', function($log, logErrorsToBackend) {
	 *       return function myExceptionHandler(exception, cause) {
	 *         logErrorsToBackend(exception, cause);
	 *         $log.warn(exception, cause);
	 *       };
	 *     }]);
	 * ```
	 *
	 * <hr />
	 * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`
	 * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}
	 * (unless executed during a digest).
	 *
	 * If you wish, you can manually delegate exceptions, e.g.
	 * `try { ... } catch(e) { $exceptionHandler(e); }`
	 *
	 * @param {Error} exception Exception associated with the error.
	 * @param {string=} cause Optional information about the context in which
	 *       the error was thrown.
	 *
	 */function $ExceptionHandlerProvider(){this.$get=['$log',function($log){return function(exception,cause){$log.error.apply($log,arguments);};}];}var $$ForceReflowProvider=/** @this */function $$ForceReflowProvider(){this.$get=['$document',function($document){return function(domNode){//the line below will force the browser to perform a repaint so
	//that all the animated elements within the animation frame will
	//be properly updated and drawn on screen. This is required to
	//ensure that the preparation animation is properly flushed so that
	//the active state picks up from there. DO NOT REMOVE THIS LINE.
	//DO NOT OPTIMIZE THIS LINE. THE MINIFIER WILL REMOVE IT OTHERWISE WHICH
	//WILL RESULT IN AN UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND
	//WILL TAKE YEARS AWAY FROM YOUR LIFE.
	if(domNode){if(!domNode.nodeType&&domNode instanceof jqLite){domNode=domNode[0];}}else{domNode=$document[0].body;}return domNode.offsetWidth+1;};}];};var APPLICATION_JSON='application/json';var CONTENT_TYPE_APPLICATION_JSON={'Content-Type':APPLICATION_JSON+';charset=utf-8'};var JSON_START=/^\[|^\{(?!\{)/;var JSON_ENDS={'[':/]$/,'{':/}$/};var JSON_PROTECTION_PREFIX=/^\)]\}',?\n/;var $httpMinErr=minErr('$http');function serializeValue(v){if(isObject(v)){return isDate(v)?v.toISOString():toJson(v);}return v;}/** @this */function $HttpParamSerializerProvider(){/**
	   * @ngdoc service
	   * @name $httpParamSerializer
	   * @description
	   *
	   * Default {@link $http `$http`} params serializer that converts objects to strings
	   * according to the following rules:
	   *
	   * * `{'foo': 'bar'}` results in `foo=bar`
	   * * `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)
	   * * `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)
	   * * `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D` (stringified and encoded representation of an object)
	   *
	   * Note that serializer will sort the request parameters alphabetically.
	   */this.$get=function(){return function ngParamSerializer(params){if(!params)return'';var parts=[];forEachSorted(params,function(value,key){if(value===null||isUndefined(value)||isFunction(value))return;if(isArray(value)){forEach(value,function(v){parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(v)));});}else{parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(value)));}});return parts.join('&');};};}/** @this */function $HttpParamSerializerJQLikeProvider(){/**
	   * @ngdoc service
	   * @name $httpParamSerializerJQLike
	   *
	   * @description
	   *
	   * Alternative {@link $http `$http`} params serializer that follows
	   * jQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.
	   * The serializer will also sort the params alphabetically.
	   *
	   * To use it for serializing `$http` request parameters, set it as the `paramSerializer` property:
	   *
	   * ```js
	   * $http({
	   *   url: myUrl,
	   *   method: 'GET',
	   *   params: myParams,
	   *   paramSerializer: '$httpParamSerializerJQLike'
	   * });
	   * ```
	   *
	   * It is also possible to set it as the default `paramSerializer` in the
	   * {@link $httpProvider#defaults `$httpProvider`}.
	   *
	   * Additionally, you can inject the serializer and use it explicitly, for example to serialize
	   * form data for submission:
	   *
	   * ```js
	   * .controller(function($http, $httpParamSerializerJQLike) {
	   *   //...
	   *
	   *   $http({
	   *     url: myUrl,
	   *     method: 'POST',
	   *     data: $httpParamSerializerJQLike(myData),
	   *     headers: {
	   *       'Content-Type': 'application/x-www-form-urlencoded'
	   *     }
	   *   });
	   *
	   * });
	   * ```
	   *
	   */this.$get=function(){return function jQueryLikeParamSerializer(params){if(!params)return'';var parts=[];serialize(params,'',true);return parts.join('&');function serialize(toSerialize,prefix,topLevel){if(isArray(toSerialize)){forEach(toSerialize,function(value,index){serialize(value,prefix+'['+(isObject(value)?index:'')+']');});}else if(isObject(toSerialize)&&!isDate(toSerialize)){forEachSorted(toSerialize,function(value,key){serialize(value,prefix+(topLevel?'':'[')+key+(topLevel?'':']'));});}else{if(isFunction(toSerialize)){toSerialize=toSerialize();}parts.push(encodeUriQuery(prefix)+'='+(toSerialize==null?'':encodeUriQuery(serializeValue(toSerialize))));}}};};}function defaultHttpResponseTransform(data,headers){if(isString(data)){// Strip json vulnerability protection prefix and trim whitespace
	var tempData=data.replace(JSON_PROTECTION_PREFIX,'').trim();if(tempData){var contentType=headers('Content-Type');var hasJsonContentType=contentType&&contentType.indexOf(APPLICATION_JSON)===0;if(hasJsonContentType||isJsonLike(tempData)){try{data=fromJson(tempData);}catch(e){if(!hasJsonContentType){return data;}throw $httpMinErr('baddata','Data must be a valid JSON object. Received: "{0}". '+'Parse error: "{1}"',data,e);}}}}return data;}function isJsonLike(str){var jsonStart=str.match(JSON_START);return jsonStart&&JSON_ENDS[jsonStart[0]].test(str);}/**
	 * Parse headers into key value object
	 *
	 * @param {string} headers Raw headers as a string
	 * @returns {Object} Parsed headers as key value object
	 */function parseHeaders(headers){var parsed=createMap(),i;function fillInParsed(key,val){if(key){parsed[key]=parsed[key]?parsed[key]+', '+val:val;}}if(isString(headers)){forEach(headers.split('\n'),function(line){i=line.indexOf(':');fillInParsed(lowercase(trim(line.substr(0,i))),trim(line.substr(i+1)));});}else if(isObject(headers)){forEach(headers,function(headerVal,headerKey){fillInParsed(lowercase(headerKey),trim(headerVal));});}return parsed;}/**
	 * Returns a function that provides access to parsed headers.
	 *
	 * Headers are lazy parsed when first requested.
	 * @see parseHeaders
	 *
	 * @param {(string|Object)} headers Headers to provide access to.
	 * @returns {function(string=)} Returns a getter function which if called with:
	 *
	 *   - if called with an argument returns a single header value or null
	 *   - if called with no arguments returns an object containing all headers.
	 */function headersGetter(headers){var headersObj;return function(name){if(!headersObj)headersObj=parseHeaders(headers);if(name){var value=headersObj[lowercase(name)];if(value===undefined){value=null;}return value;}return headersObj;};}/**
	 * Chain all given functions
	 *
	 * This function is used for both request and response transforming
	 *
	 * @param {*} data Data to transform.
	 * @param {function(string=)} headers HTTP headers getter fn.
	 * @param {number} status HTTP status code of the response.
	 * @param {(Function|Array.<Function>)} fns Function or an array of functions.
	 * @returns {*} Transformed data.
	 */function transformData(data,headers,status,fns){if(isFunction(fns)){return fns(data,headers,status);}forEach(fns,function(fn){data=fn(data,headers,status);});return data;}function isSuccess(status){return 200<=status&&status<300;}/**
	 * @ngdoc provider
	 * @name $httpProvider
	 * @this
	 *
	 * @description
	 * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.
	 */function $HttpProvider(){/**
	   * @ngdoc property
	   * @name $httpProvider#defaults
	   * @description
	   *
	   * Object containing default values for all {@link ng.$http $http} requests.
	   *
	   * - **`defaults.cache`** - {boolean|Object} - A boolean value or object created with
	   * {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of HTTP responses
	   * by default. See {@link $http#caching $http Caching} for more information.
	   *
	   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.
	   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on
	   * setting default headers.
	   *     - **`defaults.headers.common`**
	   *     - **`defaults.headers.post`**
	   *     - **`defaults.headers.put`**
	   *     - **`defaults.headers.patch`**
	   *
	   * - **`defaults.jsonpCallbackParam`** - `{string}` - the name of the query parameter that passes the name of the
	   * callback in a JSONP request. The value of this parameter will be replaced with the expression generated by the
	   * {@link $jsonpCallbacks} service. Defaults to `'callback'`.
	   *
	   * - **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function
	   *  used to the prepare string representation of request parameters (specified as an object).
	   *  If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.
	   *  Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.
	   *
	   * - **`defaults.transformRequest`** -
	   * `{Array<function(data, headersGetter)>|function(data, headersGetter)}` -
	   * An array of functions (or a single function) which are applied to the request data.
	   * By default, this is an array with one request transformation function:
	   *
	   *   - If the `data` property of the request configuration object contains an object, serialize it
	   *     into JSON format.
	   *
	   * - **`defaults.transformResponse`** -
	   * `{Array<function(data, headersGetter, status)>|function(data, headersGetter, status)}` -
	   * An array of functions (or a single function) which are applied to the response data. By default,
	   * this is an array which applies one response transformation function that does two things:
	   *
	   *  - If XSRF prefix is detected, strip it
	   *    (see {@link ng.$http#security-considerations Security Considerations in the $http docs}).
	   *  - If the `Content-Type` is `application/json` or the response looks like JSON,
	   *    deserialize it using a JSON parser.
	   *
	   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.
	   * Defaults value is `'XSRF-TOKEN'`.
	   *
	   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the
	   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.
	   *
	   */var defaults=this.defaults={// transform incoming response data
	transformResponse:[defaultHttpResponseTransform],// transform outgoing request data
	transformRequest:[function(d){return isObject(d)&&!isFile(d)&&!isBlob(d)&&!isFormData(d)?toJson(d):d;}],// default headers
	headers:{common:{'Accept':'application/json, text/plain, */*'},post:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),put:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),patch:shallowCopy(CONTENT_TYPE_APPLICATION_JSON)},xsrfCookieName:'XSRF-TOKEN',xsrfHeaderName:'X-XSRF-TOKEN',paramSerializer:'$httpParamSerializer',jsonpCallbackParam:'callback'};var useApplyAsync=false;/**
	   * @ngdoc method
	   * @name $httpProvider#useApplyAsync
	   * @description
	   *
	   * Configure $http service to combine processing of multiple http responses received at around
	   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in
	   * significant performance improvement for bigger applications that make many HTTP requests
	   * concurrently (common during application bootstrap).
	   *
	   * Defaults to false. If no value is specified, returns the current configured value.
	   *
	   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred
	   *    "apply" on the next tick, giving time for subsequent requests in a roughly ~10ms window
	   *    to load and share the same digest cycle.
	   *
	   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.
	   *    otherwise, returns the current configured value.
	   */this.useApplyAsync=function(value){if(isDefined(value)){useApplyAsync=!!value;return this;}return useApplyAsync;};/**
	   * @ngdoc property
	   * @name $httpProvider#interceptors
	   * @description
	   *
	   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}
	   * pre-processing of request or postprocessing of responses.
	   *
	   * These service factories are ordered by request, i.e. they are applied in the same order as the
	   * array, on request, but reverse order, on response.
	   *
	   * {@link ng.$http#interceptors Interceptors detailed info}
	   */var interceptorFactories=this.interceptors=[];/**
	   * @ngdoc property
	   * @name $httpProvider#xsrfTrustedOrigins
	   * @description
	   *
	   * Array containing URLs whose origins are trusted to receive the XSRF token. See the
	   * {@link ng.$http#security-considerations Security Considerations} sections for more details on
	   * XSRF.
	   *
	   * **Note:** An "origin" consists of the [URI scheme](https://en.wikipedia.org/wiki/URI_scheme),
	   * the [hostname](https://en.wikipedia.org/wiki/Hostname) and the
	   * [port number](https://en.wikipedia.org/wiki/Port_(computer_networking). For `http:` and
	   * `https:`, the port number can be omitted if using th default ports (80 and 443 respectively).
	   * Examples: `http://example.com`, `https://api.example.com:9876`
	   *
	   * <div class="alert alert-warning">
	   *   It is not possible to trust specific URLs/paths. The `path`, `query` and `fragment` parts
	   *   of a URL will be ignored. For example, `https://foo.com/path/bar?query=baz#fragment` will be
	   *   treated as `https://foo.com`, meaning that **all** requests to URLs starting with
	   *   `https://foo.com/` will include the XSRF token.
	   * </div>
	   *
	   * @example
	   *
	   * ```js
	   * // App served from `https://example.com/`.
	   * angular.
	   *   module('xsrfTrustedOriginsExample', []).
	   *   config(['$httpProvider', function($httpProvider) {
	   *     $httpProvider.xsrfTrustedOrigins.push('https://api.example.com');
	   *   }]).
	   *   run(['$http', function($http) {
	   *     // The XSRF token will be sent.
	   *     $http.get('https://api.example.com/preferences').then(...);
	   *
	   *     // The XSRF token will NOT be sent.
	   *     $http.get('https://stats.example.com/activity').then(...);
	   *   }]);
	   * ```
	   */var xsrfTrustedOrigins=this.xsrfTrustedOrigins=[];/**
	   * @ngdoc property
	   * @name $httpProvider#xsrfWhitelistedOrigins
	   * @description
	   *
	   * @deprecated
	   * sinceVersion="1.8.1"
	   *
	   * This property is deprecated. Use {@link $httpProvider#xsrfTrustedOrigins xsrfTrustedOrigins}
	   * instead.
	   */Object.defineProperty(this,'xsrfWhitelistedOrigins',{get:function get(){return this.xsrfTrustedOrigins;},set:function set(origins){this.xsrfTrustedOrigins=origins;}});this.$get=['$browser','$httpBackend','$$cookieReader','$cacheFactory','$rootScope','$q','$injector','$sce',function($browser,$httpBackend,$$cookieReader,$cacheFactory,$rootScope,$q,$injector,$sce){var defaultCache=$cacheFactory('$http');/**
	     * Make sure that default param serializer is exposed as a function
	     */defaults.paramSerializer=isString(defaults.paramSerializer)?$injector.get(defaults.paramSerializer):defaults.paramSerializer;/**
	     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.
	     * The reversal is needed so that we can build up the interception chain around the
	     * server request.
	     */var reversedInterceptors=[];forEach(interceptorFactories,function(interceptorFactory){reversedInterceptors.unshift(isString(interceptorFactory)?$injector.get(interceptorFactory):$injector.invoke(interceptorFactory));});/**
	     * A function to check request URLs against a list of allowed origins.
	     */var urlIsAllowedOrigin=urlIsAllowedOriginFactory(xsrfTrustedOrigins);/**
	     * @ngdoc service
	     * @kind function
	     * @name $http
	     * @requires ng.$httpBackend
	     * @requires $cacheFactory
	     * @requires $rootScope
	     * @requires $q
	     * @requires $injector
	     *
	     * @description
	     * The `$http` service is a core AngularJS service that facilitates communication with the remote
	     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)
	     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).
	     *
	     * For unit testing applications that use `$http` service, see
	     * {@link ngMock.$httpBackend $httpBackend mock}.
	     *
	     * For a higher level of abstraction, please check out the {@link ngResource.$resource
	     * $resource} service.
	     *
	     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by
	     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage
	     * it is important to familiarize yourself with these APIs and the guarantees they provide.
	     *
	     *
	     * ## General usage
	     * The `$http` service is a function which takes a single argument — a {@link $http#usage configuration object} —
	     * that is used to generate an HTTP request and returns  a {@link ng.$q promise} that is
	     * resolved (request success) or rejected (request failure) with a
	     * {@link ng.$http#$http-returns response} object.
	     *
	     * ```js
	     *   // Simple GET request example:
	     *   $http({
	     *     method: 'GET',
	     *     url: '/someUrl'
	     *   }).then(function successCallback(response) {
	     *       // this callback will be called asynchronously
	     *       // when the response is available
	     *     }, function errorCallback(response) {
	     *       // called asynchronously if an error occurs
	     *       // or server returns response with an error status.
	     *     });
	     * ```
	     *
	     *
	     * ## Shortcut methods
	     *
	     * Shortcut methods are also available. All shortcut methods require passing in the URL, and
	     * request data must be passed in for POST/PUT requests. An optional config can be passed as the
	     * last argument.
	     *
	     * ```js
	     *   $http.get('/someUrl', config).then(successCallback, errorCallback);
	     *   $http.post('/someUrl', data, config).then(successCallback, errorCallback);
	     * ```
	     *
	     * Complete list of shortcut methods:
	     *
	     * - {@link ng.$http#get $http.get}
	     * - {@link ng.$http#head $http.head}
	     * - {@link ng.$http#post $http.post}
	     * - {@link ng.$http#put $http.put}
	     * - {@link ng.$http#delete $http.delete}
	     * - {@link ng.$http#jsonp $http.jsonp}
	     * - {@link ng.$http#patch $http.patch}
	     *
	     *
	     * ## Writing Unit Tests that use $http
	     * When unit testing (using {@link ngMock ngMock}), it is necessary to call
	     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending
	     * request using trained responses.
	     *
	     * ```
	     * $httpBackend.expectGET(...);
	     * $http.get(...);
	     * $httpBackend.flush();
	     * ```
	     *
	     * ## Setting HTTP Headers
	     *
	     * The $http service will automatically add certain HTTP headers to all requests. These defaults
	     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration
	     * object, which currently contains this default configuration:
	     *
	     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):
	     *   - <code>Accept: application/json, text/plain, \*&#65279;/&#65279;\*</code>
	     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)
	     *   - `Content-Type: application/json`
	     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)
	     *   - `Content-Type: application/json`
	     *
	     * To add or overwrite these defaults, simply add or remove a property from these configuration
	     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object
	     * with the lowercased HTTP method name as the key, e.g.
	     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }`.
	     *
	     * The defaults can also be set at runtime via the `$http.defaults` object in the same
	     * fashion. For example:
	     *
	     * ```
	     * module.run(function($http) {
	     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w';
	     * });
	     * ```
	     *
	     * In addition, you can supply a `headers` property in the config object passed when
	     * calling `$http(config)`, which overrides the defaults without changing them globally.
	     *
	     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,
	     * Use the `headers` property, setting the desired header to `undefined`. For example:
	     *
	     * ```js
	     * var req = {
	     *  method: 'POST',
	     *  url: 'http://example.com',
	     *  headers: {
	     *    'Content-Type': undefined
	     *  },
	     *  data: { test: 'test' }
	     * }
	     *
	     * $http(req).then(function(){...}, function(){...});
	     * ```
	     *
	     * ## Transforming Requests and Responses
	     *
	     * Both requests and responses can be transformed using transformation functions: `transformRequest`
	     * and `transformResponse`. These properties can be a single function that returns
	     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,
	     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.
	     *
	     * <div class="alert alert-warning">
	     * **Note:** AngularJS does not make a copy of the `data` parameter before it is passed into the `transformRequest` pipeline.
	     * That means changes to the properties of `data` are not local to the transform function (since Javascript passes objects by reference).
	     * For example, when calling `$http.get(url, $scope.myObject)`, modifications to the object's properties in a transformRequest
	     * function will be reflected on the scope and in any templates where the object is data-bound.
	     * To prevent this, transform functions should have no side-effects.
	     * If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.
	     * </div>
	     *
	     * ### Default Transformations
	     *
	     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and
	     * `defaults.transformResponse` properties. If a request does not provide its own transformations
	     * then these will be applied.
	     *
	     * You can augment or replace the default transformations by modifying these properties by adding to or
	     * replacing the array.
	     *
	     * AngularJS provides the following default transformations:
	     *
	     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`) is
	     * an array with one function that does the following:
	     *
	     * - If the `data` property of the request configuration object contains an object, serialize it
	     *   into JSON format.
	     *
	     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`) is
	     * an array with one function that does the following:
	     *
	     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).
	     *  - If the `Content-Type` is `application/json` or the response looks like JSON,
	   *      deserialize it using a JSON parser.
	     *
	     *
	     * ### Overriding the Default Transformations Per Request
	     *
	     * If you wish to override the request/response transformations only for a single request then provide
	     * `transformRequest` and/or `transformResponse` properties on the configuration object passed
	     * into `$http`.
	     *
	     * Note that if you provide these properties on the config object the default transformations will be
	     * overwritten. If you wish to augment the default transformations then you must include them in your
	     * local transformation array.
	     *
	     * The following code demonstrates adding a new response transformation to be run after the default response
	     * transformations have been run.
	     *
	     * ```js
	     * function appendTransform(defaults, transform) {
	     *
	     *   // We can't guarantee that the default transformation is an array
	     *   defaults = angular.isArray(defaults) ? defaults : [defaults];
	     *
	     *   // Append the new transformation to the defaults
	     *   return defaults.concat(transform);
	     * }
	     *
	     * $http({
	     *   url: '...',
	     *   method: 'GET',
	     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {
	     *     return doTransform(value);
	     *   })
	     * });
	     * ```
	     *
	     *
	     * ## Caching
	     *
	     * {@link ng.$http `$http`} responses are not cached by default. To enable caching, you must
	     * set the config.cache value or the default cache value to TRUE or to a cache object (created
	     * with {@link ng.$cacheFactory `$cacheFactory`}). If defined, the value of config.cache takes
	     * precedence over the default cache value.
	     *
	     * In order to:
	     *   * cache all responses - set the default cache value to TRUE or to a cache object
	     *   * cache a specific response - set config.cache value to TRUE or to a cache object
	     *
	     * If caching is enabled, but neither the default cache nor config.cache are set to a cache object,
	     * then the default `$cacheFactory("$http")` object is used.
	     *
	     * The default cache value can be set by updating the
	     * {@link ng.$http#defaults `$http.defaults.cache`} property or the
	     * {@link $httpProvider#defaults `$httpProvider.defaults.cache`} property.
	     *
	     * When caching is enabled, {@link ng.$http `$http`} stores the response from the server using
	     * the relevant cache object. The next time the same request is made, the response is returned
	     * from the cache without sending a request to the server.
	     *
	     * Take note that:
	     *
	     *   * Only GET and JSONP requests are cached.
	     *   * The cache key is the request URL including search parameters; headers are not considered.
	     *   * Cached responses are returned asynchronously, in the same way as responses from the server.
	     *   * If multiple identical requests are made using the same cache, which is not yet populated,
	     *     one request will be made to the server and remaining requests will return the same response.
	     *   * A cache-control header on the response does not affect if or how responses are cached.
	     *
	     *
	     * ## Interceptors
	     *
	     * Before you start creating interceptors, be sure to understand the
	     * {@link ng.$q $q and deferred/promise APIs}.
	     *
	     * For purposes of global error handling, authentication, or any kind of synchronous or
	     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be
	     * able to intercept requests before they are handed to the server and
	     * responses before they are handed over to the application code that
	     * initiated these requests. The interceptors leverage the {@link ng.$q
	     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.
	     *
	     * The interceptors are service factories that are registered with the `$httpProvider` by
	     * adding them to the `$httpProvider.interceptors` array. The factory is called and
	     * injected with dependencies (if specified) and returns the interceptor.
	     *
	     * There are two kinds of interceptors (and two kinds of rejection interceptors):
	     *
	     *   * `request`: interceptors get called with a http {@link $http#usage config} object. The function is free to
	     *     modify the `config` object or create a new one. The function needs to return the `config`
	     *     object directly, or a promise containing the `config` or a new `config` object.
	     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or
	     *     resolved with a rejection.
	     *   * `response`: interceptors get called with http `response` object. The function is free to
	     *     modify the `response` object or create a new one. The function needs to return the `response`
	     *     object directly, or as a promise containing the `response` or a new `response` object.
	     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or
	     *     resolved with a rejection.
	     *
	     *
	     * ```js
	     *   // register the interceptor as a service
	     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {
	     *     return {
	     *       // optional method
	     *       'request': function(config) {
	     *         // do something on success
	     *         return config;
	     *       },
	     *
	     *       // optional method
	     *      'requestError': function(rejection) {
	     *         // do something on error
	     *         if (canRecover(rejection)) {
	     *           return responseOrNewPromise
	     *         }
	     *         return $q.reject(rejection);
	     *       },
	     *
	     *
	     *
	     *       // optional method
	     *       'response': function(response) {
	     *         // do something on success
	     *         return response;
	     *       },
	     *
	     *       // optional method
	     *      'responseError': function(rejection) {
	     *         // do something on error
	     *         if (canRecover(rejection)) {
	     *           return responseOrNewPromise
	     *         }
	     *         return $q.reject(rejection);
	     *       }
	     *     };
	     *   });
	     *
	     *   $httpProvider.interceptors.push('myHttpInterceptor');
	     *
	     *
	     *   // alternatively, register the interceptor via an anonymous factory
	     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {
	     *     return {
	     *      'request': function(config) {
	     *          // same as above
	     *       },
	     *
	     *       'response': function(response) {
	     *          // same as above
	     *       }
	     *     };
	     *   });
	     * ```
	     *
	     * ## Security Considerations
	     *
	     * When designing web applications, consider security threats from:
	     *
	     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
	     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)
	     *
	     * Both server and the client must cooperate in order to eliminate these threats. AngularJS comes
	     * pre-configured with strategies that address these issues, but for this to work backend server
	     * cooperation is required.
	     *
	     * ### JSON Vulnerability Protection
	     *
	     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
	     * allows third party website to turn your JSON resource URL into
	     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To
	     * counter this your server can prefix all JSON requests with following string `")]}',\n"`.
	     * AngularJS will automatically strip the prefix before processing it as JSON.
	     *
	     * For example if your server needs to return:
	     * ```js
	     * ['one','two']
	     * ```
	     *
	     * which is vulnerable to attack, your server can return:
	     * ```js
	     * )]}',
	     * ['one','two']
	     * ```
	     *
	     * AngularJS will strip the prefix, before processing the JSON.
	     *
	     *
	     * ### Cross Site Request Forgery (XSRF) Protection
	     *
	     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is an attack technique by
	     * which the attacker can trick an authenticated user into unknowingly executing actions on your
	     * website. AngularJS provides a mechanism to counter XSRF. When performing XHR requests, the
	     * $http service reads a token from a cookie (by default, `XSRF-TOKEN`) and sets it as an HTTP
	     * header (by default `X-XSRF-TOKEN`). Since only JavaScript that runs on your domain could read
	     * the cookie, your server can be assured that the XHR came from JavaScript running on your
	     * domain.
	     *
	     * To take advantage of this, your server needs to set a token in a JavaScript readable session
	     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the
	     * server can verify that the cookie matches the `X-XSRF-TOKEN` HTTP header, and therefore be
	     * sure that only JavaScript running on your domain could have sent the request. The token must
	     * be unique for each user and must be verifiable by the server (to prevent the JavaScript from
	     * making up its own tokens). We recommend that the token is a digest of your site's
	     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)
	     * for added security.
	     *
	     * The header will &mdash; by default &mdash; **not** be set for cross-domain requests. This
	     * prevents unauthorized servers (e.g. malicious or compromised 3rd-party APIs) from gaining
	     * access to your users' XSRF tokens and exposing them to Cross Site Request Forgery. If you
	     * want to, you can trust additional origins to also receive the XSRF token, by adding them
	     * to {@link ng.$httpProvider#xsrfTrustedOrigins xsrfTrustedOrigins}. This might be
	     * useful, for example, if your application, served from `example.com`, needs to access your API
	     * at `api.example.com`.
	     * See {@link ng.$httpProvider#xsrfTrustedOrigins $httpProvider.xsrfTrustedOrigins} for
	     * more details.
	     *
	     * <div class="alert alert-danger">
	     *   **Warning**<br />
	     *   Only trusted origins that you have control over and make sure you understand the
	     *   implications of doing so.
	     * </div>
	     *
	     * The name of the cookie and the header can be specified using the `xsrfCookieName` and
	     * `xsrfHeaderName` properties of either `$httpProvider.defaults` at config-time,
	     * `$http.defaults` at run-time, or the per-request config object.
	     *
	     * In order to prevent collisions in environments where multiple AngularJS apps share the
	     * same domain or subdomain, we recommend that each application uses a unique cookie name.
	     *
	     *
	     * @param {object} config Object describing the request to be made and how it should be
	     *    processed. The object has following properties:
	     *
	     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)
	     *    - **url** – `{string|TrustedObject}` – Absolute or relative URL of the resource that is being requested;
	     *      or an object created by a call to `$sce.trustAsResourceUrl(url)`.
	     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be serialized
	     *      with the `paramSerializer` and appended as GET parameters.
	     *    - **data** – `{string|Object}` – Data to be sent as the request message data.
	     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing
	     *      HTTP headers to send to the server. If the return value of a function is null, the
	     *      header will not be sent. Functions accept a config object as an argument.
	     *    - **eventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest object.
	     *      To bind events to the XMLHttpRequest upload object, use `uploadEventHandlers`.
	     *      The handler will be called in the context of a `$apply` block.
	     *    - **uploadEventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest upload
	     *      object. To bind events to the XMLHttpRequest object, use `eventHandlers`.
	     *      The handler will be called in the context of a `$apply` block.
	     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.
	     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.
	     *    - **transformRequest** –
	     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
	     *      transform function or an array of such functions. The transform function takes the http
	     *      request body and headers and returns its transformed (typically serialized) version.
	     *      See {@link ng.$http#overriding-the-default-transformations-per-request
	     *      Overriding the Default Transformations}
	     *    - **transformResponse** –
	     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –
	     *      transform function or an array of such functions. The transform function takes the http
	     *      response body, headers and status and returns its transformed (typically deserialized) version.
	     *      See {@link ng.$http#overriding-the-default-transformations-per-request
	     *      Overriding the Default Transformations}
	     *    - **paramSerializer** - `{string|function(Object<string,string>):string}` - A function used to
	     *      prepare the string representation of request parameters (specified as an object).
	     *      If specified as string, it is interpreted as function registered with the
	     *      {@link $injector $injector}, which means you can create your own serializer
	     *      by registering it as a {@link auto.$provide#service service}.
	     *      The default serializer is the {@link $httpParamSerializer $httpParamSerializer};
	     *      alternatively, you can use the {@link $httpParamSerializerJQLike $httpParamSerializerJQLike}
	     *    - **cache** – `{boolean|Object}` – A boolean value or object created with
	     *      {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of the HTTP response.
	     *      See {@link $http#caching $http Caching} for more information.
	     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}
	     *      that should abort the request when resolved.
	     *
	     *      A numerical timeout or a promise returned from {@link ng.$timeout $timeout}, will set
	     *      the `xhrStatus` in the {@link $http#$http-returns response} to "timeout", and any other
	     *      resolved promise will set it to "abort", following standard XMLHttpRequest behavior.
	     *
	     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the
	     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)
	     *      for more information.
	     *    - **responseType** - `{string}` - see
	     *      [XMLHttpRequest.responseType](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype).
	     *
	     * @returns {HttpPromise} A {@link ng.$q `Promise}` that will be resolved (request success)
	     *   or rejected (request failure) with a response object.
	     *
	     *   The response object has these properties:
	     *
	     *   - **data** – `{string|Object}` – The response body transformed with
	     *     the transform functions.
	     *   - **status** – `{number}` – HTTP status code of the response.
	     *   - **headers** – `{function([headerName])}` – Header getter function.
	     *   - **config** – `{Object}` – The configuration object that was used
	     *     to generate the request.
	     *   - **statusText** – `{string}` – HTTP status text of the response.
	     *   - **xhrStatus** – `{string}` – Status of the XMLHttpRequest
	     *     (`complete`, `error`, `timeout` or `abort`).
	     *
	     *
	     *   A response status code between 200 and 299 is considered a success status
	     *   and will result in the success callback being called. Any response status
	     *   code outside of that range is considered an error status and will result
	     *   in the error callback being called.
	     *   Also, status codes less than -1 are normalized to zero. -1 usually means
	     *   the request was aborted, e.g. using a `config.timeout`. More information
	     *   about the status might be available in the `xhrStatus` property.
	     *
	     *   Note that if the response is a redirect, XMLHttpRequest will transparently
	     *   follow it, meaning that the outcome (success or error) will be determined
	     *   by the final response status code.
	     *
	     *
	     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending
	     *   requests. This is primarily meant to be used for debugging purposes.
	     *
	     *
	     * @example
	<example module="httpExample" name="http-service">
	<file name="index.html">
	  <div ng-controller="FetchController">
	    <select ng-model="method" aria-label="Request method">
	      <option>GET</option>
	      <option>JSONP</option>
	    </select>
	    <input type="text" ng-model="url" size="80" aria-label="URL" />
	    <button id="fetchbtn" ng-click="fetch()">fetch</button><br>
	    <button id="samplegetbtn" ng-click="updateModel('GET', 'http-hello.html')">Sample GET</button>
	    <button id="samplejsonpbtn"
	      ng-click="updateModel('JSONP',
	                    'https://angularjs.org/greet.php?name=Super%20Hero')">
	      Sample JSONP
	    </button>
	    <button id="invalidjsonpbtn"
	      ng-click="updateModel('JSONP', 'https://angularjs.org/doesntexist')">
	        Invalid JSONP
	      </button>
	    <pre>http status code: {{status}}</pre>
	    <pre>http response data: {{data}}</pre>
	  </div>
	</file>
	<file name="script.js">
	  angular.module('httpExample', [])
	    .config(['$sceDelegateProvider', function($sceDelegateProvider) {
	      // We must add the JSONP endpoint that we are using to the trusted list to show that we trust it
	      $sceDelegateProvider.trustedResourceUrlList([
	        'self',
	        'https://angularjs.org/**'
	      ]);
	    }])
	    .controller('FetchController', ['$scope', '$http', '$templateCache',
	      function($scope, $http, $templateCache) {
	        $scope.method = 'GET';
	        $scope.url = 'http-hello.html';

	        $scope.fetch = function() {
	          $scope.code = null;
	          $scope.response = null;

	          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).
	            then(function(response) {
	              $scope.status = response.status;
	              $scope.data = response.data;
	            }, function(response) {
	              $scope.data = response.data || 'Request failed';
	              $scope.status = response.status;
	          });
	        };

	        $scope.updateModel = function(method, url) {
	          $scope.method = method;
	          $scope.url = url;
	        };
	      }]);
	</file>
	<file name="http-hello.html">
	  Hello, $http!
	</file>
	<file name="protractor.js" type="protractor">
	  var status = element(by.binding('status'));
	  var data = element(by.binding('data'));
	  var fetchBtn = element(by.id('fetchbtn'));
	  var sampleGetBtn = element(by.id('samplegetbtn'));
	  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));

	  it('should make an xhr GET request', function() {
	    sampleGetBtn.click();
	    fetchBtn.click();
	    expect(status.getText()).toMatch('200');
	    expect(data.getText()).toMatch(/Hello, \$http!/);
	  });

	// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185
	// it('should make a JSONP request to angularjs.org', function() {
	//   var sampleJsonpBtn = element(by.id('samplejsonpbtn'));
	//   sampleJsonpBtn.click();
	//   fetchBtn.click();
	//   expect(status.getText()).toMatch('200');
	//   expect(data.getText()).toMatch(/Super Hero!/);
	// });

	  it('should make JSONP request to invalid URL and invoke the error handler',
	      function() {
	    invalidJsonpBtn.click();
	    fetchBtn.click();
	    expect(status.getText()).toMatch('0');
	    expect(data.getText()).toMatch('Request failed');
	  });
	</file>
	</example>
	     */function $http(requestConfig){if(!isObject(requestConfig)){throw minErr('$http')('badreq','Http request configuration must be an object.  Received: {0}',requestConfig);}if(!isString($sce.valueOf(requestConfig.url))){throw minErr('$http')('badreq','Http request configuration url must be a string or a $sce trusted object.  Received: {0}',requestConfig.url);}var config=extend({method:'get',transformRequest:defaults.transformRequest,transformResponse:defaults.transformResponse,paramSerializer:defaults.paramSerializer,jsonpCallbackParam:defaults.jsonpCallbackParam},requestConfig);config.headers=mergeHeaders(requestConfig);config.method=uppercase(config.method);config.paramSerializer=isString(config.paramSerializer)?$injector.get(config.paramSerializer):config.paramSerializer;$browser.$$incOutstandingRequestCount('$http');var requestInterceptors=[];var responseInterceptors=[];var promise=$q.resolve(config);// apply interceptors
	forEach(reversedInterceptors,function(interceptor){if(interceptor.request||interceptor.requestError){requestInterceptors.unshift(interceptor.request,interceptor.requestError);}if(interceptor.response||interceptor.responseError){responseInterceptors.push(interceptor.response,interceptor.responseError);}});promise=chainInterceptors(promise,requestInterceptors);promise=promise.then(serverRequest);promise=chainInterceptors(promise,responseInterceptors);promise=promise.finally(completeOutstandingRequest);return promise;function chainInterceptors(promise,interceptors){for(var i=0,ii=interceptors.length;i<ii;){var thenFn=interceptors[i++];var rejectFn=interceptors[i++];promise=promise.then(thenFn,rejectFn);}interceptors.length=0;return promise;}function completeOutstandingRequest(){$browser.$$completeOutstandingRequest(noop,'$http');}function executeHeaderFns(headers,config){var headerContent,processedHeaders={};forEach(headers,function(headerFn,header){if(isFunction(headerFn)){headerContent=headerFn(config);if(headerContent!=null){processedHeaders[header]=headerContent;}}else{processedHeaders[header]=headerFn;}});return processedHeaders;}function mergeHeaders(config){var defHeaders=defaults.headers,reqHeaders=extend({},config.headers),defHeaderName,lowercaseDefHeaderName,reqHeaderName;defHeaders=extend({},defHeaders.common,defHeaders[lowercase(config.method)]);// using for-in instead of forEach to avoid unnecessary iteration after header has been found
	defaultHeadersIteration:for(defHeaderName in defHeaders){lowercaseDefHeaderName=lowercase(defHeaderName);for(reqHeaderName in reqHeaders){if(lowercase(reqHeaderName)===lowercaseDefHeaderName){continue defaultHeadersIteration;}}reqHeaders[defHeaderName]=defHeaders[defHeaderName];}// execute if header value is a function for merged headers
	return executeHeaderFns(reqHeaders,shallowCopy(config));}function serverRequest(config){var headers=config.headers;var reqData=transformData(config.data,headersGetter(headers),undefined,config.transformRequest);// strip content-type if data is undefined
	if(isUndefined(reqData)){forEach(headers,function(value,header){if(lowercase(header)==='content-type'){delete headers[header];}});}if(isUndefined(config.withCredentials)&&!isUndefined(defaults.withCredentials)){config.withCredentials=defaults.withCredentials;}// send request
	return sendReq(config,reqData).then(transformResponse,transformResponse);}function transformResponse(response){// make a copy since the response must be cacheable
	var resp=extend({},response);resp.data=transformData(response.data,response.headers,response.status,config.transformResponse);return isSuccess(response.status)?resp:$q.reject(resp);}}$http.pendingRequests=[];/**
	     * @ngdoc method
	     * @name $http#get
	     *
	     * @description
	     * Shortcut method to perform `GET` request.
	     *
	     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
	     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     *//**
	     * @ngdoc method
	     * @name $http#delete
	     *
	     * @description
	     * Shortcut method to perform `DELETE` request.
	     *
	     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
	     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     *//**
	     * @ngdoc method
	     * @name $http#head
	     *
	     * @description
	     * Shortcut method to perform `HEAD` request.
	     *
	     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
	     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     *//**
	     * @ngdoc method
	     * @name $http#jsonp
	     *
	     * @description
	     * Shortcut method to perform `JSONP` request.
	     *
	     * Note that, since JSONP requests are sensitive because the response is given full access to the browser,
	     * the url must be declared, via {@link $sce} as a trusted resource URL.
	     * You can trust a URL by adding it to the trusted resource URL list via
	     * {@link $sceDelegateProvider#trustedResourceUrlList  `$sceDelegateProvider.trustedResourceUrlList`} or
	     * by explicitly trusting the URL via {@link $sce#trustAsResourceUrl `$sce.trustAsResourceUrl(url)`}.
	     *
	     * You should avoid generating the URL for the JSONP request from user provided data.
	     * Provide additional query parameters via `params` property of the `config` parameter, rather than
	     * modifying the URL itself.
	     *
	     * JSONP requests must specify a callback to be used in the response from the server. This callback
	     * is passed as a query parameter in the request. You must specify the name of this parameter by
	     * setting the `jsonpCallbackParam` property on the request config object.
	     *
	     * ```
	     * $http.jsonp('some/trusted/url', {jsonpCallbackParam: 'callback'})
	     * ```
	     *
	     * You can also specify a default callback parameter name in `$http.defaults.jsonpCallbackParam`.
	     * Initially this is set to `'callback'`.
	     *
	     * <div class="alert alert-danger">
	     * You can no longer use the `JSON_CALLBACK` string as a placeholder for specifying where the callback
	     * parameter value should go.
	     * </div>
	     *
	     * If you would like to customise where and how the callbacks are stored then try overriding
	     * or decorating the {@link $jsonpCallbacks} service.
	     *
	     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
	     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     */createShortMethods('get','delete','head','jsonp');/**
	     * @ngdoc method
	     * @name $http#post
	     *
	     * @description
	     * Shortcut method to perform `POST` request.
	     *
	     * @param {string} url Relative or absolute URL specifying the destination of the request
	     * @param {*} data Request content
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     *//**
	     * @ngdoc method
	     * @name $http#put
	     *
	     * @description
	     * Shortcut method to perform `PUT` request.
	     *
	     * @param {string} url Relative or absolute URL specifying the destination of the request
	     * @param {*} data Request content
	     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	     * See {@link ng.$http#$http-returns `$http()` return value}.
	     *//**
	      * @ngdoc method
	      * @name $http#patch
	      *
	      * @description
	      * Shortcut method to perform `PATCH` request.
	      *
	      * @param {string} url Relative or absolute URL specifying the destination of the request
	      * @param {*} data Request content
	      * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
	      * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
	      * See {@link ng.$http#$http-returns `$http()` return value}.
	      */createShortMethodsWithData('post','put','patch');/**
	         * @ngdoc property
	         * @name $http#defaults
	         *
	         * @description
	         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of
	         * default headers, withCredentials as well as request and response transformations.
	         *
	         * See "Setting HTTP Headers" and "Transforming Requests and Responses" sections above.
	         */$http.defaults=defaults;return $http;function createShortMethods(names){forEach(arguments,function(name){$http[name]=function(url,config){return $http(extend({},config||{},{method:name,url:url}));};});}function createShortMethodsWithData(name){forEach(arguments,function(name){$http[name]=function(url,data,config){return $http(extend({},config||{},{method:name,url:url,data:data}));};});}/**
	     * Makes the request.
	     *
	     * !!! ACCESSES CLOSURE VARS:
	     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests
	     */function sendReq(config,reqData){var deferred=$q.defer(),promise=deferred.promise,cache,cachedResp,reqHeaders=config.headers,isJsonp=lowercase(config.method)==='jsonp',url=config.url;if(isJsonp){// JSONP is a pretty sensitive operation where we're allowing a script to have full access to
	// our DOM and JS space.  So we require that the URL satisfies SCE.RESOURCE_URL.
	url=$sce.getTrustedResourceUrl(url);}else if(!isString(url)){// If it is not a string then the URL must be a $sce trusted object
	url=$sce.valueOf(url);}url=buildUrl(url,config.paramSerializer(config.params));if(isJsonp){// Check the url and add the JSONP callback placeholder
	url=sanitizeJsonpCallbackParam(url,config.jsonpCallbackParam);}$http.pendingRequests.push(config);promise.then(removePendingReq,removePendingReq);if((config.cache||defaults.cache)&&config.cache!==false&&(config.method==='GET'||config.method==='JSONP')){cache=isObject(config.cache)?config.cache:isObject(/** @type {?} */defaults.cache)?/** @type {?} */defaults.cache:defaultCache;}if(cache){cachedResp=cache.get(url);if(isDefined(cachedResp)){if(isPromiseLike(cachedResp)){// cached request has already been sent, but there is no response yet
	cachedResp.then(resolvePromiseWithResult,resolvePromiseWithResult);}else{// serving from cache
	if(isArray(cachedResp)){resolvePromise(cachedResp[1],cachedResp[0],shallowCopy(cachedResp[2]),cachedResp[3],cachedResp[4]);}else{resolvePromise(cachedResp,200,{},'OK','complete');}}}else{// put the promise for the non-transformed response into cache as a placeholder
	cache.put(url,promise);}}// if we won't have the response in cache, set the xsrf headers and
	// send the request to the backend
	if(isUndefined(cachedResp)){var xsrfValue=urlIsAllowedOrigin(config.url)?$$cookieReader()[config.xsrfCookieName||defaults.xsrfCookieName]:undefined;if(xsrfValue){reqHeaders[config.xsrfHeaderName||defaults.xsrfHeaderName]=xsrfValue;}$httpBackend(config.method,url,reqData,done,reqHeaders,config.timeout,config.withCredentials,config.responseType,createApplyHandlers(config.eventHandlers),createApplyHandlers(config.uploadEventHandlers));}return promise;function createApplyHandlers(eventHandlers){if(eventHandlers){var applyHandlers={};forEach(eventHandlers,function(eventHandler,key){applyHandlers[key]=function(event){if(useApplyAsync){$rootScope.$applyAsync(callEventHandler);}else if($rootScope.$$phase){callEventHandler();}else{$rootScope.$apply(callEventHandler);}function callEventHandler(){eventHandler(event);}};});return applyHandlers;}}/**
	       * Callback registered to $httpBackend():
	       *  - caches the response if desired
	       *  - resolves the raw $http promise
	       *  - calls $apply
	       */function done(status,response,headersString,statusText,xhrStatus){if(cache){if(isSuccess(status)){cache.put(url,[status,response,parseHeaders(headersString),statusText,xhrStatus]);}else{// remove promise from the cache
	cache.remove(url);}}function resolveHttpPromise(){resolvePromise(response,status,headersString,statusText,xhrStatus);}if(useApplyAsync){$rootScope.$applyAsync(resolveHttpPromise);}else{resolveHttpPromise();if(!$rootScope.$$phase)$rootScope.$apply();}}/**
	       * Resolves the raw $http promise.
	       */function resolvePromise(response,status,headers,statusText,xhrStatus){//status: HTTP response status code, 0, -1 (aborted by timeout / promise)
	status=status>=-1?status:0;(isSuccess(status)?deferred.resolve:deferred.reject)({data:response,status:status,headers:headersGetter(headers),config:config,statusText:statusText,xhrStatus:xhrStatus});}function resolvePromiseWithResult(result){resolvePromise(result.data,result.status,shallowCopy(result.headers()),result.statusText,result.xhrStatus);}function removePendingReq(){var idx=$http.pendingRequests.indexOf(config);if(idx!==-1)$http.pendingRequests.splice(idx,1);}}function buildUrl(url,serializedParams){if(serializedParams.length>0){url+=(url.indexOf('?')===-1?'?':'&')+serializedParams;}return url;}function sanitizeJsonpCallbackParam(url,cbKey){var parts=url.split('?');if(parts.length>2){// Throw if the url contains more than one `?` query indicator
	throw $httpMinErr('badjsonp','Illegal use more than one "?", in url, "{1}"',url);}var params=parseKeyValue(parts[1]);forEach(params,function(value,key){if(value==='JSON_CALLBACK'){// Throw if the url already contains a reference to JSON_CALLBACK
	throw $httpMinErr('badjsonp','Illegal use of JSON_CALLBACK in url, "{0}"',url);}if(key===cbKey){// Throw if the callback param was already provided
	throw $httpMinErr('badjsonp','Illegal use of callback param, "{0}", in url, "{1}"',cbKey,url);}});// Add in the JSON_CALLBACK callback param value
	url+=(url.indexOf('?')===-1?'?':'&')+cbKey+'=JSON_CALLBACK';return url;}}];}/**
	 * @ngdoc service
	 * @name $xhrFactory
	 * @this
	 *
	 * @description
	 * Factory function used to create XMLHttpRequest objects.
	 *
	 * Replace or decorate this service to create your own custom XMLHttpRequest objects.
	 *
	 * ```
	 * angular.module('myApp', [])
	 * .factory('$xhrFactory', function() {
	 *   return function createXhr(method, url) {
	 *     return new window.XMLHttpRequest({mozSystem: true});
	 *   };
	 * });
	 * ```
	 *
	 * @param {string} method HTTP method of the request (GET, POST, PUT, ..)
	 * @param {string} url URL of the request.
	 */function $xhrFactoryProvider(){this.$get=function(){return function createXhr(){return new window.XMLHttpRequest();};};}/**
	 * @ngdoc service
	 * @name $httpBackend
	 * @requires $jsonpCallbacks
	 * @requires $document
	 * @requires $xhrFactory
	 * @this
	 *
	 * @description
	 * HTTP backend used by the {@link ng.$http service} that delegates to
	 * XMLHttpRequest object or JSONP and deals with browser incompatibilities.
	 *
	 * You should never need to use this service directly, instead use the higher-level abstractions:
	 * {@link ng.$http $http} or {@link ngResource.$resource $resource}.
	 *
	 * During testing this implementation is swapped with {@link ngMock.$httpBackend mock
	 * $httpBackend} which can be trained with responses.
	 */function $HttpBackendProvider(){this.$get=['$browser','$jsonpCallbacks','$document','$xhrFactory',function($browser,$jsonpCallbacks,$document,$xhrFactory){return createHttpBackend($browser,$xhrFactory,$browser.defer,$jsonpCallbacks,$document[0]);}];}function createHttpBackend($browser,createXhr,$browserDefer,callbacks,rawDocument){// TODO(vojta): fix the signature
	return function(method,url,post,callback,headers,timeout,withCredentials,responseType,eventHandlers,uploadEventHandlers){url=url||$browser.url();if(lowercase(method)==='jsonp'){var callbackPath=callbacks.createCallback(url);var jsonpDone=jsonpReq(url,callbackPath,function(status,text){// jsonpReq only ever sets status to 200 (OK), 404 (ERROR) or -1 (WAITING)
	var response=status===200&&callbacks.getResponse(callbackPath);completeRequest(callback,status,response,'',text,'complete');callbacks.removeCallback(callbackPath);});}else{var xhr=createXhr(method,url);var abortedByTimeout=false;xhr.open(method,url,true);forEach(headers,function(value,key){if(isDefined(value)){xhr.setRequestHeader(key,value);}});xhr.onload=function requestLoaded(){var statusText=xhr.statusText||'';// responseText is the old-school way of retrieving response (supported by IE9)
	// response/responseType properties were introduced in XHR Level2 spec (supported by IE10)
	var response='response'in xhr?xhr.response:xhr.responseText;// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
	var status=xhr.status===1223?204:xhr.status;// fix status code when it is 0 (0 status is undocumented).
	// Occurs when accessing file resources or on Android 4.1 stock browser
	// while retrieving files from application cache.
	if(status===0){status=response?200:urlResolve(url).protocol==='file'?404:0;}completeRequest(callback,status,response,xhr.getAllResponseHeaders(),statusText,'complete');};var requestError=function requestError(){// The response is always empty
	// See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error
	completeRequest(callback,-1,null,null,'','error');};var requestAborted=function requestAborted(){completeRequest(callback,-1,null,null,'',abortedByTimeout?'timeout':'abort');};var requestTimeout=function requestTimeout(){// The response is always empty
	// See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error
	completeRequest(callback,-1,null,null,'','timeout');};xhr.onerror=requestError;xhr.ontimeout=requestTimeout;xhr.onabort=requestAborted;forEach(eventHandlers,function(value,key){xhr.addEventListener(key,value);});forEach(uploadEventHandlers,function(value,key){xhr.upload.addEventListener(key,value);});if(withCredentials){xhr.withCredentials=true;}if(responseType){try{xhr.responseType=responseType;}catch(e){// WebKit added support for the json responseType value on 09/03/2013
	// https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are
	// known to throw when setting the value "json" as the response type. Other older
	// browsers implementing the responseType
	//
	// The json response type can be ignored if not supported, because JSON payloads are
	// parsed on the client-side regardless.
	if(responseType!=='json'){throw e;}}}xhr.send(isUndefined(post)?null:post);}// Since we are using xhr.abort() when a request times out, we have to set a flag that
	// indicates to requestAborted if the request timed out or was aborted.
	//
	// http.timeout = numerical timeout   timeout
	// http.timeout = $timeout            timeout
	// http.timeout = promise             abort
	// xhr.abort()                        abort (The xhr object is normally inaccessible, but
	//                                    can be exposed with the xhrFactory)
	if(timeout>0){var timeoutId=$browserDefer(function(){timeoutRequest('timeout');},timeout);}else if(isPromiseLike(timeout)){timeout.then(function(){timeoutRequest(isDefined(timeout.$$timeoutId)?'timeout':'abort');});}function timeoutRequest(reason){abortedByTimeout=reason==='timeout';if(jsonpDone){jsonpDone();}if(xhr){xhr.abort();}}function completeRequest(callback,status,response,headersString,statusText,xhrStatus){// cancel timeout and subsequent timeout promise resolution
	if(isDefined(timeoutId)){$browserDefer.cancel(timeoutId);}jsonpDone=xhr=null;callback(status,response,headersString,statusText,xhrStatus);}};function jsonpReq(url,callbackPath,done){url=url.replace('JSON_CALLBACK',callbackPath);// we can't use jQuery/jqLite here because jQuery does crazy stuff with script elements, e.g.:
	// - fetches local scripts via XHR and evals them
	// - adds and immediately removes script elements from the document
	var script=rawDocument.createElement('script'),_callback=null;script.type='text/javascript';script.src=url;script.async=true;_callback=function callback(event){script.removeEventListener('load',_callback);script.removeEventListener('error',_callback);rawDocument.body.removeChild(script);script=null;var status=-1;var text='unknown';if(event){if(event.type==='load'&&!callbacks.wasCalled(callbackPath)){event={type:'error'};}text=event.type;status=event.type==='error'?404:200;}if(done){done(status,text);}};script.addEventListener('load',_callback);script.addEventListener('error',_callback);rawDocument.body.appendChild(script);return _callback;}}var $interpolateMinErr=angular.$interpolateMinErr=minErr('$interpolate');$interpolateMinErr.throwNoconcat=function(text){throw $interpolateMinErr('noconcat','Error while interpolating: {0}\nStrict Contextual Escaping disallows '+'interpolations that concatenate multiple expressions when a trusted value is '+'required.  See http://docs.angularjs.org/api/ng.$sce',text);};$interpolateMinErr.interr=function(text,err){return $interpolateMinErr('interr','Can\'t interpolate: {0}\n{1}',text,err.toString());};/**
	 * @ngdoc provider
	 * @name $interpolateProvider
	 * @this
	 *
	 * @description
	 *
	 * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.
	 *
	 * <div class="alert alert-danger">
	 * This feature is sometimes used to mix different markup languages, e.g. to wrap an AngularJS
	 * template within a Python Jinja template (or any other template language). Mixing templating
	 * languages is **very dangerous**. The embedding template language will not safely escape AngularJS
	 * expressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)
	 * security bugs!
	 * </div>
	 *
	 * @example
	<example name="custom-interpolation-markup" module="customInterpolationApp">
	<file name="index.html">
	<script>
	  var customInterpolationApp = angular.module('customInterpolationApp', []);

	  customInterpolationApp.config(function($interpolateProvider) {
	    $interpolateProvider.startSymbol('//');
	    $interpolateProvider.endSymbol('//');
	  });


	  customInterpolationApp.controller('DemoController', function() {
	      this.label = "This binding is brought you by // interpolation symbols.";
	  });
	</script>
	<div ng-controller="DemoController as demo">
	    //demo.label//
	</div>
	</file>
	<file name="protractor.js" type="protractor">
	  it('should interpolate binding with custom symbols', function() {
	    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');
	  });
	</file>
	</example>
	 */function $InterpolateProvider(){var startSymbol='{{';var endSymbol='}}';/**
	   * @ngdoc method
	   * @name $interpolateProvider#startSymbol
	   * @description
	   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.
	   *
	   * @param {string=} value new value to set the starting symbol to.
	   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
	   */this.startSymbol=function(value){if(value){startSymbol=value;return this;}return startSymbol;};/**
	   * @ngdoc method
	   * @name $interpolateProvider#endSymbol
	   * @description
	   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
	   *
	   * @param {string=} value new value to set the ending symbol to.
	   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
	   */this.endSymbol=function(value){if(value){endSymbol=value;return this;}return endSymbol;};this.$get=['$parse','$exceptionHandler','$sce',function($parse,$exceptionHandler,$sce){var startSymbolLength=startSymbol.length,endSymbolLength=endSymbol.length,escapedStartRegexp=new RegExp(startSymbol.replace(/./g,escape),'g'),escapedEndRegexp=new RegExp(endSymbol.replace(/./g,escape),'g');function escape(ch){return'\\\\\\'+ch;}function unescapeText(text){return text.replace(escapedStartRegexp,startSymbol).replace(escapedEndRegexp,endSymbol);}// TODO: this is the same as the constantWatchDelegate in parse.js
	function constantWatchDelegate(scope,listener,objectEquality,constantInterp){var unwatch=scope.$watch(function constantInterpolateWatch(scope){unwatch();return constantInterp(scope);},listener,objectEquality);return unwatch;}/**
	     * @ngdoc service
	     * @name $interpolate
	     * @kind function
	     *
	     * @requires $parse
	     * @requires $sce
	     *
	     * @description
	     *
	     * Compiles a string with markup into an interpolation function. This service is used by the
	     * HTML {@link ng.$compile $compile} service for data binding. See
	     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the
	     * interpolation markup.
	     *
	     *
	     * ```js
	     *   var $interpolate = ...; // injected
	     *   var exp = $interpolate('Hello {{name | uppercase}}!');
	     *   expect(exp({name:'AngularJS'})).toEqual('Hello ANGULARJS!');
	     * ```
	     *
	     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is
	     * `true`, the interpolation function will return `undefined` unless all embedded expressions
	     * evaluate to a value other than `undefined`.
	     *
	     * ```js
	     *   var $interpolate = ...; // injected
	     *   var context = {greeting: 'Hello', name: undefined };
	     *
	     *   // default "forgiving" mode
	     *   var exp = $interpolate('{{greeting}} {{name}}!');
	     *   expect(exp(context)).toEqual('Hello !');
	     *
	     *   // "allOrNothing" mode
	     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);
	     *   expect(exp(context)).toBeUndefined();
	     *   context.name = 'AngularJS';
	     *   expect(exp(context)).toEqual('Hello AngularJS!');
	     * ```
	     *
	     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.
	     *
	     * #### Escaped Interpolation
	     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers
	     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).
	     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression
	     * or binding.
	     *
	     * This enables web-servers to prevent script injection attacks and defacing attacks, to some
	     * degree, while also enabling code examples to work without relying on the
	     * {@link ng.directive:ngNonBindable ngNonBindable} directive.
	     *
	     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,
	     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all
	     * interpolation start/end markers with their escaped counterparts.**
	     *
	     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered
	     * output when the $interpolate service processes the text. So, for HTML elements interpolated
	     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter
	     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,
	     * this is typically useful only when user-data is used in rendering a template from the server, or
	     * when otherwise untrusted data is used by a directive.
	     *
	     * <example name="interpolation">
	     *  <file name="index.html">
	     *    <div ng-init="username='A user'">
	     *      <p ng-init="apptitle='Escaping demo'">{{apptitle}}: \{\{ username = "defaced value"; \}\}
	     *        </p>
	     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the
	     *        application, but fails to accomplish their task, because the server has correctly
	     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)
	     *        characters.</p>
	     *      <p>Instead, the result of the attempted script injection is visible, and can be removed
	     *        from the database by an administrator.</p>
	     *    </div>
	     *  </file>
	     * </example>
	     *
	     * @knownIssue
	     * It is currently not possible for an interpolated expression to contain the interpolation end
	     * symbol. For example, `{{ '}}' }}` will be incorrectly interpreted as `{{ ' }}` + `' }}`, i.e.
	     * an interpolated expression consisting of a single-quote (`'`) and the `' }}` string.
	     *
	     * @knownIssue
	     * All directives and components must use the standard `{{` `}}` interpolation symbols
	     * in their templates. If you change the application interpolation symbols the {@link $compile}
	     * service will attempt to denormalize the standard symbols to the custom symbols.
	     * The denormalization process is not clever enough to know not to replace instances of the standard
	     * symbols where they would not normally be treated as interpolation symbols. For example in the following
	     * code snippet the closing braces of the literal object will get incorrectly denormalized:
	     *
	     * ```
	     * <div data-context='{"context":{"id":3,"type":"page"}}">
	     * ```
	     *
	     * The workaround is to ensure that such instances are separated by whitespace:
	     * ```
	     * <div data-context='{"context":{"id":3,"type":"page"} }">
	     * ```
	     *
	     * See https://github.com/angular/angular.js/pull/14610#issuecomment-219401099 for more information.
	     *
	     * @param {string} text The text with markup to interpolate.
	     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have
	     *    embedded expression in order to return an interpolation function. Strings with no
	     *    embedded expression will return null for the interpolation function.
	     * @param {string=} trustedContext when provided, the returned function passes the interpolated
	     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,
	     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that
	     *    provides Strict Contextual Escaping for details.
	     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined
	     *    unless all embedded expressions evaluate to a value other than `undefined`.
	     * @returns {function(context)} an interpolation function which is used to compute the
	     *    interpolated string. The function has these parameters:
	     *
	     * - `context`: evaluation context for all expressions embedded in the interpolated text
	     */function $interpolate(text,mustHaveExpression,trustedContext,allOrNothing){var contextAllowsConcatenation=trustedContext===$sce.URL||trustedContext===$sce.MEDIA_URL;// Provide a quick exit and simplified result function for text with no interpolation
	if(!text.length||text.indexOf(startSymbol)===-1){if(mustHaveExpression)return;var unescapedText=unescapeText(text);if(contextAllowsConcatenation){unescapedText=$sce.getTrusted(trustedContext,unescapedText);}var constantInterp=valueFn(unescapedText);constantInterp.exp=text;constantInterp.expressions=[];constantInterp.$$watchDelegate=constantWatchDelegate;return constantInterp;}allOrNothing=!!allOrNothing;var startIndex,endIndex,index=0,expressions=[],parseFns,textLength=text.length,exp,concat=[],expressionPositions=[],singleExpression;while(index<textLength){if((startIndex=text.indexOf(startSymbol,index))!==-1&&(endIndex=text.indexOf(endSymbol,startIndex+startSymbolLength))!==-1){if(index!==startIndex){concat.push(unescapeText(text.substring(index,startIndex)));}exp=text.substring(startIndex+startSymbolLength,endIndex);expressions.push(exp);index=endIndex+endSymbolLength;expressionPositions.push(concat.length);concat.push('');// Placeholder that will get replaced with the evaluated expression.
	}else{// we did not find an interpolation, so we have to add the remainder to the separators array
	if(index!==textLength){concat.push(unescapeText(text.substring(index)));}break;}}singleExpression=concat.length===1&&expressionPositions.length===1;// Intercept expression if we need to stringify concatenated inputs, which may be SCE trusted
	// objects rather than simple strings
	// (we don't modify the expression if the input consists of only a single trusted input)
	var interceptor=contextAllowsConcatenation&&singleExpression?undefined:parseStringifyInterceptor;parseFns=expressions.map(function(exp){return $parse(exp,interceptor);});// Concatenating expressions makes it hard to reason about whether some combination of
	// concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a
	// single expression be used for some $sce-managed secure contexts (RESOURCE_URLs mostly),
	// we ensure that the value that's used is assigned or constructed by some JS code somewhere
	// that is more testable or make it obvious that you bound the value to some user controlled
	// value.  This helps reduce the load when auditing for XSS issues.
	// Note that URL and MEDIA_URL $sce contexts do not need this, since `$sce` can sanitize the values
	// passed to it. In that case, `$sce.getTrusted` will be called on either the single expression
	// or on the overall concatenated string (losing trusted types used in the mix, by design).
	// Both these methods will sanitize plain strings. Also, HTML could be included, but since it's
	// only used in srcdoc attributes, this would not be very useful.
	if(!mustHaveExpression||expressions.length){var compute=function compute(values){for(var i=0,ii=expressions.length;i<ii;i++){if(allOrNothing&&isUndefined(values[i]))return;concat[expressionPositions[i]]=values[i];}if(contextAllowsConcatenation){// If `singleExpression` then `concat[0]` might be a "trusted" value or `null`, rather than a string
	return $sce.getTrusted(trustedContext,singleExpression?concat[0]:concat.join(''));}else if(trustedContext&&concat.length>1){// This context does not allow more than one part, e.g. expr + string or exp + exp.
	$interpolateMinErr.throwNoconcat(text);}// In an unprivileged context or only one part: just concatenate and return.
	return concat.join('');};return extend(function interpolationFn(context){var i=0;var ii=expressions.length;var values=new Array(ii);try{for(;i<ii;i++){values[i]=parseFns[i](context);}return compute(values);}catch(err){$exceptionHandler($interpolateMinErr.interr(text,err));}},{// all of these properties are undocumented for now
	exp:text,//just for compatibility with regular watchers created via $watch
	expressions:expressions,$$watchDelegate:function $$watchDelegate(scope,listener){var lastValue;return scope.$watchGroup(parseFns,/** @this */function interpolateFnWatcher(values,oldValues){var currValue=compute(values);listener.call(this,currValue,values!==oldValues?lastValue:currValue,scope);lastValue=currValue;});}});}function parseStringifyInterceptor(value){try{// In concatenable contexts, getTrusted comes at the end, to avoid sanitizing individual
	// parts of a full URL. We don't care about losing the trustedness here.
	// In non-concatenable contexts, where there is only one expression, this interceptor is
	// not applied to the expression.
	value=trustedContext&&!contextAllowsConcatenation?$sce.getTrusted(trustedContext,value):$sce.valueOf(value);return allOrNothing&&!isDefined(value)?value:stringify(value);}catch(err){$exceptionHandler($interpolateMinErr.interr(text,err));}}}/**
	     * @ngdoc method
	     * @name $interpolate#startSymbol
	     * @description
	     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.
	     *
	     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change
	     * the symbol.
	     *
	     * @returns {string} start symbol.
	     */$interpolate.startSymbol=function(){return startSymbol;};/**
	     * @ngdoc method
	     * @name $interpolate#endSymbol
	     * @description
	     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
	     *
	     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change
	     * the symbol.
	     *
	     * @returns {string} end symbol.
	     */$interpolate.endSymbol=function(){return endSymbol;};return $interpolate;}];}var $intervalMinErr=minErr('$interval');/** @this */function $IntervalProvider(){this.$get=['$$intervalFactory','$window',function($$intervalFactory,$window){var intervals={};var setIntervalFn=function setIntervalFn(tick,delay,deferred){var id=$window.setInterval(tick,delay);intervals[id]=deferred;return id;};var clearIntervalFn=function clearIntervalFn(id){$window.clearInterval(id);delete intervals[id];};/**
	     * @ngdoc service
	     * @name $interval
	     *
	     * @description
	     * AngularJS's wrapper for `window.setInterval`. The `fn` function is executed every `delay`
	     * milliseconds.
	     *
	     * The return value of registering an interval function is a promise. This promise will be
	     * notified upon each tick of the interval, and will be resolved after `count` iterations, or
	     * run indefinitely if `count` is not defined. The value of the notification will be the
	     * number of iterations that have run.
	     * To cancel an interval, call `$interval.cancel(promise)`.
	     *
	     * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to
	     * move forward by `millis` milliseconds and trigger any functions scheduled to run in that
	     * time.
	     *
	     * <div class="alert alert-warning">
	     * **Note**: Intervals created by this service must be explicitly destroyed when you are finished
	     * with them.  In particular they are not automatically destroyed when a controller's scope or a
	     * directive's element are destroyed.
	     * You should take this into consideration and make sure to always cancel the interval at the
	     * appropriate moment.  See the example below for more details on how and when to do this.
	     * </div>
	     *
	     * @param {function()} fn A function that should be called repeatedly. If no additional arguments
	     *   are passed (see below), the function is called with the current iteration count.
	     * @param {number} delay Number of milliseconds between each function call.
	     * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat
	     *   indefinitely.
	     * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
	     *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
	     * @param {...*=} Pass additional parameters to the executed function.
	     * @returns {promise} A promise which will be notified on each iteration. It will resolve once all iterations of the interval complete.
	     *
	     * @example
	     * <example module="intervalExample" name="interval-service">
	     * <file name="index.html">
	     *   <script>
	     *     angular.module('intervalExample', [])
	     *       .controller('ExampleController', ['$scope', '$interval',
	     *         function($scope, $interval) {
	     *           $scope.format = 'M/d/yy h:mm:ss a';
	     *           $scope.blood_1 = 100;
	     *           $scope.blood_2 = 120;
	     *
	     *           var stop;
	     *           $scope.fight = function() {
	     *             // Don't start a new fight if we are already fighting
	     *             if ( angular.isDefined(stop) ) return;
	     *
	     *             stop = $interval(function() {
	     *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {
	     *                 $scope.blood_1 = $scope.blood_1 - 3;
	     *                 $scope.blood_2 = $scope.blood_2 - 4;
	     *               } else {
	     *                 $scope.stopFight();
	     *               }
	     *             }, 100);
	     *           };
	     *
	     *           $scope.stopFight = function() {
	     *             if (angular.isDefined(stop)) {
	     *               $interval.cancel(stop);
	     *               stop = undefined;
	     *             }
	     *           };
	     *
	     *           $scope.resetFight = function() {
	     *             $scope.blood_1 = 100;
	     *             $scope.blood_2 = 120;
	     *           };
	     *
	     *           $scope.$on('$destroy', function() {
	     *             // Make sure that the interval is destroyed too
	     *             $scope.stopFight();
	     *           });
	     *         }])
	     *       // Register the 'myCurrentTime' directive factory method.
	     *       // We inject $interval and dateFilter service since the factory method is DI.
	     *       .directive('myCurrentTime', ['$interval', 'dateFilter',
	     *         function($interval, dateFilter) {
	     *           // return the directive link function. (compile function not needed)
	     *           return function(scope, element, attrs) {
	     *             var format,  // date format
	     *                 stopTime; // so that we can cancel the time updates
	     *
	     *             // used to update the UI
	     *             function updateTime() {
	     *               element.text(dateFilter(new Date(), format));
	     *             }
	     *
	     *             // watch the expression, and update the UI on change.
	     *             scope.$watch(attrs.myCurrentTime, function(value) {
	     *               format = value;
	     *               updateTime();
	     *             });
	     *
	     *             stopTime = $interval(updateTime, 1000);
	     *
	     *             // listen on DOM destroy (removal) event, and cancel the next UI update
	     *             // to prevent updating time after the DOM element was removed.
	     *             element.on('$destroy', function() {
	     *               $interval.cancel(stopTime);
	     *             });
	     *           }
	     *         }]);
	     *   </script>
	     *
	     *   <div>
	     *     <div ng-controller="ExampleController">
	     *       <label>Date format: <input ng-model="format"></label> <hr/>
	     *       Current time is: <span my-current-time="format"></span>
	     *       <hr/>
	     *       Blood 1 : <font color='red'>{{blood_1}}</font>
	     *       Blood 2 : <font color='red'>{{blood_2}}</font>
	     *       <button type="button" data-ng-click="fight()">Fight</button>
	     *       <button type="button" data-ng-click="stopFight()">StopFight</button>
	     *       <button type="button" data-ng-click="resetFight()">resetFight</button>
	     *     </div>
	     *   </div>
	     *
	     * </file>
	     * </example>
	     */var interval=$$intervalFactory(setIntervalFn,clearIntervalFn);/**
	     * @ngdoc method
	     * @name $interval#cancel
	     *
	     * @description
	     * Cancels a task associated with the `promise`.
	     *
	     * @param {Promise=} promise returned by the `$interval` function.
	     * @returns {boolean} Returns `true` if the task was successfully canceled.
	     */interval.cancel=function(promise){if(!promise)return false;if(!promise.hasOwnProperty('$$intervalId')){throw $intervalMinErr('badprom','`$interval.cancel()` called with a promise that was not generated by `$interval()`.');}if(!intervals.hasOwnProperty(promise.$$intervalId))return false;var id=promise.$$intervalId;var deferred=intervals[id];// Interval cancels should not report an unhandled promise.
	markQExceptionHandled(deferred.promise);deferred.reject('canceled');clearIntervalFn(id);return true;};return interval;}];}/** @this */function $$IntervalFactoryProvider(){this.$get=['$browser','$q','$$q','$rootScope',function($browser,$q,$$q,$rootScope){return function intervalFactory(setIntervalFn,clearIntervalFn){return function intervalFn(fn,delay,count,invokeApply){var hasParams=arguments.length>4,args=hasParams?sliceArgs(arguments,4):[],iteration=0,skipApply=isDefined(invokeApply)&&!invokeApply,deferred=(skipApply?$$q:$q).defer(),promise=deferred.promise;count=isDefined(count)?count:0;function callback(){if(!hasParams){fn(iteration);}else{fn.apply(null,args);}}function tick(){if(skipApply){$browser.defer(callback);}else{$rootScope.$evalAsync(callback);}deferred.notify(iteration++);if(count>0&&iteration>=count){deferred.resolve(iteration);clearIntervalFn(promise.$$intervalId);}if(!skipApply)$rootScope.$apply();}promise.$$intervalId=setIntervalFn(tick,delay,deferred,skipApply);return promise;};};}];}/**
	 * @ngdoc service
	 * @name $jsonpCallbacks
	 * @requires $window
	 * @description
	 * This service handles the lifecycle of callbacks to handle JSONP requests.
	 * Override this service if you wish to customise where the callbacks are stored and
	 * how they vary compared to the requested url.
	 */var $jsonpCallbacksProvider=/** @this */function $jsonpCallbacksProvider(){this.$get=function(){var callbacks=angular.callbacks;var callbackMap={};function _createCallback(callbackId){var callback=function callback(data){callback.data=data;callback.called=true;};callback.id=callbackId;return callback;}return{/**
	       * @ngdoc method
	       * @name $jsonpCallbacks#createCallback
	       * @param {string} url the url of the JSONP request
	       * @returns {string} the callback path to send to the server as part of the JSONP request
	       * @description
	       * {@link $httpBackend} calls this method to create a callback and get hold of the path to the callback
	       * to pass to the server, which will be used to call the callback with its payload in the JSONP response.
	       */createCallback:function createCallback(url){var callbackId='_'+(callbacks.$$counter++).toString(36);var callbackPath='angular.callbacks.'+callbackId;var callback=_createCallback(callbackId);callbackMap[callbackPath]=callbacks[callbackId]=callback;return callbackPath;},/**
	       * @ngdoc method
	       * @name $jsonpCallbacks#wasCalled
	       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
	       * @returns {boolean} whether the callback has been called, as a result of the JSONP response
	       * @description
	       * {@link $httpBackend} calls this method to find out whether the JSONP response actually called the
	       * callback that was passed in the request.
	       */wasCalled:function wasCalled(callbackPath){return callbackMap[callbackPath].called;},/**
	       * @ngdoc method
	       * @name $jsonpCallbacks#getResponse
	       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
	       * @returns {*} the data received from the response via the registered callback
	       * @description
	       * {@link $httpBackend} calls this method to get hold of the data that was provided to the callback
	       * in the JSONP response.
	       */getResponse:function getResponse(callbackPath){return callbackMap[callbackPath].data;},/**
	       * @ngdoc method
	       * @name $jsonpCallbacks#removeCallback
	       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
	       * @description
	       * {@link $httpBackend} calls this method to remove the callback after the JSONP request has
	       * completed or timed-out.
	       */removeCallback:function removeCallback(callbackPath){var callback=callbackMap[callbackPath];delete callbacks[callback.id];delete callbackMap[callbackPath];}};};};/**
	 * @ngdoc service
	 * @name $locale
	 *
	 * @description
	 * $locale service provides localization rules for various AngularJS components. As of right now the
	 * only public api is:
	 *
	 * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)
	 *//* global stripHash: true */var PATH_MATCH=/^([^?#]*)(\?([^#]*))?(#(.*))?$/,DEFAULT_PORTS={'http':80,'https':443,'ftp':21};var $locationMinErr=minErr('$location');/**
	 * Encode path using encodeUriSegment, ignoring forward slashes
	 *
	 * @param {string} path Path to encode
	 * @returns {string}
	 */function encodePath(path){var segments=path.split('/'),i=segments.length;while(i--){// decode forward slashes to prevent them from being double encoded
	segments[i]=encodeUriSegment(segments[i].replace(/%2F/g,'/'));}return segments.join('/');}function decodePath(path,html5Mode){var segments=path.split('/'),i=segments.length;while(i--){segments[i]=decodeURIComponent(segments[i]);if(html5Mode){// encode forward slashes to prevent them from being mistaken for path separators
	segments[i]=segments[i].replace(/\//g,'%2F');}}return segments.join('/');}function normalizePath(pathValue,searchValue,hashValue){var search=toKeyValue(searchValue),hash=hashValue?'#'+encodeUriSegment(hashValue):'',path=encodePath(pathValue);return path+(search?'?'+search:'')+hash;}function parseAbsoluteUrl(absoluteUrl,locationObj){var parsedUrl=urlResolve(absoluteUrl);locationObj.$$protocol=parsedUrl.protocol;locationObj.$$host=parsedUrl.hostname;locationObj.$$port=toInt(parsedUrl.port)||DEFAULT_PORTS[parsedUrl.protocol]||null;}var DOUBLE_SLASH_REGEX=/^\s*[\\/]{2,}/;function parseAppUrl(url,locationObj,html5Mode){if(DOUBLE_SLASH_REGEX.test(url)){throw $locationMinErr('badpath','Invalid url "{0}".',url);}var prefixed=url.charAt(0)!=='/';if(prefixed){url='/'+url;}var match=urlResolve(url);var path=prefixed&&match.pathname.charAt(0)==='/'?match.pathname.substring(1):match.pathname;locationObj.$$path=decodePath(path,html5Mode);locationObj.$$search=parseKeyValue(match.search);locationObj.$$hash=decodeURIComponent(match.hash);// make sure path starts with '/';
	if(locationObj.$$path&&locationObj.$$path.charAt(0)!=='/'){locationObj.$$path='/'+locationObj.$$path;}}function startsWith(str,search){return str.slice(0,search.length)===search;}/**
	 *
	 * @param {string} base
	 * @param {string} url
	 * @returns {string} returns text from `url` after `base` or `undefined` if it does not begin with
	 *                   the expected string.
	 */function stripBaseUrl(base,url){if(startsWith(url,base)){return url.substr(base.length);}}function stripHash(url){var index=url.indexOf('#');return index===-1?url:url.substr(0,index);}function stripFile(url){return url.substr(0,stripHash(url).lastIndexOf('/')+1);}/* return the server only (scheme://host:port) */function serverBase(url){return url.substring(0,url.indexOf('/',url.indexOf('//')+2));}/**
	 * LocationHtml5Url represents a URL
	 * This object is exposed as $location service when HTML5 mode is enabled and supported
	 *
	 * @constructor
	 * @param {string} appBase application base URL
	 * @param {string} appBaseNoFile application base URL stripped of any filename
	 * @param {string} basePrefix URL path prefix
	 */function LocationHtml5Url(appBase,appBaseNoFile,basePrefix){this.$$html5=true;basePrefix=basePrefix||'';parseAbsoluteUrl(appBase,this);/**
	   * Parse given HTML5 (regular) URL string into properties
	   * @param {string} url HTML5 URL
	   * @private
	   */this.$$parse=function(url){var pathUrl=stripBaseUrl(appBaseNoFile,url);if(!isString(pathUrl)){throw $locationMinErr('ipthprfx','Invalid url "{0}", missing path prefix "{1}".',url,appBaseNoFile);}parseAppUrl(pathUrl,this,true);if(!this.$$path){this.$$path='/';}this.$$compose();};this.$$normalizeUrl=function(url){return appBaseNoFile+url.substr(1);// first char is always '/'
	};this.$$parseLinkUrl=function(url,relHref){if(relHref&&relHref[0]==='#'){// special case for links to hash fragments:
	// keep the old url and only replace the hash fragment
	this.hash(relHref.slice(1));return true;}var appUrl,prevAppUrl;var rewrittenUrl;if(isDefined(appUrl=stripBaseUrl(appBase,url))){prevAppUrl=appUrl;if(basePrefix&&isDefined(appUrl=stripBaseUrl(basePrefix,appUrl))){rewrittenUrl=appBaseNoFile+(stripBaseUrl('/',appUrl)||appUrl);}else{rewrittenUrl=appBase+prevAppUrl;}}else if(isDefined(appUrl=stripBaseUrl(appBaseNoFile,url))){rewrittenUrl=appBaseNoFile+appUrl;}else if(appBaseNoFile===url+'/'){rewrittenUrl=appBaseNoFile;}if(rewrittenUrl){this.$$parse(rewrittenUrl);}return!!rewrittenUrl;};}/**
	 * LocationHashbangUrl represents URL
	 * This object is exposed as $location service when developer doesn't opt into html5 mode.
	 * It also serves as the base class for html5 mode fallback on legacy browsers.
	 *
	 * @constructor
	 * @param {string} appBase application base URL
	 * @param {string} appBaseNoFile application base URL stripped of any filename
	 * @param {string} hashPrefix hashbang prefix
	 */function LocationHashbangUrl(appBase,appBaseNoFile,hashPrefix){parseAbsoluteUrl(appBase,this);/**
	   * Parse given hashbang URL into properties
	   * @param {string} url Hashbang URL
	   * @private
	   */this.$$parse=function(url){var withoutBaseUrl=stripBaseUrl(appBase,url)||stripBaseUrl(appBaseNoFile,url);var withoutHashUrl;if(!isUndefined(withoutBaseUrl)&&withoutBaseUrl.charAt(0)==='#'){// The rest of the URL starts with a hash so we have
	// got either a hashbang path or a plain hash fragment
	withoutHashUrl=stripBaseUrl(hashPrefix,withoutBaseUrl);if(isUndefined(withoutHashUrl)){// There was no hashbang prefix so we just have a hash fragment
	withoutHashUrl=withoutBaseUrl;}}else{// There was no hashbang path nor hash fragment:
	// If we are in HTML5 mode we use what is left as the path;
	// Otherwise we ignore what is left
	if(this.$$html5){withoutHashUrl=withoutBaseUrl;}else{withoutHashUrl='';if(isUndefined(withoutBaseUrl)){appBase=url;/** @type {?} */this.replace();}}}parseAppUrl(withoutHashUrl,this,false);this.$$path=removeWindowsDriveName(this.$$path,withoutHashUrl,appBase);this.$$compose();/*
	     * In Windows, on an anchor node on documents loaded from
	     * the filesystem, the browser will return a pathname
	     * prefixed with the drive name ('/C:/path') when a
	     * pathname without a drive is set:
	     *  * a.setAttribute('href', '/foo')
	     *   * a.pathname === '/C:/foo' //true
	     *
	     * Inside of AngularJS, we're always using pathnames that
	     * do not include drive names for routing.
	     */function removeWindowsDriveName(path,url,base){/*
	      Matches paths for file protocol on windows,
	      such as /C:/foo/bar, and captures only /foo/bar.
	      */var windowsFilePathExp=/^\/[A-Z]:(\/.*)/;var firstPathSegmentMatch;//Get the relative path from the input URL.
	if(startsWith(url,base)){url=url.replace(base,'');}// The input URL intentionally contains a first path segment that ends with a colon.
	if(windowsFilePathExp.exec(url)){return path;}firstPathSegmentMatch=windowsFilePathExp.exec(path);return firstPathSegmentMatch?firstPathSegmentMatch[1]:path;}};this.$$normalizeUrl=function(url){return appBase+(url?hashPrefix+url:'');};this.$$parseLinkUrl=function(url,relHref){if(stripHash(appBase)===stripHash(url)){this.$$parse(url);return true;}return false;};}/**
	 * LocationHashbangUrl represents URL
	 * This object is exposed as $location service when html5 history api is enabled but the browser
	 * does not support it.
	 *
	 * @constructor
	 * @param {string} appBase application base URL
	 * @param {string} appBaseNoFile application base URL stripped of any filename
	 * @param {string} hashPrefix hashbang prefix
	 */function LocationHashbangInHtml5Url(appBase,appBaseNoFile,hashPrefix){this.$$html5=true;LocationHashbangUrl.apply(this,arguments);this.$$parseLinkUrl=function(url,relHref){if(relHref&&relHref[0]==='#'){// special case for links to hash fragments:
	// keep the old url and only replace the hash fragment
	this.hash(relHref.slice(1));return true;}var rewrittenUrl;var appUrl;if(appBase===stripHash(url)){rewrittenUrl=url;}else if(appUrl=stripBaseUrl(appBaseNoFile,url)){rewrittenUrl=appBase+hashPrefix+appUrl;}else if(appBaseNoFile===url+'/'){rewrittenUrl=appBaseNoFile;}if(rewrittenUrl){this.$$parse(rewrittenUrl);}return!!rewrittenUrl;};this.$$normalizeUrl=function(url){// include hashPrefix in $$absUrl when $$url is empty so IE9 does not reload page because of removal of '#'
	return appBase+hashPrefix+url;};}var locationPrototype={/**
	   * Ensure absolute URL is initialized.
	   * @private
	   */$$absUrl:'',/**
	   * Are we in html5 mode?
	   * @private
	   */$$html5:false,/**
	   * Has any change been replacing?
	   * @private
	   */$$replace:false,/**
	   * Compose url and update `url` and `absUrl` property
	   * @private
	   */$$compose:function $$compose(){this.$$url=normalizePath(this.$$path,this.$$search,this.$$hash);this.$$absUrl=this.$$normalizeUrl(this.$$url);this.$$urlUpdatedByLocation=true;},/**
	   * @ngdoc method
	   * @name $location#absUrl
	   *
	   * @description
	   * This method is getter only.
	   *
	   * Return full URL representation with all segments encoded according to rules specified in
	   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var absUrl = $location.absUrl();
	   * // => "http://example.com/#/some/path?foo=bar&baz=xoxo"
	   * ```
	   *
	   * @return {string} full URL
	   */absUrl:locationGetter('$$absUrl'),/**
	   * @ngdoc method
	   * @name $location#url
	   *
	   * @description
	   * This method is getter / setter.
	   *
	   * Return URL (e.g. `/path?a=b#hash`) when called without any parameter.
	   *
	   * Change path, search and hash, when called with parameter and return `$location`.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var url = $location.url();
	   * // => "/some/path?foo=bar&baz=xoxo"
	   * ```
	   *
	   * @param {string=} url New URL without base prefix (e.g. `/path?a=b#hash`)
	   * @return {string} url
	   */url:function url(_url){if(isUndefined(_url)){return this.$$url;}var match=PATH_MATCH.exec(_url);if(match[1]||_url==='')this.path(decodeURIComponent(match[1]));if(match[2]||match[1]||_url==='')this.search(match[3]||'');this.hash(match[5]||'');return this;},/**
	   * @ngdoc method
	   * @name $location#protocol
	   *
	   * @description
	   * This method is getter only.
	   *
	   * Return protocol of current URL.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var protocol = $location.protocol();
	   * // => "http"
	   * ```
	   *
	   * @return {string} protocol of current URL
	   */protocol:locationGetter('$$protocol'),/**
	   * @ngdoc method
	   * @name $location#host
	   *
	   * @description
	   * This method is getter only.
	   *
	   * Return host of current URL.
	   *
	   * Note: compared to the non-AngularJS version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var host = $location.host();
	   * // => "example.com"
	   *
	   * // given URL http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo
	   * host = $location.host();
	   * // => "example.com"
	   * host = location.host;
	   * // => "example.com:8080"
	   * ```
	   *
	   * @return {string} host of current URL.
	   */host:locationGetter('$$host'),/**
	   * @ngdoc method
	   * @name $location#port
	   *
	   * @description
	   * This method is getter only.
	   *
	   * Return port of current URL.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var port = $location.port();
	   * // => 80
	   * ```
	   *
	   * @return {Number} port
	   */port:locationGetter('$$port'),/**
	   * @ngdoc method
	   * @name $location#path
	   *
	   * @description
	   * This method is getter / setter.
	   *
	   * Return path of current URL when called without any parameter.
	   *
	   * Change path when called with parameter and return `$location`.
	   *
	   * Note: Path should always begin with forward slash (/), this method will add the forward slash
	   * if it is missing.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var path = $location.path();
	   * // => "/some/path"
	   * ```
	   *
	   * @param {(string|number)=} path New path
	   * @return {(string|object)} path if called with no parameters, or `$location` if called with a parameter
	   */path:locationGetterSetter('$$path',function(path){path=path!==null?path.toString():'';return path.charAt(0)==='/'?path:'/'+path;}),/**
	   * @ngdoc method
	   * @name $location#search
	   *
	   * @description
	   * This method is getter / setter.
	   *
	   * Return search part (as object) of current URL when called without any parameter.
	   *
	   * Change search part when called with parameter and return `$location`.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
	   * var searchObject = $location.search();
	   * // => {foo: 'bar', baz: 'xoxo'}
	   *
	   * // set foo to 'yipee'
	   * $location.search('foo', 'yipee');
	   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}
	   * ```
	   *
	   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or
	   * hash object.
	   *
	   * When called with a single argument the method acts as a setter, setting the `search` component
	   * of `$location` to the specified value.
	   *
	   * If the argument is a hash object containing an array of values, these values will be encoded
	   * as duplicate search parameters in the URL.
	   *
	   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`
	   * will override only a single search property.
	   *
	   * If `paramValue` is an array, it will override the property of the `search` component of
	   * `$location` specified via the first argument.
	   *
	   * If `paramValue` is `null`, the property specified via the first argument will be deleted.
	   *
	   * If `paramValue` is `true`, the property specified via the first argument will be added with no
	   * value nor trailing equal sign.
	   *
	   * @return {Object} If called with no arguments returns the parsed `search` object. If called with
	   * one or more arguments returns `$location` object itself.
	   */search:function search(_search,paramValue){switch(arguments.length){case 0:return this.$$search;case 1:if(isString(_search)||isNumber(_search)){_search=_search.toString();this.$$search=parseKeyValue(_search);}else if(isObject(_search)){_search=copy(_search,{});// remove object undefined or null properties
	forEach(_search,function(value,key){if(value==null)delete _search[key];});this.$$search=_search;}else{throw $locationMinErr('isrcharg','The first argument of the `$location#search()` call must be a string or an object.');}break;default:if(isUndefined(paramValue)||paramValue===null){delete this.$$search[_search];}else{this.$$search[_search]=paramValue;}}this.$$compose();return this;},/**
	   * @ngdoc method
	   * @name $location#hash
	   *
	   * @description
	   * This method is getter / setter.
	   *
	   * Returns the hash fragment when called without any parameters.
	   *
	   * Changes the hash fragment when called with a parameter and returns `$location`.
	   *
	   *
	   * ```js
	   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue
	   * var hash = $location.hash();
	   * // => "hashValue"
	   * ```
	   *
	   * @param {(string|number)=} hash New hash fragment
	   * @return {string} hash
	   */hash:locationGetterSetter('$$hash',function(hash){return hash!==null?hash.toString():'';}),/**
	   * @ngdoc method
	   * @name $location#replace
	   *
	   * @description
	   * If called, all changes to $location during the current `$digest` will replace the current history
	   * record, instead of adding a new one.
	   */replace:function replace(){this.$$replace=true;return this;}};forEach([LocationHashbangInHtml5Url,LocationHashbangUrl,LocationHtml5Url],function(Location){Location.prototype=Object.create(locationPrototype);/**
	   * @ngdoc method
	   * @name $location#state
	   *
	   * @description
	   * This method is getter / setter.
	   *
	   * Return the history state object when called without any parameter.
	   *
	   * Change the history state object when called with one parameter and return `$location`.
	   * The state object is later passed to `pushState` or `replaceState`.
	   *
	   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting
	   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support
	   * older browsers (like IE9 or Android < 4.0), don't use this method.
	   *
	   * @param {object=} state State object for pushState or replaceState
	   * @return {object} state
	   */Location.prototype.state=function(state){if(!arguments.length){return this.$$state;}if(Location!==LocationHtml5Url||!this.$$html5){throw $locationMinErr('nostate','History API state support is available only '+'in HTML5 mode and only in browsers supporting HTML5 History API');}// The user might modify `stateObject` after invoking `$location.state(stateObject)`
	// but we're changing the $$state reference to $browser.state() during the $digest
	// so the modification window is narrow.
	this.$$state=isUndefined(state)?null:state;this.$$urlUpdatedByLocation=true;return this;};});function locationGetter(property){return(/** @this */function(){return this[property];});}function locationGetterSetter(property,preprocess){return(/** @this */function(value){if(isUndefined(value)){return this[property];}this[property]=preprocess(value);this.$$compose();return this;});}/**
	 * @ngdoc service
	 * @name $location
	 *
	 * @requires $rootElement
	 *
	 * @description
	 * The $location service parses the URL in the browser address bar (based on the
	 * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL
	 * available to your application. Changes to the URL in the address bar are reflected into
	 * $location service and changes to $location are reflected into the browser address bar.
	 *
	 * **The $location service:**
	 *
	 * - Exposes the current URL in the browser address bar, so you can
	 *   - Watch and observe the URL.
	 *   - Change the URL.
	 * - Synchronizes the URL with the browser when the user
	 *   - Changes the address bar.
	 *   - Clicks the back or forward button (or clicks a History link).
	 *   - Clicks on a link.
	 * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
	 *
	 * For more information see {@link guide/$location Developer Guide: Using $location}
	 *//**
	 * @ngdoc provider
	 * @name $locationProvider
	 * @this
	 *
	 * @description
	 * Use the `$locationProvider` to configure how the application deep linking paths are stored.
	 */function $LocationProvider(){var hashPrefix='!',html5Mode={enabled:false,requireBase:true,rewriteLinks:true};/**
	   * @ngdoc method
	   * @name $locationProvider#hashPrefix
	   * @description
	   * The default value for the prefix is `'!'`.
	   * @param {string=} prefix Prefix for hash part (containing path and search)
	   * @returns {*} current value if used as getter or itself (chaining) if used as setter
	   */this.hashPrefix=function(prefix){if(isDefined(prefix)){hashPrefix=prefix;return this;}else{return hashPrefix;}};/**
	   * @ngdoc method
	   * @name $locationProvider#html5Mode
	   * @description
	   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.
	   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported
	   *   properties:
	   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to
	   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not
	   *     support `pushState`.
	   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies
	   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are
	   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.
	   *     See the {@link guide/$location $location guide for more information}
	   *   - **rewriteLinks** - `{boolean|string}` - (default: `true`) When html5Mode is enabled,
	   *     enables/disables URL rewriting for relative links. If set to a string, URL rewriting will
	   *     only happen on links with an attribute that matches the given string. For example, if set
	   *     to `'internal-link'`, then the URL will only be rewritten for `<a internal-link>` links.
	   *     Note that [attribute name normalization](guide/directive#normalization) does not apply
	   *     here, so `'internalLink'` will **not** match `'internal-link'`.
	   *
	   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter
	   */this.html5Mode=function(mode){if(isBoolean(mode)){html5Mode.enabled=mode;return this;}else if(isObject(mode)){if(isBoolean(mode.enabled)){html5Mode.enabled=mode.enabled;}if(isBoolean(mode.requireBase)){html5Mode.requireBase=mode.requireBase;}if(isBoolean(mode.rewriteLinks)||isString(mode.rewriteLinks)){html5Mode.rewriteLinks=mode.rewriteLinks;}return this;}else{return html5Mode;}};/**
	   * @ngdoc event
	   * @name $location#$locationChangeStart
	   * @eventType broadcast on root scope
	   * @description
	   * Broadcasted before a URL will change.
	   *
	   * This change can be prevented by calling
	   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more
	   * details about event object. Upon successful change
	   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.
	   *
	   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
	   * the browser supports the HTML5 History API.
	   *
	   * @param {Object} angularEvent Synthetic event object.
	   * @param {string} newUrl New URL
	   * @param {string=} oldUrl URL that was before it was changed.
	   * @param {string=} newState New history state object
	   * @param {string=} oldState History state object that was before it was changed.
	   *//**
	   * @ngdoc event
	   * @name $location#$locationChangeSuccess
	   * @eventType broadcast on root scope
	   * @description
	   * Broadcasted after a URL was changed.
	   *
	   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
	   * the browser supports the HTML5 History API.
	   *
	   * @param {Object} angularEvent Synthetic event object.
	   * @param {string} newUrl New URL
	   * @param {string=} oldUrl URL that was before it was changed.
	   * @param {string=} newState New history state object
	   * @param {string=} oldState History state object that was before it was changed.
	   */this.$get=['$rootScope','$browser','$sniffer','$rootElement','$window',function($rootScope,$browser,$sniffer,$rootElement,$window){var $location,LocationMode,baseHref=$browser.baseHref(),// if base[href] is undefined, it defaults to ''
	initialUrl=$browser.url(),appBase;if(html5Mode.enabled){if(!baseHref&&html5Mode.requireBase){throw $locationMinErr('nobase','$location in HTML5 mode requires a <base> tag to be present!');}appBase=serverBase(initialUrl)+(baseHref||'/');LocationMode=$sniffer.history?LocationHtml5Url:LocationHashbangInHtml5Url;}else{appBase=stripHash(initialUrl);LocationMode=LocationHashbangUrl;}var appBaseNoFile=stripFile(appBase);$location=new LocationMode(appBase,appBaseNoFile,'#'+hashPrefix);$location.$$parseLinkUrl(initialUrl,initialUrl);$location.$$state=$browser.state();var IGNORE_URI_REGEXP=/^\s*(javascript|mailto):/i;// Determine if two URLs are equal despite potentially having different encoding/normalizing
	//  such as $location.absUrl() vs $browser.url()
	// See https://github.com/angular/angular.js/issues/16592
	function urlsEqual(a,b){return a===b||urlResolve(a).href===urlResolve(b).href;}function setBrowserUrlWithFallback(url,replace,state){var oldUrl=$location.url();var oldState=$location.$$state;try{$browser.url(url,replace,state);// Make sure $location.state() returns referentially identical (not just deeply equal)
	// state object; this makes possible quick checking if the state changed in the digest
	// loop. Checking deep equality would be too expensive.
	$location.$$state=$browser.state();}catch(e){// Restore old values if pushState fails
	$location.url(oldUrl);$location.$$state=oldState;throw e;}}$rootElement.on('click',function(event){var rewriteLinks=html5Mode.rewriteLinks;// TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)
	// currently we open nice url link and redirect then
	if(!rewriteLinks||event.ctrlKey||event.metaKey||event.shiftKey||event.which===2||event.button===2)return;var elm=jqLite(event.target);// traverse the DOM up to find first A tag
	while(nodeName_(elm[0])!=='a'){// ignore rewriting if no A tag (reached root element, or no parent - removed from document)
	if(elm[0]===$rootElement[0]||!(elm=elm.parent())[0])return;}if(isString(rewriteLinks)&&isUndefined(elm.attr(rewriteLinks)))return;var absHref=elm.prop('href');// get the actual href attribute - see
	// http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx
	var relHref=elm.attr('href')||elm.attr('xlink:href');if(isObject(absHref)&&absHref.toString()==='[object SVGAnimatedString]'){// SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during
	// an animation.
	absHref=urlResolve(absHref.animVal).href;}// Ignore when url is started with javascript: or mailto:
	if(IGNORE_URI_REGEXP.test(absHref))return;if(absHref&&!elm.attr('target')&&!event.isDefaultPrevented()){if($location.$$parseLinkUrl(absHref,relHref)){// We do a preventDefault for all urls that are part of the AngularJS application,
	// in html5mode and also without, so that we are able to abort navigation without
	// getting double entries in the location history.
	event.preventDefault();// update location manually
	if($location.absUrl()!==$browser.url()){$rootScope.$apply();}}}});// rewrite hashbang url <> html5 url
	if($location.absUrl()!==initialUrl){$browser.url($location.absUrl(),true);}var initializing=true;// update $location when $browser url changes
	$browser.onUrlChange(function(newUrl,newState){if(!startsWith(newUrl,appBaseNoFile)){// If we are navigating outside of the app then force a reload
	$window.location.href=newUrl;return;}$rootScope.$evalAsync(function(){var oldUrl=$location.absUrl();var oldState=$location.$$state;var defaultPrevented;$location.$$parse(newUrl);$location.$$state=newState;defaultPrevented=$rootScope.$broadcast('$locationChangeStart',newUrl,oldUrl,newState,oldState).defaultPrevented;// if the location was changed by a `$locationChangeStart` handler then stop
	// processing this location change
	if($location.absUrl()!==newUrl)return;if(defaultPrevented){$location.$$parse(oldUrl);$location.$$state=oldState;setBrowserUrlWithFallback(oldUrl,false,oldState);}else{initializing=false;afterLocationChange(oldUrl,oldState);}});if(!$rootScope.$$phase)$rootScope.$digest();});// update browser
	$rootScope.$watch(function $locationWatch(){if(initializing||$location.$$urlUpdatedByLocation){$location.$$urlUpdatedByLocation=false;var oldUrl=$browser.url();var newUrl=$location.absUrl();var oldState=$browser.state();var currentReplace=$location.$$replace;var urlOrStateChanged=!urlsEqual(oldUrl,newUrl)||$location.$$html5&&$sniffer.history&&oldState!==$location.$$state;if(initializing||urlOrStateChanged){initializing=false;$rootScope.$evalAsync(function(){var newUrl=$location.absUrl();var defaultPrevented=$rootScope.$broadcast('$locationChangeStart',newUrl,oldUrl,$location.$$state,oldState).defaultPrevented;// if the location was changed by a `$locationChangeStart` handler then stop
	// processing this location change
	if($location.absUrl()!==newUrl)return;if(defaultPrevented){$location.$$parse(oldUrl);$location.$$state=oldState;}else{if(urlOrStateChanged){setBrowserUrlWithFallback(newUrl,currentReplace,oldState===$location.$$state?null:$location.$$state);}afterLocationChange(oldUrl,oldState);}});}}$location.$$replace=false;// we don't need to return anything because $evalAsync will make the digest loop dirty when
	// there is a change
	});return $location;function afterLocationChange(oldUrl,oldState){$rootScope.$broadcast('$locationChangeSuccess',$location.absUrl(),oldUrl,$location.$$state,oldState);}}];}/**
	 * @ngdoc service
	 * @name $log
	 * @requires $window
	 *
	 * @description
	 * Simple service for logging. Default implementation safely writes the message
	 * into the browser's console (if present).
	 *
	 * The main purpose of this service is to simplify debugging and troubleshooting.
	 *
	 * To reveal the location of the calls to `$log` in the JavaScript console,
	 * you can "blackbox" the AngularJS source in your browser:
	 *
	 * [Mozilla description of blackboxing](https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Black_box_a_source).
	 * [Chrome description of blackboxing](https://developer.chrome.com/devtools/docs/blackboxing).
	 *
	 * Note: Not all browsers support blackboxing.
	 *
	 * The default is to log `debug` messages. You can use
	 * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.
	 *
	 * @example
	   <example module="logExample" name="log-service">
	     <file name="script.js">
	       angular.module('logExample', [])
	         .controller('LogController', ['$scope', '$log', function($scope, $log) {
	           $scope.$log = $log;
	           $scope.message = 'Hello World!';
	         }]);
	     </file>
	     <file name="index.html">
	       <div ng-controller="LogController">
	         <p>Reload this page with open console, enter text and hit the log button...</p>
	         <label>Message:
	         <input type="text" ng-model="message" /></label>
	         <button ng-click="$log.log(message)">log</button>
	         <button ng-click="$log.warn(message)">warn</button>
	         <button ng-click="$log.info(message)">info</button>
	         <button ng-click="$log.error(message)">error</button>
	         <button ng-click="$log.debug(message)">debug</button>
	       </div>
	     </file>
	   </example>
	 *//**
	 * @ngdoc provider
	 * @name $logProvider
	 * @this
	 *
	 * @description
	 * Use the `$logProvider` to configure how the application logs messages
	 */function $LogProvider(){var debug=true,self=this;/**
	   * @ngdoc method
	   * @name $logProvider#debugEnabled
	   * @description
	   * @param {boolean=} flag enable or disable debug level messages
	   * @returns {*} current value if used as getter or itself (chaining) if used as setter
	   */this.debugEnabled=function(flag){if(isDefined(flag)){debug=flag;return this;}else{return debug;}};this.$get=['$window',function($window){// Support: IE 9-11, Edge 12-14+
	// IE/Edge display errors in such a way that it requires the user to click in 4 places
	// to see the stack trace. There is no way to feature-detect it so there's a chance
	// of the user agent sniffing to go wrong but since it's only about logging, this shouldn't
	// break apps. Other browsers display errors in a sensible way and some of them map stack
	// traces along source maps if available so it makes sense to let browsers display it
	// as they want.
	var formatStackTrace=msie||/\bEdge\//.test($window.navigator&&$window.navigator.userAgent);return{/**
	       * @ngdoc method
	       * @name $log#log
	       *
	       * @description
	       * Write a log message
	       */log:consoleLog('log'),/**
	       * @ngdoc method
	       * @name $log#info
	       *
	       * @description
	       * Write an information message
	       */info:consoleLog('info'),/**
	       * @ngdoc method
	       * @name $log#warn
	       *
	       * @description
	       * Write a warning message
	       */warn:consoleLog('warn'),/**
	       * @ngdoc method
	       * @name $log#error
	       *
	       * @description
	       * Write an error message
	       */error:consoleLog('error'),/**
	       * @ngdoc method
	       * @name $log#debug
	       *
	       * @description
	       * Write a debug message
	       */debug:function(){var fn=consoleLog('debug');return function(){if(debug){fn.apply(self,arguments);}};}()};function formatError(arg){if(isError(arg)){if(arg.stack&&formatStackTrace){arg=arg.message&&arg.stack.indexOf(arg.message)===-1?'Error: '+arg.message+'\n'+arg.stack:arg.stack;}else if(arg.sourceURL){arg=arg.message+'\n'+arg.sourceURL+':'+arg.line;}}return arg;}function consoleLog(type){var console=$window.console||{},logFn=console[type]||console.log||noop;return function(){var args=[];forEach(arguments,function(arg){args.push(formatError(arg));});// Support: IE 9 only
	// console methods don't inherit from Function.prototype in IE 9 so we can't
	// call `logFn.apply(console, args)` directly.
	return Function.prototype.apply.call(logFn,console,args);};}}];}/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 *     Any commits to this file should be reviewed with security in mind.  *
	 *   Changes to this file can potentially create security vulnerabilities. *
	 *          An approval from 2 Core members with history of modifying      *
	 *                         this file is required.                          *
	 *                                                                         *
	 *  Does the change somehow allow for arbitrary javascript to be executed? *
	 *    Or allows for someone to change the prototype of built-in objects?   *
	 *     Or gives undesired access to variables likes document or window?    *
	 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */var $parseMinErr=minErr('$parse');var objectValueOf={}.constructor.prototype.valueOf;// Sandboxing AngularJS Expressions
	// ------------------------------
	// AngularJS expressions are no longer sandboxed. So it is now even easier to access arbitrary JS code by
	// various means such as obtaining a reference to native JS functions like the Function constructor.
	//
	// As an example, consider the following AngularJS expression:
	//
	//   {}.toString.constructor('alert("evil JS code")')
	//
	// It is important to realize that if you create an expression from a string that contains user provided
	// content then it is possible that your application contains a security vulnerability to an XSS style attack.
	//
	// See https://docs.angularjs.org/guide/security
	function getStringValue(name){// Property names must be strings. This means that non-string objects cannot be used
	// as keys in an object. Any non-string object, including a number, is typecasted
	// into a string via the toString method.
	// -- MDN, https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Property_accessors#Property_names
	//
	// So, to ensure that we are checking the same `name` that JavaScript would use, we cast it
	// to a string. It's not always possible. If `name` is an object and its `toString` method is
	// 'broken' (doesn't return a string, isn't a function, etc.), an error will be thrown:
	//
	// TypeError: Cannot convert object to primitive value
	//
	// For performance reasons, we don't catch this error here and allow it to propagate up the call
	// stack. Note that you'll get the same error in JavaScript if you try to access a property using
	// such a 'broken' object as a key.
	return name+'';}var OPERATORS=createMap();forEach('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '),function(operator){OPERATORS[operator]=true;});var ESCAPE={'n':'\n','f':'\f','r':'\r','t':'\t','v':'\v','\'':'\'','"':'"'};/////////////////////////////////////////
	/**
	 * @constructor
	 */var Lexer=function Lexer(options){this.options=options;};Lexer.prototype={constructor:Lexer,lex:function lex(text){this.text=text;this.index=0;this.tokens=[];while(this.index<this.text.length){var ch=this.text.charAt(this.index);if(ch==='"'||ch==='\''){this.readString(ch);}else if(this.isNumber(ch)||ch==='.'&&this.isNumber(this.peek())){this.readNumber();}else if(this.isIdentifierStart(this.peekMultichar())){this.readIdent();}else if(this.is(ch,'(){}[].,;:?')){this.tokens.push({index:this.index,text:ch});this.index++;}else if(this.isWhitespace(ch)){this.index++;}else{var ch2=ch+this.peek();var ch3=ch2+this.peek(2);var op1=OPERATORS[ch];var op2=OPERATORS[ch2];var op3=OPERATORS[ch3];if(op1||op2||op3){var token=op3?ch3:op2?ch2:ch;this.tokens.push({index:this.index,text:token,operator:true});this.index+=token.length;}else{this.throwError('Unexpected next character ',this.index,this.index+1);}}}return this.tokens;},is:function is(ch,chars){return chars.indexOf(ch)!==-1;},peek:function peek(i){var num=i||1;return this.index+num<this.text.length?this.text.charAt(this.index+num):false;},isNumber:function isNumber(ch){return'0'<=ch&&ch<='9'&&typeof ch==='string';},isWhitespace:function isWhitespace(ch){// IE treats non-breaking space as \u00A0
	return ch===' '||ch==='\r'||ch==='\t'||ch==='\n'||ch==='\v'||ch==='\xA0';},isIdentifierStart:function isIdentifierStart(ch){return this.options.isIdentifierStart?this.options.isIdentifierStart(ch,this.codePointAt(ch)):this.isValidIdentifierStart(ch);},isValidIdentifierStart:function isValidIdentifierStart(ch){return'a'<=ch&&ch<='z'||'A'<=ch&&ch<='Z'||'_'===ch||ch==='$';},isIdentifierContinue:function isIdentifierContinue(ch){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(ch,this.codePointAt(ch)):this.isValidIdentifierContinue(ch);},isValidIdentifierContinue:function isValidIdentifierContinue(ch,cp){return this.isValidIdentifierStart(ch,cp)||this.isNumber(ch);},codePointAt:function codePointAt(ch){if(ch.length===1)return ch.charCodeAt(0);// eslint-disable-next-line no-bitwise
	return(ch.charCodeAt(0)<<10)+ch.charCodeAt(1)-0x35FDC00;},peekMultichar:function peekMultichar(){var ch=this.text.charAt(this.index);var peek=this.peek();if(!peek){return ch;}var cp1=ch.charCodeAt(0);var cp2=peek.charCodeAt(0);if(cp1>=0xD800&&cp1<=0xDBFF&&cp2>=0xDC00&&cp2<=0xDFFF){return ch+peek;}return ch;},isExpOperator:function isExpOperator(ch){return ch==='-'||ch==='+'||this.isNumber(ch);},throwError:function throwError(error,start,end){end=end||this.index;var colStr=isDefined(start)?'s '+start+'-'+this.index+' ['+this.text.substring(start,end)+']':' '+end;throw $parseMinErr('lexerr','Lexer Error: {0} at column{1} in expression [{2}].',error,colStr,this.text);},readNumber:function readNumber(){var number='';var start=this.index;while(this.index<this.text.length){var ch=lowercase(this.text.charAt(this.index));if(ch==='.'||this.isNumber(ch)){number+=ch;}else{var peekCh=this.peek();if(ch==='e'&&this.isExpOperator(peekCh)){number+=ch;}else if(this.isExpOperator(ch)&&peekCh&&this.isNumber(peekCh)&&number.charAt(number.length-1)==='e'){number+=ch;}else if(this.isExpOperator(ch)&&(!peekCh||!this.isNumber(peekCh))&&number.charAt(number.length-1)==='e'){this.throwError('Invalid exponent');}else{break;}}this.index++;}this.tokens.push({index:start,text:number,constant:true,value:Number(number)});},readIdent:function readIdent(){var start=this.index;this.index+=this.peekMultichar().length;while(this.index<this.text.length){var ch=this.peekMultichar();if(!this.isIdentifierContinue(ch)){break;}this.index+=ch.length;}this.tokens.push({index:start,text:this.text.slice(start,this.index),identifier:true});},readString:function readString(quote){var start=this.index;this.index++;var string='';var rawString=quote;var escape=false;while(this.index<this.text.length){var ch=this.text.charAt(this.index);rawString+=ch;if(escape){if(ch==='u'){var hex=this.text.substring(this.index+1,this.index+5);if(!hex.match(/[\da-f]{4}/i)){this.throwError('Invalid unicode escape [\\u'+hex+']');}this.index+=4;string+=String.fromCharCode(parseInt(hex,16));}else{var rep=ESCAPE[ch];string=string+(rep||ch);}escape=false;}else if(ch==='\\'){escape=true;}else if(ch===quote){this.index++;this.tokens.push({index:start,text:rawString,constant:true,value:string});return;}else{string+=ch;}this.index++;}this.throwError('Unterminated quote',start);}};var AST=function AST(lexer,options){this.lexer=lexer;this.options=options;};AST.Program='Program';AST.ExpressionStatement='ExpressionStatement';AST.AssignmentExpression='AssignmentExpression';AST.ConditionalExpression='ConditionalExpression';AST.LogicalExpression='LogicalExpression';AST.BinaryExpression='BinaryExpression';AST.UnaryExpression='UnaryExpression';AST.CallExpression='CallExpression';AST.MemberExpression='MemberExpression';AST.Identifier='Identifier';AST.Literal='Literal';AST.ArrayExpression='ArrayExpression';AST.Property='Property';AST.ObjectExpression='ObjectExpression';AST.ThisExpression='ThisExpression';AST.LocalsExpression='LocalsExpression';// Internal use only
	AST.NGValueParameter='NGValueParameter';AST.prototype={ast:function ast(text){this.text=text;this.tokens=this.lexer.lex(text);var value=this.program();if(this.tokens.length!==0){this.throwError('is an unexpected token',this.tokens[0]);}return value;},program:function program(){var body=[];while(true){if(this.tokens.length>0&&!this.peek('}',')',';',']'))body.push(this.expressionStatement());if(!this.expect(';')){return{type:AST.Program,body:body};}}},expressionStatement:function expressionStatement(){return{type:AST.ExpressionStatement,expression:this.filterChain()};},filterChain:function filterChain(){var left=this.expression();while(this.expect('|')){left=this.filter(left);}return left;},expression:function expression(){return this.assignment();},assignment:function assignment(){var result=this.ternary();if(this.expect('=')){if(!isAssignable(result)){throw $parseMinErr('lval','Trying to assign a value to a non l-value');}result={type:AST.AssignmentExpression,left:result,right:this.assignment(),operator:'='};}return result;},ternary:function ternary(){var test=this.logicalOR();var alternate;var consequent;if(this.expect('?')){alternate=this.expression();if(this.consume(':')){consequent=this.expression();return{type:AST.ConditionalExpression,test:test,alternate:alternate,consequent:consequent};}}return test;},logicalOR:function logicalOR(){var left=this.logicalAND();while(this.expect('||')){left={type:AST.LogicalExpression,operator:'||',left:left,right:this.logicalAND()};}return left;},logicalAND:function logicalAND(){var left=this.equality();while(this.expect('&&')){left={type:AST.LogicalExpression,operator:'&&',left:left,right:this.equality()};}return left;},equality:function equality(){var left=this.relational();var token;while(token=this.expect('==','!=','===','!==')){left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.relational()};}return left;},relational:function relational(){var left=this.additive();var token;while(token=this.expect('<','>','<=','>=')){left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.additive()};}return left;},additive:function additive(){var left=this.multiplicative();var token;while(token=this.expect('+','-')){left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.multiplicative()};}return left;},multiplicative:function multiplicative(){var left=this.unary();var token;while(token=this.expect('*','/','%')){left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.unary()};}return left;},unary:function unary(){var token;if(token=this.expect('+','-','!')){return{type:AST.UnaryExpression,operator:token.text,prefix:true,argument:this.unary()};}else{return this.primary();}},primary:function primary(){var primary;if(this.expect('(')){primary=this.filterChain();this.consume(')');}else if(this.expect('[')){primary=this.arrayDeclaration();}else if(this.expect('{')){primary=this.object();}else if(this.selfReferential.hasOwnProperty(this.peek().text)){primary=copy(this.selfReferential[this.consume().text]);}else if(this.options.literals.hasOwnProperty(this.peek().text)){primary={type:AST.Literal,value:this.options.literals[this.consume().text]};}else if(this.peek().identifier){primary=this.identifier();}else if(this.peek().constant){primary=this.constant();}else{this.throwError('not a primary expression',this.peek());}var next;while(next=this.expect('(','[','.')){if(next.text==='('){primary={type:AST.CallExpression,callee:primary,arguments:this.parseArguments()};this.consume(')');}else if(next.text==='['){primary={type:AST.MemberExpression,object:primary,property:this.expression(),computed:true};this.consume(']');}else if(next.text==='.'){primary={type:AST.MemberExpression,object:primary,property:this.identifier(),computed:false};}else{this.throwError('IMPOSSIBLE');}}return primary;},filter:function filter(baseExpression){var args=[baseExpression];var result={type:AST.CallExpression,callee:this.identifier(),arguments:args,filter:true};while(this.expect(':')){args.push(this.expression());}return result;},parseArguments:function parseArguments(){var args=[];if(this.peekToken().text!==')'){do{args.push(this.filterChain());}while(this.expect(','));}return args;},identifier:function identifier(){var token=this.consume();if(!token.identifier){this.throwError('is not a valid identifier',token);}return{type:AST.Identifier,name:token.text};},constant:function constant(){// TODO check that it is a constant
	return{type:AST.Literal,value:this.consume().value};},arrayDeclaration:function arrayDeclaration(){var elements=[];if(this.peekToken().text!==']'){do{if(this.peek(']')){// Support trailing commas per ES5.1.
	break;}elements.push(this.expression());}while(this.expect(','));}this.consume(']');return{type:AST.ArrayExpression,elements:elements};},object:function object(){var properties=[],property;if(this.peekToken().text!=='}'){do{if(this.peek('}')){// Support trailing commas per ES5.1.
	break;}property={type:AST.Property,kind:'init'};if(this.peek().constant){property.key=this.constant();property.computed=false;this.consume(':');property.value=this.expression();}else if(this.peek().identifier){property.key=this.identifier();property.computed=false;if(this.peek(':')){this.consume(':');property.value=this.expression();}else{property.value=property.key;}}else if(this.peek('[')){this.consume('[');property.key=this.expression();this.consume(']');property.computed=true;this.consume(':');property.value=this.expression();}else{this.throwError('invalid key',this.peek());}properties.push(property);}while(this.expect(','));}this.consume('}');return{type:AST.ObjectExpression,properties:properties};},throwError:function throwError(msg,token){throw $parseMinErr('syntax','Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].',token.text,msg,token.index+1,this.text,this.text.substring(token.index));},consume:function consume(e1){if(this.tokens.length===0){throw $parseMinErr('ueoe','Unexpected end of expression: {0}',this.text);}var token=this.expect(e1);if(!token){this.throwError('is unexpected, expecting ['+e1+']',this.peek());}return token;},peekToken:function peekToken(){if(this.tokens.length===0){throw $parseMinErr('ueoe','Unexpected end of expression: {0}',this.text);}return this.tokens[0];},peek:function peek(e1,e2,e3,e4){return this.peekAhead(0,e1,e2,e3,e4);},peekAhead:function peekAhead(i,e1,e2,e3,e4){if(this.tokens.length>i){var token=this.tokens[i];var t=token.text;if(t===e1||t===e2||t===e3||t===e4||!e1&&!e2&&!e3&&!e4){return token;}}return false;},expect:function expect(e1,e2,e3,e4){var token=this.peek(e1,e2,e3,e4);if(token){this.tokens.shift();return token;}return false;},selfReferential:{'this':{type:AST.ThisExpression},'$locals':{type:AST.LocalsExpression}}};function ifDefined(v,d){return typeof v!=='undefined'?v:d;}function plusFn(l,r){if(typeof l==='undefined')return r;if(typeof r==='undefined')return l;return l+r;}function isStateless($filter,filterName){var fn=$filter(filterName);return!fn.$stateful;}var PURITY_ABSOLUTE=1;var PURITY_RELATIVE=2;// Detect nodes which could depend on non-shallow state of objects
	function isPure(node,parentIsPure){switch(node.type){// Computed members might invoke a stateful toString()
	case AST.MemberExpression:if(node.computed){return false;}break;// Unary always convert to primative
	case AST.UnaryExpression:return PURITY_ABSOLUTE;// The binary + operator can invoke a stateful toString().
	case AST.BinaryExpression:return node.operator!=='+'?PURITY_ABSOLUTE:false;// Functions / filters probably read state from within objects
	case AST.CallExpression:return false;}return undefined===parentIsPure?PURITY_RELATIVE:parentIsPure;}function findConstantAndWatchExpressions(ast,$filter,parentIsPure){var allConstants;var argsToWatch;var isStatelessFilter;var astIsPure=ast.isPure=isPure(ast,parentIsPure);switch(ast.type){case AST.Program:allConstants=true;forEach(ast.body,function(expr){findConstantAndWatchExpressions(expr.expression,$filter,astIsPure);allConstants=allConstants&&expr.expression.constant;});ast.constant=allConstants;break;case AST.Literal:ast.constant=true;ast.toWatch=[];break;case AST.UnaryExpression:findConstantAndWatchExpressions(ast.argument,$filter,astIsPure);ast.constant=ast.argument.constant;ast.toWatch=ast.argument.toWatch;break;case AST.BinaryExpression:findConstantAndWatchExpressions(ast.left,$filter,astIsPure);findConstantAndWatchExpressions(ast.right,$filter,astIsPure);ast.constant=ast.left.constant&&ast.right.constant;ast.toWatch=ast.left.toWatch.concat(ast.right.toWatch);break;case AST.LogicalExpression:findConstantAndWatchExpressions(ast.left,$filter,astIsPure);findConstantAndWatchExpressions(ast.right,$filter,astIsPure);ast.constant=ast.left.constant&&ast.right.constant;ast.toWatch=ast.constant?[]:[ast];break;case AST.ConditionalExpression:findConstantAndWatchExpressions(ast.test,$filter,astIsPure);findConstantAndWatchExpressions(ast.alternate,$filter,astIsPure);findConstantAndWatchExpressions(ast.consequent,$filter,astIsPure);ast.constant=ast.test.constant&&ast.alternate.constant&&ast.consequent.constant;ast.toWatch=ast.constant?[]:[ast];break;case AST.Identifier:ast.constant=false;ast.toWatch=[ast];break;case AST.MemberExpression:findConstantAndWatchExpressions(ast.object,$filter,astIsPure);if(ast.computed){findConstantAndWatchExpressions(ast.property,$filter,astIsPure);}ast.constant=ast.object.constant&&(!ast.computed||ast.property.constant);ast.toWatch=ast.constant?[]:[ast];break;case AST.CallExpression:isStatelessFilter=ast.filter?isStateless($filter,ast.callee.name):false;allConstants=isStatelessFilter;argsToWatch=[];forEach(ast.arguments,function(expr){findConstantAndWatchExpressions(expr,$filter,astIsPure);allConstants=allConstants&&expr.constant;argsToWatch.push.apply(argsToWatch,expr.toWatch);});ast.constant=allConstants;ast.toWatch=isStatelessFilter?argsToWatch:[ast];break;case AST.AssignmentExpression:findConstantAndWatchExpressions(ast.left,$filter,astIsPure);findConstantAndWatchExpressions(ast.right,$filter,astIsPure);ast.constant=ast.left.constant&&ast.right.constant;ast.toWatch=[ast];break;case AST.ArrayExpression:allConstants=true;argsToWatch=[];forEach(ast.elements,function(expr){findConstantAndWatchExpressions(expr,$filter,astIsPure);allConstants=allConstants&&expr.constant;argsToWatch.push.apply(argsToWatch,expr.toWatch);});ast.constant=allConstants;ast.toWatch=argsToWatch;break;case AST.ObjectExpression:allConstants=true;argsToWatch=[];forEach(ast.properties,function(property){findConstantAndWatchExpressions(property.value,$filter,astIsPure);allConstants=allConstants&&property.value.constant;argsToWatch.push.apply(argsToWatch,property.value.toWatch);if(property.computed){//`{[key]: value}` implicitly does `key.toString()` which may be non-pure
	findConstantAndWatchExpressions(property.key,$filter,/*parentIsPure=*/false);allConstants=allConstants&&property.key.constant;argsToWatch.push.apply(argsToWatch,property.key.toWatch);}});ast.constant=allConstants;ast.toWatch=argsToWatch;break;case AST.ThisExpression:ast.constant=false;ast.toWatch=[];break;case AST.LocalsExpression:ast.constant=false;ast.toWatch=[];break;}}function getInputs(body){if(body.length!==1)return;var lastExpression=body[0].expression;var candidate=lastExpression.toWatch;if(candidate.length!==1)return candidate;return candidate[0]!==lastExpression?candidate:undefined;}function isAssignable(ast){return ast.type===AST.Identifier||ast.type===AST.MemberExpression;}function assignableAST(ast){if(ast.body.length===1&&isAssignable(ast.body[0].expression)){return{type:AST.AssignmentExpression,left:ast.body[0].expression,right:{type:AST.NGValueParameter},operator:'='};}}function isLiteral(ast){return ast.body.length===0||ast.body.length===1&&(ast.body[0].expression.type===AST.Literal||ast.body[0].expression.type===AST.ArrayExpression||ast.body[0].expression.type===AST.ObjectExpression);}function isConstant(ast){return ast.constant;}function ASTCompiler($filter){this.$filter=$filter;}ASTCompiler.prototype={compile:function compile(ast){var self=this;this.state={nextId:0,filters:{},fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};findConstantAndWatchExpressions(ast,self.$filter);var extra='';var assignable;this.stage='assign';if(assignable=assignableAST(ast)){this.state.computing='assign';var result=this.nextId();this.recurse(assignable,result);this.return_(result);extra='fn.assign='+this.generateFunction('assign','s,v,l');}var toWatch=getInputs(ast.body);self.stage='inputs';forEach(toWatch,function(watch,key){var fnKey='fn'+key;self.state[fnKey]={vars:[],body:[],own:{}};self.state.computing=fnKey;var intoId=self.nextId();self.recurse(watch,intoId);self.return_(intoId);self.state.inputs.push({name:fnKey,isPure:watch.isPure});watch.watchId=key;});this.state.computing='fn';this.stage='main';this.recurse(ast);var fnString=// The build and minification steps remove the string "use strict" from the code, but this is done using a regex.
	// This is a workaround for this until we do a better job at only removing the prefix only when we should.
	'"'+this.USE+' '+this.STRICT+'";\n'+this.filterPrefix()+'var fn='+this.generateFunction('fn','s,l,a,i')+extra+this.watchFns()+'return fn;';// eslint-disable-next-line no-new-func
	var fn=new Function('$filter','getStringValue','ifDefined','plus',fnString)(this.$filter,getStringValue,ifDefined,plusFn);this.state=this.stage=undefined;return fn;},USE:'use',STRICT:'strict',watchFns:function watchFns(){var result=[];var inputs=this.state.inputs;var self=this;forEach(inputs,function(input){result.push('var '+input.name+'='+self.generateFunction(input.name,'s'));if(input.isPure){result.push(input.name,'.isPure='+JSON.stringify(input.isPure)+';');}});if(inputs.length){result.push('fn.inputs=['+inputs.map(function(i){return i.name;}).join(',')+'];');}return result.join('');},generateFunction:function generateFunction(name,params){return'function('+params+'){'+this.varsPrefix(name)+this.body(name)+'};';},filterPrefix:function filterPrefix(){var parts=[];var self=this;forEach(this.state.filters,function(id,filter){parts.push(id+'=$filter('+self.escape(filter)+')');});if(parts.length)return'var '+parts.join(',')+';';return'';},varsPrefix:function varsPrefix(section){return this.state[section].vars.length?'var '+this.state[section].vars.join(',')+';':'';},body:function body(section){return this.state[section].body.join('');},recurse:function recurse(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){var left,right,self=this,args,expression,computed;recursionFn=recursionFn||noop;if(!skipWatchIdCheck&&isDefined(ast.watchId)){intoId=intoId||this.nextId();this.if_('i',this.lazyAssign(intoId,this.computedMember('i',ast.watchId)),this.lazyRecurse(ast,intoId,nameId,recursionFn,create,true));return;}switch(ast.type){case AST.Program:forEach(ast.body,function(expression,pos){self.recurse(expression.expression,undefined,undefined,function(expr){right=expr;});if(pos!==ast.body.length-1){self.current().body.push(right,';');}else{self.return_(right);}});break;case AST.Literal:expression=this.escape(ast.value);this.assign(intoId,expression);recursionFn(intoId||expression);break;case AST.UnaryExpression:this.recurse(ast.argument,undefined,undefined,function(expr){right=expr;});expression=ast.operator+'('+this.ifDefined(right,0)+')';this.assign(intoId,expression);recursionFn(expression);break;case AST.BinaryExpression:this.recurse(ast.left,undefined,undefined,function(expr){left=expr;});this.recurse(ast.right,undefined,undefined,function(expr){right=expr;});if(ast.operator==='+'){expression=this.plus(left,right);}else if(ast.operator==='-'){expression=this.ifDefined(left,0)+ast.operator+this.ifDefined(right,0);}else{expression='('+left+')'+ast.operator+'('+right+')';}this.assign(intoId,expression);recursionFn(expression);break;case AST.LogicalExpression:intoId=intoId||this.nextId();self.recurse(ast.left,intoId);self.if_(ast.operator==='&&'?intoId:self.not(intoId),self.lazyRecurse(ast.right,intoId));recursionFn(intoId);break;case AST.ConditionalExpression:intoId=intoId||this.nextId();self.recurse(ast.test,intoId);self.if_(intoId,self.lazyRecurse(ast.alternate,intoId),self.lazyRecurse(ast.consequent,intoId));recursionFn(intoId);break;case AST.Identifier:intoId=intoId||this.nextId();if(nameId){nameId.context=self.stage==='inputs'?'s':this.assign(this.nextId(),this.getHasOwnProperty('l',ast.name)+'?l:s');nameId.computed=false;nameId.name=ast.name;}self.if_(self.stage==='inputs'||self.not(self.getHasOwnProperty('l',ast.name)),function(){self.if_(self.stage==='inputs'||'s',function(){if(create&&create!==1){self.if_(self.isNull(self.nonComputedMember('s',ast.name)),self.lazyAssign(self.nonComputedMember('s',ast.name),'{}'));}self.assign(intoId,self.nonComputedMember('s',ast.name));});},intoId&&self.lazyAssign(intoId,self.nonComputedMember('l',ast.name)));recursionFn(intoId);break;case AST.MemberExpression:left=nameId&&(nameId.context=this.nextId())||this.nextId();intoId=intoId||this.nextId();self.recurse(ast.object,left,undefined,function(){self.if_(self.notNull(left),function(){if(ast.computed){right=self.nextId();self.recurse(ast.property,right);self.getStringValue(right);if(create&&create!==1){self.if_(self.not(self.computedMember(left,right)),self.lazyAssign(self.computedMember(left,right),'{}'));}expression=self.computedMember(left,right);self.assign(intoId,expression);if(nameId){nameId.computed=true;nameId.name=right;}}else{if(create&&create!==1){self.if_(self.isNull(self.nonComputedMember(left,ast.property.name)),self.lazyAssign(self.nonComputedMember(left,ast.property.name),'{}'));}expression=self.nonComputedMember(left,ast.property.name);self.assign(intoId,expression);if(nameId){nameId.computed=false;nameId.name=ast.property.name;}}},function(){self.assign(intoId,'undefined');});recursionFn(intoId);},!!create);break;case AST.CallExpression:intoId=intoId||this.nextId();if(ast.filter){right=self.filter(ast.callee.name);args=[];forEach(ast.arguments,function(expr){var argument=self.nextId();self.recurse(expr,argument);args.push(argument);});expression=right+'('+args.join(',')+')';self.assign(intoId,expression);recursionFn(intoId);}else{right=self.nextId();left={};args=[];self.recurse(ast.callee,right,left,function(){self.if_(self.notNull(right),function(){forEach(ast.arguments,function(expr){self.recurse(expr,ast.constant?undefined:self.nextId(),undefined,function(argument){args.push(argument);});});if(left.name){expression=self.member(left.context,left.name,left.computed)+'('+args.join(',')+')';}else{expression=right+'('+args.join(',')+')';}self.assign(intoId,expression);},function(){self.assign(intoId,'undefined');});recursionFn(intoId);});}break;case AST.AssignmentExpression:right=this.nextId();left={};this.recurse(ast.left,undefined,left,function(){self.if_(self.notNull(left.context),function(){self.recurse(ast.right,right);expression=self.member(left.context,left.name,left.computed)+ast.operator+right;self.assign(intoId,expression);recursionFn(intoId||expression);});},1);break;case AST.ArrayExpression:args=[];forEach(ast.elements,function(expr){self.recurse(expr,ast.constant?undefined:self.nextId(),undefined,function(argument){args.push(argument);});});expression='['+args.join(',')+']';this.assign(intoId,expression);recursionFn(intoId||expression);break;case AST.ObjectExpression:args=[];computed=false;forEach(ast.properties,function(property){if(property.computed){computed=true;}});if(computed){intoId=intoId||this.nextId();this.assign(intoId,'{}');forEach(ast.properties,function(property){if(property.computed){left=self.nextId();self.recurse(property.key,left);}else{left=property.key.type===AST.Identifier?property.key.name:''+property.key.value;}right=self.nextId();self.recurse(property.value,right);self.assign(self.member(intoId,left,property.computed),right);});}else{forEach(ast.properties,function(property){self.recurse(property.value,ast.constant?undefined:self.nextId(),undefined,function(expr){args.push(self.escape(property.key.type===AST.Identifier?property.key.name:''+property.key.value)+':'+expr);});});expression='{'+args.join(',')+'}';this.assign(intoId,expression);}recursionFn(intoId||expression);break;case AST.ThisExpression:this.assign(intoId,'s');recursionFn(intoId||'s');break;case AST.LocalsExpression:this.assign(intoId,'l');recursionFn(intoId||'l');break;case AST.NGValueParameter:this.assign(intoId,'v');recursionFn(intoId||'v');break;}},getHasOwnProperty:function getHasOwnProperty(element,property){var key=element+'.'+property;var own=this.current().own;if(!own.hasOwnProperty(key)){own[key]=this.nextId(false,element+'&&('+this.escape(property)+' in '+element+')');}return own[key];},assign:function assign(id,value){if(!id)return;this.current().body.push(id,'=',value,';');return id;},filter:function filter(filterName){if(!this.state.filters.hasOwnProperty(filterName)){this.state.filters[filterName]=this.nextId(true);}return this.state.filters[filterName];},ifDefined:function ifDefined(id,defaultValue){return'ifDefined('+id+','+this.escape(defaultValue)+')';},plus:function plus(left,right){return'plus('+left+','+right+')';},return_:function return_(id){this.current().body.push('return ',id,';');},if_:function if_(test,alternate,consequent){if(test===true){alternate();}else{var body=this.current().body;body.push('if(',test,'){');alternate();body.push('}');if(consequent){body.push('else{');consequent();body.push('}');}}},not:function not(expression){return'!('+expression+')';},isNull:function isNull(expression){return expression+'==null';},notNull:function notNull(expression){return expression+'!=null';},nonComputedMember:function nonComputedMember(left,right){var SAFE_IDENTIFIER=/^[$_a-zA-Z][$_a-zA-Z0-9]*$/;var UNSAFE_CHARACTERS=/[^$_a-zA-Z0-9]/g;if(SAFE_IDENTIFIER.test(right)){return left+'.'+right;}else{return left+'["'+right.replace(UNSAFE_CHARACTERS,this.stringEscapeFn)+'"]';}},computedMember:function computedMember(left,right){return left+'['+right+']';},member:function member(left,right,computed){if(computed)return this.computedMember(left,right);return this.nonComputedMember(left,right);},getStringValue:function getStringValue(item){this.assign(item,'getStringValue('+item+')');},lazyRecurse:function lazyRecurse(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){var self=this;return function(){self.recurse(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck);};},lazyAssign:function lazyAssign(id,value){var self=this;return function(){self.assign(id,value);};},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function stringEscapeFn(c){return'\\u'+('0000'+c.charCodeAt(0).toString(16)).slice(-4);},escape:function escape(value){if(isString(value))return'\''+value.replace(this.stringEscapeRegex,this.stringEscapeFn)+'\'';if(isNumber(value))return value.toString();if(value===true)return'true';if(value===false)return'false';if(value===null)return'null';if(typeof value==='undefined')return'undefined';throw $parseMinErr('esc','IMPOSSIBLE');},nextId:function nextId(skip,init){var id='v'+this.state.nextId++;if(!skip){this.current().vars.push(id+(init?'='+init:''));}return id;},current:function current(){return this.state[this.state.computing];}};function ASTInterpreter($filter){this.$filter=$filter;}ASTInterpreter.prototype={compile:function compile(ast){var self=this;findConstantAndWatchExpressions(ast,self.$filter);var assignable;var assign;if(assignable=assignableAST(ast)){assign=this.recurse(assignable);}var toWatch=getInputs(ast.body);var inputs;if(toWatch){inputs=[];forEach(toWatch,function(watch,key){var input=self.recurse(watch);input.isPure=watch.isPure;watch.input=input;inputs.push(input);watch.watchId=key;});}var expressions=[];forEach(ast.body,function(expression){expressions.push(self.recurse(expression.expression));});var fn=ast.body.length===0?noop:ast.body.length===1?expressions[0]:function(scope,locals){var lastValue;forEach(expressions,function(exp){lastValue=exp(scope,locals);});return lastValue;};if(assign){fn.assign=function(scope,value,locals){return assign(scope,locals,value);};}if(inputs){fn.inputs=inputs;}return fn;},recurse:function recurse(ast,context,create){var left,right,self=this,args;if(ast.input){return this.inputs(ast.input,ast.watchId);}switch(ast.type){case AST.Literal:return this.value(ast.value,context);case AST.UnaryExpression:right=this.recurse(ast.argument);return this['unary'+ast.operator](right,context);case AST.BinaryExpression:left=this.recurse(ast.left);right=this.recurse(ast.right);return this['binary'+ast.operator](left,right,context);case AST.LogicalExpression:left=this.recurse(ast.left);right=this.recurse(ast.right);return this['binary'+ast.operator](left,right,context);case AST.ConditionalExpression:return this['ternary?:'](this.recurse(ast.test),this.recurse(ast.alternate),this.recurse(ast.consequent),context);case AST.Identifier:return self.identifier(ast.name,context,create);case AST.MemberExpression:left=this.recurse(ast.object,false,!!create);if(!ast.computed){right=ast.property.name;}if(ast.computed)right=this.recurse(ast.property);return ast.computed?this.computedMember(left,right,context,create):this.nonComputedMember(left,right,context,create);case AST.CallExpression:args=[];forEach(ast.arguments,function(expr){args.push(self.recurse(expr));});if(ast.filter)right=this.$filter(ast.callee.name);if(!ast.filter)right=this.recurse(ast.callee,true);return ast.filter?function(scope,locals,assign,inputs){var values=[];for(var i=0;i<args.length;++i){values.push(args[i](scope,locals,assign,inputs));}var value=right.apply(undefined,values,inputs);return context?{context:undefined,name:undefined,value:value}:value;}:function(scope,locals,assign,inputs){var rhs=right(scope,locals,assign,inputs);var value;if(rhs.value!=null){var values=[];for(var i=0;i<args.length;++i){values.push(args[i](scope,locals,assign,inputs));}value=rhs.value.apply(rhs.context,values);}return context?{value:value}:value;};case AST.AssignmentExpression:left=this.recurse(ast.left,true,1);right=this.recurse(ast.right);return function(scope,locals,assign,inputs){var lhs=left(scope,locals,assign,inputs);var rhs=right(scope,locals,assign,inputs);lhs.context[lhs.name]=rhs;return context?{value:rhs}:rhs;};case AST.ArrayExpression:args=[];forEach(ast.elements,function(expr){args.push(self.recurse(expr));});return function(scope,locals,assign,inputs){var value=[];for(var i=0;i<args.length;++i){value.push(args[i](scope,locals,assign,inputs));}return context?{value:value}:value;};case AST.ObjectExpression:args=[];forEach(ast.properties,function(property){if(property.computed){args.push({key:self.recurse(property.key),computed:true,value:self.recurse(property.value)});}else{args.push({key:property.key.type===AST.Identifier?property.key.name:''+property.key.value,computed:false,value:self.recurse(property.value)});}});return function(scope,locals,assign,inputs){var value={};for(var i=0;i<args.length;++i){if(args[i].computed){value[args[i].key(scope,locals,assign,inputs)]=args[i].value(scope,locals,assign,inputs);}else{value[args[i].key]=args[i].value(scope,locals,assign,inputs);}}return context?{value:value}:value;};case AST.ThisExpression:return function(scope){return context?{value:scope}:scope;};case AST.LocalsExpression:return function(scope,locals){return context?{value:locals}:locals;};case AST.NGValueParameter:return function(scope,locals,assign){return context?{value:assign}:assign;};}},'unary+':function unary(argument,context){return function(scope,locals,assign,inputs){var arg=argument(scope,locals,assign,inputs);if(isDefined(arg)){arg=+arg;}else{arg=0;}return context?{value:arg}:arg;};},'unary-':function unary(argument,context){return function(scope,locals,assign,inputs){var arg=argument(scope,locals,assign,inputs);if(isDefined(arg)){arg=-arg;}else{arg=-0;}return context?{value:arg}:arg;};},'unary!':function unary(argument,context){return function(scope,locals,assign,inputs){var arg=!argument(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary+':function binary(left,right,context){return function(scope,locals,assign,inputs){var lhs=left(scope,locals,assign,inputs);var rhs=right(scope,locals,assign,inputs);var arg=plusFn(lhs,rhs);return context?{value:arg}:arg;};},'binary-':function binary(left,right,context){return function(scope,locals,assign,inputs){var lhs=left(scope,locals,assign,inputs);var rhs=right(scope,locals,assign,inputs);var arg=(isDefined(lhs)?lhs:0)-(isDefined(rhs)?rhs:0);return context?{value:arg}:arg;};},'binary*':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)*right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary/':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)/right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary%':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)%right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary===':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)===right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary!==':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)!==right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary==':function binary(left,right,context){return function(scope,locals,assign,inputs){// eslint-disable-next-line eqeqeq
	var arg=left(scope,locals,assign,inputs)==right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary!=':function binary(left,right,context){return function(scope,locals,assign,inputs){// eslint-disable-next-line eqeqeq
	var arg=left(scope,locals,assign,inputs)!=right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary<':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)<right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary>':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)>right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary<=':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)<=right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary>=':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)>=right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary&&':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)&&right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'binary||':function binary(left,right,context){return function(scope,locals,assign,inputs){var arg=left(scope,locals,assign,inputs)||right(scope,locals,assign,inputs);return context?{value:arg}:arg;};},'ternary?:':function ternary(test,alternate,consequent,context){return function(scope,locals,assign,inputs){var arg=test(scope,locals,assign,inputs)?alternate(scope,locals,assign,inputs):consequent(scope,locals,assign,inputs);return context?{value:arg}:arg;};},value:function value(_value2,context){return function(){return context?{context:undefined,name:undefined,value:_value2}:_value2;};},identifier:function identifier(name,context,create){return function(scope,locals,assign,inputs){var base=locals&&name in locals?locals:scope;if(create&&create!==1&&base&&base[name]==null){base[name]={};}var value=base?base[name]:undefined;if(context){return{context:base,name:name,value:value};}else{return value;}};},computedMember:function computedMember(left,right,context,create){return function(scope,locals,assign,inputs){var lhs=left(scope,locals,assign,inputs);var rhs;var value;if(lhs!=null){rhs=right(scope,locals,assign,inputs);rhs=getStringValue(rhs);if(create&&create!==1){if(lhs&&!lhs[rhs]){lhs[rhs]={};}}value=lhs[rhs];}if(context){return{context:lhs,name:rhs,value:value};}else{return value;}};},nonComputedMember:function nonComputedMember(left,right,context,create){return function(scope,locals,assign,inputs){var lhs=left(scope,locals,assign,inputs);if(create&&create!==1){if(lhs&&lhs[right]==null){lhs[right]={};}}var value=lhs!=null?lhs[right]:undefined;if(context){return{context:lhs,name:right,value:value};}else{return value;}};},inputs:function inputs(input,watchId){return function(scope,value,locals,inputs){if(inputs)return inputs[watchId];return input(scope,value,locals);};}};/**
	 * @constructor
	 */function Parser(lexer,$filter,options){this.ast=new AST(lexer,options);this.astCompiler=options.csp?new ASTInterpreter($filter):new ASTCompiler($filter);}Parser.prototype={constructor:Parser,parse:function parse(text){var ast=this.getAst(text);var fn=this.astCompiler.compile(ast.ast);fn.literal=isLiteral(ast.ast);fn.constant=isConstant(ast.ast);fn.oneTime=ast.oneTime;return fn;},getAst:function getAst(exp){var oneTime=false;exp=exp.trim();if(exp.charAt(0)===':'&&exp.charAt(1)===':'){oneTime=true;exp=exp.substring(2);}return{ast:this.ast.ast(exp),oneTime:oneTime};}};function getValueOf(value){return isFunction(value.valueOf)?value.valueOf():objectValueOf.call(value);}///////////////////////////////////
	/**
	 * @ngdoc service
	 * @name $parse
	 * @kind function
	 *
	 * @description
	 *
	 * Converts AngularJS {@link guide/expression expression} into a function.
	 *
	 * ```js
	 *   var getter = $parse('user.name');
	 *   var setter = getter.assign;
	 *   var context = {user:{name:'AngularJS'}};
	 *   var locals = {user:{name:'local'}};
	 *
	 *   expect(getter(context)).toEqual('AngularJS');
	 *   setter(context, 'newValue');
	 *   expect(context.user.name).toEqual('newValue');
	 *   expect(getter(context, locals)).toEqual('local');
	 * ```
	 *
	 *
	 * @param {string} expression String expression to compile.
	 * @returns {function(context, locals)} a function which represents the compiled expression:
	 *
	 *    * `context` – `{object}` – an object against which any expressions embedded in the strings
	 *      are evaluated against (typically a scope object).
	 *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
	 *      `context`.
	 *
	 *    The returned function also has the following properties:
	 *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript
	 *        literal.
	 *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript
	 *        constant literals.
	 *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be
	 *        set to a function to change its value on the given context.
	 *
	 *//**
	 * @ngdoc provider
	 * @name $parseProvider
	 * @this
	 *
	 * @description
	 * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}
	 *  service.
	 */function $ParseProvider(){var cache=createMap();var literals={'true':true,'false':false,'null':null,'undefined':undefined};var identStart,identContinue;/**
	   * @ngdoc method
	   * @name $parseProvider#addLiteral
	   * @description
	   *
	   * Configure $parse service to add literal values that will be present as literal at expressions.
	   *
	   * @param {string} literalName Token for the literal value. The literal name value must be a valid literal name.
	   * @param {*} literalValue Value for this literal. All literal values must be primitives or `undefined`.
	   *
	   **/this.addLiteral=function(literalName,literalValue){literals[literalName]=literalValue;};/**
	  * @ngdoc method
	  * @name $parseProvider#setIdentifierFns
	  *
	  * @description
	  *
	  * Allows defining the set of characters that are allowed in AngularJS expressions. The function
	  * `identifierStart` will get called to know if a given character is a valid character to be the
	  * first character for an identifier. The function `identifierContinue` will get called to know if
	  * a given character is a valid character to be a follow-up identifier character. The functions
	  * `identifierStart` and `identifierContinue` will receive as arguments the single character to be
	  * identifier and the character code point. These arguments will be `string` and `numeric`. Keep in
	  * mind that the `string` parameter can be two characters long depending on the character
	  * representation. It is expected for the function to return `true` or `false`, whether that
	  * character is allowed or not.
	  *
	  * Since this function will be called extensively, keep the implementation of these functions fast,
	  * as the performance of these functions have a direct impact on the expressions parsing speed.
	  *
	  * @param {function=} identifierStart The function that will decide whether the given character is
	  *   a valid identifier start character.
	  * @param {function=} identifierContinue The function that will decide whether the given character is
	  *   a valid identifier continue character.
	  */this.setIdentifierFns=function(identifierStart,identifierContinue){identStart=identifierStart;identContinue=identifierContinue;return this;};this.$get=['$filter',function($filter){var noUnsafeEval=csp().noUnsafeEval;var $parseOptions={csp:noUnsafeEval,literals:copy(literals),isIdentifierStart:isFunction(identStart)&&identStart,isIdentifierContinue:isFunction(identContinue)&&identContinue};$parse.$$getAst=$$getAst;return $parse;function $parse(exp,interceptorFn){var parsedExpression,cacheKey;switch(typeof exp==='undefined'?'undefined':_typeof(exp)){case'string':exp=exp.trim();cacheKey=exp;parsedExpression=cache[cacheKey];if(!parsedExpression){var lexer=new Lexer($parseOptions);var parser=new Parser(lexer,$filter,$parseOptions);parsedExpression=parser.parse(exp);cache[cacheKey]=addWatchDelegate(parsedExpression);}return addInterceptor(parsedExpression,interceptorFn);case'function':return addInterceptor(exp,interceptorFn);default:return addInterceptor(noop,interceptorFn);}}function $$getAst(exp){var lexer=new Lexer($parseOptions);var parser=new Parser(lexer,$filter,$parseOptions);return parser.getAst(exp).ast;}function expressionInputDirtyCheck(newValue,oldValueOfValue,compareObjectIdentity){if(newValue==null||oldValueOfValue==null){// null/undefined
	return newValue===oldValueOfValue;}if((typeof newValue==='undefined'?'undefined':_typeof(newValue))==='object'){// attempt to convert the value to a primitive type
	// TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can
	//             be cheaply dirty-checked
	newValue=getValueOf(newValue);if((typeof newValue==='undefined'?'undefined':_typeof(newValue))==='object'&&!compareObjectIdentity){// objects/arrays are not supported - deep-watching them would be too expensive
	return false;}// fall-through to the primitive equality check
	}//Primitive or NaN
	// eslint-disable-next-line no-self-compare
	return newValue===oldValueOfValue||newValue!==newValue&&oldValueOfValue!==oldValueOfValue;}function inputsWatchDelegate(scope,listener,objectEquality,parsedExpression,prettyPrintExpression){var inputExpressions=parsedExpression.inputs;var lastResult;if(inputExpressions.length===1){var oldInputValueOf=expressionInputDirtyCheck;// init to something unique so that equals check fails
	inputExpressions=inputExpressions[0];return scope.$watch(function expressionInputWatch(scope){var newInputValue=inputExpressions(scope);if(!expressionInputDirtyCheck(newInputValue,oldInputValueOf,inputExpressions.isPure)){lastResult=parsedExpression(scope,undefined,undefined,[newInputValue]);oldInputValueOf=newInputValue&&getValueOf(newInputValue);}return lastResult;},listener,objectEquality,prettyPrintExpression);}var oldInputValueOfValues=[];var oldInputValues=[];for(var i=0,ii=inputExpressions.length;i<ii;i++){oldInputValueOfValues[i]=expressionInputDirtyCheck;// init to something unique so that equals check fails
	oldInputValues[i]=null;}return scope.$watch(function expressionInputsWatch(scope){var changed=false;for(var i=0,ii=inputExpressions.length;i<ii;i++){var newInputValue=inputExpressions[i](scope);if(changed||(changed=!expressionInputDirtyCheck(newInputValue,oldInputValueOfValues[i],inputExpressions[i].isPure))){oldInputValues[i]=newInputValue;oldInputValueOfValues[i]=newInputValue&&getValueOf(newInputValue);}}if(changed){lastResult=parsedExpression(scope,undefined,undefined,oldInputValues);}return lastResult;},listener,objectEquality,prettyPrintExpression);}function oneTimeWatchDelegate(scope,listener,objectEquality,parsedExpression,prettyPrintExpression){var isDone=parsedExpression.literal?isAllDefined:isDefined;var unwatch,lastValue;var exp=parsedExpression.$$intercepted||parsedExpression;var post=parsedExpression.$$interceptor||identity;var useInputs=parsedExpression.inputs&&!exp.inputs;// Propagate the literal/inputs/constant attributes
	// ... but not oneTime since we are handling it
	oneTimeWatch.literal=parsedExpression.literal;oneTimeWatch.constant=parsedExpression.constant;oneTimeWatch.inputs=parsedExpression.inputs;// Allow other delegates to run on this wrapped expression
	addWatchDelegate(oneTimeWatch);unwatch=scope.$watch(oneTimeWatch,listener,objectEquality,prettyPrintExpression);return unwatch;function unwatchIfDone(){if(isDone(lastValue)){unwatch();}}function oneTimeWatch(scope,locals,assign,inputs){lastValue=useInputs&&inputs?inputs[0]:exp(scope,locals,assign,inputs);if(isDone(lastValue)){scope.$$postDigest(unwatchIfDone);}return post(lastValue);}}function isAllDefined(value){var allDefined=true;forEach(value,function(val){if(!isDefined(val))allDefined=false;});return allDefined;}function constantWatchDelegate(scope,listener,objectEquality,parsedExpression){var unwatch=scope.$watch(function constantWatch(scope){unwatch();return parsedExpression(scope);},listener,objectEquality);return unwatch;}function addWatchDelegate(parsedExpression){if(parsedExpression.constant){parsedExpression.$$watchDelegate=constantWatchDelegate;}else if(parsedExpression.oneTime){parsedExpression.$$watchDelegate=oneTimeWatchDelegate;}else if(parsedExpression.inputs){parsedExpression.$$watchDelegate=inputsWatchDelegate;}return parsedExpression;}function chainInterceptors(first,second){function chainedInterceptor(value){return second(first(value));}chainedInterceptor.$stateful=first.$stateful||second.$stateful;chainedInterceptor.$$pure=first.$$pure&&second.$$pure;return chainedInterceptor;}function addInterceptor(parsedExpression,interceptorFn){if(!interceptorFn)return parsedExpression;// Extract any existing interceptors out of the parsedExpression
	// to ensure the original parsedExpression is always the $$intercepted
	if(parsedExpression.$$interceptor){interceptorFn=chainInterceptors(parsedExpression.$$interceptor,interceptorFn);parsedExpression=parsedExpression.$$intercepted;}var useInputs=false;var fn=function interceptedExpression(scope,locals,assign,inputs){var value=useInputs&&inputs?inputs[0]:parsedExpression(scope,locals,assign,inputs);return interceptorFn(value);};// Maintain references to the interceptor/intercepted
	fn.$$intercepted=parsedExpression;fn.$$interceptor=interceptorFn;// Propagate the literal/oneTime/constant attributes
	fn.literal=parsedExpression.literal;fn.oneTime=parsedExpression.oneTime;fn.constant=parsedExpression.constant;// Treat the interceptor like filters.
	// If it is not $stateful then only watch its inputs.
	// If the expression itself has no inputs then use the full expression as an input.
	if(!interceptorFn.$stateful){useInputs=!parsedExpression.inputs;fn.inputs=parsedExpression.inputs?parsedExpression.inputs:[parsedExpression];if(!interceptorFn.$$pure){fn.inputs=fn.inputs.map(function(e){// Remove the isPure flag of inputs when it is not absolute because they are now wrapped in a
	// non-pure interceptor function.
	if(e.isPure===PURITY_RELATIVE){return function depurifier(s){return e(s);};}return e;});}}return addWatchDelegate(fn);}}];}/**
	 * @ngdoc service
	 * @name $q
	 * @requires $rootScope
	 *
	 * @description
	 * A service that helps you run functions asynchronously, and use their return values (or exceptions)
	 * when they are done processing.
	 *
	 * This is a [Promises/A+](https://promisesaplus.com/)-compliant implementation of promises/deferred
	 * objects inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).
	 *
	 * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred
	 * implementations, and the other which resembles ES6 (ES2015) promises to some degree.
	 *
	 * ## $q constructor
	 *
	 * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`
	 * function as the first argument. This is similar to the native Promise implementation from ES6,
	 * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).
	 *
	 * While the constructor-style use is supported, not all of the supporting methods from ES6 promises are
	 * available yet.
	 *
	 * It can be used like so:
	 *
	 * ```js
	 *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
	 *   // are available in the current lexical scope (they could have been injected or passed in).
	 *
	 *   function asyncGreet(name) {
	 *     // perform some asynchronous operation, resolve or reject the promise when appropriate.
	 *     return $q(function(resolve, reject) {
	 *       setTimeout(function() {
	 *         if (okToGreet(name)) {
	 *           resolve('Hello, ' + name + '!');
	 *         } else {
	 *           reject('Greeting ' + name + ' is not allowed.');
	 *         }
	 *       }, 1000);
	 *     });
	 *   }
	 *
	 *   var promise = asyncGreet('Robin Hood');
	 *   promise.then(function(greeting) {
	 *     alert('Success: ' + greeting);
	 *   }, function(reason) {
	 *     alert('Failed: ' + reason);
	 *   });
	 * ```
	 *
	 * Note: progress/notify callbacks are not currently supported via the ES6-style interface.
	 *
	 * Note: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.
	 *
	 * However, the more traditional CommonJS-style usage is still available, and documented below.
	 *
	 * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an
	 * interface for interacting with an object that represents the result of an action that is
	 * performed asynchronously, and may or may not be finished at any given point in time.
	 *
	 * From the perspective of dealing with error handling, deferred and promise APIs are to
	 * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.
	 *
	 * ```js
	 *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
	 *   // are available in the current lexical scope (they could have been injected or passed in).
	 *
	 *   function asyncGreet(name) {
	 *     var deferred = $q.defer();
	 *
	 *     setTimeout(function() {
	 *       deferred.notify('About to greet ' + name + '.');
	 *
	 *       if (okToGreet(name)) {
	 *         deferred.resolve('Hello, ' + name + '!');
	 *       } else {
	 *         deferred.reject('Greeting ' + name + ' is not allowed.');
	 *       }
	 *     }, 1000);
	 *
	 *     return deferred.promise;
	 *   }
	 *
	 *   var promise = asyncGreet('Robin Hood');
	 *   promise.then(function(greeting) {
	 *     alert('Success: ' + greeting);
	 *   }, function(reason) {
	 *     alert('Failed: ' + reason);
	 *   }, function(update) {
	 *     alert('Got notification: ' + update);
	 *   });
	 * ```
	 *
	 * At first it might not be obvious why this extra complexity is worth the trouble. The payoff
	 * comes in the way of guarantees that promise and deferred APIs make, see
	 * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.
	 *
	 * Additionally the promise api allows for composition that is very hard to do with the
	 * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.
	 * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the
	 * section on serial or parallel joining of promises.
	 *
	 * ## The Deferred API
	 *
	 * A new instance of deferred is constructed by calling `$q.defer()`.
	 *
	 * The purpose of the deferred object is to expose the associated Promise instance as well as APIs
	 * that can be used for signaling the successful or unsuccessful completion, as well as the status
	 * of the task.
	 *
	 * **Methods**
	 *
	 * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection
	 *   constructed via `$q.reject`, the promise will be rejected instead.
	 * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to
	 *   resolving it with a rejection constructed via `$q.reject`.
	 * - `notify(value)` - provides updates on the status of the promise's execution. This may be called
	 *   multiple times before the promise is either resolved or rejected.
	 *
	 * **Properties**
	 *
	 * - promise – `{Promise}` – promise object associated with this deferred.
	 *
	 *
	 * ## The Promise API
	 *
	 * A new promise instance is created when a deferred instance is created and can be retrieved by
	 * calling `deferred.promise`.
	 *
	 * The purpose of the promise object is to allow for interested parties to get access to the result
	 * of the deferred task when it completes.
	 *
	 * **Methods**
	 *
	 * - `then(successCallback, [errorCallback], [notifyCallback])` – regardless of when the promise was or
	 *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously
	 *   as soon as the result is available. The callbacks are called with a single argument: the result
	 *   or rejection reason. Additionally, the notify callback may be called zero or more times to
	 *   provide a progress indication, before the promise is resolved or rejected.
	 *
	 *   This method *returns a new promise* which is resolved or rejected via the return value of the
	 *   `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved
	 *   with the value which is resolved in that promise using
	 *   [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).
	 *   It also notifies via the return value of the `notifyCallback` method. The promise cannot be
	 *   resolved or rejected from the notifyCallback method. The errorCallback and notifyCallback
	 *   arguments are optional.
	 *
	 * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`
	 *
	 * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,
	 *   but to do so without modifying the final value. This is useful to release resources or do some
	 *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full
	 *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for
	 *   more information.
	 *
	 * ## Chaining promises
	 *
	 * Because calling the `then` method of a promise returns a new derived promise, it is easily
	 * possible to create a chain of promises:
	 *
	 * ```js
	 *   promiseB = promiseA.then(function(result) {
	 *     return result + 1;
	 *   });
	 *
	 *   // promiseB will be resolved immediately after promiseA is resolved and its value
	 *   // will be the result of promiseA incremented by 1
	 * ```
	 *
	 * It is possible to create chains of any length and since a promise can be resolved with another
	 * promise (which will defer its resolution further), it is possible to pause/defer resolution of
	 * the promises at any point in the chain. This makes it possible to implement powerful APIs like
	 * $http's response interceptors.
	 *
	 *
	 * ## Differences between Kris Kowal's Q and $q
	 *
	 *  There are two main differences:
	 *
	 * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation
	 *   mechanism in AngularJS, which means faster propagation of resolution or rejection into your
	 *   models and avoiding unnecessary browser repaints, which would result in flickering UI.
	 * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains
	 *   all the important functionality needed for common async tasks.
	 *
	 * ## Testing
	 *
	 *  ```js
	 *    it('should simulate promise', inject(function($q, $rootScope) {
	 *      var deferred = $q.defer();
	 *      var promise = deferred.promise;
	 *      var resolvedValue;
	 *
	 *      promise.then(function(value) { resolvedValue = value; });
	 *      expect(resolvedValue).toBeUndefined();
	 *
	 *      // Simulate resolving of promise
	 *      deferred.resolve(123);
	 *      // Note that the 'then' function does not get called synchronously.
	 *      // This is because we want the promise API to always be async, whether or not
	 *      // it got called synchronously or asynchronously.
	 *      expect(resolvedValue).toBeUndefined();
	 *
	 *      // Propagate promise resolution to 'then' functions using $apply().
	 *      $rootScope.$apply();
	 *      expect(resolvedValue).toEqual(123);
	 *    }));
	 *  ```
	 *
	 * @param {function(function, function)} resolver Function which is responsible for resolving or
	 *   rejecting the newly created promise. The first parameter is a function which resolves the
	 *   promise, the second parameter is a function which rejects the promise.
	 *
	 * @returns {Promise} The newly created promise.
	 *//**
	 * @ngdoc provider
	 * @name $qProvider
	 * @this
	 *
	 * @description
	 */function $QProvider(){var errorOnUnhandledRejections=true;this.$get=['$rootScope','$exceptionHandler',function($rootScope,$exceptionHandler){return qFactory(function(callback){$rootScope.$evalAsync(callback);},$exceptionHandler,errorOnUnhandledRejections);}];/**
	   * @ngdoc method
	   * @name $qProvider#errorOnUnhandledRejections
	   * @kind function
	   *
	   * @description
	   * Retrieves or overrides whether to generate an error when a rejected promise is not handled.
	   * This feature is enabled by default.
	   *
	   * @param {boolean=} value Whether to generate an error when a rejected promise is not handled.
	   * @returns {boolean|ng.$qProvider} Current value when called without a new value or self for
	   *    chaining otherwise.
	   */this.errorOnUnhandledRejections=function(value){if(isDefined(value)){errorOnUnhandledRejections=value;return this;}else{return errorOnUnhandledRejections;}};}/** @this */function $$QProvider(){var errorOnUnhandledRejections=true;this.$get=['$browser','$exceptionHandler',function($browser,$exceptionHandler){return qFactory(function(callback){$browser.defer(callback);},$exceptionHandler,errorOnUnhandledRejections);}];this.errorOnUnhandledRejections=function(value){if(isDefined(value)){errorOnUnhandledRejections=value;return this;}else{return errorOnUnhandledRejections;}};}/**
	 * Constructs a promise manager.
	 *
	 * @param {function(function)} nextTick Function for executing functions in the next turn.
	 * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for
	 *     debugging purposes.
	 * @param {boolean=} errorOnUnhandledRejections Whether an error should be generated on unhandled
	 *     promises rejections.
	 * @returns {object} Promise manager.
	 */function qFactory(nextTick,exceptionHandler,errorOnUnhandledRejections){var $qMinErr=minErr('$q',TypeError);var queueSize=0;var checkQueue=[];/**
	   * @ngdoc method
	   * @name ng.$q#defer
	   * @kind function
	   *
	   * @description
	   * Creates a `Deferred` object which represents a task which will finish in the future.
	   *
	   * @returns {Deferred} Returns a new instance of deferred.
	   */function defer(){return new Deferred();}function Deferred(){var promise=this.promise=new Promise();//Non prototype methods necessary to support unbound execution :/
	this.resolve=function(val){resolvePromise(promise,val);};this.reject=function(reason){rejectPromise(promise,reason);};this.notify=function(progress){notifyPromise(promise,progress);};}function Promise(){this.$$state={status:0};}extend(Promise.prototype,{then:function then(onFulfilled,onRejected,progressBack){if(isUndefined(onFulfilled)&&isUndefined(onRejected)&&isUndefined(progressBack)){return this;}var result=new Promise();this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([result,onFulfilled,onRejected,progressBack]);if(this.$$state.status>0)scheduleProcessQueue(this.$$state);return result;},'catch':function _catch(callback){return this.then(null,callback);},'finally':function _finally(callback,progressBack){return this.then(function(value){return handleCallback(value,resolve,callback);},function(error){return handleCallback(error,reject,callback);},progressBack);}});function processQueue(state){var fn,promise,pending;pending=state.pending;state.processScheduled=false;state.pending=undefined;try{for(var i=0,ii=pending.length;i<ii;++i){markQStateExceptionHandled(state);promise=pending[i][0];fn=pending[i][state.status];try{if(isFunction(fn)){resolvePromise(promise,fn(state.value));}else if(state.status===1){resolvePromise(promise,state.value);}else{rejectPromise(promise,state.value);}}catch(e){rejectPromise(promise,e);// This error is explicitly marked for being passed to the $exceptionHandler
	if(e&&e.$$passToExceptionHandler===true){exceptionHandler(e);}}}}finally{--queueSize;if(errorOnUnhandledRejections&&queueSize===0){nextTick(processChecks);}}}function processChecks(){// eslint-disable-next-line no-unmodified-loop-condition
	while(!queueSize&&checkQueue.length){var toCheck=checkQueue.shift();if(!isStateExceptionHandled(toCheck)){markQStateExceptionHandled(toCheck);var errorMessage='Possibly unhandled rejection: '+toDebugString(toCheck.value);if(isError(toCheck.value)){exceptionHandler(toCheck.value,errorMessage);}else{exceptionHandler(errorMessage);}}}}function scheduleProcessQueue(state){if(errorOnUnhandledRejections&&!state.pending&&state.status===2&&!isStateExceptionHandled(state)){if(queueSize===0&&checkQueue.length===0){nextTick(processChecks);}checkQueue.push(state);}if(state.processScheduled||!state.pending)return;state.processScheduled=true;++queueSize;nextTick(function(){processQueue(state);});}function resolvePromise(promise,val){if(promise.$$state.status)return;if(val===promise){$$reject(promise,$qMinErr('qcycle','Expected promise to be resolved with value other than itself \'{0}\'',val));}else{$$resolve(promise,val);}}function $$resolve(promise,val){var then;var done=false;try{if(isObject(val)||isFunction(val))then=val.then;if(isFunction(then)){promise.$$state.status=-1;then.call(val,doResolve,doReject,doNotify);}else{promise.$$state.value=val;promise.$$state.status=1;scheduleProcessQueue(promise.$$state);}}catch(e){doReject(e);}function doResolve(val){if(done)return;done=true;$$resolve(promise,val);}function doReject(val){if(done)return;done=true;$$reject(promise,val);}function doNotify(progress){notifyPromise(promise,progress);}}function rejectPromise(promise,reason){if(promise.$$state.status)return;$$reject(promise,reason);}function $$reject(promise,reason){promise.$$state.value=reason;promise.$$state.status=2;scheduleProcessQueue(promise.$$state);}function notifyPromise(promise,progress){var callbacks=promise.$$state.pending;if(promise.$$state.status<=0&&callbacks&&callbacks.length){nextTick(function(){var callback,result;for(var i=0,ii=callbacks.length;i<ii;i++){result=callbacks[i][0];callback=callbacks[i][3];try{notifyPromise(result,isFunction(callback)?callback(progress):progress);}catch(e){exceptionHandler(e);}}});}}/**
	   * @ngdoc method
	   * @name $q#reject
	   * @kind function
	   *
	   * @description
	   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be
	   * used to forward rejection in a chain of promises. If you are dealing with the last promise in
	   * a promise chain, you don't need to worry about it.
	   *
	   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of
	   * `reject` as the `throw` keyword in JavaScript. This also means that if you "catch" an error via
	   * a promise error callback and you want to forward the error to the promise derived from the
	   * current promise, you have to "rethrow" the error by returning a rejection constructed via
	   * `reject`.
	   *
	   * ```js
	   *   promiseB = promiseA.then(function(result) {
	   *     // success: do something and resolve promiseB
	   *     //          with the old or a new result
	   *     return result;
	   *   }, function(reason) {
	   *     // error: handle the error if possible and
	   *     //        resolve promiseB with newPromiseOrValue,
	   *     //        otherwise forward the rejection to promiseB
	   *     if (canHandle(reason)) {
	   *      // handle the error and recover
	   *      return newPromiseOrValue;
	   *     }
	   *     return $q.reject(reason);
	   *   });
	   * ```
	   *
	   * @param {*} reason Constant, message, exception or an object representing the rejection reason.
	   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.
	   */function reject(reason){var result=new Promise();rejectPromise(result,reason);return result;}function handleCallback(value,resolver,callback){var callbackOutput=null;try{if(isFunction(callback))callbackOutput=callback();}catch(e){return reject(e);}if(isPromiseLike(callbackOutput)){return callbackOutput.then(function(){return resolver(value);},reject);}else{return resolver(value);}}/**
	   * @ngdoc method
	   * @name $q#when
	   * @kind function
	   *
	   * @description
	   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.
	   * This is useful when you are dealing with an object that might or might not be a promise, or if
	   * the promise comes from a source that can't be trusted.
	   *
	   * @param {*} value Value or a promise
	   * @param {Function=} successCallback
	   * @param {Function=} errorCallback
	   * @param {Function=} progressCallback
	   * @returns {Promise} Returns a promise of the passed value or promise
	   */function when(value,callback,errback,progressBack){var result=new Promise();resolvePromise(result,value);return result.then(callback,errback,progressBack);}/**
	   * @ngdoc method
	   * @name $q#resolve
	   * @kind function
	   *
	   * @description
	   * Alias of {@link ng.$q#when when} to maintain naming consistency with ES6.
	   *
	   * @param {*} value Value or a promise
	   * @param {Function=} successCallback
	   * @param {Function=} errorCallback
	   * @param {Function=} progressCallback
	   * @returns {Promise} Returns a promise of the passed value or promise
	   */var resolve=when;/**
	   * @ngdoc method
	   * @name $q#all
	   * @kind function
	   *
	   * @description
	   * Combines multiple promises into a single promise that is resolved when all of the input
	   * promises are resolved.
	   *
	   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
	   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,
	   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.
	   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected
	   *   with the same rejection value.
	   */function all(promises){var result=new Promise(),counter=0,results=isArray(promises)?[]:{};forEach(promises,function(promise,key){counter++;when(promise).then(function(value){results[key]=value;if(! --counter)resolvePromise(result,results);},function(reason){rejectPromise(result,reason);});});if(counter===0){resolvePromise(result,results);}return result;}/**
	   * @ngdoc method
	   * @name $q#race
	   * @kind function
	   *
	   * @description
	   * Returns a promise that resolves or rejects as soon as one of those promises
	   * resolves or rejects, with the value or reason from that promise.
	   *
	   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
	   * @returns {Promise} a promise that resolves or rejects as soon as one of the `promises`
	   * resolves or rejects, with the value or reason from that promise.
	   */function race(promises){var deferred=defer();forEach(promises,function(promise){when(promise).then(deferred.resolve,deferred.reject);});return deferred.promise;}function $Q(resolver){if(!isFunction(resolver)){throw $qMinErr('norslvr','Expected resolverFn, got \'{0}\'',resolver);}var promise=new Promise();function resolveFn(value){resolvePromise(promise,value);}function rejectFn(reason){rejectPromise(promise,reason);}resolver(resolveFn,rejectFn);return promise;}// Let's make the instanceof operator work for promises, so that
	// `new $q(fn) instanceof $q` would evaluate to true.
	$Q.prototype=Promise.prototype;$Q.defer=defer;$Q.reject=reject;$Q.when=when;$Q.resolve=resolve;$Q.all=all;$Q.race=race;return $Q;}function isStateExceptionHandled(state){return!!state.pur;}function markQStateExceptionHandled(state){state.pur=true;}function markQExceptionHandled(q){// Built-in `$q` promises will always have a `$$state` property. This check is to allow
	// overwriting `$q` with a different promise library (e.g. Bluebird + angular-bluebird-promises).
	// (Currently, this is the only method that might be called with a promise, even if it is not
	// created by the built-in `$q`.)
	if(q.$$state){markQStateExceptionHandled(q.$$state);}}/** @this */function $$RAFProvider(){//rAF
	this.$get=['$window','$timeout',function($window,$timeout){var requestAnimationFrame=$window.requestAnimationFrame||$window.webkitRequestAnimationFrame;var cancelAnimationFrame=$window.cancelAnimationFrame||$window.webkitCancelAnimationFrame||$window.webkitCancelRequestAnimationFrame;var rafSupported=!!requestAnimationFrame;var raf=rafSupported?function(fn){var id=requestAnimationFrame(fn);return function(){cancelAnimationFrame(id);};}:function(fn){var timer=$timeout(fn,16.66,false);// 1000 / 60 = 16.666
	return function(){$timeout.cancel(timer);};};raf.supported=rafSupported;return raf;}];}/**
	 * DESIGN NOTES
	 *
	 * The design decisions behind the scope are heavily favored for speed and memory consumption.
	 *
	 * The typical use of scope is to watch the expressions, which most of the time return the same
	 * value as last time so we optimize the operation.
	 *
	 * Closures construction is expensive in terms of speed as well as memory:
	 *   - No closures, instead use prototypical inheritance for API
	 *   - Internal state needs to be stored on scope directly, which means that private state is
	 *     exposed as $$____ properties
	 *
	 * Loop operations are optimized by using while(count--) { ... }
	 *   - This means that in order to keep the same order of execution as addition we have to add
	 *     items to the array at the beginning (unshift) instead of at the end (push)
	 *
	 * Child scopes are created and removed often
	 *   - Using an array would be slow since inserts in the middle are expensive; so we use linked lists
	 *
	 * There are fewer watches than observers. This is why you don't want the observer to be implemented
	 * in the same way as watch. Watch requires return of the initialization function which is expensive
	 * to construct.
	 *//**
	 * @ngdoc provider
	 * @name $rootScopeProvider
	 * @description
	 *
	 * Provider for the $rootScope service.
	 *//**
	 * @ngdoc method
	 * @name $rootScopeProvider#digestTtl
	 * @description
	 *
	 * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and
	 * assuming that the model is unstable.
	 *
	 * The current default is 10 iterations.
	 *
	 * In complex applications it's possible that the dependencies between `$watch`s will result in
	 * several digest iterations. However if an application needs more than the default 10 digest
	 * iterations for its model to stabilize then you should investigate what is causing the model to
	 * continuously change during the digest.
	 *
	 * Increasing the TTL could have performance implications, so you should not change it without
	 * proper justification.
	 *
	 * @param {number} limit The number of digest iterations.
	 *//**
	 * @ngdoc service
	 * @name $rootScope
	 * @this
	 *
	 * @description
	 *
	 * Every application has a single root {@link ng.$rootScope.Scope scope}.
	 * All other scopes are descendant scopes of the root scope. Scopes provide separation
	 * between the model and the view, via a mechanism for watching the model for changes.
	 * They also provide event emission/broadcast and subscription facility. See the
	 * {@link guide/scope developer guide on scopes}.
	 */function $RootScopeProvider(){var TTL=10;var $rootScopeMinErr=minErr('$rootScope');var lastDirtyWatch=null;var applyAsyncId=null;this.digestTtl=function(value){if(arguments.length){TTL=value;}return TTL;};function createChildScopeClass(parent){function ChildScope(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=nextUid();this.$$ChildScope=null;this.$$suspended=false;}ChildScope.prototype=parent;return ChildScope;}this.$get=['$exceptionHandler','$parse','$browser',function($exceptionHandler,$parse,$browser){function destroyChildScope($event){$event.currentScope.$$destroyed=true;}function cleanUpScope($scope){// Support: IE 9 only
	if(msie===9){// There is a memory leak in IE9 if all child scopes are not disconnected
	// completely when a scope is destroyed. So this code will recurse up through
	// all this scopes children
	//
	// See issue https://github.com/angular/angular.js/issues/10706
	if($scope.$$childHead){cleanUpScope($scope.$$childHead);}if($scope.$$nextSibling){cleanUpScope($scope.$$nextSibling);}}// The code below works around IE9 and V8's memory leaks
	//
	// See:
	// - https://code.google.com/p/v8/issues/detail?id=2073#c26
	// - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909
	// - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451
	$scope.$parent=$scope.$$nextSibling=$scope.$$prevSibling=$scope.$$childHead=$scope.$$childTail=$scope.$root=$scope.$$watchers=null;}/**
	     * @ngdoc type
	     * @name $rootScope.Scope
	     *
	     * @description
	     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the
	     * {@link auto.$injector $injector}. Child scopes are created using the
	     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when
	     * compiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for
	     * an in-depth introduction and usage examples.
	     *
	     *
	     * ## Inheritance
	     * A scope can inherit from a parent scope, as in this example:
	     * ```js
	         var parent = $rootScope;
	         var child = parent.$new();

	         parent.salutation = "Hello";
	         expect(child.salutation).toEqual('Hello');

	         child.salutation = "Welcome";
	         expect(child.salutation).toEqual('Welcome');
	         expect(parent.salutation).toEqual('Hello');
	     * ```
	     *
	     * When interacting with `Scope` in tests, additional helper methods are available on the
	     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional
	     * details.
	     *
	     *
	     * @param {Object.<string, function()>=} providers Map of service factory which need to be
	     *                                       provided for the current scope. Defaults to {@link ng}.
	     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should
	     *                              append/override services provided by `providers`. This is handy
	     *                              when unit-testing and having the need to override a default
	     *                              service.
	     * @returns {Object} Newly created scope.
	     *
	     */function Scope(){this.$id=nextUid();this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=false;this.$$suspended=false;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null;}/**
	     * @ngdoc property
	     * @name $rootScope.Scope#$id
	     *
	     * @description
	     * Unique scope ID (monotonically increasing) useful for debugging.
	     *//**
	      * @ngdoc property
	      * @name $rootScope.Scope#$parent
	      *
	      * @description
	      * Reference to the parent scope.
	      *//**
	       * @ngdoc property
	       * @name $rootScope.Scope#$root
	       *
	       * @description
	       * Reference to the root scope.
	       */Scope.prototype={constructor:Scope,/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$new
	       * @kind function
	       *
	       * @description
	       * Creates a new child {@link ng.$rootScope.Scope scope}.
	       *
	       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.
	       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.
	       *
	       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is
	       * desired for the scope and its child scopes to be permanently detached from the parent and
	       * thus stop participating in model change detection and listener notification by invoking.
	       *
	       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the
	       *         parent scope. The scope is isolated, as it can not see parent scope properties.
	       *         When creating widgets, it is useful for the widget to not accidentally read parent
	       *         state.
	       *
	       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`
	       *                              of the newly created scope. Defaults to `this` scope if not provided.
	       *                              This is used when creating a transclude scope to correctly place it
	       *                              in the scope hierarchy while maintaining the correct prototypical
	       *                              inheritance.
	       *
	       * @returns {Object} The newly created child scope.
	       *
	       */$new:function $new(isolate,parent){var child;parent=parent||this;if(isolate){child=new Scope();child.$root=this.$root;}else{// Only create a child scope class if somebody asks for one,
	// but cache it to allow the VM to optimize lookups.
	if(!this.$$ChildScope){this.$$ChildScope=createChildScopeClass(this);}child=new this.$$ChildScope();}child.$parent=parent;child.$$prevSibling=parent.$$childTail;if(parent.$$childHead){parent.$$childTail.$$nextSibling=child;parent.$$childTail=child;}else{parent.$$childHead=parent.$$childTail=child;}// When the new scope is not isolated or we inherit from `this`, and
	// the parent scope is destroyed, the property `$$destroyed` is inherited
	// prototypically. In all other cases, this property needs to be set
	// when the parent scope is destroyed.
	// The listener needs to be added after the parent is set
	if(isolate||parent!==this)child.$on('$destroy',destroyChildScope);return child;},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$watch
	       * @kind function
	       *
	       * @description
	       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.
	       *
	       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest
	       *   $digest()} and should return the value that will be watched. (`watchExpression` should not change
	       *   its value when executed multiple times with the same input because it may be executed multiple
	       *   times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be
	       *   [idempotent](http://en.wikipedia.org/wiki/Idempotence).)
	       * - The `listener` is called only when the value from the current `watchExpression` and the
	       *   previous call to `watchExpression` are not equal (with the exception of the initial run,
	       *   see below). Inequality is determined according to reference inequality,
	       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)
	       *    via the `!==` Javascript operator, unless `objectEquality == true`
	       *   (see next point)
	       * - When `objectEquality == true`, inequality of the `watchExpression` is determined
	       *   according to the {@link angular.equals} function. To save the value of the object for
	       *   later comparison, the {@link angular.copy} function is used. This therefore means that
	       *   watching complex objects will have adverse memory and performance implications.
	       * - This should not be used to watch for changes in objects that are (or contain)
	       *   [File](https://developer.mozilla.org/docs/Web/API/File) objects due to limitations with {@link angular.copy `angular.copy`}.
	       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.
	       *   This is achieved by rerunning the watchers until no changes are detected. The rerun
	       *   iteration limit is 10 to prevent an infinite loop deadlock.
	       *
	       *
	       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,
	       * you can register a `watchExpression` function with no `listener`. (Be prepared for
	       * multiple calls to your `watchExpression` because it will execute multiple times in a
	       * single {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)
	       *
	       * After a watcher is registered with the scope, the `listener` fn is called asynchronously
	       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the
	       * watcher. In rare cases, this is undesirable because the listener is called when the result
	       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you
	       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the
	       * listener was called due to initialization.
	       *
	       *
	       *
	       * @example
	       * ```js
	           // let's assume that scope was dependency injected as the $rootScope
	           var scope = $rootScope;
	           scope.name = 'misko';
	           scope.counter = 0;

	           expect(scope.counter).toEqual(0);
	           scope.$watch('name', function(newValue, oldValue) {
	             scope.counter = scope.counter + 1;
	           });
	           expect(scope.counter).toEqual(0);

	           scope.$digest();
	           // the listener is always called during the first $digest loop after it was registered
	           expect(scope.counter).toEqual(1);

	           scope.$digest();
	           // but now it will not be called unless the value changes
	           expect(scope.counter).toEqual(1);

	           scope.name = 'adam';
	           scope.$digest();
	           expect(scope.counter).toEqual(2);



	           // Using a function as a watchExpression
	           var food;
	           scope.foodCounter = 0;
	           expect(scope.foodCounter).toEqual(0);
	           scope.$watch(
	             // This function returns the value being watched. It is called for each turn of the $digest loop
	             function() { return food; },
	             // This is the change listener, called when the value returned from the above function changes
	             function(newValue, oldValue) {
	               if ( newValue !== oldValue ) {
	                 // Only increment the counter if the value changed
	                 scope.foodCounter = scope.foodCounter + 1;
	               }
	             }
	           );
	           // No digest has been run so the counter will be zero
	           expect(scope.foodCounter).toEqual(0);

	           // Run the digest but since food has not changed count will still be zero
	           scope.$digest();
	           expect(scope.foodCounter).toEqual(0);

	           // Update food and run digest.  Now the counter will increment
	           food = 'cheeseburger';
	           scope.$digest();
	           expect(scope.foodCounter).toEqual(1);

	       * ```
	       *
	       *
	       *
	       * @param {(function()|string)} watchExpression Expression that is evaluated on each
	       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers
	       *    a call to the `listener`.
	       *
	       *    - `string`: Evaluated as {@link guide/expression expression}
	       *    - `function(scope)`: called with current `scope` as a parameter.
	       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value
	       *    of `watchExpression` changes.
	       *
	       *    - `newVal` contains the current value of the `watchExpression`
	       *    - `oldVal` contains the previous value of the `watchExpression`
	       *    - `scope` refers to the current scope
	       * @param {boolean=} [objectEquality=false] Compare for object equality using {@link angular.equals} instead of
	       *     comparing for reference equality.
	       * @returns {function()} Returns a deregistration function for this listener.
	       */$watch:function $watch(watchExp,listener,objectEquality,prettyPrintExpression){var get=$parse(watchExp);var fn=isFunction(listener)?listener:noop;if(get.$$watchDelegate){return get.$$watchDelegate(this,fn,objectEquality,get,watchExp);}var scope=this,array=scope.$$watchers,watcher={fn:fn,last:initWatchVal,get:get,exp:prettyPrintExpression||watchExp,eq:!!objectEquality};lastDirtyWatch=null;if(!array){array=scope.$$watchers=[];array.$$digestWatchIndex=-1;}// we use unshift since we use a while loop in $digest for speed.
	// the while loop reads in reverse order.
	array.unshift(watcher);array.$$digestWatchIndex++;incrementWatchersCount(this,1);return function deregisterWatch(){var index=arrayRemove(array,watcher);if(index>=0){incrementWatchersCount(scope,-1);if(index<array.$$digestWatchIndex){array.$$digestWatchIndex--;}}lastDirtyWatch=null;};},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$watchGroup
	       * @kind function
	       *
	       * @description
	       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.
	       * If any one expression in the collection changes the `listener` is executed.
	       *
	       * - The items in the `watchExpressions` array are observed via the standard `$watch` operation. Their return
	       *   values are examined for changes on every call to `$digest`.
	       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.
	       *
	       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually
	       * watched using {@link ng.$rootScope.Scope#$watch $watch()}
	       *
	       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any
	       *    expression in `watchExpressions` changes
	       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching
	       *    those of `watchExpression`
	       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching
	       *    those of `watchExpression`
	       *    The `scope` refers to the current scope.
	       * @returns {function()} Returns a de-registration function for all listeners.
	       */$watchGroup:function $watchGroup(watchExpressions,listener){var oldValues=new Array(watchExpressions.length);var newValues=new Array(watchExpressions.length);var deregisterFns=[];var self=this;var changeReactionScheduled=false;var firstRun=true;if(!watchExpressions.length){// No expressions means we call the listener ASAP
	var shouldCall=true;self.$evalAsync(function(){if(shouldCall)listener(newValues,newValues,self);});return function deregisterWatchGroup(){shouldCall=false;};}if(watchExpressions.length===1){// Special case size of one
	return this.$watch(watchExpressions[0],function watchGroupAction(value,oldValue,scope){newValues[0]=value;oldValues[0]=oldValue;listener(newValues,value===oldValue?newValues:oldValues,scope);});}forEach(watchExpressions,function(expr,i){var unwatchFn=self.$watch(expr,function watchGroupSubAction(value){newValues[i]=value;if(!changeReactionScheduled){changeReactionScheduled=true;self.$evalAsync(watchGroupAction);}});deregisterFns.push(unwatchFn);});function watchGroupAction(){changeReactionScheduled=false;try{if(firstRun){firstRun=false;listener(newValues,newValues,self);}else{listener(newValues,oldValues,self);}}finally{for(var i=0;i<watchExpressions.length;i++){oldValues[i]=newValues[i];}}}return function deregisterWatchGroup(){while(deregisterFns.length){deregisterFns.shift()();}};},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$watchCollection
	       * @kind function
	       *
	       * @description
	       * Shallow watches the properties of an object and fires whenever any of the properties change
	       * (for arrays, this implies watching the array items; for object maps, this implies watching
	       * the properties). If a change is detected, the `listener` callback is fired.
	       *
	       * - The `obj` collection is observed via standard $watch operation and is examined on every
	       *   call to $digest() to see if any items have been added, removed, or moved.
	       * - The `listener` is called whenever anything within the `obj` has changed. Examples include
	       *   adding, removing, and moving items belonging to an object or array.
	       *
	       *
	       * @example
	       * ```js
	          $scope.names = ['igor', 'matias', 'misko', 'james'];
	          $scope.dataCount = 4;

	          $scope.$watchCollection('names', function(newNames, oldNames) {
	            $scope.dataCount = newNames.length;
	          });

	          expect($scope.dataCount).toEqual(4);
	          $scope.$digest();

	          //still at 4 ... no changes
	          expect($scope.dataCount).toEqual(4);

	          $scope.names.pop();
	          $scope.$digest();

	          //now there's been a change
	          expect($scope.dataCount).toEqual(3);
	       * ```
	       *
	       *
	       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The
	       *    expression value should evaluate to an object or an array which is observed on each
	       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the
	       *    collection will trigger a call to the `listener`.
	       *
	       * @param {function(newCollection, oldCollection, scope)} listener a callback function called
	       *    when a change is detected.
	       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression
	       *    - The `oldCollection` object is a copy of the former collection data.
	       *      Due to performance considerations, the`oldCollection` value is computed only if the
	       *      `listener` function declares two or more arguments.
	       *    - The `scope` argument refers to the current scope.
	       *
	       * @returns {function()} Returns a de-registration function for this listener. When the
	       *    de-registration function is executed, the internal watch operation is terminated.
	       */$watchCollection:function $watchCollection(obj,listener){// Mark the interceptor as
	// ... $$pure when literal since the instance will change when any input changes
	$watchCollectionInterceptor.$$pure=$parse(obj).literal;// ... $stateful when non-literal since we must read the state of the collection
	$watchCollectionInterceptor.$stateful=!$watchCollectionInterceptor.$$pure;var self=this;// the current value, updated on each dirty-check run
	var newValue;// a shallow copy of the newValue from the last dirty-check run,
	// updated to match newValue during dirty-check run
	var oldValue;// a shallow copy of the newValue from when the last change happened
	var veryOldValue;// only track veryOldValue if the listener is asking for it
	var trackVeryOldValue=listener.length>1;var changeDetected=0;var changeDetector=$parse(obj,$watchCollectionInterceptor);var internalArray=[];var internalObject={};var initRun=true;var oldLength=0;function $watchCollectionInterceptor(_value){newValue=_value;var newLength,key,bothNaN,newItem,oldItem;// If the new value is undefined, then return undefined as the watch may be a one-time watch
	if(isUndefined(newValue))return;if(!isObject(newValue)){// if primitive
	if(oldValue!==newValue){oldValue=newValue;changeDetected++;}}else if(isArrayLike(newValue)){if(oldValue!==internalArray){// we are transitioning from something which was not an array into array.
	oldValue=internalArray;oldLength=oldValue.length=0;changeDetected++;}newLength=newValue.length;if(oldLength!==newLength){// if lengths do not match we need to trigger change notification
	changeDetected++;oldValue.length=oldLength=newLength;}// copy the items to oldValue and look for changes.
	for(var i=0;i<newLength;i++){oldItem=oldValue[i];newItem=newValue[i];// eslint-disable-next-line no-self-compare
	bothNaN=oldItem!==oldItem&&newItem!==newItem;if(!bothNaN&&oldItem!==newItem){changeDetected++;oldValue[i]=newItem;}}}else{if(oldValue!==internalObject){// we are transitioning from something which was not an object into object.
	oldValue=internalObject={};oldLength=0;changeDetected++;}// copy the items to oldValue and look for changes.
	newLength=0;for(key in newValue){if(hasOwnProperty.call(newValue,key)){newLength++;newItem=newValue[key];oldItem=oldValue[key];if(key in oldValue){// eslint-disable-next-line no-self-compare
	bothNaN=oldItem!==oldItem&&newItem!==newItem;if(!bothNaN&&oldItem!==newItem){changeDetected++;oldValue[key]=newItem;}}else{oldLength++;oldValue[key]=newItem;changeDetected++;}}}if(oldLength>newLength){// we used to have more keys, need to find them and destroy them.
	changeDetected++;for(key in oldValue){if(!hasOwnProperty.call(newValue,key)){oldLength--;delete oldValue[key];}}}}return changeDetected;}function $watchCollectionAction(){if(initRun){initRun=false;listener(newValue,newValue,self);}else{listener(newValue,veryOldValue,self);}// make a copy for the next time a collection is changed
	if(trackVeryOldValue){if(!isObject(newValue)){//primitive
	veryOldValue=newValue;}else if(isArrayLike(newValue)){veryOldValue=new Array(newValue.length);for(var i=0;i<newValue.length;i++){veryOldValue[i]=newValue[i];}}else{// if object
	veryOldValue={};for(var key in newValue){if(hasOwnProperty.call(newValue,key)){veryOldValue[key]=newValue[key];}}}}}return this.$watch(changeDetector,$watchCollectionAction);},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$digest
	       * @kind function
	       *
	       * @description
	       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and
	       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change
	       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}
	       * until no more listeners are firing. This means that it is possible to get into an infinite
	       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of
	       * iterations exceeds 10.
	       *
	       * Usually, you don't call `$digest()` directly in
	       * {@link ng.directive:ngController controllers} or in
	       * {@link ng.$compileProvider#directive directives}.
	       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within
	       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.
	       *
	       * If you want to be notified whenever `$digest()` is called,
	       * you can register a `watchExpression` function with
	       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.
	       *
	       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.
	       *
	       * @example
	       * ```js
	           var scope = ...;
	           scope.name = 'misko';
	           scope.counter = 0;

	           expect(scope.counter).toEqual(0);
	           scope.$watch('name', function(newValue, oldValue) {
	             scope.counter = scope.counter + 1;
	           });
	           expect(scope.counter).toEqual(0);

	           scope.$digest();
	           // the listener is always called during the first $digest loop after it was registered
	           expect(scope.counter).toEqual(1);

	           scope.$digest();
	           // but now it will not be called unless the value changes
	           expect(scope.counter).toEqual(1);

	           scope.name = 'adam';
	           scope.$digest();
	           expect(scope.counter).toEqual(2);
	       * ```
	       *
	       */$digest:function $digest(){var watch,value,last,fn,get,watchers,dirty,ttl=TTL,next,current,target=asyncQueue.length?$rootScope:this,watchLog=[],logIdx,asyncTask;beginPhase('$digest');// Check for changes to browser url that happened in sync before the call to $digest
	$browser.$$checkUrlChange();if(this===$rootScope&&applyAsyncId!==null){// If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then
	// cancel the scheduled $apply and flush the queue of expressions to be evaluated.
	$browser.defer.cancel(applyAsyncId);flushApplyAsync();}lastDirtyWatch=null;do{// "while dirty" loop
	dirty=false;current=target;// It's safe for asyncQueuePosition to be a local variable here because this loop can't
	// be reentered recursively. Calling $digest from a function passed to $evalAsync would
	// lead to a '$digest already in progress' error.
	for(var asyncQueuePosition=0;asyncQueuePosition<asyncQueue.length;asyncQueuePosition++){try{asyncTask=asyncQueue[asyncQueuePosition];fn=asyncTask.fn;fn(asyncTask.scope,asyncTask.locals);}catch(e){$exceptionHandler(e);}lastDirtyWatch=null;}asyncQueue.length=0;traverseScopesLoop:do{// "traverse the scopes" loop
	if(watchers=!current.$$suspended&&current.$$watchers){// process our watches
	watchers.$$digestWatchIndex=watchers.length;while(watchers.$$digestWatchIndex--){try{watch=watchers[watchers.$$digestWatchIndex];// Most common watches are on primitives, in which case we can short
	// circuit it with === operator, only when === fails do we use .equals
	if(watch){get=watch.get;if((value=get(current))!==(last=watch.last)&&!(watch.eq?equals(value,last):isNumberNaN(value)&&isNumberNaN(last))){dirty=true;lastDirtyWatch=watch;watch.last=watch.eq?copy(value,null):value;fn=watch.fn;fn(value,last===initWatchVal?value:last,current);if(ttl<5){logIdx=4-ttl;if(!watchLog[logIdx])watchLog[logIdx]=[];watchLog[logIdx].push({msg:isFunction(watch.exp)?'fn: '+(watch.exp.name||watch.exp.toString()):watch.exp,newVal:value,oldVal:last});}}else if(watch===lastDirtyWatch){// If the most recently dirty watcher is now clean, short circuit since the remaining watchers
	// have already been tested.
	dirty=false;break traverseScopesLoop;}}}catch(e){$exceptionHandler(e);}}}// Insanity Warning: scope depth-first traversal
	// yes, this code is a bit crazy, but it works and we have tests to prove it!
	// this piece should be kept in sync with the traversal in $broadcast
	// (though it differs due to having the extra check for $$suspended and does not
	// check $$listenerCount)
	if(!(next=!current.$$suspended&&current.$$watchersCount&&current.$$childHead||current!==target&&current.$$nextSibling)){while(current!==target&&!(next=current.$$nextSibling)){current=current.$parent;}}}while(current=next);// `break traverseScopesLoop;` takes us to here
	if((dirty||asyncQueue.length)&&!ttl--){clearPhase();throw $rootScopeMinErr('infdig','{0} $digest() iterations reached. Aborting!\n'+'Watchers fired in the last 5 iterations: {1}',TTL,watchLog);}}while(dirty||asyncQueue.length);clearPhase();// postDigestQueuePosition isn't local here because this loop can be reentered recursively.
	while(postDigestQueuePosition<postDigestQueue.length){try{postDigestQueue[postDigestQueuePosition++]();}catch(e){$exceptionHandler(e);}}postDigestQueue.length=postDigestQueuePosition=0;// Check for changes to browser url that happened during the $digest
	// (for which no event is fired; e.g. via `history.pushState()`)
	$browser.$$checkUrlChange();},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$suspend
	       * @kind function
	       *
	       * @description
	       * Suspend watchers of this scope subtree so that they will not be invoked during digest.
	       *
	       * This can be used to optimize your application when you know that running those watchers
	       * is redundant.
	       *
	       * **Warning**
	       *
	       * Suspending scopes from the digest cycle can have unwanted and difficult to debug results.
	       * Only use this approach if you are confident that you know what you are doing and have
	       * ample tests to ensure that bindings get updated as you expect.
	       *
	       * Some of the things to consider are:
	       *
	       * * Any external event on a directive/component will not trigger a digest while the hosting
	       *   scope is suspended - even if the event handler calls `$apply()` or `$rootScope.$digest()`.
	       * * Transcluded content exists on a scope that inherits from outside a directive but exists
	       *   as a child of the directive's containing scope. If the containing scope is suspended the
	       *   transcluded scope will also be suspended, even if the scope from which the transcluded
	       *   scope inherits is not suspended.
	       * * Multiple directives trying to manage the suspended status of a scope can confuse each other:
	       *    * A call to `$suspend()` on an already suspended scope is a no-op.
	       *    * A call to `$resume()` on a non-suspended scope is a no-op.
	       *    * If two directives suspend a scope, then one of them resumes the scope, the scope will no
	       *      longer be suspended. This could result in the other directive believing a scope to be
	       *      suspended when it is not.
	       * * If a parent scope is suspended then all its descendants will be also excluded from future
	       *   digests whether or not they have been suspended themselves. Note that this also applies to
	       *   isolate child scopes.
	       * * Calling `$digest()` directly on a descendant of a suspended scope will still run the watchers
	       *   for that scope and its descendants. When digesting we only check whether the current scope is
	       *   locally suspended, rather than checking whether it has a suspended ancestor.
	       * * Calling `$resume()` on a scope that has a suspended ancestor will not cause the scope to be
	       *   included in future digests until all its ancestors have been resumed.
	       * * Resolved promises, e.g. from explicit `$q` deferreds and `$http` calls, trigger `$apply()`
	       *   against the `$rootScope` and so will still trigger a global digest even if the promise was
	       *   initiated by a component that lives on a suspended scope.
	       */$suspend:function $suspend(){this.$$suspended=true;},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$isSuspended
	       * @kind function
	       *
	       * @description
	       * Call this method to determine if this scope has been explicitly suspended. It will not
	       * tell you whether an ancestor has been suspended.
	       * To determine if this scope will be excluded from a digest triggered at the $rootScope,
	       * for example, you must check all its ancestors:
	       *
	       * ```
	       * function isExcludedFromDigest(scope) {
	       *   while(scope) {
	       *     if (scope.$isSuspended()) return true;
	       *     scope = scope.$parent;
	       *   }
	       *   return false;
	       * ```
	       *
	       * Be aware that a scope may not be included in digests if it has a suspended ancestor,
	       * even if `$isSuspended()` returns false.
	       *
	       * @returns true if the current scope has been suspended.
	       */$isSuspended:function $isSuspended(){return this.$$suspended;},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$resume
	       * @kind function
	       *
	       * @description
	       * Resume watchers of this scope subtree in case it was suspended.
	       *
	       * See {@link $rootScope.Scope#$suspend} for information about the dangers of using this approach.
	       */$resume:function $resume(){this.$$suspended=false;},/**
	       * @ngdoc event
	       * @name $rootScope.Scope#$destroy
	       * @eventType broadcast on scope being destroyed
	       *
	       * @description
	       * Broadcasted when a scope and its children are being destroyed.
	       *
	       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
	       * clean up DOM bindings before an element is removed from the DOM.
	       *//**
	       * @ngdoc method
	       * @name $rootScope.Scope#$destroy
	       * @kind function
	       *
	       * @description
	       * Removes the current scope (and all of its children) from the parent scope. Removal implies
	       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer
	       * propagate to the current scope and its children. Removal also implies that the current
	       * scope is eligible for garbage collection.
	       *
	       * The `$destroy()` is usually used by directives such as
	       * {@link ng.directive:ngRepeat ngRepeat} for managing the
	       * unrolling of the loop.
	       *
	       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.
	       * Application code can register a `$destroy` event handler that will give it a chance to
	       * perform any necessary cleanup.
	       *
	       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
	       * clean up DOM bindings before an element is removed from the DOM.
	       */$destroy:function $destroy(){// We can't destroy a scope that has been already destroyed.
	if(this.$$destroyed)return;var parent=this.$parent;this.$broadcast('$destroy');this.$$destroyed=true;if(this===$rootScope){//Remove handlers attached to window when $rootScope is removed
	$browser.$$applicationDestroyed();}incrementWatchersCount(this,-this.$$watchersCount);for(var eventName in this.$$listenerCount){decrementListenerCount(this,this.$$listenerCount[eventName],eventName);}// sever all the references to parent scopes (after this cleanup, the current scope should
	// not be retained by any of our references and should be eligible for garbage collection)
	if(parent&&parent.$$childHead===this)parent.$$childHead=this.$$nextSibling;if(parent&&parent.$$childTail===this)parent.$$childTail=this.$$prevSibling;if(this.$$prevSibling)this.$$prevSibling.$$nextSibling=this.$$nextSibling;if(this.$$nextSibling)this.$$nextSibling.$$prevSibling=this.$$prevSibling;// Disable listeners, watchers and apply/digest methods
	this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=noop;this.$on=this.$watch=this.$watchGroup=function(){return noop;};this.$$listeners={};// Disconnect the next sibling to prevent `cleanUpScope` destroying those too
	this.$$nextSibling=null;cleanUpScope(this);},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$eval
	       * @kind function
	       *
	       * @description
	       * Executes the `expression` on the current scope and returns the result. Any exceptions in
	       * the expression are propagated (uncaught). This is useful when evaluating AngularJS
	       * expressions.
	       *
	       * @example
	       * ```js
	           var scope = ng.$rootScope.Scope();
	           scope.a = 1;
	           scope.b = 2;

	           expect(scope.$eval('a+b')).toEqual(3);
	           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);
	       * ```
	       *
	       * @param {(string|function())=} expression An AngularJS expression to be executed.
	       *
	       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.
	       *    - `function(scope)`: execute the function with the current `scope` parameter.
	       *
	       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
	       * @returns {*} The result of evaluating the expression.
	       */$eval:function $eval(expr,locals){return $parse(expr)(this,locals);},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$evalAsync
	       * @kind function
	       *
	       * @description
	       * Executes the expression on the current scope at a later point in time.
	       *
	       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only
	       * that:
	       *
	       *   - it will execute after the function that scheduled the evaluation (preferably before DOM
	       *     rendering).
	       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after
	       *     `expression` execution.
	       *
	       * Any exceptions from the execution of the expression are forwarded to the
	       * {@link ng.$exceptionHandler $exceptionHandler} service.
	       *
	       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle
	       * will be scheduled. However, it is encouraged to always call code that changes the model
	       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.
	       *
	       * @param {(string|function())=} expression An AngularJS expression to be executed.
	       *
	       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
	       *    - `function(scope)`: execute the function with the current `scope` parameter.
	       *
	       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
	       */$evalAsync:function $evalAsync(expr,locals){// if we are outside of an $digest loop and this is the first time we are scheduling async
	// task also schedule async auto-flush
	if(!$rootScope.$$phase&&!asyncQueue.length){$browser.defer(function(){if(asyncQueue.length){$rootScope.$digest();}},null,'$evalAsync');}asyncQueue.push({scope:this,fn:$parse(expr),locals:locals});},$$postDigest:function $$postDigest(fn){postDigestQueue.push(fn);},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$apply
	       * @kind function
	       *
	       * @description
	       * `$apply()` is used to execute an expression in AngularJS from outside of the AngularJS
	       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).
	       * Because we are calling into the AngularJS framework we need to perform proper scope life
	       * cycle of {@link ng.$exceptionHandler exception handling},
	       * {@link ng.$rootScope.Scope#$digest executing watches}.
	       *
	       * **Life cycle: Pseudo-Code of `$apply()`**
	       *
	       * ```js
	           function $apply(expr) {
	             try {
	               return $eval(expr);
	             } catch (e) {
	               $exceptionHandler(e);
	             } finally {
	               $root.$digest();
	             }
	           }
	       * ```
	       *
	       *
	       * Scope's `$apply()` method transitions through the following stages:
	       *
	       * 1. The {@link guide/expression expression} is executed using the
	       *    {@link ng.$rootScope.Scope#$eval $eval()} method.
	       * 2. Any exceptions from the execution of the expression are forwarded to the
	       *    {@link ng.$exceptionHandler $exceptionHandler} service.
	       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the
	       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.
	       *
	       *
	       * @param {(string|function())=} exp An AngularJS expression to be executed.
	       *
	       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
	       *    - `function(scope)`: execute the function with current `scope` parameter.
	       *
	       * @returns {*} The result of evaluating the expression.
	       */$apply:function $apply(expr){try{beginPhase('$apply');try{return this.$eval(expr);}finally{clearPhase();}}catch(e){$exceptionHandler(e);}finally{try{$rootScope.$digest();}catch(e){$exceptionHandler(e);// eslint-disable-next-line no-unsafe-finally
	throw e;}}},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$applyAsync
	       * @kind function
	       *
	       * @description
	       * Schedule the invocation of $apply to occur at a later time. The actual time difference
	       * varies across browsers, but is typically around ~10 milliseconds.
	       *
	       * This can be used to queue up multiple expressions which need to be evaluated in the same
	       * digest.
	       *
	       * @param {(string|function())=} exp An AngularJS expression to be executed.
	       *
	       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
	       *    - `function(scope)`: execute the function with current `scope` parameter.
	       */$applyAsync:function $applyAsync(expr){var scope=this;if(expr){applyAsyncQueue.push($applyAsyncExpression);}expr=$parse(expr);scheduleApplyAsync();function $applyAsyncExpression(){scope.$eval(expr);}},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$on
	       * @kind function
	       *
	       * @description
	       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for
	       * discussion of event life cycle.
	       *
	       * The event listener function format is: `function(event, args...)`. The `event` object
	       * passed into the listener has the following attributes:
	       *
	       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or
	       *     `$broadcast`-ed.
	       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the
	       *     event propagates through the scope hierarchy, this property is set to null.
	       *   - `name` - `{string}`: name of the event.
	       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel
	       *     further event propagation (available only for events that were `$emit`-ed).
	       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag
	       *     to true.
	       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.
	       *
	       * @param {string} name Event name to listen on.
	       * @param {function(event, ...args)} listener Function to call when the event is emitted.
	       * @returns {function()} Returns a deregistration function for this listener.
	       */$on:function $on(name,listener){var namedListeners=this.$$listeners[name];if(!namedListeners){this.$$listeners[name]=namedListeners=[];}namedListeners.push(listener);var current=this;do{if(!current.$$listenerCount[name]){current.$$listenerCount[name]=0;}current.$$listenerCount[name]++;}while(current=current.$parent);var self=this;return function(){var indexOfListener=namedListeners.indexOf(listener);if(indexOfListener!==-1){// Use delete in the hope of the browser deallocating the memory for the array entry,
	// while not shifting the array indexes of other listeners.
	// See issue https://github.com/angular/angular.js/issues/16135
	delete namedListeners[indexOfListener];decrementListenerCount(self,1,name);}};},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$emit
	       * @kind function
	       *
	       * @description
	       * Dispatches an event `name` upwards through the scope hierarchy notifying the
	       * registered {@link ng.$rootScope.Scope#$on} listeners.
	       *
	       * The event life cycle starts at the scope on which `$emit` was called. All
	       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
	       * notified. Afterwards, the event traverses upwards toward the root scope and calls all
	       * registered listeners along the way. The event will stop propagating if one of the listeners
	       * cancels it.
	       *
	       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
	       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
	       *
	       * @param {string} name Event name to emit.
	       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
	       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).
	       */$emit:function $emit(name,args){var empty=[],namedListeners,scope=this,_stopPropagation=false,event={name:name,targetScope:scope,stopPropagation:function stopPropagation(){_stopPropagation=true;},preventDefault:function preventDefault(){event.defaultPrevented=true;},defaultPrevented:false},listenerArgs=concat([event],arguments,1),i,length;do{namedListeners=scope.$$listeners[name]||empty;event.currentScope=scope;for(i=0,length=namedListeners.length;i<length;i++){// if listeners were deregistered, defragment the array
	if(!namedListeners[i]){namedListeners.splice(i,1);i--;length--;continue;}try{//allow all listeners attached to the current scope to run
	namedListeners[i].apply(null,listenerArgs);}catch(e){$exceptionHandler(e);}}//if any listener on the current scope stops propagation, prevent bubbling
	if(_stopPropagation){break;}//traverse upwards
	scope=scope.$parent;}while(scope);event.currentScope=null;return event;},/**
	       * @ngdoc method
	       * @name $rootScope.Scope#$broadcast
	       * @kind function
	       *
	       * @description
	       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the
	       * registered {@link ng.$rootScope.Scope#$on} listeners.
	       *
	       * The event life cycle starts at the scope on which `$broadcast` was called. All
	       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
	       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current
	       * scope and calls all registered listeners along the way. The event cannot be canceled.
	       *
	       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
	       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
	       *
	       * @param {string} name Event name to broadcast.
	       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
	       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}
	       */$broadcast:function $broadcast(name,args){var target=this,current=target,next=target,event={name:name,targetScope:target,preventDefault:function preventDefault(){event.defaultPrevented=true;},defaultPrevented:false};if(!target.$$listenerCount[name])return event;var listenerArgs=concat([event],arguments,1),listeners,i,length;//down while you can, then up and next sibling or up and next sibling until back at root
	while(current=next){event.currentScope=current;listeners=current.$$listeners[name]||[];for(i=0,length=listeners.length;i<length;i++){// if listeners were deregistered, defragment the array
	if(!listeners[i]){listeners.splice(i,1);i--;length--;continue;}try{listeners[i].apply(null,listenerArgs);}catch(e){$exceptionHandler(e);}}// Insanity Warning: scope depth-first traversal
	// yes, this code is a bit crazy, but it works and we have tests to prove it!
	// this piece should be kept in sync with the traversal in $digest
	// (though it differs due to having the extra check for $$listenerCount and
	// does not check $$suspended)
	if(!(next=current.$$listenerCount[name]&&current.$$childHead||current!==target&&current.$$nextSibling)){while(current!==target&&!(next=current.$$nextSibling)){current=current.$parent;}}}event.currentScope=null;return event;}};var $rootScope=new Scope();//The internal queues. Expose them on the $rootScope for debugging/testing purposes.
	var asyncQueue=$rootScope.$$asyncQueue=[];var postDigestQueue=$rootScope.$$postDigestQueue=[];var applyAsyncQueue=$rootScope.$$applyAsyncQueue=[];var postDigestQueuePosition=0;return $rootScope;function beginPhase(phase){if($rootScope.$$phase){throw $rootScopeMinErr('inprog','{0} already in progress',$rootScope.$$phase);}$rootScope.$$phase=phase;}function clearPhase(){$rootScope.$$phase=null;}function incrementWatchersCount(current,count){do{current.$$watchersCount+=count;}while(current=current.$parent);}function decrementListenerCount(current,count,name){do{current.$$listenerCount[name]-=count;if(current.$$listenerCount[name]===0){delete current.$$listenerCount[name];}}while(current=current.$parent);}/**
	     * function used as an initial value for watchers.
	     * because it's unique we can easily tell it apart from other values
	     */function initWatchVal(){}function flushApplyAsync(){while(applyAsyncQueue.length){try{applyAsyncQueue.shift()();}catch(e){$exceptionHandler(e);}}applyAsyncId=null;}function scheduleApplyAsync(){if(applyAsyncId===null){applyAsyncId=$browser.defer(function(){$rootScope.$apply(flushApplyAsync);},null,'$applyAsync');}}}];}/**
	 * @ngdoc service
	 * @name $rootElement
	 *
	 * @description
	 * The root element of AngularJS application. This is either the element where {@link
	 * ng.directive:ngApp ngApp} was declared or the element passed into
	 * {@link angular.bootstrap}. The element represents the root element of application. It is also the
	 * location where the application's {@link auto.$injector $injector} service gets
	 * published, and can be retrieved using `$rootElement.injector()`.
	 */// the implementation is in angular.bootstrap
	/**
	 * @this
	 * @description
	 * Private service to sanitize uris for links and images. Used by $compile and $sanitize.
	 */function $$SanitizeUriProvider(){var aHrefSanitizationTrustedUrlList=/^\s*(https?|s?ftp|mailto|tel|file):/,imgSrcSanitizationTrustedUrlList=/^\s*((https?|ftp|file|blob):|data:image\/)/;/**
	   * @description
	   * Retrieves or overrides the default regular expression that is used for determining trusted safe
	   * urls during a[href] sanitization.
	   *
	   * The sanitization is a security measure aimed at prevent XSS attacks via HTML anchor links.
	   *
	   * Any url due to be assigned to an `a[href]` attribute via interpolation is marked as requiring
	   * the $sce.URL security context. When interpolation occurs a call is made to `$sce.trustAsUrl(url)`
	   * which in turn may call `$$sanitizeUri(url, isMedia)` to sanitize the potentially malicious URL.
	   *
	   * If the URL matches the `aHrefSanitizationTrustedUrlList` regular expression, it is returned unchanged.
	   *
	   * If there is no match the URL is returned prefixed with `'unsafe:'` to ensure that when it is written
	   * to the DOM it is inactive and potentially malicious code will not be executed.
	   *
	   * @param {RegExp=} regexp New regexp to trust urls with.
	   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
	   *    chaining otherwise.
	   */this.aHrefSanitizationTrustedUrlList=function(regexp){if(isDefined(regexp)){aHrefSanitizationTrustedUrlList=regexp;return this;}return aHrefSanitizationTrustedUrlList;};/**
	   * @description
	   * Retrieves or overrides the default regular expression that is used for determining trusted safe
	   * urls during img[src] sanitization.
	   *
	   * The sanitization is a security measure aimed at prevent XSS attacks via HTML image src links.
	   *
	   * Any URL due to be assigned to an `img[src]` attribute via interpolation is marked as requiring
	   * the $sce.MEDIA_URL security context. When interpolation occurs a call is made to
	   * `$sce.trustAsMediaUrl(url)` which in turn may call `$$sanitizeUri(url, isMedia)` to sanitize
	   * the potentially malicious URL.
	   *
	   * If the URL matches the `imgSrcSanitizationTrustedUrlList` regular expression, it is returned
	   * unchanged.
	   *
	   * If there is no match the URL is returned prefixed with `'unsafe:'` to ensure that when it is written
	   * to the DOM it is inactive and potentially malicious code will not be executed.
	   *
	   * @param {RegExp=} regexp New regexp to trust urls with.
	   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
	   *    chaining otherwise.
	   */this.imgSrcSanitizationTrustedUrlList=function(regexp){if(isDefined(regexp)){imgSrcSanitizationTrustedUrlList=regexp;return this;}return imgSrcSanitizationTrustedUrlList;};this.$get=function(){return function sanitizeUri(uri,isMediaUrl){// if (!uri) return uri;
	var regex=isMediaUrl?imgSrcSanitizationTrustedUrlList:aHrefSanitizationTrustedUrlList;var normalizedVal=urlResolve(uri&&uri.trim()).href;if(normalizedVal!==''&&!normalizedVal.match(regex)){return'unsafe:'+normalizedVal;}return uri;};};}/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 *     Any commits to this file should be reviewed with security in mind.  *
	 *   Changes to this file can potentially create security vulnerabilities. *
	 *          An approval from 2 Core members with history of modifying      *
	 *                         this file is required.                          *
	 *                                                                         *
	 *  Does the change somehow allow for arbitrary javascript to be executed? *
	 *    Or allows for someone to change the prototype of built-in objects?   *
	 *     Or gives undesired access to variables likes document or window?    *
	 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *//* exported $SceProvider, $SceDelegateProvider */var $sceMinErr=minErr('$sce');var SCE_CONTEXTS={// HTML is used when there's HTML rendered (e.g. ng-bind-html, iframe srcdoc binding).
	HTML:'html',// Style statements or stylesheets. Currently unused in AngularJS.
	CSS:'css',// An URL used in a context where it refers to the source of media, which are not expected to be run
	// as scripts, such as an image, audio, video, etc.
	MEDIA_URL:'mediaUrl',// An URL used in a context where it does not refer to a resource that loads code.
	// A value that can be trusted as a URL can also trusted as a MEDIA_URL.
	URL:'url',// RESOURCE_URL is a subtype of URL used where the referred-to resource could be interpreted as
	// code. (e.g. ng-include, script src binding, templateUrl)
	// A value that can be trusted as a RESOURCE_URL, can also trusted as a URL and a MEDIA_URL.
	RESOURCE_URL:'resourceUrl',// Script. Currently unused in AngularJS.
	JS:'js'};// Helper functions follow.
	var UNDERSCORE_LOWERCASE_REGEXP=/_([a-z])/g;function snakeToCamel(name){return name.replace(UNDERSCORE_LOWERCASE_REGEXP,fnCamelCaseReplace);}function adjustMatcher(matcher){if(matcher==='self'){return matcher;}else if(isString(matcher)){// Strings match exactly except for 2 wildcards - '*' and '**'.
	// '*' matches any character except those from the set ':/.?&'.
	// '**' matches any character (like .* in a RegExp).
	// More than 2 *'s raises an error as it's ill defined.
	if(matcher.indexOf('***')>-1){throw $sceMinErr('iwcard','Illegal sequence *** in string matcher.  String: {0}',matcher);}matcher=escapeForRegexp(matcher).replace(/\\\*\\\*/g,'.*').replace(/\\\*/g,'[^:/.?&;]*');return new RegExp('^'+matcher+'$');}else if(isRegExp(matcher)){// The only other type of matcher allowed is a Regexp.
	// Match entire URL / disallow partial matches.
	// Flags are reset (i.e. no global, ignoreCase or multiline)
	return new RegExp('^'+matcher.source+'$');}else{throw $sceMinErr('imatcher','Matchers may only be "self", string patterns or RegExp objects');}}function adjustMatchers(matchers){var adjustedMatchers=[];if(isDefined(matchers)){forEach(matchers,function(matcher){adjustedMatchers.push(adjustMatcher(matcher));});}return adjustedMatchers;}/**
	 * @ngdoc service
	 * @name $sceDelegate
	 * @kind function
	 *
	 * @description
	 *
	 * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict
	 * Contextual Escaping (SCE)} services to AngularJS.
	 *
	 * For an overview of this service and the functionnality it provides in AngularJS, see the main
	 * page for {@link ng.$sce SCE}. The current page is targeted for developers who need to alter how
	 * SCE works in their application, which shouldn't be needed in most cases.
	 *
	 * <div class="alert alert-danger">
	 * AngularJS strongly relies on contextual escaping for the security of bindings: disabling or
	 * modifying this might cause cross site scripting (XSS) vulnerabilities. For libraries owners,
	 * changes to this service will also influence users, so be extra careful and document your changes.
	 * </div>
	 *
	 * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of
	 * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is
	 * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to
	 * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things
	 * work because `$sce` delegates to `$sceDelegate` for these operations.
	 *
	 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.
	 *
	 * The default instance of `$sceDelegate` should work out of the box with little pain.  While you
	 * can override it completely to change the behavior of `$sce`, the common case would
	 * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting
	 * your own trusted and banned resource lists for trusting URLs used for loading AngularJS resources
	 * such as templates.  Refer {@link ng.$sceDelegateProvider#trustedResourceUrlList
	 * $sceDelegateProvider.trustedResourceUrlList} and {@link
	 * ng.$sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider.bannedResourceUrlList}
	 *//**
	 * @ngdoc provider
	 * @name $sceDelegateProvider
	 * @this
	 *
	 * @description
	 *
	 * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate
	 * $sceDelegate service}, used as a delegate for {@link ng.$sce Strict Contextual Escaping (SCE)}.
	 *
	 * The `$sceDelegateProvider` allows one to get/set the `trustedResourceUrlList` and
	 * `bannedResourceUrlList` used to ensure that the URLs used for sourcing AngularJS templates and
	 * other script-running URLs are safe (all places that use the `$sce.RESOURCE_URL` context). See
	 * {@link ng.$sceDelegateProvider#trustedResourceUrlList
	 * $sceDelegateProvider.trustedResourceUrlList} and
	 * {@link ng.$sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider.bannedResourceUrlList},
	 *
	 * For the general details about this service in AngularJS, read the main page for {@link ng.$sce
	 * Strict Contextual Escaping (SCE)}.
	 *
	 * **Example**:  Consider the following case. <a name="example"></a>
	 *
	 * - your app is hosted at url `http://myapp.example.com/`
	 * - but some of your templates are hosted on other domains you control such as
	 *   `http://srv01.assets.example.com/`, `http://srv02.assets.example.com/`, etc.
	 * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.
	 *
	 * Here is what a secure configuration for this scenario might look like:
	 *
	 * ```
	 *  angular.module('myApp', []).config(function($sceDelegateProvider) {
	 *    $sceDelegateProvider.trustedResourceUrlList([
	 *      // Allow same origin resource loads.
	 *      'self',
	 *      // Allow loading from our assets domain.  Notice the difference between * and **.
	 *      'http://srv*.assets.example.com/**'
	 *    ]);
	 *
	 *    // The banned resource URL list overrides the trusted resource URL list so the open redirect
	 *    // here is blocked.
	 *    $sceDelegateProvider.bannedResourceUrlList([
	 *      'http://myapp.example.com/clickThru**'
	 *    ]);
	 *  });
	 * ```
	 * Note that an empty trusted resource URL list will block every resource URL from being loaded, and will require
	 * you to manually mark each one as trusted with `$sce.trustAsResourceUrl`. However, templates
	 * requested by {@link ng.$templateRequest $templateRequest} that are present in
	 * {@link ng.$templateCache $templateCache} will not go through this check. If you have a mechanism
	 * to populate your templates in that cache at config time, then it is a good idea to remove 'self'
	 * from the trusted resource URL lsit. This helps to mitigate the security impact of certain types
	 * of issues, like for instance attacker-controlled `ng-includes`.
	 */function $SceDelegateProvider(){this.SCE_CONTEXTS=SCE_CONTEXTS;// Resource URLs can also be trusted by policy.
	var trustedResourceUrlList=['self'],bannedResourceUrlList=[];/**
	   * @ngdoc method
	   * @name $sceDelegateProvider#trustedResourceUrlList
	   * @kind function
	   *
	   * @param {Array=} trustedResourceUrlList When provided, replaces the trustedResourceUrlList with
	   *     the value provided.  This must be an array or null.  A snapshot of this array is used so
	   *     further changes to the array are ignored.
	   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
	   *     allowed in this array.
	   *
	   * @return {Array} The currently set trusted resource URL array.
	   *
	   * @description
	   * Sets/Gets the list trusted of resource URLs.
	   *
	   * The **default value** when no `trustedResourceUrlList` has been explicitly set is `['self']`
	   * allowing only same origin resource requests.
	   *
	   * <div class="alert alert-warning">
	   * **Note:** the default `trustedResourceUrlList` of 'self' is not recommended if your app shares
	   * its origin with other apps! It is a good idea to limit it to only your application's directory.
	   * </div>
	   */this.trustedResourceUrlList=function(value){if(arguments.length){trustedResourceUrlList=adjustMatchers(value);}return trustedResourceUrlList;};/**
	   * @ngdoc method
	   * @name $sceDelegateProvider#resourceUrlWhitelist
	   * @kind function
	   *
	   * @deprecated
	   * sinceVersion="1.8.1"
	   *
	   * This method is deprecated. Use {@link $sceDelegateProvider#trustedResourceUrlList
	   * trustedResourceUrlList} instead.
	   */Object.defineProperty(this,'resourceUrlWhitelist',{get:function get(){return this.trustedResourceUrlList;},set:function set(value){this.trustedResourceUrlList=value;}});/**
	   * @ngdoc method
	   * @name $sceDelegateProvider#bannedResourceUrlList
	   * @kind function
	   *
	   * @param {Array=} bannedResourceUrlList When provided, replaces the `bannedResourceUrlList` with
	   *     the value provided. This must be an array or null. A snapshot of this array is used so
	   *     further changes to the array are ignored.</p><p>
	   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
	   *     allowed in this array.</p><p>
	   *     The typical usage for the `bannedResourceUrlList` is to **block
	   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as
	   *     these would otherwise be trusted but actually return content from the redirected domain.
	   *     </p><p>
	   *     Finally, **the banned resource URL list overrides the trusted resource URL list** and has
	   *     the final say.
	   *
	   * @return {Array} The currently set `bannedResourceUrlList` array.
	   *
	   * @description
	   * Sets/Gets the `bannedResourceUrlList` of trusted resource URLs.
	   *
	   * The **default value** when no trusted resource URL list has been explicitly set is the empty
	   * array (i.e. there is no `bannedResourceUrlList`.)
	   */this.bannedResourceUrlList=function(value){if(arguments.length){bannedResourceUrlList=adjustMatchers(value);}return bannedResourceUrlList;};/**
	   * @ngdoc method
	   * @name $sceDelegateProvider#resourceUrlBlacklist
	   * @kind function
	   *
	   * @deprecated
	   * sinceVersion="1.8.1"
	   *
	   * This method is deprecated. Use {@link $sceDelegateProvider#bannedResourceUrlList
	   * bannedResourceUrlList} instead.
	   */Object.defineProperty(this,'resourceUrlBlacklist',{get:function get(){return this.bannedResourceUrlList;},set:function set(value){this.bannedResourceUrlList=value;}});this.$get=['$injector','$$sanitizeUri',function($injector,$$sanitizeUri){var htmlSanitizer=function htmlSanitizer(html){throw $sceMinErr('unsafe','Attempting to use an unsafe value in a safe context.');};if($injector.has('$sanitize')){htmlSanitizer=$injector.get('$sanitize');}function matchUrl(matcher,parsedUrl){if(matcher==='self'){return urlIsSameOrigin(parsedUrl)||urlIsSameOriginAsBaseUrl(parsedUrl);}else{// definitely a regex.  See adjustMatchers()
	return!!matcher.exec(parsedUrl.href);}}function isResourceUrlAllowedByPolicy(url){var parsedUrl=urlResolve(url.toString());var i,n,allowed=false;// Ensure that at least one item from the trusted resource URL list allows this url.
	for(i=0,n=trustedResourceUrlList.length;i<n;i++){if(matchUrl(trustedResourceUrlList[i],parsedUrl)){allowed=true;break;}}if(allowed){// Ensure that no item from the banned resource URL list has blocked this url.
	for(i=0,n=bannedResourceUrlList.length;i<n;i++){if(matchUrl(bannedResourceUrlList[i],parsedUrl)){allowed=false;break;}}}return allowed;}function generateHolderType(Base){var holderType=function TrustedValueHolderType(trustedValue){this.$$unwrapTrustedValue=function(){return trustedValue;};};if(Base){holderType.prototype=new Base();}holderType.prototype.valueOf=function sceValueOf(){return this.$$unwrapTrustedValue();};holderType.prototype.toString=function sceToString(){return this.$$unwrapTrustedValue().toString();};return holderType;}var trustedValueHolderBase=generateHolderType(),byType={};byType[SCE_CONTEXTS.HTML]=generateHolderType(trustedValueHolderBase);byType[SCE_CONTEXTS.CSS]=generateHolderType(trustedValueHolderBase);byType[SCE_CONTEXTS.MEDIA_URL]=generateHolderType(trustedValueHolderBase);byType[SCE_CONTEXTS.URL]=generateHolderType(byType[SCE_CONTEXTS.MEDIA_URL]);byType[SCE_CONTEXTS.JS]=generateHolderType(trustedValueHolderBase);byType[SCE_CONTEXTS.RESOURCE_URL]=generateHolderType(byType[SCE_CONTEXTS.URL]);/**
	     * @ngdoc method
	     * @name $sceDelegate#trustAs
	     *
	     * @description
	     * Returns a trusted representation of the parameter for the specified context. This trusted
	     * object will later on be used as-is, without any security check, by bindings or directives
	     * that require this security context.
	     * For instance, marking a string as trusted for the `$sce.HTML` context will entirely bypass
	     * the potential `$sanitize` call in corresponding `$sce.HTML` bindings or directives, such as
	     * `ng-bind-html`. Note that in most cases you won't need to call this function: if you have the
	     * sanitizer loaded, passing the value itself will render all the HTML that does not pose a
	     * security risk.
	     *
	     * See {@link ng.$sceDelegate#getTrusted getTrusted} for the function that will consume those
	     * trusted values, and {@link ng.$sce $sce} for general documentation about strict contextual
	     * escaping.
	     *
	     * @param {string} type The context in which this value is safe for use, e.g. `$sce.URL`,
	     *     `$sce.RESOURCE_URL`, `$sce.HTML`, `$sce.JS` or `$sce.CSS`.
	     *
	     * @param {*} value The value that should be considered trusted.
	     * @return {*} A trusted representation of value, that can be used in the given context.
	     */function trustAs(type,trustedValue){var Constructor=byType.hasOwnProperty(type)?byType[type]:null;if(!Constructor){throw $sceMinErr('icontext','Attempted to trust a value in invalid context. Context: {0}; Value: {1}',type,trustedValue);}if(trustedValue===null||isUndefined(trustedValue)||trustedValue===''){return trustedValue;}// All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting
	// mutable objects, we ensure here that the value passed in is actually a string.
	if(typeof trustedValue!=='string'){throw $sceMinErr('itype','Attempted to trust a non-string value in a content requiring a string: Context: {0}',type);}return new Constructor(trustedValue);}/**
	     * @ngdoc method
	     * @name $sceDelegate#valueOf
	     *
	     * @description
	     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs
	     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link
	     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.
	     *
	     * If the passed parameter is not a value that had been returned by {@link
	     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, it must be returned as-is.
	     *
	     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}
	     *     call or anything else.
	     * @return {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs
	     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns
	     *     `value` unchanged.
	     */function valueOf(maybeTrusted){if(maybeTrusted instanceof trustedValueHolderBase){return maybeTrusted.$$unwrapTrustedValue();}else{return maybeTrusted;}}/**
	     * @ngdoc method
	     * @name $sceDelegate#getTrusted
	     *
	     * @description
	     * Given an object and a security context in which to assign it, returns a value that's safe to
	     * use in this context, which was represented by the parameter. To do so, this function either
	     * unwraps the safe type it has been given (for instance, a {@link ng.$sceDelegate#trustAs
	     * `$sceDelegate.trustAs`} result), or it might try to sanitize the value given, depending on
	     * the context and sanitizer availablility.
	     *
	     * The contexts that can be sanitized are $sce.MEDIA_URL, $sce.URL and $sce.HTML. The first two are available
	     * by default, and the third one relies on the `$sanitize` service (which may be loaded through
	     * the `ngSanitize` module). Furthermore, for $sce.RESOURCE_URL context, a plain string may be
	     * accepted if the resource url policy defined by {@link ng.$sceDelegateProvider#trustedResourceUrlList
	     * `$sceDelegateProvider.trustedResourceUrlList`} and {@link ng.$sceDelegateProvider#bannedResourceUrlList
	     * `$sceDelegateProvider.bannedResourceUrlList`} accepts that resource.
	     *
	     * This function will throw if the safe type isn't appropriate for this context, or if the
	     * value given cannot be accepted in the context (which might be caused by sanitization not
	     * being available, or the value not being recognized as safe).
	     *
	     * <div class="alert alert-danger">
	     * Disabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting
	     * (XSS) vulnerability in your application.
	     * </div>
	     *
	     * @param {string} type The context in which this value is to be used (such as `$sce.HTML`).
	     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs
	     *     `$sceDelegate.trustAs`} call, or anything else (which will not be considered trusted.)
	     * @return {*} A version of the value that's safe to use in the given context, or throws an
	     *     exception if this is impossible.
	     */function getTrusted(type,maybeTrusted){if(maybeTrusted===null||isUndefined(maybeTrusted)||maybeTrusted===''){return maybeTrusted;}var constructor=byType.hasOwnProperty(type)?byType[type]:null;// If maybeTrusted is a trusted class instance or subclass instance, then unwrap and return
	// as-is.
	if(constructor&&maybeTrusted instanceof constructor){return maybeTrusted.$$unwrapTrustedValue();}// If maybeTrusted is a trusted class instance but not of the correct trusted type
	// then unwrap it and allow it to pass through to the rest of the checks
	if(isFunction(maybeTrusted.$$unwrapTrustedValue)){maybeTrusted=maybeTrusted.$$unwrapTrustedValue();}// If we get here, then we will either sanitize the value or throw an exception.
	if(type===SCE_CONTEXTS.MEDIA_URL||type===SCE_CONTEXTS.URL){// we attempt to sanitize non-resource URLs
	return $$sanitizeUri(maybeTrusted.toString(),type===SCE_CONTEXTS.MEDIA_URL);}else if(type===SCE_CONTEXTS.RESOURCE_URL){if(isResourceUrlAllowedByPolicy(maybeTrusted)){return maybeTrusted;}else{throw $sceMinErr('insecurl','Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',maybeTrusted.toString());}}else if(type===SCE_CONTEXTS.HTML){// htmlSanitizer throws its own error when no sanitizer is available.
	return htmlSanitizer(maybeTrusted);}// Default error when the $sce service has no way to make the input safe.
	throw $sceMinErr('unsafe','Attempting to use an unsafe value in a safe context.');}return{trustAs:trustAs,getTrusted:getTrusted,valueOf:valueOf};}];}/**
	 * @ngdoc provider
	 * @name $sceProvider
	 * @this
	 *
	 * @description
	 *
	 * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.
	 * -   enable/disable Strict Contextual Escaping (SCE) in a module
	 * -   override the default implementation with a custom delegate
	 *
	 * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.
	 *//**
	 * @ngdoc service
	 * @name $sce
	 * @kind function
	 *
	 * @description
	 *
	 * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.
	 *
	 * ## Strict Contextual Escaping
	 *
	 * Strict Contextual Escaping (SCE) is a mode in which AngularJS constrains bindings to only render
	 * trusted values. Its goal is to assist in writing code in a way that (a) is secure by default, and
	 * (b) makes auditing for security vulnerabilities such as XSS, clickjacking, etc. a lot easier.
	 *
	 * ### Overview
	 *
	 * To systematically block XSS security bugs, AngularJS treats all values as untrusted by default in
	 * HTML or sensitive URL bindings. When binding untrusted values, AngularJS will automatically
	 * run security checks on them (sanitizations, trusted URL resource, depending on context), or throw
	 * when it cannot guarantee the security of the result. That behavior depends strongly on contexts:
	 * HTML can be sanitized, but template URLs cannot, for instance.
	 *
	 * To illustrate this, consider the `ng-bind-html` directive. It renders its value directly as HTML:
	 * we call that the *context*. When given an untrusted input, AngularJS will attempt to sanitize it
	 * before rendering if a sanitizer is available, and throw otherwise. To bypass sanitization and
	 * render the input as-is, you will need to mark it as trusted for that context before attempting
	 * to bind it.
	 *
	 * As of version 1.2, AngularJS ships with SCE enabled by default.
	 *
	 * ### In practice
	 *
	 * Here's an example of a binding in a privileged context:
	 *
	 * ```
	 * <input ng-model="userHtml" aria-label="User input">
	 * <div ng-bind-html="userHtml"></div>
	 * ```
	 *
	 * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE
	 * disabled, this application allows the user to render arbitrary HTML into the DIV, which would
	 * be an XSS security bug. In a more realistic example, one may be rendering user comments, blog
	 * articles, etc. via bindings. (HTML is just one example of a context where rendering user
	 * controlled input creates security vulnerabilities.)
	 *
	 * For the case of HTML, you might use a library, either on the client side, or on the server side,
	 * to sanitize unsafe HTML before binding to the value and rendering it in the document.
	 *
	 * How would you ensure that every place that used these types of bindings was bound to a value that
	 * was sanitized by your library (or returned as safe for rendering by your server?)  How can you
	 * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some
	 * properties/fields and forgot to update the binding to the sanitized value?
	 *
	 * To be secure by default, AngularJS makes sure bindings go through that sanitization, or
	 * any similar validation process, unless there's a good reason to trust the given value in this
	 * context.  That trust is formalized with a function call. This means that as a developer, you
	 * can assume all untrusted bindings are safe. Then, to audit your code for binding security issues,
	 * you just need to ensure the values you mark as trusted indeed are safe - because they were
	 * received from your server, sanitized by your library, etc. You can organize your codebase to
	 * help with this - perhaps allowing only the files in a specific directory to do this.
	 * Ensuring that the internal API exposed by that code doesn't markup arbitrary values as safe then
	 * becomes a more manageable task.
	 *
	 * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}
	 * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to
	 * build the trusted versions of your values.
	 *
	 * ### How does it work?
	 *
	 * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted
	 * $sce.getTrusted(context, value)} rather than to the value directly.  Think of this function as
	 * a way to enforce the required security context in your data sink. Directives use {@link
	 * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs
	 * the {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals. Also,
	 * when binding without directives, AngularJS will understand the context of your bindings
	 * automatically.
	 *
	 * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link
	 * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly
	 * simplified):
	 *
	 * ```
	 * var ngBindHtmlDirective = ['$sce', function($sce) {
	 *   return function(scope, element, attr) {
	 *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {
	 *       element.html(value || '');
	 *     });
	 *   };
	 * }];
	 * ```
	 *
	 * ### Impact on loading templates
	 *
	 * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as
	 * `templateUrl`'s specified by {@link guide/directive directives}.
	 *
	 * By default, AngularJS only loads templates from the same domain and protocol as the application
	 * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl
	 * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or
	 * protocols, you may either add them to the {@link ng.$sceDelegateProvider#trustedResourceUrlList
	 * trustedResourceUrlList} or {@link ng.$sce#trustAsResourceUrl wrap them} into trusted values.
	 *
	 * *Please note*:
	 * The browser's
	 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
	 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
	 * policy apply in addition to this and may further restrict whether the template is successfully
	 * loaded.  This means that without the right CORS policy, loading templates from a different domain
	 * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some
	 * browsers.
	 *
	 * ### This feels like too much overhead
	 *
	 * It's important to remember that SCE only applies to interpolation expressions.
	 *
	 * If your expressions are constant literals, they're automatically trusted and you don't need to
	 * call `$sce.trustAs` on them (e.g.
	 * `<div ng-bind-html="'<b>implicitly trusted</b>'"></div>`) just works (remember to include the
	 * `ngSanitize` module). The `$sceDelegate` will also use the `$sanitize` service if it is available
	 * when binding untrusted values to `$sce.HTML` context.
	 * AngularJS provides an implementation in `angular-sanitize.js`, and if you
	 * wish to use it, you will also need to depend on the {@link ngSanitize `ngSanitize`} module in
	 * your application.
	 *
	 * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load
	 * templates in `ng-include` from your application's domain without having to even know about SCE.
	 * It blocks loading templates from other domains or loading templates over http from an https
	 * served document.  You can change these by setting your own custom {@link
	 * ng.$sceDelegateProvider#trustedResourceUrlList trusted resource URL list} and {@link
	 * ng.$sceDelegateProvider#bannedResourceUrlList banned resource URL list} for matching such URLs.
	 *
	 * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an
	 * application that's secure and can be audited to verify that with much more ease than bolting
	 * security onto an application later.
	 *
	 * <a name="contexts"></a>
	 * ### What trusted context types are supported?
	 *
	 * | Context             | Notes          |
	 * |---------------------|----------------|
	 * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |
	 * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |
	 * | `$sce.MEDIA_URL`    | For URLs that are safe to render as media. Is automatically converted from string by sanitizing when needed. |
	 * | `$sce.URL`          | For URLs that are safe to follow as links. Is automatically converted from string by sanitizing when needed. Note that `$sce.URL` makes a stronger statement about the URL than `$sce.MEDIA_URL` does and therefore contexts requiring values trusted for `$sce.URL` can be used anywhere that values trusted for `$sce.MEDIA_URL` are required.|
	 * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` or `$sce.MEDIA_URL` do and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` or `$sce.MEDIA_URL` are required. <br><br> The {@link $sceDelegateProvider#trustedResourceUrlList $sceDelegateProvider#trustedResourceUrlList()} and {@link $sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider#bannedResourceUrlList()} can be used to restrict trusted origins for `RESOURCE_URL` |
	 * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |
	 *
	 *
	 * <div class="alert alert-warning">
	 * Be aware that, before AngularJS 1.7.0, `a[href]` and `img[src]` used to sanitize their
	 * interpolated values directly rather than rely upon {@link ng.$sce#getTrusted `$sce.getTrusted`}.
	 *
	 * **As of 1.7.0, this is no longer the case.**
	 *
	 * Now such interpolations are marked as requiring `$sce.URL` (for `a[href]`) or `$sce.MEDIA_URL`
	 * (for `img[src]`), so that the sanitization happens (via `$sce.getTrusted...`) when the `$interpolate`
	 * service evaluates the expressions.
	 * </div>
	 *
	 * There are no CSS or JS context bindings in AngularJS currently, so their corresponding `$sce.trustAs`
	 * functions aren't useful yet. This might evolve.
	 *
	 * ### Format of items in {@link ng.$sceDelegateProvider#trustedResourceUrlList trustedResourceUrlList}/{@link ng.$sceDelegateProvider#bannedResourceUrlList bannedResourceUrlList} <a name="resourceUrlPatternItem"></a>
	 *
	 *  Each element in these arrays must be one of the following:
	 *
	 *  - **'self'**
	 *    - The special **string**, `'self'`, can be used to match against all URLs of the **same
	 *      domain** as the application document using the **same protocol**.
	 *  - **String** (except the special value `'self'`)
	 *    - The string is matched against the full *normalized / absolute URL* of the resource
	 *      being tested (substring matches are not good enough.)
	 *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters
	 *      match themselves.
	 *    - `*`: matches zero or more occurrences of any character other than one of the following 6
	 *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use
	 *      for matching resource URL lists.
	 *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not
	 *      appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.
	 *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might
	 *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.
	 *      http://foo.example.com/templates/**).
	 *  - **RegExp** (*see caveat below*)
	 *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax
	 *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to
	 *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should
	 *      have good test coverage).  For instance, the use of `.` in the regex is correct only in a
	 *      small number of cases.  A `.` character in the regex used when matching the scheme or a
	 *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It
	 *      is highly recommended to use the string patterns and only fall back to regular expressions
	 *      as a last resort.
	 *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is
	 *      matched against the **entire** *normalized / absolute URL* of the resource being tested
	 *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags
	 *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.
	 *    - If you are generating your JavaScript from some other templating engine (not
	 *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),
	 *      remember to escape your regular expression (and be aware that you might need more than
	 *      one level of escaping depending on your templating engine and the way you interpolated
	 *      the value.)  Do make use of your platform's escaping mechanism as it might be good
	 *      enough before coding your own.  E.g. Ruby has
	 *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)
	 *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).
	 *      Javascript lacks a similar built in function for escaping.  Take a look at Google
	 *      Closure library's [goog.string.regExpEscape(s)](
	 *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).
	 *
	 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.
	 *
	 * ### Show me an example using SCE.
	 *
	 * <example module="mySceApp" deps="angular-sanitize.js" name="sce-service">
	 * <file name="index.html">
	 *   <div ng-controller="AppController as myCtrl">
	 *     <i ng-bind-html="myCtrl.explicitlyTrustedHtml" id="explicitlyTrustedHtml"></i><br><br>
	 *     <b>User comments</b><br>
	 *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when
	 *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an
	 *     exploit.
	 *     <div class="well">
	 *       <div ng-repeat="userComment in myCtrl.userComments">
	 *         <b>{{userComment.name}}</b>:
	 *         <span ng-bind-html="userComment.htmlComment" class="htmlComment"></span>
	 *         <br>
	 *       </div>
	 *     </div>
	 *   </div>
	 * </file>
	 *
	 * <file name="script.js">
	 *   angular.module('mySceApp', ['ngSanitize'])
	 *     .controller('AppController', ['$http', '$templateCache', '$sce',
	 *       function AppController($http, $templateCache, $sce) {
	 *         var self = this;
	 *         $http.get('test_data.json', {cache: $templateCache}).then(function(response) {
	 *           self.userComments = response.data;
	 *         });
	 *         self.explicitlyTrustedHtml = $sce.trustAsHtml(
	 *             '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
	 *             'sanitization.&quot;">Hover over this text.</span>');
	 *       }]);
	 * </file>
	 *
	 * <file name="test_data.json">
	 * [
	 *   { "name": "Alice",
	 *     "htmlComment":
	 *         "<span onmouseover='this.textContent=\"PWN3D!\"'>Is <i>anyone</i> reading this?</span>"
	 *   },
	 *   { "name": "Bob",
	 *     "htmlComment": "<i>Yes!</i>  Am I the only other one?"
	 *   }
	 * ]
	 * </file>
	 *
	 * <file name="protractor.js" type="protractor">
	 *   describe('SCE doc demo', function() {
	 *     it('should sanitize untrusted values', function() {
	 *       expect(element.all(by.css('.htmlComment')).first().getAttribute('innerHTML'))
	 *           .toBe('<span>Is <i>anyone</i> reading this?</span>');
	 *     });
	 *
	 *     it('should NOT sanitize explicitly trusted values', function() {
	 *       expect(element(by.id('explicitlyTrustedHtml')).getAttribute('innerHTML')).toBe(
	 *           '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
	 *           'sanitization.&quot;">Hover over this text.</span>');
	 *     });
	 *   });
	 * </file>
	 * </example>
	 *
	 *
	 *
	 * ## Can I disable SCE completely?
	 *
	 * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits
	 * for little coding overhead.  It will be much harder to take an SCE disabled application and
	 * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE
	 * for cases where you have a lot of existing code that was written before SCE was introduced and
	 * you're migrating them a module at a time. Also do note that this is an app-wide setting, so if
	 * you are writing a library, you will cause security bugs applications using it.
	 *
	 * That said, here's how you can completely disable SCE:
	 *
	 * ```
	 * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {
	 *   // Completely disable SCE.  For demonstration purposes only!
	 *   // Do not use in new projects or libraries.
	 *   $sceProvider.enabled(false);
	 * });
	 * ```
	 *
	 */function $SceProvider(){var enabled=true;/**
	   * @ngdoc method
	   * @name $sceProvider#enabled
	   * @kind function
	   *
	   * @param {boolean=} value If provided, then enables/disables SCE application-wide.
	   * @return {boolean} True if SCE is enabled, false otherwise.
	   *
	   * @description
	   * Enables/disables SCE and returns the current value.
	   */this.enabled=function(value){if(arguments.length){enabled=!!value;}return enabled;};/* Design notes on the default implementation for SCE.
	   *
	   * The API contract for the SCE delegate
	   * -------------------------------------
	   * The SCE delegate object must provide the following 3 methods:
	   *
	   * - trustAs(contextEnum, value)
	   *     This method is used to tell the SCE service that the provided value is OK to use in the
	   *     contexts specified by contextEnum.  It must return an object that will be accepted by
	   *     getTrusted() for a compatible contextEnum and return this value.
	   *
	   * - valueOf(value)
	   *     For values that were not produced by trustAs(), return them as is.  For values that were
	   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if
	   *     trustAs is wrapping the given values into some type, this operation unwraps it when given
	   *     such a value.
	   *
	   * - getTrusted(contextEnum, value)
	   *     This function should return the value that is safe to use in the context specified by
	   *     contextEnum or throw and exception otherwise.
	   *
	   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be
	   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For
	   * instance, an implementation could maintain a registry of all trusted objects by context.  In
	   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would
	   * return the same object passed in if it was found in the registry under a compatible context or
	   * throw an exception otherwise.  An implementation might only wrap values some of the time based
	   * on some criteria.  getTrusted() might return a value and not throw an exception for special
	   * constants or objects even if not wrapped.  All such implementations fulfill this contract.
	   *
	   *
	   * A note on the inheritance model for SCE contexts
	   * ------------------------------------------------
	   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This
	   * is purely an implementation details.
	   *
	   * The contract is simply this:
	   *
	   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)
	   *     will also succeed.
	   *
	   * Inheritance happens to capture this in a natural way. In some future, we may not use
	   * inheritance anymore. That is OK because no code outside of sce.js and sceSpecs.js would need to
	   * be aware of this detail.
	   */this.$get=['$parse','$sceDelegate',function($parse,$sceDelegate){// Support: IE 9-11 only
	// Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow
	// the "expression(javascript expression)" syntax which is insecure.
	if(enabled&&msie<8){throw $sceMinErr('iequirks','Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks '+'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML '+'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');}var sce=shallowCopy(SCE_CONTEXTS);/**
	     * @ngdoc method
	     * @name $sce#isEnabled
	     * @kind function
	     *
	     * @return {Boolean} True if SCE is enabled, false otherwise.  If you want to set the value, you
	     *     have to do it at module config time on {@link ng.$sceProvider $sceProvider}.
	     *
	     * @description
	     * Returns a boolean indicating if SCE is enabled.
	     */sce.isEnabled=function(){return enabled;};sce.trustAs=$sceDelegate.trustAs;sce.getTrusted=$sceDelegate.getTrusted;sce.valueOf=$sceDelegate.valueOf;if(!enabled){sce.trustAs=sce.getTrusted=function(type,value){return value;};sce.valueOf=identity;}/**
	     * @ngdoc method
	     * @name $sce#parseAs
	     *
	     * @description
	     * Converts AngularJS {@link guide/expression expression} into a function.  This is like {@link
	     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it
	     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,
	     * *result*)}
	     *
	     * @param {string} type The SCE context in which this result will be used.
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     */sce.parseAs=function sceParseAs(type,expr){var parsed=$parse(expr);if(parsed.literal&&parsed.constant){return parsed;}else{return $parse(expr,function(value){return sce.getTrusted(type,value);});}};/**
	     * @ngdoc method
	     * @name $sce#trustAs
	     *
	     * @description
	     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}. As such, returns a
	     * wrapped object that represents your value, and the trust you have in its safety for the given
	     * context. AngularJS can then use that value as-is in bindings of the specified secure context.
	     * This is used in bindings for `ng-bind-html`, `ng-include`, and most `src` attribute
	     * interpolations. See {@link ng.$sce $sce} for strict contextual escaping.
	     *
	     * @param {string} type The context in which this value is safe for use, e.g. `$sce.URL`,
	     *     `$sce.RESOURCE_URL`, `$sce.HTML`, `$sce.JS` or `$sce.CSS`.
	     *
	     * @param {*} value The value that that should be considered trusted.
	     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
	     *     in the context you specified.
	     *//**
	     * @ngdoc method
	     * @name $sce#trustAsHtml
	     *
	     * @description
	     * Shorthand method.  `$sce.trustAsHtml(value)` →
	     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}
	     *
	     * @param {*} value The value to mark as trusted for `$sce.HTML` context.
	     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
	     *     in `$sce.HTML` context (like `ng-bind-html`).
	     *//**
	     * @ngdoc method
	     * @name $sce#trustAsCss
	     *
	     * @description
	     * Shorthand method.  `$sce.trustAsCss(value)` →
	     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.CSS, value)`}
	     *
	     * @param {*} value The value to mark as trusted for `$sce.CSS` context.
	     * @return {*} A wrapped version of value that can be used as a trusted variant
	     *     of your `value` in `$sce.CSS` context. This context is currently unused, so there are
	     *     almost no reasons to use this function so far.
	     *//**
	     * @ngdoc method
	     * @name $sce#trustAsUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.trustAsUrl(value)` →
	     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}
	     *
	     * @param {*} value The value to mark as trusted for `$sce.URL` context.
	     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
	     *     in `$sce.URL` context. That context is currently unused, so there are almost no reasons
	     *     to use this function so far.
	     *//**
	     * @ngdoc method
	     * @name $sce#trustAsResourceUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →
	     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}
	     *
	     * @param {*} value The value to mark as trusted for `$sce.RESOURCE_URL` context.
	     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
	     *     in `$sce.RESOURCE_URL` context (template URLs in `ng-include`, most `src` attribute
	     *     bindings, ...)
	     *//**
	     * @ngdoc method
	     * @name $sce#trustAsJs
	     *
	     * @description
	     * Shorthand method.  `$sce.trustAsJs(value)` →
	     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}
	     *
	     * @param {*} value The value to mark as trusted for `$sce.JS` context.
	     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
	     *     in `$sce.JS` context. That context is currently unused, so there are almost no reasons to
	     *     use this function so far.
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrusted
	     *
	     * @description
	     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,
	     * takes any input, and either returns a value that's safe to use in the specified context,
	     * or throws an exception. This function is aware of trusted values created by the `trustAs`
	     * function and its shorthands, and when contexts are appropriate, returns the unwrapped value
	     * as-is. Finally, this function can also throw when there is no way to turn `maybeTrusted` in a
	     * safe value (e.g., no sanitization is available or possible.)
	     *
	     * @param {string} type The context in which this value is to be used.
	     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs
	     *     `$sce.trustAs`} call, or anything else (which will not be considered trusted.)
	     * @return {*} A version of the value that's safe to use in the given context, or throws an
	     *     exception if this is impossible.
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrustedHtml
	     *
	     * @description
	     * Shorthand method.  `$sce.getTrustedHtml(value)` →
	     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}
	     *
	     * @param {*} value The value to pass to `$sce.getTrusted`.
	     * @return {*} The return value of `$sce.getTrusted($sce.HTML, value)`
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrustedCss
	     *
	     * @description
	     * Shorthand method.  `$sce.getTrustedCss(value)` →
	     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}
	     *
	     * @param {*} value The value to pass to `$sce.getTrusted`.
	     * @return {*} The return value of `$sce.getTrusted($sce.CSS, value)`
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrustedUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.getTrustedUrl(value)` →
	     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}
	     *
	     * @param {*} value The value to pass to `$sce.getTrusted`.
	     * @return {*} The return value of `$sce.getTrusted($sce.URL, value)`
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrustedResourceUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →
	     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}
	     *
	     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.
	     * @return {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`
	     *//**
	     * @ngdoc method
	     * @name $sce#getTrustedJs
	     *
	     * @description
	     * Shorthand method.  `$sce.getTrustedJs(value)` →
	     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}
	     *
	     * @param {*} value The value to pass to `$sce.getTrusted`.
	     * @return {*} The return value of `$sce.getTrusted($sce.JS, value)`
	     *//**
	     * @ngdoc method
	     * @name $sce#parseAsHtml
	     *
	     * @description
	     * Shorthand method.  `$sce.parseAsHtml(expression string)` →
	     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}
	     *
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     *//**
	     * @ngdoc method
	     * @name $sce#parseAsCss
	     *
	     * @description
	     * Shorthand method.  `$sce.parseAsCss(value)` →
	     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}
	     *
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     *//**
	     * @ngdoc method
	     * @name $sce#parseAsUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.parseAsUrl(value)` →
	     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}
	     *
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     *//**
	     * @ngdoc method
	     * @name $sce#parseAsResourceUrl
	     *
	     * @description
	     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →
	     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}
	     *
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     *//**
	     * @ngdoc method
	     * @name $sce#parseAsJs
	     *
	     * @description
	     * Shorthand method.  `$sce.parseAsJs(value)` →
	     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}
	     *
	     * @param {string} expression String expression to compile.
	     * @return {function(context, locals)} A function which represents the compiled expression:
	     *
	     *    * `context` – `{object}` – an object against which any expressions embedded in the
	     *      strings are evaluated against (typically a scope object).
	     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
	     *      in `context`.
	     */// Shorthand delegations.
	var parse=sce.parseAs,getTrusted=sce.getTrusted,trustAs=sce.trustAs;forEach(SCE_CONTEXTS,function(enumValue,name){var lName=lowercase(name);sce[snakeToCamel('parse_as_'+lName)]=function(expr){return parse(enumValue,expr);};sce[snakeToCamel('get_trusted_'+lName)]=function(value){return getTrusted(enumValue,value);};sce[snakeToCamel('trust_as_'+lName)]=function(value){return trustAs(enumValue,value);};});return sce;}];}/* exported $SnifferProvider *//**
	 * !!! This is an undocumented "private" service !!!
	 *
	 * @name $sniffer
	 * @requires $window
	 * @requires $document
	 * @this
	 *
	 * @property {boolean} history Does the browser support html5 history api ?
	 * @property {boolean} transitions Does the browser support CSS transition events ?
	 * @property {boolean} animations Does the browser support CSS animation events ?
	 *
	 * @description
	 * This is very simple implementation of testing browser's features.
	 */function $SnifferProvider(){this.$get=['$window','$document',function($window,$document){var eventSupport={},// Chrome Packaged Apps are not allowed to access `history.pushState`.
	// If not sandboxed, they can be detected by the presence of `chrome.app.runtime`
	// (see https://developer.chrome.com/apps/api_index). If sandboxed, they can be detected by
	// the presence of an extension runtime ID and the absence of other Chrome runtime APIs
	// (see https://developer.chrome.com/apps/manifest/sandbox).
	// (NW.js apps have access to Chrome APIs, but do support `history`.)
	isNw=$window.nw&&$window.nw.process,isChromePackagedApp=!isNw&&$window.chrome&&($window.chrome.app&&$window.chrome.app.runtime||!$window.chrome.app&&$window.chrome.runtime&&$window.chrome.runtime.id),hasHistoryPushState=!isChromePackagedApp&&$window.history&&$window.history.pushState,android=toInt((/android (\d+)/.exec(lowercase(($window.navigator||{}).userAgent))||[])[1]),boxee=/Boxee/i.test(($window.navigator||{}).userAgent),document=$document[0]||{},bodyStyle=document.body&&document.body.style,transitions=false,animations=false;if(bodyStyle){// Support: Android <5, Blackberry Browser 10, default Chrome in Android 4.4.x
	// Mentioned browsers need a -webkit- prefix for transitions & animations.
	transitions=!!('transition'in bodyStyle||'webkitTransition'in bodyStyle);animations=!!('animation'in bodyStyle||'webkitAnimation'in bodyStyle);}return{// Android has history.pushState, but it does not update location correctly
	// so let's not use the history API at all.
	// http://code.google.com/p/android/issues/detail?id=17471
	// https://github.com/angular/angular.js/issues/904
	// older webkit browser (533.9) on Boxee box has exactly the same problem as Android has
	// so let's not use the history API also
	// We are purposefully using `!(android < 4)` to cover the case when `android` is undefined
	history:!!(hasHistoryPushState&&!(android<4)&&!boxee),hasEvent:function hasEvent(event){// Support: IE 9-11 only
	// IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have
	// it. In particular the event is not fired when backspace or delete key are pressed or
	// when cut operation is performed.
	// IE10+ implements 'input' event but it erroneously fires under various situations,
	// e.g. when placeholder changes, or a form is focused.
	if(event==='input'&&msie)return false;if(isUndefined(eventSupport[event])){var divElm=document.createElement('div');eventSupport[event]='on'+event in divElm;}return eventSupport[event];},csp:csp(),transitions:transitions,animations:animations,android:android};}];}/**
	 * ! This is a private undocumented service !
	 *
	 * @name $$taskTrackerFactory
	 * @description
	 * A function to create `TaskTracker` instances.
	 *
	 * A `TaskTracker` can keep track of pending tasks (grouped by type) and can notify interested
	 * parties when all pending tasks (or tasks of a specific type) have been completed.
	 *
	 * @param {$log} log - A logger instance (such as `$log`). Used to log error during callback
	 *     execution.
	 *
	 * @this
	 */function $$TaskTrackerFactoryProvider(){this.$get=valueFn(function(log){return new TaskTracker(log);});}function TaskTracker(log){var self=this;var taskCounts={};var taskCallbacks=[];var ALL_TASKS_TYPE=self.ALL_TASKS_TYPE='$$all$$';var DEFAULT_TASK_TYPE=self.DEFAULT_TASK_TYPE='$$default$$';/**
	   * Execute the specified function and decrement the appropriate `taskCounts` counter.
	   * If the counter reaches 0, all corresponding `taskCallbacks` are executed.
	   *
	   * @param {Function} fn - The function to execute.
	   * @param {string=} [taskType=DEFAULT_TASK_TYPE] - The type of task that is being completed.
	   */self.completeTask=completeTask;/**
	   * Increase the task count for the specified task type (or the default task type if non is
	   * specified).
	   *
	   * @param {string=} [taskType=DEFAULT_TASK_TYPE] - The type of task whose count will be increased.
	   */self.incTaskCount=incTaskCount;/**
	   * Execute the specified callback when all pending tasks have been completed.
	   *
	   * If there are no pending tasks, the callback is executed immediately. You can optionally limit
	   * the tasks that will be waited for to a specific type, by passing a `taskType`.
	   *
	   * @param {function} callback - The function to call when there are no pending tasks.
	   * @param {string=} [taskType=ALL_TASKS_TYPE] - The type of tasks that will be waited for.
	   */self.notifyWhenNoPendingTasks=notifyWhenNoPendingTasks;function completeTask(fn,taskType){taskType=taskType||DEFAULT_TASK_TYPE;try{fn();}finally{decTaskCount(taskType);var countForType=taskCounts[taskType];var countForAll=taskCounts[ALL_TASKS_TYPE];// If at least one of the queues (`ALL_TASKS_TYPE` or `taskType`) is empty, run callbacks.
	if(!countForAll||!countForType){var getNextCallback=!countForAll?getLastCallback:getLastCallbackForType;var nextCb;while(nextCb=getNextCallback(taskType)){try{nextCb();}catch(e){log.error(e);}}}}}function decTaskCount(taskType){taskType=taskType||DEFAULT_TASK_TYPE;if(taskCounts[taskType]){taskCounts[taskType]--;taskCounts[ALL_TASKS_TYPE]--;}}function getLastCallback(){var cbInfo=taskCallbacks.pop();return cbInfo&&cbInfo.cb;}function getLastCallbackForType(taskType){for(var i=taskCallbacks.length-1;i>=0;--i){var cbInfo=taskCallbacks[i];if(cbInfo.type===taskType){taskCallbacks.splice(i,1);return cbInfo.cb;}}}function incTaskCount(taskType){taskType=taskType||DEFAULT_TASK_TYPE;taskCounts[taskType]=(taskCounts[taskType]||0)+1;taskCounts[ALL_TASKS_TYPE]=(taskCounts[ALL_TASKS_TYPE]||0)+1;}function notifyWhenNoPendingTasks(callback,taskType){taskType=taskType||ALL_TASKS_TYPE;if(!taskCounts[taskType]){callback();}else{taskCallbacks.push({type:taskType,cb:callback});}}}var $templateRequestMinErr=minErr('$templateRequest');/**
	 * @ngdoc provider
	 * @name $templateRequestProvider
	 * @this
	 *
	 * @description
	 * Used to configure the options passed to the {@link $http} service when making a template request.
	 *
	 * For example, it can be used for specifying the "Accept" header that is sent to the server, when
	 * requesting a template.
	 */function $TemplateRequestProvider(){var httpOptions;/**
	   * @ngdoc method
	   * @name $templateRequestProvider#httpOptions
	   * @description
	   * The options to be passed to the {@link $http} service when making the request.
	   * You can use this to override options such as the "Accept" header for template requests.
	   *
	   * The {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the
	   * options if not overridden here.
	   *
	   * @param {string=} value new value for the {@link $http} options.
	   * @returns {string|self} Returns the {@link $http} options when used as getter and self if used as setter.
	   */this.httpOptions=function(val){if(val){httpOptions=val;return this;}return httpOptions;};/**
	   * @ngdoc service
	   * @name $templateRequest
	   *
	   * @description
	   * The `$templateRequest` service runs security checks then downloads the provided template using
	   * `$http` and, upon success, stores the contents inside of `$templateCache`. If the HTTP request
	   * fails or the response data of the HTTP request is empty, a `$compile` error will be thrown (the
	   * exception can be thwarted by setting the 2nd parameter of the function to true). Note that the
	   * contents of `$templateCache` are trusted, so the call to `$sce.getTrustedUrl(tpl)` is omitted
	   * when `tpl` is of type string and `$templateCache` has the matching entry.
	   *
	   * If you want to pass custom options to the `$http` service, such as setting the Accept header you
	   * can configure this via {@link $templateRequestProvider#httpOptions}.
	   *
	   * `$templateRequest` is used internally by {@link $compile}, {@link ngRoute.$route}, and directives such
	   * as {@link ngInclude} to download and cache templates.
	   *
	   * 3rd party modules should use `$templateRequest` if their services or directives are loading
	   * templates.
	   *
	   * @param {string|TrustedResourceUrl} tpl The HTTP request template URL
	   * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty
	   *
	   * @return {Promise} a promise for the HTTP response data of the given URL.
	   *
	   * @property {number} totalPendingRequests total amount of pending template requests being downloaded.
	   */this.$get=['$exceptionHandler','$templateCache','$http','$q','$sce',function($exceptionHandler,$templateCache,$http,$q,$sce){function handleRequestFn(tpl,ignoreRequestError){handleRequestFn.totalPendingRequests++;// We consider the template cache holds only trusted templates, so
	// there's no need to go through adding the template again to the trusted
	// resources for keys that already are included in there. This also makes
	// AngularJS accept any script directive, no matter its name. However, we
	// still need to unwrap trusted types.
	if(!isString(tpl)||isUndefined($templateCache.get(tpl))){tpl=$sce.getTrustedResourceUrl(tpl);}var transformResponse=$http.defaults&&$http.defaults.transformResponse;if(isArray(transformResponse)){transformResponse=transformResponse.filter(function(transformer){return transformer!==defaultHttpResponseTransform;});}else if(transformResponse===defaultHttpResponseTransform){transformResponse=null;}return $http.get(tpl,extend({cache:$templateCache,transformResponse:transformResponse},httpOptions)).finally(function(){handleRequestFn.totalPendingRequests--;}).then(function(response){return $templateCache.put(tpl,response.data);},handleError);function handleError(resp){if(!ignoreRequestError){resp=$templateRequestMinErr('tpload','Failed to load template: {0} (HTTP status: {1} {2})',tpl,resp.status,resp.statusText);$exceptionHandler(resp);}return $q.reject(resp);}}handleRequestFn.totalPendingRequests=0;return handleRequestFn;}];}/** @this */function $$TestabilityProvider(){this.$get=['$rootScope','$browser','$location',function($rootScope,$browser,$location){/**
	     * @name $testability
	     *
	     * @description
	     * The private $$testability service provides a collection of methods for use when debugging
	     * or by automated test and debugging tools.
	     */var testability={};/**
	     * @name $$testability#findBindings
	     *
	     * @description
	     * Returns an array of elements that are bound (via ng-bind or {{}})
	     * to expressions matching the input.
	     *
	     * @param {Element} element The element root to search from.
	     * @param {string} expression The binding expression to match.
	     * @param {boolean} opt_exactMatch If true, only returns exact matches
	     *     for the expression. Filters and whitespace are ignored.
	     */testability.findBindings=function(element,expression,opt_exactMatch){var bindings=element.getElementsByClassName('ng-binding');var matches=[];forEach(bindings,function(binding){var dataBinding=angular.element(binding).data('$binding');if(dataBinding){forEach(dataBinding,function(bindingName){if(opt_exactMatch){var matcher=new RegExp('(^|\\s)'+escapeForRegexp(expression)+'(\\s|\\||$)');if(matcher.test(bindingName)){matches.push(binding);}}else{if(bindingName.indexOf(expression)!==-1){matches.push(binding);}}});}});return matches;};/**
	     * @name $$testability#findModels
	     *
	     * @description
	     * Returns an array of elements that are two-way found via ng-model to
	     * expressions matching the input.
	     *
	     * @param {Element} element The element root to search from.
	     * @param {string} expression The model expression to match.
	     * @param {boolean} opt_exactMatch If true, only returns exact matches
	     *     for the expression.
	     */testability.findModels=function(element,expression,opt_exactMatch){var prefixes=['ng-','data-ng-','ng\\:'];for(var p=0;p<prefixes.length;++p){var attributeEquals=opt_exactMatch?'=':'*=';var selector='['+prefixes[p]+'model'+attributeEquals+'"'+expression+'"]';var elements=element.querySelectorAll(selector);if(elements.length){return elements;}}};/**
	     * @name $$testability#getLocation
	     *
	     * @description
	     * Shortcut for getting the location in a browser agnostic way. Returns
	     *     the path, search, and hash. (e.g. /path?a=b#hash)
	     */testability.getLocation=function(){return $location.url();};/**
	     * @name $$testability#setLocation
	     *
	     * @description
	     * Shortcut for navigating to a location without doing a full page reload.
	     *
	     * @param {string} url The location url (path, search and hash,
	     *     e.g. /path?a=b#hash) to go to.
	     */testability.setLocation=function(url){if(url!==$location.url()){$location.url(url);$rootScope.$digest();}};/**
	     * @name $$testability#whenStable
	     *
	     * @description
	     * Calls the callback when all pending tasks are completed.
	     *
	     * Types of tasks waited for include:
	     * - Pending timeouts (via {@link $timeout}).
	     * - Pending HTTP requests (via {@link $http}).
	     * - In-progress route transitions (via {@link $route}).
	     * - Pending tasks scheduled via {@link $rootScope#$applyAsync}.
	     * - Pending tasks scheduled via {@link $rootScope#$evalAsync}.
	     *   These include tasks scheduled via `$evalAsync()` indirectly (such as {@link $q} promises).
	     *
	     * @param {function} callback
	     */testability.whenStable=function(callback){$browser.notifyWhenNoOutstandingRequests(callback);};return testability;}];}var $timeoutMinErr=minErr('$timeout');/** @this */function $TimeoutProvider(){this.$get=['$rootScope','$browser','$q','$$q','$exceptionHandler',function($rootScope,$browser,$q,$$q,$exceptionHandler){var deferreds={};/**
	     * @ngdoc service
	     * @name $timeout
	     *
	     * @description
	     * AngularJS's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch
	     * block and delegates any exceptions to
	     * {@link ng.$exceptionHandler $exceptionHandler} service.
	     *
	     * The return value of calling `$timeout` is a promise, which will be resolved when
	     * the delay has passed and the timeout function, if provided, is executed.
	     *
	     * To cancel a timeout request, call `$timeout.cancel(promise)`.
	     *
	     * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to
	     * synchronously flush the queue of deferred functions.
	     *
	     * If you only want a promise that will be resolved after some specified delay
	     * then you can call `$timeout` without the `fn` function.
	     *
	     * @param {function()=} fn A function, whose execution should be delayed.
	     * @param {number=} [delay=0] Delay in milliseconds.
	     * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
	     *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
	     * @param {...*=} Pass additional parameters to the executed function.
	     * @returns {Promise} Promise that will be resolved when the timeout is reached. The promise
	     *   will be resolved with the return value of the `fn` function.
	     *
	     */function timeout(fn,delay,invokeApply){if(!isFunction(fn)){invokeApply=delay;delay=fn;fn=noop;}var args=sliceArgs(arguments,3),skipApply=isDefined(invokeApply)&&!invokeApply,deferred=(skipApply?$$q:$q).defer(),promise=deferred.promise,timeoutId;timeoutId=$browser.defer(function(){try{deferred.resolve(fn.apply(null,args));}catch(e){deferred.reject(e);$exceptionHandler(e);}finally{delete deferreds[promise.$$timeoutId];}if(!skipApply)$rootScope.$apply();},delay,'$timeout');promise.$$timeoutId=timeoutId;deferreds[timeoutId]=deferred;return promise;}/**
	     * @ngdoc method
	     * @name $timeout#cancel
	     *
	     * @description
	     * Cancels a task associated with the `promise`. As a result of this, the promise will be
	     * resolved with a rejection.
	     *
	     * @param {Promise=} promise Promise returned by the `$timeout` function.
	     * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
	     *   canceled.
	     */timeout.cancel=function(promise){if(!promise)return false;if(!promise.hasOwnProperty('$$timeoutId')){throw $timeoutMinErr('badprom','`$timeout.cancel()` called with a promise that was not generated by `$timeout()`.');}if(!deferreds.hasOwnProperty(promise.$$timeoutId))return false;var id=promise.$$timeoutId;var deferred=deferreds[id];// Timeout cancels should not report an unhandled promise.
	markQExceptionHandled(deferred.promise);deferred.reject('canceled');delete deferreds[id];return $browser.defer.cancel(id);};return timeout;}];}// NOTE:  The usage of window and document instead of $window and $document here is
	// deliberate.  This service depends on the specific behavior of anchor nodes created by the
	// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and
	// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it
	// doesn't know about mocked locations and resolves URLs to the real document - which is
	// exactly the behavior needed here.  There is little value is mocking these out for this
	// service.
	var urlParsingNode=window.document.createElement('a');var originUrl=urlResolve(window.location.href);var baseUrlParsingNode;urlParsingNode.href='http://[::1]';// Support: IE 9-11 only, Edge 16-17 only (fixed in 18 Preview)
	// IE/Edge don't wrap IPv6 addresses' hostnames in square brackets
	// when parsed out of an anchor element.
	var ipv6InBrackets=urlParsingNode.hostname==='[::1]';/**
	 *
	 * Implementation Notes for non-IE browsers
	 * ----------------------------------------
	 * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,
	 * results both in the normalizing and parsing of the URL.  Normalizing means that a relative
	 * URL will be resolved into an absolute URL in the context of the application document.
	 * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related
	 * properties are all populated to reflect the normalized URL.  This approach has wide
	 * compatibility - Safari 1+, Mozilla 1+ etc.  See
	 * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
	 *
	 * Implementation Notes for IE
	 * ---------------------------
	 * IE <= 10 normalizes the URL when assigned to the anchor node similar to the other
	 * browsers.  However, the parsed components will not be set if the URL assigned did not specify
	 * them.  (e.g. if you assign a.href = "foo", then a.protocol, a.host, etc. will be empty.)  We
	 * work around that by performing the parsing in a 2nd step by taking a previously normalized
	 * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the
	 * properties such as protocol, hostname, port, etc.
	 *
	 * References:
	 *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement
	 *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
	 *   http://url.spec.whatwg.org/#urlutils
	 *   https://github.com/angular/angular.js/pull/2902
	 *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/
	 *
	 * @kind function
	 * @param {string|object} url The URL to be parsed. If `url` is not a string, it will be returned
	 *     unchanged.
	 * @description Normalizes and parses a URL.
	 * @returns {object} Returns the normalized URL as a dictionary.
	 *
	 *   | member name   | Description                                                            |
	 *   |---------------|------------------------------------------------------------------------|
	 *   | href          | A normalized version of the provided URL if it was not an absolute URL |
	 *   | protocol      | The protocol without the trailing colon                                |
	 *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |
	 *   | search        | The search params, minus the question mark                             |
	 *   | hash          | The hash string, minus the hash symbol                                 |
	 *   | hostname      | The hostname                                                           |
	 *   | port          | The port, without ":"                                                  |
	 *   | pathname      | The pathname, beginning with "/"                                       |
	 *
	 */function urlResolve(url){if(!isString(url))return url;var href=url;// Support: IE 9-11 only
	if(msie){// Normalize before parse.  Refer Implementation Notes on why this is
	// done in two steps on IE.
	urlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);var hostname=urlParsingNode.hostname;if(!ipv6InBrackets&&hostname.indexOf(':')>-1){hostname='['+hostname+']';}return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}/**
	 * Parse a request URL and determine whether this is a same-origin request as the application
	 * document.
	 *
	 * @param {string|object} requestUrl The url of the request as a string that will be resolved
	 * or a parsed URL object.
	 * @returns {boolean} Whether the request is for the same origin as the application document.
	 */function urlIsSameOrigin(requestUrl){return urlsAreSameOrigin(requestUrl,originUrl);}/**
	 * Parse a request URL and determine whether it is same-origin as the current document base URL.
	 *
	 * Note: The base URL is usually the same as the document location (`location.href`) but can
	 * be overriden by using the `<base>` tag.
	 *
	 * @param {string|object} requestUrl The url of the request as a string that will be resolved
	 * or a parsed URL object.
	 * @returns {boolean} Whether the URL is same-origin as the document base URL.
	 */function urlIsSameOriginAsBaseUrl(requestUrl){return urlsAreSameOrigin(requestUrl,getBaseUrl());}/**
	 * Create a function that can check a URL's origin against a list of allowed/trusted origins.
	 * The current location's origin is implicitly trusted.
	 *
	 * @param {string[]} trustedOriginUrls - A list of URLs (strings), whose origins are trusted.
	 *
	 * @returns {Function} - A function that receives a URL (string or parsed URL object) and returns
	 *     whether it is of an allowed origin.
	 */function urlIsAllowedOriginFactory(trustedOriginUrls){var parsedAllowedOriginUrls=[originUrl].concat(trustedOriginUrls.map(urlResolve));/**
	   * Check whether the specified URL (string or parsed URL object) has an origin that is allowed
	   * based on a list of trusted-origin URLs. The current location's origin is implicitly
	   * trusted.
	   *
	   * @param {string|Object} requestUrl - The URL to be checked (provided as a string that will be
	   *     resolved or a parsed URL object).
	   *
	   * @returns {boolean} - Whether the specified URL is of an allowed origin.
	   */return function urlIsAllowedOrigin(requestUrl){var parsedUrl=urlResolve(requestUrl);return parsedAllowedOriginUrls.some(urlsAreSameOrigin.bind(null,parsedUrl));};}/**
	 * Determine if two URLs share the same origin.
	 *
	 * @param {string|Object} url1 - First URL to compare as a string or a normalized URL in the form of
	 *     a dictionary object returned by `urlResolve()`.
	 * @param {string|object} url2 - Second URL to compare as a string or a normalized URL in the form
	 *     of a dictionary object returned by `urlResolve()`.
	 *
	 * @returns {boolean} - True if both URLs have the same origin, and false otherwise.
	 */function urlsAreSameOrigin(url1,url2){url1=urlResolve(url1);url2=urlResolve(url2);return url1.protocol===url2.protocol&&url1.host===url2.host;}/**
	 * Returns the current document base URL.
	 * @returns {string}
	 */function getBaseUrl(){if(window.document.baseURI){return window.document.baseURI;}// `document.baseURI` is available everywhere except IE
	if(!baseUrlParsingNode){baseUrlParsingNode=window.document.createElement('a');baseUrlParsingNode.href='.';// Work-around for IE bug described in Implementation Notes. The fix in `urlResolve()` is not
	// suitable here because we need to track changes to the base URL.
	baseUrlParsingNode=baseUrlParsingNode.cloneNode(false);}return baseUrlParsingNode.href;}/**
	 * @ngdoc service
	 * @name $window
	 * @this
	 *
	 * @description
	 * A reference to the browser's `window` object. While `window`
	 * is globally available in JavaScript, it causes testability problems, because
	 * it is a global variable. In AngularJS we always refer to it through the
	 * `$window` service, so it may be overridden, removed or mocked for testing.
	 *
	 * Expressions, like the one defined for the `ngClick` directive in the example
	 * below, are evaluated with respect to the current scope.  Therefore, there is
	 * no risk of inadvertently coding in a dependency on a global value in such an
	 * expression.
	 *
	 * @example
	   <example module="windowExample" name="window-service">
	     <file name="index.html">
	       <script>
	         angular.module('windowExample', [])
	           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {
	             $scope.greeting = 'Hello, World!';
	             $scope.doGreeting = function(greeting) {
	               $window.alert(greeting);
	             };
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <input type="text" ng-model="greeting" aria-label="greeting" />
	         <button ng-click="doGreeting(greeting)">ALERT</button>
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	      it('should display the greeting in the input box', function() {
	       element(by.model('greeting')).sendKeys('Hello, E2E Tests');
	       // If we click the button it will block the test runner
	       // element(':button').click();
	      });
	     </file>
	   </example>
	 */function $WindowProvider(){this.$get=valueFn(window);}/**
	 * @name $$cookieReader
	 * @requires $document
	 *
	 * @description
	 * This is a private service for reading cookies used by $http and ngCookies
	 *
	 * @return {Object} a key/value map of the current cookies
	 */function $$CookieReader($document){var rawDocument=$document[0]||{};var lastCookies={};var lastCookieString='';function safeGetCookie(rawDocument){try{return rawDocument.cookie||'';}catch(e){return'';}}function safeDecodeURIComponent(str){try{return decodeURIComponent(str);}catch(e){return str;}}return function(){var cookieArray,cookie,i,index,name;var currentCookieString=safeGetCookie(rawDocument);if(currentCookieString!==lastCookieString){lastCookieString=currentCookieString;cookieArray=lastCookieString.split('; ');lastCookies={};for(i=0;i<cookieArray.length;i++){cookie=cookieArray[i];index=cookie.indexOf('=');if(index>0){//ignore nameless cookies
	name=safeDecodeURIComponent(cookie.substring(0,index));// the first value that is seen for a cookie is the most
	// specific one.  values for the same cookie name that
	// follow are for less specific paths.
	if(isUndefined(lastCookies[name])){lastCookies[name]=safeDecodeURIComponent(cookie.substring(index+1));}}}}return lastCookies;};}$$CookieReader.$inject=['$document'];/** @this */function $$CookieReaderProvider(){this.$get=$$CookieReader;}/* global currencyFilter: true,
	 dateFilter: true,
	 filterFilter: true,
	 jsonFilter: true,
	 limitToFilter: true,
	 lowercaseFilter: true,
	 numberFilter: true,
	 orderByFilter: true,
	 uppercaseFilter: true,
	 *//**
	 * @ngdoc provider
	 * @name $filterProvider
	 * @description
	 *
	 * Filters are just functions which transform input to an output. However filters need to be
	 * Dependency Injected. To achieve this a filter definition consists of a factory function which is
	 * annotated with dependencies and is responsible for creating a filter function.
	 *
	 * <div class="alert alert-warning">
	 * **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
	 * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
	 * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
	 * (`myapp_subsection_filterx`).
	 * </div>
	 *
	 * ```js
	 *   // Filter registration
	 *   function MyModule($provide, $filterProvider) {
	 *     // create a service to demonstrate injection (not always needed)
	 *     $provide.value('greet', function(name){
	 *       return 'Hello ' + name + '!';
	 *     });
	 *
	 *     // register a filter factory which uses the
	 *     // greet service to demonstrate DI.
	 *     $filterProvider.register('greet', function(greet){
	 *       // return the filter function which uses the greet service
	 *       // to generate salutation
	 *       return function(text) {
	 *         // filters need to be forgiving so check input validity
	 *         return text && greet(text) || text;
	 *       };
	 *     });
	 *   }
	 * ```
	 *
	 * The filter function is registered with the `$injector` under the filter name suffix with
	 * `Filter`.
	 *
	 * ```js
	 *   it('should be the same instance', inject(
	 *     function($filterProvider) {
	 *       $filterProvider.register('reverse', function(){
	 *         return ...;
	 *       });
	 *     },
	 *     function($filter, reverseFilter) {
	 *       expect($filter('reverse')).toBe(reverseFilter);
	 *     });
	 * ```
	 *
	 *
	 * For more information about how AngularJS filters work, and how to create your own filters, see
	 * {@link guide/filter Filters} in the AngularJS Developer Guide.
	 *//**
	 * @ngdoc service
	 * @name $filter
	 * @kind function
	 * @description
	 * Filters are used for formatting data displayed to the user.
	 *
	 * They can be used in view templates, controllers or services. AngularJS comes
	 * with a collection of [built-in filters](api/ng/filter), but it is easy to
	 * define your own as well.
	 *
	 * The general syntax in templates is as follows:
	 *
	 * ```html
	 * {{ expression [| filter_name[:parameter_value] ... ] }}
	 * ```
	 *
	 * @param {String} name Name of the filter function to retrieve
	 * @return {Function} the filter function
	 * @example
	   <example name="$filter" module="filterExample">
	     <file name="index.html">
	       <div ng-controller="MainCtrl">
	        <h3>{{ originalText }}</h3>
	        <h3>{{ filteredText }}</h3>
	       </div>
	     </file>

	     <file name="script.js">
	      angular.module('filterExample', [])
	      .controller('MainCtrl', function($scope, $filter) {
	        $scope.originalText = 'hello';
	        $scope.filteredText = $filter('uppercase')($scope.originalText);
	      });
	     </file>
	   </example>
	  */$FilterProvider.$inject=['$provide'];/** @this */function $FilterProvider($provide){var suffix='Filter';/**
	   * @ngdoc method
	   * @name $filterProvider#register
	   * @param {string|Object} name Name of the filter function, or an object map of filters where
	   *    the keys are the filter names and the values are the filter factories.
	   *
	   *    <div class="alert alert-warning">
	   *    **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
	   *    Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
	   *    your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
	   *    (`myapp_subsection_filterx`).
	   *    </div>
	    * @param {Function} factory If the first argument was a string, a factory function for the filter to be registered.
	   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map
	   *    of the registered filter instances.
	   */function register(name,factory){if(isObject(name)){var filters={};forEach(name,function(filter,key){filters[key]=register(key,filter);});return filters;}else{return $provide.factory(name+suffix,factory);}}this.register=register;this.$get=['$injector',function($injector){return function(name){return $injector.get(name+suffix);};}];////////////////////////////////////////
	/* global
	    currencyFilter: false,
	    dateFilter: false,
	    filterFilter: false,
	    jsonFilter: false,
	    limitToFilter: false,
	    lowercaseFilter: false,
	    numberFilter: false,
	    orderByFilter: false,
	    uppercaseFilter: false
	  */register('currency',currencyFilter);register('date',dateFilter);register('filter',filterFilter);register('json',jsonFilter);register('limitTo',limitToFilter);register('lowercase',lowercaseFilter);register('number',numberFilter);register('orderBy',orderByFilter);register('uppercase',uppercaseFilter);}/**
	 * @ngdoc filter
	 * @name filter
	 * @kind function
	 *
	 * @description
	 * Selects a subset of items from `array` and returns it as a new array.
	 *
	 * @param {Array} array The source array.
	 * <div class="alert alert-info">
	 *   **Note**: If the array contains objects that reference themselves, filtering is not possible.
	 * </div>
	 * @param {string|Object|function()} expression The predicate to be used for selecting items from
	 *   `array`.
	 *
	 *   Can be one of:
	 *
	 *   - `string`: The string is used for matching against the contents of the `array`. All strings or
	 *     objects with string properties in `array` that match this string will be returned. This also
	 *     applies to nested object properties.
	 *     The predicate can be negated by prefixing the string with `!`.
	 *
	 *   - `Object`: A pattern object can be used to filter specific properties on objects contained
	 *     by `array`. For example `{name:"M", phone:"1"}` predicate will return an array of items
	 *     which have property `name` containing "M" and property `phone` containing "1". A special
	 *     property name (`$` by default) can be used (e.g. as in `{$: "text"}`) to accept a match
	 *     against any property of the object or its nested object properties. That's equivalent to the
	 *     simple substring match with a `string` as described above. The special property name can be
	 *     overwritten, using the `anyPropertyKey` parameter.
	 *     The predicate can be negated by prefixing the string with `!`.
	 *     For example `{name: "!M"}` predicate will return an array of items which have property `name`
	 *     not containing "M".
	 *
	 *     Note that a named property will match properties on the same level only, while the special
	 *     `$` property will match properties on the same level or deeper. E.g. an array item like
	 *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but
	 *     **will** be matched by `{$: 'John'}`.
	 *
	 *   - `function(value, index, array)`: A predicate function can be used to write arbitrary filters.
	 *     The function is called for each element of the array, with the element, its index, and
	 *     the entire array itself as arguments.
	 *
	 *     The final result is an array of those elements that the predicate returned true for.
	 *
	 * @param {function(actual, expected)|true|false} [comparator] Comparator which is used in
	 *     determining if values retrieved using `expression` (when it is not a function) should be
	 *     considered a match based on the expected value (from the filter expression) and actual
	 *     value (from the object in the array).
	 *
	 *   Can be one of:
	 *
	 *   - `function(actual, expected)`:
	 *     The function will be given the object value and the predicate value to compare and
	 *     should return true if both values should be considered equal.
	 *
	 *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.
	 *     This is essentially strict comparison of expected and actual.
	 *
	 *   - `false`: A short hand for a function which will look for a substring match in a case
	 *     insensitive way. Primitive values are converted to strings. Objects are not compared against
	 *     primitives, unless they have a custom `toString` method (e.g. `Date` objects).
	 *
	 *
	 *   Defaults to `false`.
	 *
	 * @param {string} [anyPropertyKey] The special property name that matches against any property.
	 *     By default `$`.
	 *
	 * @example
	   <example name="filter-filter">
	     <file name="index.html">
	       <div ng-init="friends = [{name:'John', phone:'555-1276'},
	                                {name:'Mary', phone:'800-BIG-MARY'},
	                                {name:'Mike', phone:'555-4321'},
	                                {name:'Adam', phone:'555-5678'},
	                                {name:'Julie', phone:'555-8765'},
	                                {name:'Juliette', phone:'555-5678'}]"></div>

	       <label>Search: <input ng-model="searchText"></label>
	       <table id="searchTextResults">
	         <tr><th>Name</th><th>Phone</th></tr>
	         <tr ng-repeat="friend in friends | filter:searchText">
	           <td>{{friend.name}}</td>
	           <td>{{friend.phone}}</td>
	         </tr>
	       </table>
	       <hr>
	       <label>Any: <input ng-model="search.$"></label> <br>
	       <label>Name only <input ng-model="search.name"></label><br>
	       <label>Phone only <input ng-model="search.phone"></label><br>
	       <label>Equality <input type="checkbox" ng-model="strict"></label><br>
	       <table id="searchObjResults">
	         <tr><th>Name</th><th>Phone</th></tr>
	         <tr ng-repeat="friendObj in friends | filter:search:strict">
	           <td>{{friendObj.name}}</td>
	           <td>{{friendObj.phone}}</td>
	         </tr>
	       </table>
	     </file>
	     <file name="protractor.js" type="protractor">
	       var expectFriendNames = function(expectedNames, key) {
	         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {
	           arr.forEach(function(wd, i) {
	             expect(wd.getText()).toMatch(expectedNames[i]);
	           });
	         });
	       };

	       it('should search across all fields when filtering with a string', function() {
	         var searchText = element(by.model('searchText'));
	         searchText.clear();
	         searchText.sendKeys('m');
	         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');

	         searchText.clear();
	         searchText.sendKeys('76');
	         expectFriendNames(['John', 'Julie'], 'friend');
	       });

	       it('should search in specific fields when filtering with a predicate object', function() {
	         var searchAny = element(by.model('search.$'));
	         searchAny.clear();
	         searchAny.sendKeys('i');
	         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');
	       });
	       it('should use a equal comparison when comparator is true', function() {
	         var searchName = element(by.model('search.name'));
	         var strict = element(by.model('strict'));
	         searchName.clear();
	         searchName.sendKeys('Julie');
	         strict.click();
	         expectFriendNames(['Julie'], 'friendObj');
	       });
	     </file>
	   </example>
	 */function filterFilter(){return function(array,expression,comparator,anyPropertyKey){if(!isArrayLike(array)){if(array==null){return array;}else{throw minErr('filter')('notarray','Expected array but received: {0}',array);}}anyPropertyKey=anyPropertyKey||'$';var expressionType=getTypeForFilter(expression);var predicateFn;var matchAgainstAnyProp;switch(expressionType){case'function':predicateFn=expression;break;case'boolean':case'null':case'number':case'string':matchAgainstAnyProp=true;// falls through
	case'object':predicateFn=createPredicateFn(expression,comparator,anyPropertyKey,matchAgainstAnyProp);break;default:return array;}return Array.prototype.filter.call(array,predicateFn);};}// Helper functions for `filterFilter`
	function createPredicateFn(expression,comparator,anyPropertyKey,matchAgainstAnyProp){var shouldMatchPrimitives=isObject(expression)&&anyPropertyKey in expression;var predicateFn;if(comparator===true){comparator=equals;}else if(!isFunction(comparator)){comparator=function comparator(actual,expected){if(isUndefined(actual)){// No substring matching against `undefined`
	return false;}if(actual===null||expected===null){// No substring matching against `null`; only match against `null`
	return actual===expected;}if(isObject(expected)||isObject(actual)&&!hasCustomToString(actual)){// Should not compare primitives against objects, unless they have custom `toString` method
	return false;}actual=lowercase(''+actual);expected=lowercase(''+expected);return actual.indexOf(expected)!==-1;};}predicateFn=function predicateFn(item){if(shouldMatchPrimitives&&!isObject(item)){return deepCompare(item,expression[anyPropertyKey],comparator,anyPropertyKey,false);}return deepCompare(item,expression,comparator,anyPropertyKey,matchAgainstAnyProp);};return predicateFn;}function deepCompare(actual,expected,comparator,anyPropertyKey,matchAgainstAnyProp,dontMatchWholeObject){var actualType=getTypeForFilter(actual);var expectedType=getTypeForFilter(expected);if(expectedType==='string'&&expected.charAt(0)==='!'){return!deepCompare(actual,expected.substring(1),comparator,anyPropertyKey,matchAgainstAnyProp);}else if(isArray(actual)){// In case `actual` is an array, consider it a match
	// if ANY of it's items matches `expected`
	return actual.some(function(item){return deepCompare(item,expected,comparator,anyPropertyKey,matchAgainstAnyProp);});}switch(actualType){case'object':var key;if(matchAgainstAnyProp){for(key in actual){// Under certain, rare, circumstances, key may not be a string and `charAt` will be undefined
	// See: https://github.com/angular/angular.js/issues/15644
	if(key.charAt&&key.charAt(0)!=='$'&&deepCompare(actual[key],expected,comparator,anyPropertyKey,true)){return true;}}return dontMatchWholeObject?false:deepCompare(actual,expected,comparator,anyPropertyKey,false);}else if(expectedType==='object'){for(key in expected){var expectedVal=expected[key];if(isFunction(expectedVal)||isUndefined(expectedVal)){continue;}var matchAnyProperty=key===anyPropertyKey;var actualVal=matchAnyProperty?actual:actual[key];if(!deepCompare(actualVal,expectedVal,comparator,anyPropertyKey,matchAnyProperty,matchAnyProperty)){return false;}}return true;}else{return comparator(actual,expected);}case'function':return false;default:return comparator(actual,expected);}}// Used for easily differentiating between `null` and actual `object`
	function getTypeForFilter(val){return val===null?'null':typeof val==='undefined'?'undefined':_typeof(val);}var MAX_DIGITS=22;var DECIMAL_SEP='.';var ZERO_CHAR='0';/**
	 * @ngdoc filter
	 * @name currency
	 * @kind function
	 *
	 * @description
	 * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default
	 * symbol for current locale is used.
	 *
	 * @param {number} amount Input to filter.
	 * @param {string=} symbol Currency symbol or identifier to be displayed.
	 * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale
	 * @returns {string} Formatted number.
	 *
	 *
	 * @example
	   <example module="currencyExample" name="currency-filter">
	     <file name="index.html">
	       <script>
	         angular.module('currencyExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.amount = 1234.56;
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <input type="number" ng-model="amount" aria-label="amount"> <br>
	         default currency symbol ($): <span id="currency-default">{{amount | currency}}</span><br>
	         custom currency identifier (USD$): <span id="currency-custom">{{amount | currency:"USD$"}}</span><br>
	         no fractions (0): <span id="currency-no-fractions">{{amount | currency:"USD$":0}}</span>
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should init with 1234.56', function() {
	         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');
	         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');
	         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');
	       });
	       it('should update', function() {
	         if (browser.params.browser === 'safari') {
	           // Safari does not understand the minus key. See
	           // https://github.com/angular/protractor/issues/481
	           return;
	         }
	         element(by.model('amount')).clear();
	         element(by.model('amount')).sendKeys('-1234');
	         expect(element(by.id('currency-default')).getText()).toBe('-$1,234.00');
	         expect(element(by.id('currency-custom')).getText()).toBe('-USD$1,234.00');
	         expect(element(by.id('currency-no-fractions')).getText()).toBe('-USD$1,234');
	       });
	     </file>
	   </example>
	 */currencyFilter.$inject=['$locale'];function currencyFilter($locale){var formats=$locale.NUMBER_FORMATS;return function(amount,currencySymbol,fractionSize){if(isUndefined(currencySymbol)){currencySymbol=formats.CURRENCY_SYM;}if(isUndefined(fractionSize)){fractionSize=formats.PATTERNS[1].maxFrac;}// If the currency symbol is empty, trim whitespace around the symbol
	var currencySymbolRe=!currencySymbol?/\s*\u00A4\s*/g:/\u00A4/g;// if null or undefined pass it through
	return amount==null?amount:formatNumber(amount,formats.PATTERNS[1],formats.GROUP_SEP,formats.DECIMAL_SEP,fractionSize).replace(currencySymbolRe,currencySymbol);};}/**
	 * @ngdoc filter
	 * @name number
	 * @kind function
	 *
	 * @description
	 * Formats a number as text.
	 *
	 * If the input is null or undefined, it will just be returned.
	 * If the input is infinite (Infinity or -Infinity), the Infinity symbol '∞' or '-∞' is returned, respectively.
	 * If the input is not a number an empty string is returned.
	 *
	 *
	 * @param {number|string} number Number to format.
	 * @param {(number|string)=} fractionSize Number of decimal places to round the number to.
	 * If this is not provided then the fraction size is computed from the current locale's number
	 * formatting pattern. In the case of the default locale, it will be 3.
	 * @returns {string} Number rounded to `fractionSize` appropriately formatted based on the current
	 *                   locale (e.g., in the en_US locale it will have "." as the decimal separator and
	 *                   include "," group separators after each third digit).
	 *
	 * @example
	   <example module="numberFilterExample" name="number-filter">
	     <file name="index.html">
	       <script>
	         angular.module('numberFilterExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.val = 1234.56789;
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <label>Enter number: <input ng-model='val'></label><br>
	         Default formatting: <span id='number-default'>{{val | number}}</span><br>
	         No fractions: <span>{{val | number:0}}</span><br>
	         Negative number: <span>{{-val | number:4}}</span>
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should format numbers', function() {
	         expect(element(by.id('number-default')).getText()).toBe('1,234.568');
	         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');
	         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');
	       });

	       it('should update', function() {
	         element(by.model('val')).clear();
	         element(by.model('val')).sendKeys('3374.333');
	         expect(element(by.id('number-default')).getText()).toBe('3,374.333');
	         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');
	         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');
	      });
	     </file>
	   </example>
	 */numberFilter.$inject=['$locale'];function numberFilter($locale){var formats=$locale.NUMBER_FORMATS;return function(number,fractionSize){// if null or undefined pass it through
	return number==null?number:formatNumber(number,formats.PATTERNS[0],formats.GROUP_SEP,formats.DECIMAL_SEP,fractionSize);};}/**
	 * Parse a number (as a string) into three components that can be used
	 * for formatting the number.
	 *
	 * (Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)
	 *
	 * @param  {string} numStr The number to parse
	 * @return {object} An object describing this number, containing the following keys:
	 *  - d : an array of digits containing leading zeros as necessary
	 *  - i : the number of the digits in `d` that are to the left of the decimal point
	 *  - e : the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`
	 *
	 */function parse(numStr){var exponent=0,digits,numberOfIntegerDigits;var i,j,zeros;// Decimal point?
	if((numberOfIntegerDigits=numStr.indexOf(DECIMAL_SEP))>-1){numStr=numStr.replace(DECIMAL_SEP,'');}// Exponential form?
	if((i=numStr.search(/e/i))>0){// Work out the exponent.
	if(numberOfIntegerDigits<0)numberOfIntegerDigits=i;numberOfIntegerDigits+=+numStr.slice(i+1);numStr=numStr.substring(0,i);}else if(numberOfIntegerDigits<0){// There was no decimal point or exponent so it is an integer.
	numberOfIntegerDigits=numStr.length;}// Count the number of leading zeros.
	for(i=0;numStr.charAt(i)===ZERO_CHAR;i++){/* empty */}if(i===(zeros=numStr.length)){// The digits are all zero.
	digits=[0];numberOfIntegerDigits=1;}else{// Count the number of trailing zeros
	zeros--;while(numStr.charAt(zeros)===ZERO_CHAR){zeros--;}// Trailing zeros are insignificant so ignore them
	numberOfIntegerDigits-=i;digits=[];// Convert string to array of digits without leading/trailing zeros.
	for(j=0;i<=zeros;i++,j++){digits[j]=+numStr.charAt(i);}}// If the number overflows the maximum allowed digits then use an exponent.
	if(numberOfIntegerDigits>MAX_DIGITS){digits=digits.splice(0,MAX_DIGITS-1);exponent=numberOfIntegerDigits-1;numberOfIntegerDigits=1;}return{d:digits,e:exponent,i:numberOfIntegerDigits};}/**
	 * Round the parsed number to the specified number of decimal places
	 * This function changed the parsedNumber in-place
	 */function roundNumber(parsedNumber,fractionSize,minFrac,maxFrac){var digits=parsedNumber.d;var fractionLen=digits.length-parsedNumber.i;// determine fractionSize if it is not specified; `+fractionSize` converts it to a number
	fractionSize=isUndefined(fractionSize)?Math.min(Math.max(minFrac,fractionLen),maxFrac):+fractionSize;// The index of the digit to where rounding is to occur
	var roundAt=fractionSize+parsedNumber.i;var digit=digits[roundAt];if(roundAt>0){// Drop fractional digits beyond `roundAt`
	digits.splice(Math.max(parsedNumber.i,roundAt));// Set non-fractional digits beyond `roundAt` to 0
	for(var j=roundAt;j<digits.length;j++){digits[j]=0;}}else{// We rounded to zero so reset the parsedNumber
	fractionLen=Math.max(0,fractionLen);parsedNumber.i=1;digits.length=Math.max(1,roundAt=fractionSize+1);digits[0]=0;for(var i=1;i<roundAt;i++){digits[i]=0;}}if(digit>=5){if(roundAt-1<0){for(var k=0;k>roundAt;k--){digits.unshift(0);parsedNumber.i++;}digits.unshift(1);parsedNumber.i++;}else{digits[roundAt-1]++;}}// Pad out with zeros to get the required fraction length
	for(;fractionLen<Math.max(0,fractionSize);fractionLen++){digits.push(0);}// Do any carrying, e.g. a digit was rounded up to 10
	var carry=digits.reduceRight(function(carry,d,i,digits){d=d+carry;digits[i]=d%10;return Math.floor(d/10);},0);if(carry){digits.unshift(carry);parsedNumber.i++;}}/**
	 * Format a number into a string
	 * @param  {number} number       The number to format
	 * @param  {{
	 *           minFrac, // the minimum number of digits required in the fraction part of the number
	 *           maxFrac, // the maximum number of digits required in the fraction part of the number
	 *           gSize,   // number of digits in each group of separated digits
	 *           lgSize,  // number of digits in the last group of digits before the decimal separator
	 *           negPre,  // the string to go in front of a negative number (e.g. `-` or `(`))
	 *           posPre,  // the string to go in front of a positive number
	 *           negSuf,  // the string to go after a negative number (e.g. `)`)
	 *           posSuf   // the string to go after a positive number
	 *         }} pattern
	 * @param  {string} groupSep     The string to separate groups of number (e.g. `,`)
	 * @param  {string} decimalSep   The string to act as the decimal separator (e.g. `.`)
	 * @param  {[type]} fractionSize The size of the fractional part of the number
	 * @return {string}              The number formatted as a string
	 */function formatNumber(number,pattern,groupSep,decimalSep,fractionSize){if(!(isString(number)||isNumber(number))||isNaN(number))return'';var isInfinity=!isFinite(number);var isZero=false;var numStr=Math.abs(number)+'',formattedText='',parsedNumber;if(isInfinity){formattedText='\u221E';}else{parsedNumber=parse(numStr);roundNumber(parsedNumber,fractionSize,pattern.minFrac,pattern.maxFrac);var digits=parsedNumber.d;var integerLen=parsedNumber.i;var exponent=parsedNumber.e;var decimals=[];isZero=digits.reduce(function(isZero,d){return isZero&&!d;},true);// pad zeros for small numbers
	while(integerLen<0){digits.unshift(0);integerLen++;}// extract decimals digits
	if(integerLen>0){decimals=digits.splice(integerLen,digits.length);}else{decimals=digits;digits=[0];}// format the integer digits with grouping separators
	var groups=[];if(digits.length>=pattern.lgSize){groups.unshift(digits.splice(-pattern.lgSize,digits.length).join(''));}while(digits.length>pattern.gSize){groups.unshift(digits.splice(-pattern.gSize,digits.length).join(''));}if(digits.length){groups.unshift(digits.join(''));}formattedText=groups.join(groupSep);// append the decimal digits
	if(decimals.length){formattedText+=decimalSep+decimals.join('');}if(exponent){formattedText+='e+'+exponent;}}if(number<0&&!isZero){return pattern.negPre+formattedText+pattern.negSuf;}else{return pattern.posPre+formattedText+pattern.posSuf;}}function padNumber(num,digits,trim,negWrap){var neg='';if(num<0||negWrap&&num<=0){if(negWrap){num=-num+1;}else{num=-num;neg='-';}}num=''+num;while(num.length<digits){num=ZERO_CHAR+num;}if(trim){num=num.substr(num.length-digits);}return neg+num;}function dateGetter(name,size,offset,trim,negWrap){offset=offset||0;return function(date){var value=date['get'+name]();if(offset>0||value>-offset){value+=offset;}if(value===0&&offset===-12)value=12;return padNumber(value,size,trim,negWrap);};}function dateStrGetter(name,shortForm,standAlone){return function(date,formats){var value=date['get'+name]();var propPrefix=(standAlone?'STANDALONE':'')+(shortForm?'SHORT':'');var get=uppercase(propPrefix+name);return formats[get][value];};}function timeZoneGetter(date,formats,offset){var zone=-1*offset;var paddedZone=zone>=0?'+':'';paddedZone+=padNumber(Math[zone>0?'floor':'ceil'](zone/60),2)+padNumber(Math.abs(zone%60),2);return paddedZone;}function getFirstThursdayOfYear(year){// 0 = index of January
	var dayOfWeekOnFirst=new Date(year,0,1).getDay();// 4 = index of Thursday (+1 to account for 1st = 5)
	// 11 = index of *next* Thursday (+1 account for 1st = 12)
	return new Date(year,0,(dayOfWeekOnFirst<=4?5:12)-dayOfWeekOnFirst);}function getThursdayThisWeek(datetime){return new Date(datetime.getFullYear(),datetime.getMonth(),// 4 = index of Thursday
	datetime.getDate()+(4-datetime.getDay()));}function weekGetter(size){return function(date){var firstThurs=getFirstThursdayOfYear(date.getFullYear()),thisThurs=getThursdayThisWeek(date);var diff=+thisThurs-+firstThurs,result=1+Math.round(diff/6.048e8);// 6.048e8 ms per week
	return padNumber(result,size);};}function ampmGetter(date,formats){return date.getHours()<12?formats.AMPMS[0]:formats.AMPMS[1];}function eraGetter(date,formats){return date.getFullYear()<=0?formats.ERAS[0]:formats.ERAS[1];}function longEraGetter(date,formats){return date.getFullYear()<=0?formats.ERANAMES[0]:formats.ERANAMES[1];}var DATE_FORMATS={yyyy:dateGetter('FullYear',4,0,false,true),yy:dateGetter('FullYear',2,0,true,true),y:dateGetter('FullYear',1,0,false,true),MMMM:dateStrGetter('Month'),MMM:dateStrGetter('Month',true),MM:dateGetter('Month',2,1),M:dateGetter('Month',1,1),LLLL:dateStrGetter('Month',false,true),dd:dateGetter('Date',2),d:dateGetter('Date',1),HH:dateGetter('Hours',2),H:dateGetter('Hours',1),hh:dateGetter('Hours',2,-12),h:dateGetter('Hours',1,-12),mm:dateGetter('Minutes',2),m:dateGetter('Minutes',1),ss:dateGetter('Seconds',2),s:dateGetter('Seconds',1),// while ISO 8601 requires fractions to be prefixed with `.` or `,`
	// we can be just safely rely on using `sss` since we currently don't support single or two digit fractions
	sss:dateGetter('Milliseconds',3),EEEE:dateStrGetter('Day'),EEE:dateStrGetter('Day',true),a:ampmGetter,Z:timeZoneGetter,ww:weekGetter(2),w:weekGetter(1),G:eraGetter,GG:eraGetter,GGG:eraGetter,GGGG:longEraGetter};var DATE_FORMATS_SPLIT=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\s\S]*)/,NUMBER_STRING=/^-?\d+$/;/**
	 * @ngdoc filter
	 * @name date
	 * @kind function
	 *
	 * @description
	 *   Formats `date` to a string based on the requested `format`.
	 *
	 *   `format` string can be composed of the following elements:
	 *
	 *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)
	 *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
	 *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)
	 *   * `'MMMM'`: Month in year (January-December)
	 *   * `'MMM'`: Month in year (Jan-Dec)
	 *   * `'MM'`: Month in year, padded (01-12)
	 *   * `'M'`: Month in year (1-12)
	 *   * `'LLLL'`: Stand-alone month in year (January-December)
	 *   * `'dd'`: Day in month, padded (01-31)
	 *   * `'d'`: Day in month (1-31)
	 *   * `'EEEE'`: Day in Week,(Sunday-Saturday)
	 *   * `'EEE'`: Day in Week, (Sun-Sat)
	 *   * `'HH'`: Hour in day, padded (00-23)
	 *   * `'H'`: Hour in day (0-23)
	 *   * `'hh'`: Hour in AM/PM, padded (01-12)
	 *   * `'h'`: Hour in AM/PM, (1-12)
	 *   * `'mm'`: Minute in hour, padded (00-59)
	 *   * `'m'`: Minute in hour (0-59)
	 *   * `'ss'`: Second in minute, padded (00-59)
	 *   * `'s'`: Second in minute (0-59)
	 *   * `'sss'`: Millisecond in second, padded (000-999)
	 *   * `'a'`: AM/PM marker
	 *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)
	 *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year
	 *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year
	 *   * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')
	 *   * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')
	 *
	 *   `format` string can also be one of the following predefined
	 *   {@link guide/i18n localizable formats}:
	 *
	 *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale
	 *     (e.g. Sep 3, 2010 12:05:08 PM)
	 *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)
	 *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale
	 *     (e.g. Friday, September 3, 2010)
	 *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)
	 *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)
	 *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)
	 *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)
	 *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)
	 *
	 *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.
	 *   `"h 'in the morning'"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence
	 *   (e.g. `"h 'o''clock'"`).
	 *
	 *   Any other characters in the `format` string will be output as-is.
	 *
	 * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or
	 *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its
	 *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is
	 *    specified in the string input, the time is considered to be in the local timezone.
	 * @param {string=} format Formatting rules (see Description). If not specified,
	 *    `mediumDate` is used.
	 * @param {string=} timezone Timezone to be used for formatting. It understands UTC/GMT and the
	 *    continental US time zone abbreviations, but for general use, use a time zone offset, for
	 *    example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
	 *    If not specified, the timezone of the browser will be used.
	 * @returns {string} Formatted string or the input if input is not recognized as date/millis.
	 *
	 * @example
	   <example name="filter-date">
	     <file name="index.html">
	       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:
	           <span>{{1288323623006 | date:'medium'}}</span><br>
	       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:
	          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>
	       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:
	          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>
	       <span ng-non-bindable>{{1288323623006 | date:"MM/dd/yyyy 'at' h:mma"}}</span>:
	          <span>{{'1288323623006' | date:"MM/dd/yyyy 'at' h:mma"}}</span><br>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should format date', function() {
	         expect(element(by.binding("1288323623006 | date:'medium'")).getText()).
	            toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);
	         expect(element(by.binding("1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'")).getText()).
	            toMatch(/2010-10-2\d \d{2}:\d{2}:\d{2} (-|\+)?\d{4}/);
	         expect(element(by.binding("'1288323623006' | date:'MM/dd/yyyy @ h:mma'")).getText()).
	            toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);
	         expect(element(by.binding("'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"")).getText()).
	            toMatch(/10\/2\d\/2010 at \d{1,2}:\d{2}(AM|PM)/);
	       });
	     </file>
	   </example>
	 */dateFilter.$inject=['$locale'];function dateFilter($locale){var R_ISO8601_STR=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;// 1        2       3         4          5          6          7          8  9     10      11
	function jsonStringToDate(string){var match;if(match=string.match(R_ISO8601_STR)){var date=new Date(0),tzHour=0,tzMin=0,dateSetter=match[8]?date.setUTCFullYear:date.setFullYear,timeSetter=match[8]?date.setUTCHours:date.setHours;if(match[9]){tzHour=toInt(match[9]+match[10]);tzMin=toInt(match[9]+match[11]);}dateSetter.call(date,toInt(match[1]),toInt(match[2])-1,toInt(match[3]));var h=toInt(match[4]||0)-tzHour;var m=toInt(match[5]||0)-tzMin;var s=toInt(match[6]||0);var ms=Math.round(parseFloat('0.'+(match[7]||0))*1000);timeSetter.call(date,h,m,s,ms);return date;}return string;}return function(date,format,timezone){var text='',parts=[],fn,match;format=format||'mediumDate';format=$locale.DATETIME_FORMATS[format]||format;if(isString(date)){date=NUMBER_STRING.test(date)?toInt(date):jsonStringToDate(date);}if(isNumber(date)){date=new Date(date);}if(!isDate(date)||!isFinite(date.getTime())){return date;}while(format){match=DATE_FORMATS_SPLIT.exec(format);if(match){parts=concat(parts,match,1);format=parts.pop();}else{parts.push(format);format=null;}}var dateTimezoneOffset=date.getTimezoneOffset();if(timezone){dateTimezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);date=convertTimezoneToLocal(date,timezone,true);}forEach(parts,function(value){fn=DATE_FORMATS[value];text+=fn?fn(date,$locale.DATETIME_FORMATS,dateTimezoneOffset):value==='\'\''?'\'':value.replace(/(^'|'$)/g,'').replace(/''/g,'\'');});return text;};}/**
	 * @ngdoc filter
	 * @name json
	 * @kind function
	 *
	 * @description
	 *   Allows you to convert a JavaScript object into JSON string.
	 *
	 *   This filter is mostly useful for debugging. When using the double curly {{value}} notation
	 *   the binding is automatically converted to JSON.
	 *
	 * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.
	 * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.
	 * @returns {string} JSON string.
	 *
	 *
	 * @example
	   <example name="filter-json">
	     <file name="index.html">
	       <pre id="default-spacing">{{ {'name':'value'} | json }}</pre>
	       <pre id="custom-spacing">{{ {'name':'value'} | json:4 }}</pre>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should jsonify filtered objects', function() {
	         expect(element(by.id('default-spacing')).getText()).toMatch(/\{\n {2}"name": ?"value"\n}/);
	         expect(element(by.id('custom-spacing')).getText()).toMatch(/\{\n {4}"name": ?"value"\n}/);
	       });
	     </file>
	   </example>
	 *
	 */function jsonFilter(){return function(object,spacing){if(isUndefined(spacing)){spacing=2;}return toJson(object,spacing);};}/**
	 * @ngdoc filter
	 * @name lowercase
	 * @kind function
	 * @description
	 * Converts string to lowercase.
	 *
	 * See the {@link ng.uppercase uppercase filter documentation} for a functionally identical example.
	 *
	 * @see angular.lowercase
	 */var lowercaseFilter=valueFn(lowercase);/**
	 * @ngdoc filter
	 * @name uppercase
	 * @kind function
	 * @description
	 * Converts string to uppercase.
	 * @example
	   <example module="uppercaseFilterExample" name="filter-uppercase">
	     <file name="index.html">
	       <script>
	         angular.module('uppercaseFilterExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.title = 'This is a title';
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <!-- This title should be formatted normally -->
	         <h1>{{title}}</h1>
	         <!-- This title should be capitalized -->
	         <h1>{{title | uppercase}}</h1>
	       </div>
	     </file>
	   </example>
	 */var uppercaseFilter=valueFn(uppercase);/**
	 * @ngdoc filter
	 * @name limitTo
	 * @kind function
	 *
	 * @description
	 * Creates a new array or string containing only a specified number of elements. The elements are
	 * taken from either the beginning or the end of the source array, string or number, as specified by
	 * the value and sign (positive or negative) of `limit`. Other array-like objects are also supported
	 * (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input,
	 * it is converted to a string.
	 *
	 * @param {Array|ArrayLike|string|number} input - Array/array-like, string or number to be limited.
	 * @param {string|number} limit - The length of the returned array or string. If the `limit` number
	 *     is positive, `limit` number of items from the beginning of the source array/string are copied.
	 *     If the number is negative, `limit` number  of items from the end of the source array/string
	 *     are copied. The `limit` will be trimmed if it exceeds `array.length`. If `limit` is undefined,
	 *     the input will be returned unchanged.
	 * @param {(string|number)=} begin - Index at which to begin limitation. As a negative index,
	 *     `begin` indicates an offset from the end of `input`. Defaults to `0`.
	 * @returns {Array|string} A new sub-array or substring of length `limit` or less if the input had
	 *     less than `limit` elements.
	 *
	 * @example
	   <example module="limitToExample" name="limit-to-filter">
	     <file name="index.html">
	       <script>
	         angular.module('limitToExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.numbers = [1,2,3,4,5,6,7,8,9];
	             $scope.letters = "abcdefghi";
	             $scope.longNumber = 2345432342;
	             $scope.numLimit = 3;
	             $scope.letterLimit = 3;
	             $scope.longNumberLimit = 3;
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <label>
	            Limit {{numbers}} to:
	            <input type="number" step="1" ng-model="numLimit">
	         </label>
	         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>
	         <label>
	            Limit {{letters}} to:
	            <input type="number" step="1" ng-model="letterLimit">
	         </label>
	         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>
	         <label>
	            Limit {{longNumber}} to:
	            <input type="number" step="1" ng-model="longNumberLimit">
	         </label>
	         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       var numLimitInput = element(by.model('numLimit'));
	       var letterLimitInput = element(by.model('letterLimit'));
	       var longNumberLimitInput = element(by.model('longNumberLimit'));
	       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));
	       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));
	       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));

	       it('should limit the number array to first three items', function() {
	         expect(numLimitInput.getAttribute('value')).toBe('3');
	         expect(letterLimitInput.getAttribute('value')).toBe('3');
	         expect(longNumberLimitInput.getAttribute('value')).toBe('3');
	         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');
	         expect(limitedLetters.getText()).toEqual('Output letters: abc');
	         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');
	       });

	       // There is a bug in safari and protractor that doesn't like the minus key
	       // it('should update the output when -3 is entered', function() {
	       //   numLimitInput.clear();
	       //   numLimitInput.sendKeys('-3');
	       //   letterLimitInput.clear();
	       //   letterLimitInput.sendKeys('-3');
	       //   longNumberLimitInput.clear();
	       //   longNumberLimitInput.sendKeys('-3');
	       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');
	       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');
	       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');
	       // });

	       it('should not exceed the maximum size of input array', function() {
	         numLimitInput.clear();
	         numLimitInput.sendKeys('100');
	         letterLimitInput.clear();
	         letterLimitInput.sendKeys('100');
	         longNumberLimitInput.clear();
	         longNumberLimitInput.sendKeys('100');
	         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');
	         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');
	         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');
	       });
	     </file>
	   </example>
	*/function limitToFilter(){return function(input,limit,begin){if(Math.abs(Number(limit))===Infinity){limit=Number(limit);}else{limit=toInt(limit);}if(isNumberNaN(limit))return input;if(isNumber(input))input=input.toString();if(!isArrayLike(input))return input;begin=!begin||isNaN(begin)?0:toInt(begin);begin=begin<0?Math.max(0,input.length+begin):begin;if(limit>=0){return sliceFn(input,begin,begin+limit);}else{if(begin===0){return sliceFn(input,limit,input.length);}else{return sliceFn(input,Math.max(0,begin+limit),begin);}}};}function sliceFn(input,begin,end){if(isString(input))return input.slice(begin,end);return slice.call(input,begin,end);}/**
	 * @ngdoc filter
	 * @name orderBy
	 * @kind function
	 *
	 * @description
	 * Returns an array containing the items from the specified `collection`, ordered by a `comparator`
	 * function based on the values computed using the `expression` predicate.
	 *
	 * For example, `[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'` would result in
	 * `[{id: 'bar'}, {id: 'foo'}]`.
	 *
	 * The `collection` can be an Array or array-like object (e.g. NodeList, jQuery object, TypedArray,
	 * String, etc).
	 *
	 * The `expression` can be a single predicate, or a list of predicates each serving as a tie-breaker
	 * for the preceding one. The `expression` is evaluated against each item and the output is used
	 * for comparing with other items.
	 *
	 * You can change the sorting order by setting `reverse` to `true`. By default, items are sorted in
	 * ascending order.
	 *
	 * The comparison is done using the `comparator` function. If none is specified, a default, built-in
	 * comparator is used (see below for details - in a nutshell, it compares numbers numerically and
	 * strings alphabetically).
	 *
	 * ### Under the hood
	 *
	 * Ordering the specified `collection` happens in two phases:
	 *
	 * 1. All items are passed through the predicate (or predicates), and the returned values are saved
	 *    along with their type (`string`, `number` etc). For example, an item `{label: 'foo'}`, passed
	 *    through a predicate that extracts the value of the `label` property, would be transformed to:
	 *    ```
	 *    {
	 *      value: 'foo',
	 *      type: 'string',
	 *      index: ...
	 *    }
	 *    ```
	 *    **Note:** `null` values use `'null'` as their type.
	 * 2. The comparator function is used to sort the items, based on the derived values, types and
	 *    indices.
	 *
	 * If you use a custom comparator, it will be called with pairs of objects of the form
	 * `{value: ..., type: '...', index: ...}` and is expected to return `0` if the objects are equal
	 * (as far as the comparator is concerned), `-1` if the 1st one should be ranked higher than the
	 * second, or `1` otherwise.
	 *
	 * In order to ensure that the sorting will be deterministic across platforms, if none of the
	 * specified predicates can distinguish between two items, `orderBy` will automatically introduce a
	 * dummy predicate that returns the item's index as `value`.
	 * (If you are using a custom comparator, make sure it can handle this predicate as well.)
	 *
	 * If a custom comparator still can't distinguish between two items, then they will be sorted based
	 * on their index using the built-in comparator.
	 *
	 * Finally, in an attempt to simplify things, if a predicate returns an object as the extracted
	 * value for an item, `orderBy` will try to convert that object to a primitive value, before passing
	 * it to the comparator. The following rules govern the conversion:
	 *
	 * 1. If the object has a `valueOf()` method that returns a primitive, its return value will be
	 *    used instead.<br />
	 *    (If the object has a `valueOf()` method that returns another object, then the returned object
	 *    will be used in subsequent steps.)
	 * 2. If the object has a custom `toString()` method (i.e. not the one inherited from `Object`) that
	 *    returns a primitive, its return value will be used instead.<br />
	 *    (If the object has a `toString()` method that returns another object, then the returned object
	 *    will be used in subsequent steps.)
	 * 3. No conversion; the object itself is used.
	 *
	 * ### The default comparator
	 *
	 * The default, built-in comparator should be sufficient for most usecases. In short, it compares
	 * numbers numerically, strings alphabetically (and case-insensitively), for objects falls back to
	 * using their index in the original collection, sorts values of different types by type and puts
	 * `undefined` and `null` values at the end of the sorted list.
	 *
	 * More specifically, it follows these steps to determine the relative order of items:
	 *
	 * 1. If the compared values are of different types:
	 *    - If one of the values is undefined, consider it "greater than" the other.
	 *    - Else if one of the values is null, consider it "greater than" the other.
	 *    - Else compare the types themselves alphabetically.
	 * 2. If both values are of type `string`, compare them alphabetically in a case- and
	 *    locale-insensitive way.
	 * 3. If both values are objects, compare their indices instead.
	 * 4. Otherwise, return:
	 *    -  `0`, if the values are equal (by strict equality comparison, i.e. using `===`).
	 *    - `-1`, if the 1st value is "less than" the 2nd value (compared using the `<` operator).
	 *    -  `1`, otherwise.
	 *
	 * **Note:** If you notice numbers not being sorted as expected, make sure they are actually being
	 *           saved as numbers and not strings.
	 * **Note:** For the purpose of sorting, `null` and `undefined` are considered "greater than"
	 *           any other value (with undefined "greater than" null). This effectively means that `null`
	 *           and `undefined` values end up at the end of a list sorted in ascending order.
	 * **Note:** `null` values use `'null'` as their type to be able to distinguish them from objects.
	 *
	 * @param {Array|ArrayLike} collection - The collection (array or array-like object) to sort.
	 * @param {(Function|string|Array.<Function|string>)=} expression - A predicate (or list of
	 *    predicates) to be used by the comparator to determine the order of elements.
	 *
	 *    Can be one of:
	 *
	 *    - `Function`: A getter function. This function will be called with each item as argument and
	 *      the return value will be used for sorting.
	 *    - `string`: An AngularJS expression. This expression will be evaluated against each item and the
	 *      result will be used for sorting. For example, use `'label'` to sort by a property called
	 *      `label` or `'label.substring(0, 3)'` to sort by the first 3 characters of the `label`
	 *      property.<br />
	 *      (The result of a constant expression is interpreted as a property name to be used for
	 *      comparison. For example, use `'"special name"'` (note the extra pair of quotes) to sort by a
	 *      property called `special name`.)<br />
	 *      An expression can be optionally prefixed with `+` or `-` to control the sorting direction,
	 *      ascending or descending. For example, `'+label'` or `'-label'`. If no property is provided,
	 *      (e.g. `'+'` or `'-'`), the collection element itself is used in comparisons.
	 *    - `Array`: An array of function and/or string predicates. If a predicate cannot determine the
	 *      relative order of two items, the next predicate is used as a tie-breaker.
	 *
	 * **Note:** If the predicate is missing or empty then it defaults to `'+'`.
	 *
	 * @param {boolean=} reverse - If `true`, reverse the sorting order.
	 * @param {(Function)=} comparator - The comparator function used to determine the relative order of
	 *    value pairs. If omitted, the built-in comparator will be used.
	 *
	 * @returns {Array} - The sorted array.
	 *
	 *
	 * @example
	 * ### Ordering a table with `ngRepeat`
	 *
	 * The example below demonstrates a simple {@link ngRepeat ngRepeat}, where the data is sorted by
	 * age in descending order (expression is set to `'-age'`). The `comparator` is not set, which means
	 * it defaults to the built-in comparator.
	 *
	   <example name="orderBy-static" module="orderByExample1">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <table class="friends">
	           <tr>
	             <th>Name</th>
	             <th>Phone Number</th>
	             <th>Age</th>
	           </tr>
	           <tr ng-repeat="friend in friends | orderBy:'-age'">
	             <td>{{friend.name}}</td>
	             <td>{{friend.phone}}</td>
	             <td>{{friend.age}}</td>
	           </tr>
	         </table>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('orderByExample1', [])
	         .controller('ExampleController', ['$scope', function($scope) {
	           $scope.friends = [
	             {name: 'John',   phone: '555-1212',  age: 10},
	             {name: 'Mary',   phone: '555-9876',  age: 19},
	             {name: 'Mike',   phone: '555-4321',  age: 21},
	             {name: 'Adam',   phone: '555-5678',  age: 35},
	             {name: 'Julie',  phone: '555-8765',  age: 29}
	           ];
	         }]);
	     </file>
	     <file name="style.css">
	       .friends {
	         border-collapse: collapse;
	       }

	       .friends th {
	         border-bottom: 1px solid;
	       }
	       .friends td, .friends th {
	         border-left: 1px solid;
	         padding: 5px 10px;
	       }
	       .friends td:first-child, .friends th:first-child {
	         border-left: none;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       // Element locators
	       var names = element.all(by.repeater('friends').column('friend.name'));

	       it('should sort friends by age in reverse order', function() {
	         expect(names.get(0).getText()).toBe('Adam');
	         expect(names.get(1).getText()).toBe('Julie');
	         expect(names.get(2).getText()).toBe('Mike');
	         expect(names.get(3).getText()).toBe('Mary');
	         expect(names.get(4).getText()).toBe('John');
	       });
	     </file>
	   </example>
	 * <hr />
	 *
	 * @example
	 * ### Changing parameters dynamically
	 *
	 * All parameters can be changed dynamically. The next example shows how you can make the columns of
	 * a table sortable, by binding the `expression` and `reverse` parameters to scope properties.
	 *
	   <example name="orderBy-dynamic" module="orderByExample2">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
	         <hr/>
	         <button ng-click="propertyName = null; reverse = false">Set to unsorted</button>
	         <hr/>
	         <table class="friends">
	           <tr>
	             <th>
	               <button ng-click="sortBy('name')">Name</button>
	               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
	             </th>
	             <th>
	               <button ng-click="sortBy('phone')">Phone Number</button>
	               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
	             </th>
	             <th>
	               <button ng-click="sortBy('age')">Age</button>
	               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
	             </th>
	           </tr>
	           <tr ng-repeat="friend in friends | orderBy:propertyName:reverse">
	             <td>{{friend.name}}</td>
	             <td>{{friend.phone}}</td>
	             <td>{{friend.age}}</td>
	           </tr>
	         </table>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('orderByExample2', [])
	         .controller('ExampleController', ['$scope', function($scope) {
	           var friends = [
	             {name: 'John',   phone: '555-1212',  age: 10},
	             {name: 'Mary',   phone: '555-9876',  age: 19},
	             {name: 'Mike',   phone: '555-4321',  age: 21},
	             {name: 'Adam',   phone: '555-5678',  age: 35},
	             {name: 'Julie',  phone: '555-8765',  age: 29}
	           ];

	           $scope.propertyName = 'age';
	           $scope.reverse = true;
	           $scope.friends = friends;

	           $scope.sortBy = function(propertyName) {
	             $scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;
	             $scope.propertyName = propertyName;
	           };
	         }]);
	     </file>
	     <file name="style.css">
	       .friends {
	         border-collapse: collapse;
	       }

	       .friends th {
	         border-bottom: 1px solid;
	       }
	       .friends td, .friends th {
	         border-left: 1px solid;
	         padding: 5px 10px;
	       }
	       .friends td:first-child, .friends th:first-child {
	         border-left: none;
	       }

	       .sortorder:after {
	         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
	       }
	       .sortorder.reverse:after {
	         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       // Element locators
	       var unsortButton = element(by.partialButtonText('unsorted'));
	       var nameHeader = element(by.partialButtonText('Name'));
	       var phoneHeader = element(by.partialButtonText('Phone'));
	       var ageHeader = element(by.partialButtonText('Age'));
	       var firstName = element(by.repeater('friends').column('friend.name').row(0));
	       var lastName = element(by.repeater('friends').column('friend.name').row(4));

	       it('should sort friends by some property, when clicking on the column header', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         phoneHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Mary');

	         nameHeader.click();
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('Mike');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Adam');
	       });

	       it('should sort friends in reverse order, when clicking on the same column', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Adam');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');
	       });

	       it('should restore the original order, when clicking "Set to unsorted"', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         unsortButton.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Julie');
	       });
	     </file>
	   </example>
	 * <hr />
	 *
	 * @example
	 * ### Using `orderBy` inside a controller
	 *
	 * It is also possible to call the `orderBy` filter manually, by injecting `orderByFilter`, and
	 * calling it with the desired parameters. (Alternatively, you could inject the `$filter` factory
	 * and retrieve the `orderBy` filter with `$filter('orderBy')`.)
	 *
	   <example name="orderBy-call-manually" module="orderByExample3">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
	         <hr/>
	         <button ng-click="sortBy(null)">Set to unsorted</button>
	         <hr/>
	         <table class="friends">
	           <tr>
	             <th>
	               <button ng-click="sortBy('name')">Name</button>
	               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
	             </th>
	             <th>
	               <button ng-click="sortBy('phone')">Phone Number</button>
	               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
	             </th>
	             <th>
	               <button ng-click="sortBy('age')">Age</button>
	               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
	             </th>
	           </tr>
	           <tr ng-repeat="friend in friends">
	             <td>{{friend.name}}</td>
	             <td>{{friend.phone}}</td>
	             <td>{{friend.age}}</td>
	           </tr>
	         </table>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('orderByExample3', [])
	         .controller('ExampleController', ['$scope', 'orderByFilter', function($scope, orderBy) {
	           var friends = [
	             {name: 'John',   phone: '555-1212',  age: 10},
	             {name: 'Mary',   phone: '555-9876',  age: 19},
	             {name: 'Mike',   phone: '555-4321',  age: 21},
	             {name: 'Adam',   phone: '555-5678',  age: 35},
	             {name: 'Julie',  phone: '555-8765',  age: 29}
	           ];

	           $scope.propertyName = 'age';
	           $scope.reverse = true;
	           $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);

	           $scope.sortBy = function(propertyName) {
	             $scope.reverse = (propertyName !== null && $scope.propertyName === propertyName)
	                 ? !$scope.reverse : false;
	             $scope.propertyName = propertyName;
	             $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);
	           };
	         }]);
	     </file>
	     <file name="style.css">
	       .friends {
	         border-collapse: collapse;
	       }

	       .friends th {
	         border-bottom: 1px solid;
	       }
	       .friends td, .friends th {
	         border-left: 1px solid;
	         padding: 5px 10px;
	       }
	       .friends td:first-child, .friends th:first-child {
	         border-left: none;
	       }

	       .sortorder:after {
	         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
	       }
	       .sortorder.reverse:after {
	         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       // Element locators
	       var unsortButton = element(by.partialButtonText('unsorted'));
	       var nameHeader = element(by.partialButtonText('Name'));
	       var phoneHeader = element(by.partialButtonText('Phone'));
	       var ageHeader = element(by.partialButtonText('Age'));
	       var firstName = element(by.repeater('friends').column('friend.name').row(0));
	       var lastName = element(by.repeater('friends').column('friend.name').row(4));

	       it('should sort friends by some property, when clicking on the column header', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         phoneHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Mary');

	         nameHeader.click();
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('Mike');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Adam');
	       });

	       it('should sort friends in reverse order, when clicking on the same column', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Adam');

	         ageHeader.click();
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');
	       });

	       it('should restore the original order, when clicking "Set to unsorted"', function() {
	         expect(firstName.getText()).toBe('Adam');
	         expect(lastName.getText()).toBe('John');

	         unsortButton.click();
	         expect(firstName.getText()).toBe('John');
	         expect(lastName.getText()).toBe('Julie');
	       });
	     </file>
	   </example>
	 * <hr />
	 *
	 * @example
	 * ### Using a custom comparator
	 *
	 * If you have very specific requirements about the way items are sorted, you can pass your own
	 * comparator function. For example, you might need to compare some strings in a locale-sensitive
	 * way. (When specifying a custom comparator, you also need to pass a value for the `reverse`
	 * argument - passing `false` retains the default sorting order, i.e. ascending.)
	 *
	   <example name="orderBy-custom-comparator" module="orderByExample4">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <div class="friends-container custom-comparator">
	           <h3>Locale-sensitive Comparator</h3>
	           <table class="friends">
	             <tr>
	               <th>Name</th>
	               <th>Favorite Letter</th>
	             </tr>
	             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter':false:localeSensitiveComparator">
	               <td>{{friend.name}}</td>
	               <td>{{friend.favoriteLetter}}</td>
	             </tr>
	           </table>
	         </div>
	         <div class="friends-container default-comparator">
	           <h3>Default Comparator</h3>
	           <table class="friends">
	             <tr>
	               <th>Name</th>
	               <th>Favorite Letter</th>
	             </tr>
	             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter'">
	               <td>{{friend.name}}</td>
	               <td>{{friend.favoriteLetter}}</td>
	             </tr>
	           </table>
	         </div>
	       </div>
	     </file>
	     <file name="script.js">
	       angular.module('orderByExample4', [])
	         .controller('ExampleController', ['$scope', function($scope) {
	           $scope.friends = [
	             {name: 'John',   favoriteLetter: 'Ä'},
	             {name: 'Mary',   favoriteLetter: 'Ü'},
	             {name: 'Mike',   favoriteLetter: 'Ö'},
	             {name: 'Adam',   favoriteLetter: 'H'},
	             {name: 'Julie',  favoriteLetter: 'Z'}
	           ];

	           $scope.localeSensitiveComparator = function(v1, v2) {
	             // If we don't get strings, just compare by index
	             if (v1.type !== 'string' || v2.type !== 'string') {
	               return (v1.index < v2.index) ? -1 : 1;
	             }

	             // Compare strings alphabetically, taking locale into account
	             return v1.value.localeCompare(v2.value);
	           };
	         }]);
	     </file>
	     <file name="style.css">
	       .friends-container {
	         display: inline-block;
	         margin: 0 30px;
	       }

	       .friends {
	         border-collapse: collapse;
	       }

	       .friends th {
	         border-bottom: 1px solid;
	       }
	       .friends td, .friends th {
	         border-left: 1px solid;
	         padding: 5px 10px;
	       }
	       .friends td:first-child, .friends th:first-child {
	         border-left: none;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       // Element locators
	       var container = element(by.css('.custom-comparator'));
	       var names = container.all(by.repeater('friends').column('friend.name'));

	       it('should sort friends by favorite letter (in correct alphabetical order)', function() {
	         expect(names.get(0).getText()).toBe('John');
	         expect(names.get(1).getText()).toBe('Adam');
	         expect(names.get(2).getText()).toBe('Mike');
	         expect(names.get(3).getText()).toBe('Mary');
	         expect(names.get(4).getText()).toBe('Julie');
	       });
	     </file>
	   </example>
	 *
	 */orderByFilter.$inject=['$parse'];function orderByFilter($parse){return function(array,sortPredicate,reverseOrder,compareFn){if(array==null)return array;if(!isArrayLike(array)){throw minErr('orderBy')('notarray','Expected array but received: {0}',array);}if(!isArray(sortPredicate)){sortPredicate=[sortPredicate];}if(sortPredicate.length===0){sortPredicate=['+'];}var predicates=processPredicates(sortPredicate);var descending=reverseOrder?-1:1;// Define the `compare()` function. Use a default comparator if none is specified.
	var compare=isFunction(compareFn)?compareFn:defaultCompare;// The next three lines are a version of a Swartzian Transform idiom from Perl
	// (sometimes called the Decorate-Sort-Undecorate idiom)
	// See https://en.wikipedia.org/wiki/Schwartzian_transform
	var compareValues=Array.prototype.map.call(array,getComparisonObject);compareValues.sort(doComparison);array=compareValues.map(function(item){return item.value;});return array;function getComparisonObject(value,index){// NOTE: We are adding an extra `tieBreaker` value based on the element's index.
	// This will be used to keep the sort stable when none of the input predicates can
	// distinguish between two elements.
	return{value:value,tieBreaker:{value:index,type:'number',index:index},predicateValues:predicates.map(function(predicate){return getPredicateValue(predicate.get(value),index);})};}function doComparison(v1,v2){for(var i=0,ii=predicates.length;i<ii;i++){var result=compare(v1.predicateValues[i],v2.predicateValues[i]);if(result){return result*predicates[i].descending*descending;}}return(compare(v1.tieBreaker,v2.tieBreaker)||defaultCompare(v1.tieBreaker,v2.tieBreaker))*descending;}};function processPredicates(sortPredicates){return sortPredicates.map(function(predicate){var descending=1,get=identity;if(isFunction(predicate)){get=predicate;}else if(isString(predicate)){if(predicate.charAt(0)==='+'||predicate.charAt(0)==='-'){descending=predicate.charAt(0)==='-'?-1:1;predicate=predicate.substring(1);}if(predicate!==''){get=$parse(predicate);if(get.constant){var key=get();get=function get(value){return value[key];};}}}return{get:get,descending:descending};});}function isPrimitive(value){switch(typeof value==='undefined'?'undefined':_typeof(value)){case'number':/* falls through */case'boolean':/* falls through */case'string':return true;default:return false;}}function objectValue(value){// If `valueOf` is a valid function use that
	if(isFunction(value.valueOf)){value=value.valueOf();if(isPrimitive(value))return value;}// If `toString` is a valid function and not the one from `Object.prototype` use that
	if(hasCustomToString(value)){value=value.toString();if(isPrimitive(value))return value;}return value;}function getPredicateValue(value,index){var type=typeof value==='undefined'?'undefined':_typeof(value);if(value===null){type='null';}else if(type==='object'){value=objectValue(value);}return{value:value,type:type,index:index};}function defaultCompare(v1,v2){var result=0;var type1=v1.type;var type2=v2.type;if(type1===type2){var value1=v1.value;var value2=v2.value;if(type1==='string'){// Compare strings case-insensitively
	value1=value1.toLowerCase();value2=value2.toLowerCase();}else if(type1==='object'){// For basic objects, use the position of the object
	// in the collection instead of the value
	if(isObject(value1))value1=v1.index;if(isObject(value2))value2=v2.index;}if(value1!==value2){result=value1<value2?-1:1;}}else{result=type1==='undefined'?1:type2==='undefined'?-1:type1==='null'?1:type2==='null'?-1:type1<type2?-1:1;}return result;}}function ngDirective(directive){if(isFunction(directive)){directive={link:directive};}directive.restrict=directive.restrict||'AC';return valueFn(directive);}/**
	 * @ngdoc directive
	 * @name a
	 * @restrict E
	 *
	 * @description
	 * Modifies the default behavior of the html a tag so that the default action is prevented when
	 * the href attribute is empty.
	 *
	 * For dynamically creating `href` attributes for a tags, see the {@link ng.ngHref `ngHref`} directive.
	 */var htmlAnchorDirective=valueFn({restrict:'E',compile:function compile(element,attr){if(!attr.href&&!attr.xlinkHref){return function(scope,element){// If the linked element is not an anchor tag anymore, do nothing
	if(element[0].nodeName.toLowerCase()!=='a')return;// SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
	var href=toString.call(element.prop('href'))==='[object SVGAnimatedString]'?'xlink:href':'href';element.on('click',function(event){// if we have no href url, then don't navigate anywhere.
	if(!element.attr(href)){event.preventDefault();}});};}}});/**
	 * @ngdoc directive
	 * @name ngHref
	 * @restrict A
	 * @priority 99
	 *
	 * @description
	 * Using AngularJS markup like `{{hash}}` in an href attribute will
	 * make the link go to the wrong URL if the user clicks it before
	 * AngularJS has a chance to replace the `{{hash}}` markup with its
	 * value. Until AngularJS replaces the markup the link will be broken
	 * and will most likely return a 404 error. The `ngHref` directive
	 * solves this problem.
	 *
	 * The wrong way to write it:
	 * ```html
	 * <a href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
	 * ```
	 *
	 * The correct way to write it:
	 * ```html
	 * <a ng-href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
	 * ```
	 *
	 * @element A
	 * @param {template} ngHref any string which can contain `{{}}` markup.
	 *
	 * @example
	 * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes
	 * in links and their different behaviors:
	    <example name="ng-href">
	      <file name="index.html">
	        <input ng-model="value" /><br />
	        <a id="link-1" href ng-click="value = 1">link 1</a> (link, don't reload)<br />
	        <a id="link-2" href="" ng-click="value = 2">link 2</a> (link, don't reload)<br />
	        <a id="link-3" ng-href="/{{'123'}}">link 3</a> (link, reload!)<br />
	        <a id="link-4" href="" name="xx" ng-click="value = 4">anchor</a> (link, don't reload)<br />
	        <a id="link-5" name="xxx" ng-click="value = 5">anchor</a> (no link)<br />
	        <a id="link-6" ng-href="{{value}}">link</a> (link, change location)
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should execute ng-click but not reload when href without value', function() {
	          element(by.id('link-1')).click();
	          expect(element(by.model('value')).getAttribute('value')).toEqual('1');
	          expect(element(by.id('link-1')).getAttribute('href')).toBe('');
	        });

	        it('should execute ng-click but not reload when href empty string', function() {
	          element(by.id('link-2')).click();
	          expect(element(by.model('value')).getAttribute('value')).toEqual('2');
	          expect(element(by.id('link-2')).getAttribute('href')).toBe('');
	        });

	        it('should execute ng-click and change url when ng-href specified', function() {
	          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\/123$/);

	          element(by.id('link-3')).click();

	          // At this point, we navigate away from an AngularJS page, so we need
	          // to use browser.driver to get the base webdriver.

	          browser.wait(function() {
	            return browser.driver.getCurrentUrl().then(function(url) {
	              return url.match(/\/123$/);
	            });
	          }, 5000, 'page should navigate to /123');
	        });

	        it('should execute ng-click but not reload when href empty string and name specified', function() {
	          element(by.id('link-4')).click();
	          expect(element(by.model('value')).getAttribute('value')).toEqual('4');
	          expect(element(by.id('link-4')).getAttribute('href')).toBe('');
	        });

	        it('should execute ng-click but not reload when no href but name specified', function() {
	          element(by.id('link-5')).click();
	          expect(element(by.model('value')).getAttribute('value')).toEqual('5');
	          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);
	        });

	        it('should only change url when only ng-href', function() {
	          element(by.model('value')).clear();
	          element(by.model('value')).sendKeys('6');
	          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\/6$/);

	          element(by.id('link-6')).click();

	          // At this point, we navigate away from an AngularJS page, so we need
	          // to use browser.driver to get the base webdriver.
	          browser.wait(function() {
	            return browser.driver.getCurrentUrl().then(function(url) {
	              return url.match(/\/6$/);
	            });
	          }, 5000, 'page should navigate to /6');
	        });
	      </file>
	    </example>
	 *//**
	 * @ngdoc directive
	 * @name ngSrc
	 * @restrict A
	 * @priority 99
	 *
	 * @description
	 * Using AngularJS markup like `{{hash}}` in a `src` attribute doesn't
	 * work right: The browser will fetch from the URL with the literal
	 * text `{{hash}}` until AngularJS replaces the expression inside
	 * `{{hash}}`. The `ngSrc` directive solves this problem.
	 *
	 * The buggy way to write it:
	 * ```html
	 * <img src="http://www.gravatar.com/avatar/{{hash}}" alt="Description"/>
	 * ```
	 *
	 * The correct way to write it:
	 * ```html
	 * <img ng-src="http://www.gravatar.com/avatar/{{hash}}" alt="Description" />
	 * ```
	 *
	 * @element IMG
	 * @param {template} ngSrc any string which can contain `{{}}` markup.
	 *//**
	 * @ngdoc directive
	 * @name ngSrcset
	 * @restrict A
	 * @priority 99
	 *
	 * @description
	 * Using AngularJS markup like `{{hash}}` in a `srcset` attribute doesn't
	 * work right: The browser will fetch from the URL with the literal
	 * text `{{hash}}` until AngularJS replaces the expression inside
	 * `{{hash}}`. The `ngSrcset` directive solves this problem.
	 *
	 * The buggy way to write it:
	 * ```html
	 * <img srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description"/>
	 * ```
	 *
	 * The correct way to write it:
	 * ```html
	 * <img ng-srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description" />
	 * ```
	 *
	 * @element IMG
	 * @param {template} ngSrcset any string which can contain `{{}}` markup.
	 *//**
	 * @ngdoc directive
	 * @name ngDisabled
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 *
	 * This directive sets the `disabled` attribute on the element (typically a form control,
	 * e.g. `input`, `button`, `select` etc.) if the
	 * {@link guide/expression expression} inside `ngDisabled` evaluates to truthy.
	 *
	 * A special directive is necessary because we cannot use interpolation inside the `disabled`
	 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
	 *
	 * @example
	    <example name="ng-disabled">
	      <file name="index.html">
	        <label>Click me to toggle: <input type="checkbox" ng-model="checked"></label><br/>
	        <button ng-model="button" ng-disabled="checked">Button</button>
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should toggle button', function() {
	          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();
	          element(by.model('checked')).click();
	          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();
	        });
	      </file>
	    </example>
	 *
	 * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,
	 *     then the `disabled` attribute will be set on the element
	 *//**
	 * @ngdoc directive
	 * @name ngChecked
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 * Sets the `checked` attribute on the element, if the expression inside `ngChecked` is truthy.
	 *
	 * Note that this directive should not be used together with {@link ngModel `ngModel`},
	 * as this can lead to unexpected behavior.
	 *
	 * A special directive is necessary because we cannot use interpolation inside the `checked`
	 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
	 *
	 * @example
	    <example name="ng-checked">
	      <file name="index.html">
	        <label>Check me to check both: <input type="checkbox" ng-model="leader"></label><br/>
	        <input id="checkFollower" type="checkbox" ng-checked="leader" aria-label="Follower input">
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should check both checkBoxes', function() {
	          expect(element(by.id('checkFollower')).getAttribute('checked')).toBeFalsy();
	          element(by.model('leader')).click();
	          expect(element(by.id('checkFollower')).getAttribute('checked')).toBeTruthy();
	        });
	      </file>
	    </example>
	 *
	 * @element INPUT
	 * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,
	 *     then the `checked` attribute will be set on the element
	 *//**
	 * @ngdoc directive
	 * @name ngReadonly
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 *
	 * Sets the `readonly` attribute on the element, if the expression inside `ngReadonly` is truthy.
	 * Note that `readonly` applies only to `input` elements with specific types. [See the input docs on
	 * MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly) for more information.
	 *
	 * A special directive is necessary because we cannot use interpolation inside the `readonly`
	 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
	 *
	 * @example
	    <example name="ng-readonly">
	      <file name="index.html">
	        <label>Check me to make text readonly: <input type="checkbox" ng-model="checked"></label><br/>
	        <input type="text" ng-readonly="checked" value="I'm AngularJS" aria-label="Readonly field" />
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should toggle readonly attr', function() {
	          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeFalsy();
	          element(by.model('checked')).click();
	          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeTruthy();
	        });
	      </file>
	    </example>
	 *
	 * @element INPUT
	 * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,
	 *     then special attribute "readonly" will be set on the element
	 *//**
	 * @ngdoc directive
	 * @name ngSelected
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 *
	 * Sets the `selected` attribute on the element, if the expression inside `ngSelected` is truthy.
	 *
	 * A special directive is necessary because we cannot use interpolation inside the `selected`
	 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
	 *
	 * <div class="alert alert-warning">
	 *   **Note:** `ngSelected` does not interact with the `select` and `ngModel` directives, it only
	 *   sets the `selected` attribute on the element. If you are using `ngModel` on the select, you
	 *   should not use `ngSelected` on the options, as `ngModel` will set the select value and
	 *   selected options.
	 * </div>
	 *
	 * @example
	    <example name="ng-selected">
	      <file name="index.html">
	        <label>Check me to select: <input type="checkbox" ng-model="selected"></label><br/>
	        <select aria-label="ngSelected demo">
	          <option>Hello!</option>
	          <option id="greet" ng-selected="selected">Greetings!</option>
	        </select>
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should select Greetings!', function() {
	          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();
	          element(by.model('selected')).click();
	          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();
	        });
	      </file>
	    </example>
	 *
	 * @element OPTION
	 * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,
	 *     then special attribute "selected" will be set on the element
	 *//**
	 * @ngdoc directive
	 * @name ngOpen
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 *
	 * Sets the `open` attribute on the element, if the expression inside `ngOpen` is truthy.
	 *
	 * A special directive is necessary because we cannot use interpolation inside the `open`
	 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
	 *
	 * ## A note about browser compatibility
	 *
	 * Internet Explorer and Edge do not support the `details` element, it is
	 * recommended to use {@link ng.ngShow} and {@link ng.ngHide} instead.
	 *
	 * @example
	     <example name="ng-open">
	       <file name="index.html">
	         <label>Toggle details: <input type="checkbox" ng-model="open"></label><br/>
	         <details id="details" ng-open="open">
	            <summary>List</summary>
	            <ul>
	              <li>Apple</li>
	              <li>Orange</li>
	              <li>Durian</li>
	            </ul>
	         </details>
	       </file>
	       <file name="protractor.js" type="protractor">
	         it('should toggle open', function() {
	           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();
	           element(by.model('open')).click();
	           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();
	         });
	       </file>
	     </example>
	 *
	 * @element DETAILS
	 * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,
	 *     then special attribute "open" will be set on the element
	 */var ngAttributeAliasDirectives={};// boolean attrs are evaluated
	forEach(BOOLEAN_ATTR,function(propName,attrName){// binding to multiple is not supported
	if(propName==='multiple')return;function defaultLinkFn(scope,element,attr){scope.$watch(attr[normalized],function ngBooleanAttrWatchAction(value){attr.$set(attrName,!!value);});}var normalized=directiveNormalize('ng-'+attrName);var linkFn=defaultLinkFn;if(propName==='checked'){linkFn=function linkFn(scope,element,attr){// ensuring ngChecked doesn't interfere with ngModel when both are set on the same input
	if(attr.ngModel!==attr[normalized]){defaultLinkFn(scope,element,attr);}};}ngAttributeAliasDirectives[normalized]=function(){return{restrict:'A',priority:100,link:linkFn};};});// aliased input attrs are evaluated
	forEach(ALIASED_ATTR,function(htmlAttr,ngAttr){ngAttributeAliasDirectives[ngAttr]=function(){return{priority:100,link:function link(scope,element,attr){//special case ngPattern when a literal regular expression value
	//is used as the expression (this way we don't have to watch anything).
	if(ngAttr==='ngPattern'&&attr.ngPattern.charAt(0)==='/'){var match=attr.ngPattern.match(REGEX_STRING_REGEXP);if(match){attr.$set('ngPattern',new RegExp(match[1],match[2]));return;}}scope.$watch(attr[ngAttr],function ngAttrAliasWatchAction(value){attr.$set(ngAttr,value);});}};};});// ng-src, ng-srcset, ng-href are interpolated
	forEach(['src','srcset','href'],function(attrName){var normalized=directiveNormalize('ng-'+attrName);ngAttributeAliasDirectives[normalized]=['$sce',function($sce){return{priority:99,// it needs to run after the attributes are interpolated
	link:function link(scope,element,attr){var propName=attrName,name=attrName;if(attrName==='href'&&toString.call(element.prop('href'))==='[object SVGAnimatedString]'){name='xlinkHref';attr.$attr[name]='xlink:href';propName=null;}// We need to sanitize the url at least once, in case it is a constant
	// non-interpolated attribute.
	attr.$set(normalized,$sce.getTrustedMediaUrl(attr[normalized]));attr.$observe(normalized,function(value){if(!value){if(attrName==='href'){attr.$set(name,null);}return;}attr.$set(name,value);// Support: IE 9-11 only
	// On IE, if "ng:src" directive declaration is used and "src" attribute doesn't exist
	// then calling element.setAttribute('src', 'foo') doesn't do anything, so we need
	// to set the property as well to achieve the desired effect.
	// We use attr[attrName] value since $set might have sanitized the url.
	if(msie&&propName)element.prop(propName,attr[name]);});}};}];});/* global -nullFormCtrl, -PENDING_CLASS, -SUBMITTED_CLASS
	 */var nullFormCtrl={$addControl:noop,$getControls:valueFn([]),$$renameControl:nullFormRenameControl,$removeControl:noop,$setValidity:noop,$setDirty:noop,$setPristine:noop,$setSubmitted:noop,$$setSubmitted:noop},PENDING_CLASS='ng-pending',SUBMITTED_CLASS='ng-submitted';function nullFormRenameControl(control,name){control.$name=name;}/**
	 * @ngdoc type
	 * @name form.FormController
	 *
	 * @property {boolean} $pristine True if user has not interacted with the form yet.
	 * @property {boolean} $dirty True if user has already interacted with the form.
	 * @property {boolean} $valid True if all of the containing forms and controls are valid.
	 * @property {boolean} $invalid True if at least one containing control or form is invalid.
	 * @property {boolean} $submitted True if user has submitted the form even if its invalid.
	 *
	 * @property {Object} $pending An object hash, containing references to controls or forms with
	 *  pending validators, where:
	 *
	 *  - keys are validations tokens (error names).
	 *  - values are arrays of controls or forms that have a pending validator for the given error name.
	 *
	 * See {@link form.FormController#$error $error} for a list of built-in validation tokens.
	 *
	 * @property {Object} $error An object hash, containing references to controls or forms with failing
	 *  validators, where:
	 *
	 *  - keys are validation tokens (error names),
	 *  - values are arrays of controls or forms that have a failing validator for the given error name.
	 *
	 *  Built-in validation tokens:
	 *  - `email`
	 *  - `max`
	 *  - `maxlength`
	 *  - `min`
	 *  - `minlength`
	 *  - `number`
	 *  - `pattern`
	 *  - `required`
	 *  - `url`
	 *  - `date`
	 *  - `datetimelocal`
	 *  - `time`
	 *  - `week`
	 *  - `month`
	 *
	 * @description
	 * `FormController` keeps track of all its controls and nested forms as well as the state of them,
	 * such as being valid/invalid or dirty/pristine.
	 *
	 * Each {@link ng.directive:form form} directive creates an instance
	 * of `FormController`.
	 *
	 *///asks for $scope to fool the BC controller module
	FormController.$inject=['$element','$attrs','$scope','$animate','$interpolate'];function FormController($element,$attrs,$scope,$animate,$interpolate){this.$$controls=[];// init state
	this.$error={};this.$$success={};this.$pending=undefined;this.$name=$interpolate($attrs.name||$attrs.ngForm||'')($scope);this.$dirty=false;this.$pristine=true;this.$valid=true;this.$invalid=false;this.$submitted=false;this.$$parentForm=nullFormCtrl;this.$$element=$element;this.$$animate=$animate;setupValidity(this);}FormController.prototype={/**
	   * @ngdoc method
	   * @name form.FormController#$rollbackViewValue
	   *
	   * @description
	   * Rollback all form controls pending updates to the `$modelValue`.
	   *
	   * Updates may be pending by a debounced event or because the input is waiting for a some future
	   * event defined in `ng-model-options`. This method is typically needed by the reset button of
	   * a form that uses `ng-model-options` to pend updates.
	   */$rollbackViewValue:function $rollbackViewValue(){forEach(this.$$controls,function(control){control.$rollbackViewValue();});},/**
	   * @ngdoc method
	   * @name form.FormController#$commitViewValue
	   *
	   * @description
	   * Commit all form controls pending updates to the `$modelValue`.
	   *
	   * Updates may be pending by a debounced event or because the input is waiting for a some future
	   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`
	   * usually handles calling this in response to input events.
	   */$commitViewValue:function $commitViewValue(){forEach(this.$$controls,function(control){control.$commitViewValue();});},/**
	   * @ngdoc method
	   * @name form.FormController#$addControl
	   * @param {object} control control object, either a {@link form.FormController} or an
	   * {@link ngModel.NgModelController}
	   *
	   * @description
	   * Register a control with the form. Input elements using ngModelController do this automatically
	   * when they are linked.
	   *
	   * Note that the current state of the control will not be reflected on the new parent form. This
	   * is not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`
	   * state.
	   *
	   * However, if the method is used programmatically, for example by adding dynamically created controls,
	   * or controls that have been previously removed without destroying their corresponding DOM element,
	   * it's the developers responsibility to make sure the current state propagates to the parent form.
	   *
	   * For example, if an input control is added that is already `$dirty` and has `$error` properties,
	   * calling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.
	   */$addControl:function $addControl(control){// Breaking change - before, inputs whose name was "hasOwnProperty" were quietly ignored
	// and not added to the scope.  Now we throw an error.
	assertNotHasOwnProperty(control.$name,'input');this.$$controls.push(control);if(control.$name){this[control.$name]=control;}control.$$parentForm=this;},/**
	   * @ngdoc method
	   * @name form.FormController#$getControls
	   * @returns {Array} the controls that are currently part of this form
	   *
	   * @description
	   * This method returns a **shallow copy** of the controls that are currently part of this form.
	   * The controls can be instances of {@link form.FormController `FormController`}
	   * ({@link ngForm "child-forms"}) and of {@link ngModel.NgModelController `NgModelController`}.
	   * If you need access to the controls of child-forms, you have to call `$getControls()`
	   * recursively on them.
	   * This can be used for example to iterate over all controls to validate them.
	   *
	   * The controls can be accessed normally, but adding to, or removing controls from the array has
	   * no effect on the form. Instead, use {@link form.FormController#$addControl `$addControl()`} and
	   * {@link form.FormController#$removeControl `$removeControl()`} for this use-case.
	   * Likewise, adding a control to, or removing a control from the form is not reflected
	   * in the shallow copy. That means you should get a fresh copy from `$getControls()` every time
	   * you need access to the controls.
	   */$getControls:function $getControls(){return shallowCopy(this.$$controls);},// Private API: rename a form control
	$$renameControl:function $$renameControl(control,newName){var oldName=control.$name;if(this[oldName]===control){delete this[oldName];}this[newName]=control;control.$name=newName;},/**
	   * @ngdoc method
	   * @name form.FormController#$removeControl
	   * @param {object} control control object, either a {@link form.FormController} or an
	   * {@link ngModel.NgModelController}
	   *
	   * @description
	   * Deregister a control from the form.
	   *
	   * Input elements using ngModelController do this automatically when they are destroyed.
	   *
	   * Note that only the removed control's validation state (`$errors`etc.) will be removed from the
	   * form. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be
	   * different from case to case. For example, removing the only `$dirty` control from a form may or
	   * may not mean that the form is still `$dirty`.
	   */$removeControl:function $removeControl(control){if(control.$name&&this[control.$name]===control){delete this[control.$name];}forEach(this.$pending,function(value,name){// eslint-disable-next-line no-invalid-this
	this.$setValidity(name,null,control);},this);forEach(this.$error,function(value,name){// eslint-disable-next-line no-invalid-this
	this.$setValidity(name,null,control);},this);forEach(this.$$success,function(value,name){// eslint-disable-next-line no-invalid-this
	this.$setValidity(name,null,control);},this);arrayRemove(this.$$controls,control);control.$$parentForm=nullFormCtrl;},/**
	   * @ngdoc method
	   * @name form.FormController#$setDirty
	   *
	   * @description
	   * Sets the form to a dirty state.
	   *
	   * This method can be called to add the 'ng-dirty' class and set the form to a dirty
	   * state (ng-dirty class). This method will also propagate to parent forms.
	   */$setDirty:function $setDirty(){this.$$animate.removeClass(this.$$element,PRISTINE_CLASS);this.$$animate.addClass(this.$$element,DIRTY_CLASS);this.$dirty=true;this.$pristine=false;this.$$parentForm.$setDirty();},/**
	   * @ngdoc method
	   * @name form.FormController#$setPristine
	   *
	   * @description
	   * Sets the form to its pristine state.
	   *
	   * This method sets the form's `$pristine` state to true, the `$dirty` state to false, removes
	   * the `ng-dirty` class and adds the `ng-pristine` class. Additionally, it sets the `$submitted`
	   * state to false.
	   *
	   * This method will also propagate to all the controls contained in this form.
	   *
	   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after
	   * saving or resetting it.
	   */$setPristine:function $setPristine(){this.$$animate.setClass(this.$$element,PRISTINE_CLASS,DIRTY_CLASS+' '+SUBMITTED_CLASS);this.$dirty=false;this.$pristine=true;this.$submitted=false;forEach(this.$$controls,function(control){control.$setPristine();});},/**
	   * @ngdoc method
	   * @name form.FormController#$setUntouched
	   *
	   * @description
	   * Sets the form to its untouched state.
	   *
	   * This method can be called to remove the 'ng-touched' class and set the form controls to their
	   * untouched state (ng-untouched class).
	   *
	   * Setting a form controls back to their untouched state is often useful when setting the form
	   * back to its pristine state.
	   */$setUntouched:function $setUntouched(){forEach(this.$$controls,function(control){control.$setUntouched();});},/**
	   * @ngdoc method
	   * @name form.FormController#$setSubmitted
	   *
	   * @description
	   * Sets the form to its `$submitted` state. This will also set `$submitted` on all child and
	   * parent forms of the form.
	   */$setSubmitted:function $setSubmitted(){var rootForm=this;while(rootForm.$$parentForm&&rootForm.$$parentForm!==nullFormCtrl){rootForm=rootForm.$$parentForm;}rootForm.$$setSubmitted();},$$setSubmitted:function $$setSubmitted(){this.$$animate.addClass(this.$$element,SUBMITTED_CLASS);this.$submitted=true;forEach(this.$$controls,function(control){if(control.$$setSubmitted){control.$$setSubmitted();}});}};/**
	 * @ngdoc method
	 * @name form.FormController#$setValidity
	 *
	 * @description
	 * Change the validity state of the form, and notify the parent form (if any).
	 *
	 * Application developers will rarely need to call this method directly. It is used internally, by
	 * {@link ngModel.NgModelController#$setValidity NgModelController.$setValidity()}, to propagate a
	 * control's validity state to the parent `FormController`.
	 *
	 * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be
	 *        assigned to either `$error[validationErrorKey]` or `$pending[validationErrorKey]` (for
	 *        unfulfilled `$asyncValidators`), so that it is available for data-binding. The
	 *        `validationErrorKey` should be in camelCase and will get converted into dash-case for
	 *        class name. Example: `myError` will result in `ng-valid-my-error` and
	 *        `ng-invalid-my-error` classes and can be bound to as `{{ someForm.$error.myError }}`.
	 * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending
	 *        (undefined),  or skipped (null). Pending is used for unfulfilled `$asyncValidators`.
	 *        Skipped is used by AngularJS when validators do not run because of parse errors and when
	 *        `$asyncValidators` do not run because any of the `$validators` failed.
	 * @param {NgModelController | FormController} controller - The controller whose validity state is
	 *        triggering the change.
	 */addSetValidityMethod({clazz:FormController,set:function set(object,property,controller){var list=object[property];if(!list){object[property]=[controller];}else{var index=list.indexOf(controller);if(index===-1){list.push(controller);}}},unset:function unset(object,property,controller){var list=object[property];if(!list){return;}arrayRemove(list,controller);if(list.length===0){delete object[property];}}});/**
	 * @ngdoc directive
	 * @name ngForm
	 * @restrict EAC
	 *
	 * @description
	 * Helper directive that makes it possible to create control groups inside a
	 * {@link ng.directive:form `form`} directive.
	 * These "child forms" can be used, for example, to determine the validity of a sub-group of
	 * controls.
	 *
	 * <div class="alert alert-danger">
	 * **Note**: `ngForm` cannot be used as a replacement for `<form>`, because it lacks its
	 * [built-in HTML functionality](https://html.spec.whatwg.org/#the-form-element).
	 * Specifically, you cannot submit `ngForm` like a `<form>` tag. That means,
	 * you cannot send data to the server with `ngForm`, or integrate it with
	 * {@link ng.directive:ngSubmit `ngSubmit`}.
	 * </div>
	 *
	 * @param {string=} ngForm|name Name of the form. If specified, the form controller will
	 *                              be published into the related scope, under this name.
	 *
	 *//**
	 * @ngdoc directive
	 * @name form
	 * @restrict E
	 *
	 * @description
	 * Directive that instantiates
	 * {@link form.FormController FormController}.
	 *
	 * If the `name` attribute is specified, the form controller is published onto the current scope under
	 * this name.
	 *
	 * ## Alias: {@link ng.directive:ngForm `ngForm`}
	 *
	 * In AngularJS, forms can be nested. This means that the outer form is valid when all of the child
	 * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so
	 * AngularJS provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to
	 * `form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group
	 * of controls needs to be determined.
	 *
	 * ## CSS classes
	 *  - `ng-valid` is set if the form is valid.
	 *  - `ng-invalid` is set if the form is invalid.
	 *  - `ng-pending` is set if the form is pending.
	 *  - `ng-pristine` is set if the form is pristine.
	 *  - `ng-dirty` is set if the form is dirty.
	 *  - `ng-submitted` is set if the form was submitted.
	 *
	 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
	 *
	 *
	 * ## Submitting a form and preventing the default action
	 *
	 * Since the role of forms in client-side AngularJS applications is different than in classical
	 * roundtrip apps, it is desirable for the browser not to translate the form submission into a full
	 * page reload that sends the data to the server. Instead some javascript logic should be triggered
	 * to handle the form submission in an application-specific way.
	 *
	 * For this reason, AngularJS prevents the default action (form submission to the server) unless the
	 * `<form>` element has an `action` attribute specified.
	 *
	 * You can use one of the following two ways to specify what javascript method should be called when
	 * a form is submitted:
	 *
	 * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element
	 * - {@link ng.directive:ngClick ngClick} directive on the first
	  *  button or input field of type submit (input[type=submit])
	 *
	 * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}
	 * or {@link ng.directive:ngClick ngClick} directives.
	 * This is because of the following form submission rules in the HTML specification:
	 *
	 * - If a form has only one input field then hitting enter in this field triggers form submit
	 * (`ngSubmit`)
	 * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter
	 * doesn't trigger submit
	 * - if a form has one or more input fields and one or more buttons or input[type=submit] then
	 * hitting enter in any of the input fields will trigger the click handler on the *first* button or
	 * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)
	 *
	 * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is
	 * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
	 * to have access to the updated model.
	 *
	 * @animations
	 * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.
	 * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any
	 * other validations that are performed within the form. Animations in ngForm are similar to how
	 * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well
	 * as JS animations.
	 *
	 * The following example shows a simple way to utilize CSS transitions to style a form element
	 * that has been rendered as invalid after it has been validated:
	 *
	 * <pre>
	 * //be sure to include ngAnimate as a module to hook into more
	 * //advanced animations
	 * .my-form {
	 *   transition:0.5s linear all;
	 *   background: white;
	 * }
	 * .my-form.ng-invalid {
	 *   background: red;
	 *   color:white;
	 * }
	 * </pre>
	 *
	 * @example
	    <example name="ng-form" deps="angular-animate.js" animations="true" fixBase="true" module="formExample">
	      <file name="index.html">
	       <script>
	         angular.module('formExample', [])
	           .controller('FormController', ['$scope', function($scope) {
	             $scope.userType = 'guest';
	           }]);
	       </script>
	       <style>
	        .my-form {
	          transition:all linear 0.5s;
	          background: transparent;
	        }
	        .my-form.ng-invalid {
	          background: red;
	        }
	       </style>
	       <form name="myForm" ng-controller="FormController" class="my-form">
	         userType: <input name="input" ng-model="userType" required>
	         <span class="error" ng-show="myForm.input.$error.required">Required!</span><br>
	         <code>userType = {{userType}}</code><br>
	         <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br>
	         <code>myForm.input.$error = {{myForm.input.$error}}</code><br>
	         <code>myForm.$valid = {{myForm.$valid}}</code><br>
	         <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br>
	        </form>
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should initialize to model', function() {
	          var userType = element(by.binding('userType'));
	          var valid = element(by.binding('myForm.input.$valid'));

	          expect(userType.getText()).toContain('guest');
	          expect(valid.getText()).toContain('true');
	        });

	        it('should be invalid if empty', function() {
	          var userType = element(by.binding('userType'));
	          var valid = element(by.binding('myForm.input.$valid'));
	          var userInput = element(by.model('userType'));

	          userInput.clear();
	          userInput.sendKeys('');

	          expect(userType.getText()).toEqual('userType =');
	          expect(valid.getText()).toContain('false');
	        });
	      </file>
	    </example>
	 *
	 * @param {string=} name Name of the form. If specified, the form controller will be published into
	 *                       related scope, under this name.
	 */var formDirectiveFactory=function formDirectiveFactory(isNgForm){return['$timeout','$parse',function($timeout,$parse){var formDirective={name:'form',restrict:isNgForm?'EAC':'E',require:['form','^^?form'],//first is the form's own ctrl, second is an optional parent form
	controller:FormController,compile:function ngFormCompile(formElement,attr){// Setup initial state of the control
	formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);var nameAttr=attr.name?'name':isNgForm&&attr.ngForm?'ngForm':false;return{pre:function ngFormPreLink(scope,formElement,attr,ctrls){var controller=ctrls[0];// if `action` attr is not present on the form, prevent the default action (submission)
	if(!('action'in attr)){// we can't use jq events because if a form is destroyed during submission the default
	// action is not prevented. see #1238
	//
	// IE 9 is not affected because it doesn't fire a submit event and try to do a full
	// page reload if the form was destroyed by submission of the form via a click handler
	// on a button in the form. Looks like an IE9 specific bug.
	var handleFormSubmission=function handleFormSubmission(event){scope.$apply(function(){controller.$commitViewValue();controller.$setSubmitted();});event.preventDefault();};formElement[0].addEventListener('submit',handleFormSubmission);// unregister the preventDefault listener so that we don't not leak memory but in a
	// way that will achieve the prevention of the default action.
	formElement.on('$destroy',function(){$timeout(function(){formElement[0].removeEventListener('submit',handleFormSubmission);},0,false);});}var parentFormCtrl=ctrls[1]||controller.$$parentForm;parentFormCtrl.$addControl(controller);var setter=nameAttr?getSetter(controller.$name):noop;if(nameAttr){setter(scope,controller);attr.$observe(nameAttr,function(newValue){if(controller.$name===newValue)return;setter(scope,undefined);controller.$$parentForm.$$renameControl(controller,newValue);setter=getSetter(controller.$name);setter(scope,controller);});}formElement.on('$destroy',function(){controller.$$parentForm.$removeControl(controller);setter(scope,undefined);extend(controller,nullFormCtrl);//stop propagating child destruction handlers upwards
	});}};}};return formDirective;function getSetter(expression){if(expression===''){//create an assignable expression, so forms with an empty name can be renamed later
	return $parse('this[""]').assign;}return $parse(expression).assign||noop;}}];};var formDirective=formDirectiveFactory();var ngFormDirective=formDirectiveFactory(true);// helper methods
	function setupValidity(instance){instance.$$classCache={};instance.$$classCache[INVALID_CLASS]=!(instance.$$classCache[VALID_CLASS]=instance.$$element.hasClass(VALID_CLASS));}function addSetValidityMethod(context){var clazz=context.clazz,set=context.set,unset=context.unset;clazz.prototype.$setValidity=function(validationErrorKey,state,controller){if(isUndefined(state)){createAndSet(this,'$pending',validationErrorKey,controller);}else{unsetAndCleanup(this,'$pending',validationErrorKey,controller);}if(!isBoolean(state)){unset(this.$error,validationErrorKey,controller);unset(this.$$success,validationErrorKey,controller);}else{if(state){unset(this.$error,validationErrorKey,controller);set(this.$$success,validationErrorKey,controller);}else{set(this.$error,validationErrorKey,controller);unset(this.$$success,validationErrorKey,controller);}}if(this.$pending){cachedToggleClass(this,PENDING_CLASS,true);this.$valid=this.$invalid=undefined;toggleValidationCss(this,'',null);}else{cachedToggleClass(this,PENDING_CLASS,false);this.$valid=isObjectEmpty(this.$error);this.$invalid=!this.$valid;toggleValidationCss(this,'',this.$valid);}// re-read the state as the set/unset methods could have
	// combined state in this.$error[validationError] (used for forms),
	// where setting/unsetting only increments/decrements the value,
	// and does not replace it.
	var combinedState;if(this.$pending&&this.$pending[validationErrorKey]){combinedState=undefined;}else if(this.$error[validationErrorKey]){combinedState=false;}else if(this.$$success[validationErrorKey]){combinedState=true;}else{combinedState=null;}toggleValidationCss(this,validationErrorKey,combinedState);this.$$parentForm.$setValidity(validationErrorKey,combinedState,this);};function createAndSet(ctrl,name,value,controller){if(!ctrl[name]){ctrl[name]={};}set(ctrl[name],value,controller);}function unsetAndCleanup(ctrl,name,value,controller){if(ctrl[name]){unset(ctrl[name],value,controller);}if(isObjectEmpty(ctrl[name])){ctrl[name]=undefined;}}function cachedToggleClass(ctrl,className,switchValue){if(switchValue&&!ctrl.$$classCache[className]){ctrl.$$animate.addClass(ctrl.$$element,className);ctrl.$$classCache[className]=true;}else if(!switchValue&&ctrl.$$classCache[className]){ctrl.$$animate.removeClass(ctrl.$$element,className);ctrl.$$classCache[className]=false;}}function toggleValidationCss(ctrl,validationErrorKey,isValid){validationErrorKey=validationErrorKey?'-'+snake_case(validationErrorKey,'-'):'';cachedToggleClass(ctrl,VALID_CLASS+validationErrorKey,isValid===true);cachedToggleClass(ctrl,INVALID_CLASS+validationErrorKey,isValid===false);}}function isObjectEmpty(obj){if(obj){for(var prop in obj){if(obj.hasOwnProperty(prop)){return false;}}}return true;}/* global
	  VALID_CLASS: false,
	  INVALID_CLASS: false,
	  PRISTINE_CLASS: false,
	  DIRTY_CLASS: false,
	  ngModelMinErr: false
	*/// Regex code was initially obtained from SO prior to modification: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231
	var ISO_DATE_REGEXP=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/;// See valid URLs in RFC3987 (http://tools.ietf.org/html/rfc3987)
	// Note: We are being more lenient, because browsers are too.
	//   1. Scheme
	//   2. Slashes
	//   3. Username
	//   4. Password
	//   5. Hostname
	//   6. Port
	//   7. Path
	//   8. Query
	//   9. Fragment
	//                 1111111111111111 222   333333    44444        55555555555555555555555     666     77777777     8888888     999
	var URL_REGEXP=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;// eslint-disable-next-line max-len
	var EMAIL_REGEXP=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;var NUMBER_REGEXP=/^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;var DATE_REGEXP=/^(\d{4,})-(\d{2})-(\d{2})$/;var DATETIMELOCAL_REGEXP=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;var WEEK_REGEXP=/^(\d{4,})-W(\d\d)$/;var MONTH_REGEXP=/^(\d{4,})-(\d\d)$/;var TIME_REGEXP=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;var PARTIAL_VALIDATION_EVENTS='keydown wheel mousedown';var PARTIAL_VALIDATION_TYPES=createMap();forEach('date,datetime-local,month,time,week'.split(','),function(type){PARTIAL_VALIDATION_TYPES[type]=true;});var inputType={/**
	   * @ngdoc input
	   * @name input[text]
	   *
	   * @description
	   * Standard HTML text input with AngularJS data binding, inherited by most of the `input` elements.
	   *
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} required Adds `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	   *    minlength.
	   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
	   *    any length.
	   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
	   *    that contains the regular expression body that will be converted to a regular expression
	   *    as in the ngPattern directive.
	   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	   *    If the expression evaluates to a RegExp object, then this is used directly.
	   *    If the expression evaluates to a string, then it will be converted to a RegExp
	   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	   *    `new RegExp('^abc$')`.<br />
	   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	   *    start at the index of the last search's match, thus not taking the whole input value into
	   *    account.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
	   *    This parameter is ignored for input[type=password] controls, which will never trim the
	   *    input.
	   *
	   * @example
	      <example name="text-input-directive" module="textInputExample">
	        <file name="index.html">
	         <script>
	           angular.module('textInputExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.example = {
	                 text: 'guest',
	                 word: /^\s*\w*\s*$/
	               };
	             }]);
	         </script>
	         <form name="myForm" ng-controller="ExampleController">
	           <label>Single word:
	             <input type="text" name="input" ng-model="example.text"
	                    ng-pattern="example.word" required ng-trim="false">
	           </label>
	           <div role="alert">
	             <span class="error" ng-show="myForm.input.$error.required">
	               Required!</span>
	             <span class="error" ng-show="myForm.input.$error.pattern">
	               Single word only!</span>
	           </div>
	           <code>text = {{example.text}}</code><br/>
	           <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br/>
	           <code>myForm.input.$error = {{myForm.input.$error}}</code><br/>
	           <code>myForm.$valid = {{myForm.$valid}}</code><br/>
	           <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br/>
	          </form>
	        </file>
	        <file name="protractor.js" type="protractor">
	          var text = element(by.binding('example.text'));
	          var valid = element(by.binding('myForm.input.$valid'));
	          var input = element(by.model('example.text'));

	          it('should initialize to model', function() {
	            expect(text.getText()).toContain('guest');
	            expect(valid.getText()).toContain('true');
	          });

	          it('should be invalid if empty', function() {
	            input.clear();
	            input.sendKeys('');

	            expect(text.getText()).toEqual('text =');
	            expect(valid.getText()).toContain('false');
	          });

	          it('should be invalid if multi word', function() {
	            input.clear();
	            input.sendKeys('hello world');

	            expect(valid.getText()).toContain('false');
	          });
	        </file>
	      </example>
	   */'text':textInputType,/**
	     * @ngdoc input
	     * @name input[date]
	     *
	     * @description
	     * Input with date validation and transformation. In browsers that do not yet support
	     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601
	     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many
	     * modern browsers do not yet support this input type, it is important to provide cues to users on the
	     * expected input format via a placeholder or label.
	     *
	     * The model must always be a Date object, otherwise AngularJS will throw an error.
	     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
	     *
	     * The timezone to be used to read/write the `Date` instance in the model can be defined using
	     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
	     *
	     * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	     * @param {string=} name Property name of the form under which the control is published.
	     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a
	     *   valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
	     *   (e.g. `min="{{minDate | date:'yyyy-MM-dd'}}"`). Note that `min` will also add native HTML5
	     *   constraint validation.
	     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be
	     *   a valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
	     *   (e.g. `max="{{maxDate | date:'yyyy-MM-dd'}}"`). Note that `max` will also add native HTML5
	     *   constraint validation.
	     * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO date string
	     *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
	     * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO date string
	     *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
	     * @param {string=} required Sets `required` validation error key if the value is not entered.
	     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	     *    `required` when you want to data-bind to the `required` attribute.
	     * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	     *    interaction with the input element.
	     *
	     * @example
	     <example name="date-input-directive" module="dateInputExample">
	     <file name="index.html">
	       <script>
	          angular.module('dateInputExample', [])
	            .controller('DateController', ['$scope', function($scope) {
	              $scope.example = {
	                value: new Date(2013, 9, 22)
	              };
	            }]);
	       </script>
	       <form name="myForm" ng-controller="DateController as dateCtrl">
	          <label for="exampleInput">Pick a date in 2013:</label>
	          <input type="date" id="exampleInput" name="input" ng-model="example.value"
	              placeholder="yyyy-MM-dd" min="2013-01-01" max="2013-12-31" required />
	          <div role="alert">
	            <span class="error" ng-show="myForm.input.$error.required">
	                Required!</span>
	            <span class="error" ng-show="myForm.input.$error.date">
	                Not a valid date!</span>
	           </div>
	           <tt>value = {{example.value | date: "yyyy-MM-dd"}}</tt><br/>
	           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	       </form>
	     </file>
	     <file name="protractor.js" type="protractor">
	        var value = element(by.binding('example.value | date: "yyyy-MM-dd"'));
	        var valid = element(by.binding('myForm.input.$valid'));

	        // currently protractor/webdriver does not support
	        // sending keys to all known HTML5 input controls
	        // for various browsers (see https://github.com/angular/protractor/issues/562).
	        function setInput(val) {
	          // set the value of the element and force validation.
	          var scr = "var ipt = document.getElementById('exampleInput'); " +
	          "ipt.value = '" + val + "';" +
	          "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
	          browser.executeScript(scr);
	        }

	        it('should initialize to model', function() {
	          expect(value.getText()).toContain('2013-10-22');
	          expect(valid.getText()).toContain('myForm.input.$valid = true');
	        });

	        it('should be invalid if empty', function() {
	          setInput('');
	          expect(value.getText()).toEqual('value =');
	          expect(valid.getText()).toContain('myForm.input.$valid = false');
	        });

	        it('should be invalid if over max', function() {
	          setInput('2015-01-01');
	          expect(value.getText()).toContain('');
	          expect(valid.getText()).toContain('myForm.input.$valid = false');
	        });
	     </file>
	     </example>
	     */'date':createDateInputType('date',DATE_REGEXP,createDateParser(DATE_REGEXP,['yyyy','MM','dd']),'yyyy-MM-dd'),/**
	    * @ngdoc input
	    * @name input[datetime-local]
	    *
	    * @description
	    * Input with datetime validation and transformation. In browsers that do not yet support
	    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
	    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.
	    *
	    * The model must always be a Date object, otherwise AngularJS will throw an error.
	    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
	    *
	    * The timezone to be used to read/write the `Date` instance in the model can be defined using
	    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
	    *
	    * The format of the displayed time can be adjusted with the
	    * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions} `timeSecondsFormat`
	    * and `timeStripZeroSeconds`.
	    *
	    * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	    * @param {string=} name Property name of the form under which the control is published.
	    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
	    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
	    *   inside this attribute (e.g. `min="{{minDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
	    *   Note that `min` will also add native HTML5 constraint validation.
	    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
	    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
	    *   inside this attribute (e.g. `max="{{maxDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
	    *   Note that `max` will also add native HTML5 constraint validation.
	    * @param {(date|string)=} ngMin Sets the `min` validation error key to the Date / ISO datetime string
	    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
	    * @param {(date|string)=} ngMax Sets the `max` validation error key to the Date / ISO datetime string
	    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
	    * @param {string=} required Sets `required` validation error key if the value is not entered.
	    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	    *    `required` when you want to data-bind to the `required` attribute.
	    * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	    *    interaction with the input element.
	    *
	    * @example
	    <example name="datetimelocal-input-directive" module="dateExample">
	    <file name="index.html">
	      <script>
	        angular.module('dateExample', [])
	          .controller('DateController', ['$scope', function($scope) {
	            $scope.example = {
	              value: new Date(2010, 11, 28, 14, 57)
	            };
	          }]);
	      </script>
	      <form name="myForm" ng-controller="DateController as dateCtrl">
	        <label for="exampleInput">Pick a date between in 2013:</label>
	        <input type="datetime-local" id="exampleInput" name="input" ng-model="example.value"
	            placeholder="yyyy-MM-ddTHH:mm:ss" min="2001-01-01T00:00:00" max="2013-12-31T00:00:00" required />
	        <div role="alert">
	          <span class="error" ng-show="myForm.input.$error.required">
	              Required!</span>
	          <span class="error" ng-show="myForm.input.$error.datetimelocal">
	              Not a valid date!</span>
	        </div>
	        <tt>value = {{example.value | date: "yyyy-MM-ddTHH:mm:ss"}}</tt><br/>
	        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	      </form>
	    </file>
	    <file name="protractor.js" type="protractor">
	      var value = element(by.binding('example.value | date: "yyyy-MM-ddTHH:mm:ss"'));
	      var valid = element(by.binding('myForm.input.$valid'));

	      // currently protractor/webdriver does not support
	      // sending keys to all known HTML5 input controls
	      // for various browsers (https://github.com/angular/protractor/issues/562).
	      function setInput(val) {
	        // set the value of the element and force validation.
	        var scr = "var ipt = document.getElementById('exampleInput'); " +
	        "ipt.value = '" + val + "';" +
	        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
	        browser.executeScript(scr);
	      }

	      it('should initialize to model', function() {
	        expect(value.getText()).toContain('2010-12-28T14:57:00');
	        expect(valid.getText()).toContain('myForm.input.$valid = true');
	      });

	      it('should be invalid if empty', function() {
	        setInput('');
	        expect(value.getText()).toEqual('value =');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });

	      it('should be invalid if over max', function() {
	        setInput('2015-01-01T23:59:00');
	        expect(value.getText()).toContain('');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });
	    </file>
	    </example>
	    */'datetime-local':createDateInputType('datetimelocal',DATETIMELOCAL_REGEXP,createDateParser(DATETIMELOCAL_REGEXP,['yyyy','MM','dd','HH','mm','ss','sss']),'yyyy-MM-ddTHH:mm:ss.sss'),/**
	   * @ngdoc input
	   * @name input[time]
	   *
	   * @description
	   * Input with time validation and transformation. In browsers that do not yet support
	   * the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
	   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a
	   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.
	   *
	   * The model must always be a Date object, otherwise AngularJS will throw an error.
	   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
	   *
	   * The timezone to be used to read/write the `Date` instance in the model can be defined using
	   * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions}. By default,
	   * this is the timezone of the browser.
	   *
	   * The format of the displayed time can be adjusted with the
	   * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions} `timeSecondsFormat`
	   * and `timeStripZeroSeconds`.
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
	   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
	   *   attribute (e.g. `min="{{minTime | date:'HH:mm:ss'}}"`). Note that `min` will also add
	   *   native HTML5 constraint validation.
	   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
	   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
	   *   attribute (e.g. `max="{{maxTime | date:'HH:mm:ss'}}"`). Note that `max` will also add
	   *   native HTML5 constraint validation.
	   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO time string the
	   *   `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
	   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO time string the
	   *   `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
	   * @param {string=} required Sets `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	   <example name="time-input-directive" module="timeExample">
	   <file name="index.html">
	     <script>
	      angular.module('timeExample', [])
	        .controller('DateController', ['$scope', function($scope) {
	          $scope.example = {
	            value: new Date(1970, 0, 1, 14, 57, 0)
	          };
	        }]);
	     </script>
	     <form name="myForm" ng-controller="DateController as dateCtrl">
	        <label for="exampleInput">Pick a time between 8am and 5pm:</label>
	        <input type="time" id="exampleInput" name="input" ng-model="example.value"
	            placeholder="HH:mm:ss" min="08:00:00" max="17:00:00" required />
	        <div role="alert">
	          <span class="error" ng-show="myForm.input.$error.required">
	              Required!</span>
	          <span class="error" ng-show="myForm.input.$error.time">
	              Not a valid date!</span>
	        </div>
	        <tt>value = {{example.value | date: "HH:mm:ss"}}</tt><br/>
	        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	     </form>
	   </file>
	   <file name="protractor.js" type="protractor">
	      var value = element(by.binding('example.value | date: "HH:mm:ss"'));
	      var valid = element(by.binding('myForm.input.$valid'));

	      // currently protractor/webdriver does not support
	      // sending keys to all known HTML5 input controls
	      // for various browsers (https://github.com/angular/protractor/issues/562).
	      function setInput(val) {
	        // set the value of the element and force validation.
	        var scr = "var ipt = document.getElementById('exampleInput'); " +
	        "ipt.value = '" + val + "';" +
	        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
	        browser.executeScript(scr);
	      }

	      it('should initialize to model', function() {
	        expect(value.getText()).toContain('14:57:00');
	        expect(valid.getText()).toContain('myForm.input.$valid = true');
	      });

	      it('should be invalid if empty', function() {
	        setInput('');
	        expect(value.getText()).toEqual('value =');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });

	      it('should be invalid if over max', function() {
	        setInput('23:59:00');
	        expect(value.getText()).toContain('');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });
	   </file>
	   </example>
	   */'time':createDateInputType('time',TIME_REGEXP,createDateParser(TIME_REGEXP,['HH','mm','ss','sss']),'HH:mm:ss.sss'),/**
	    * @ngdoc input
	    * @name input[week]
	    *
	    * @description
	    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support
	    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
	    * week format (yyyy-W##), for example: `2013-W02`.
	    *
	    * The model must always be a Date object, otherwise AngularJS will throw an error.
	    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
	    *
	    * The value of the resulting Date object will be set to Thursday at 00:00:00 of the requested week,
	    * due to ISO-8601 week numbering standards. Information on ISO's system for numbering the weeks of the
	    * year can be found at: https://en.wikipedia.org/wiki/ISO_8601#Week_dates
	    *
	    * The timezone to be used to read/write the `Date` instance in the model can be defined using
	    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
	    *
	    * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	    * @param {string=} name Property name of the form under which the control is published.
	    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
	    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
	    *   attribute (e.g. `min="{{minWeek | date:'yyyy-Www'}}"`). Note that `min` will also add
	    *   native HTML5 constraint validation.
	    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
	    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
	    *   attribute (e.g. `max="{{maxWeek | date:'yyyy-Www'}}"`). Note that `max` will also add
	    *   native HTML5 constraint validation.
	    * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
	    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
	    * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
	    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
	    * @param {string=} required Sets `required` validation error key if the value is not entered.
	    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	    *    `required` when you want to data-bind to the `required` attribute.
	    * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	    *    interaction with the input element.
	    *
	    * @example
	    <example name="week-input-directive" module="weekExample">
	    <file name="index.html">
	      <script>
	      angular.module('weekExample', [])
	        .controller('DateController', ['$scope', function($scope) {
	          $scope.example = {
	            value: new Date(2013, 0, 3)
	          };
	        }]);
	      </script>
	      <form name="myForm" ng-controller="DateController as dateCtrl">
	        <label>Pick a date between in 2013:
	          <input id="exampleInput" type="week" name="input" ng-model="example.value"
	                 placeholder="YYYY-W##" min="2012-W32"
	                 max="2013-W52" required />
	        </label>
	        <div role="alert">
	          <span class="error" ng-show="myForm.input.$error.required">
	              Required!</span>
	          <span class="error" ng-show="myForm.input.$error.week">
	              Not a valid date!</span>
	        </div>
	        <tt>value = {{example.value | date: "yyyy-Www"}}</tt><br/>
	        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	      </form>
	    </file>
	    <file name="protractor.js" type="protractor">
	      var value = element(by.binding('example.value | date: "yyyy-Www"'));
	      var valid = element(by.binding('myForm.input.$valid'));

	      // currently protractor/webdriver does not support
	      // sending keys to all known HTML5 input controls
	      // for various browsers (https://github.com/angular/protractor/issues/562).
	      function setInput(val) {
	        // set the value of the element and force validation.
	        var scr = "var ipt = document.getElementById('exampleInput'); " +
	        "ipt.value = '" + val + "';" +
	        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
	        browser.executeScript(scr);
	      }

	      it('should initialize to model', function() {
	        expect(value.getText()).toContain('2013-W01');
	        expect(valid.getText()).toContain('myForm.input.$valid = true');
	      });

	      it('should be invalid if empty', function() {
	        setInput('');
	        expect(value.getText()).toEqual('value =');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });

	      it('should be invalid if over max', function() {
	        setInput('2015-W01');
	        expect(value.getText()).toContain('');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });
	    </file>
	    </example>
	    */'week':createDateInputType('week',WEEK_REGEXP,weekParser,'yyyy-Www'),/**
	   * @ngdoc input
	   * @name input[month]
	   *
	   * @description
	   * Input with month validation and transformation. In browsers that do not yet support
	   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
	   * month format (yyyy-MM), for example: `2009-01`.
	   *
	   * The model must always be a Date object, otherwise AngularJS will throw an error.
	   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
	   * If the model is not set to the first of the month, the next view to model update will set it
	   * to the first of the month.
	   *
	   * The timezone to be used to read/write the `Date` instance in the model can be defined using
	   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
	   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
	   *   attribute (e.g. `min="{{minMonth | date:'yyyy-MM'}}"`). Note that `min` will also add
	   *   native HTML5 constraint validation.
	   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
	   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
	   *   attribute (e.g. `max="{{maxMonth | date:'yyyy-MM'}}"`). Note that `max` will also add
	   *   native HTML5 constraint validation.
	   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
	   *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
	   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
	   *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.

	   * @param {string=} required Sets `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	   <example name="month-input-directive" module="monthExample">
	   <file name="index.html">
	     <script>
	      angular.module('monthExample', [])
	        .controller('DateController', ['$scope', function($scope) {
	          $scope.example = {
	            value: new Date(2013, 9, 1)
	          };
	        }]);
	     </script>
	     <form name="myForm" ng-controller="DateController as dateCtrl">
	       <label for="exampleInput">Pick a month in 2013:</label>
	       <input id="exampleInput" type="month" name="input" ng-model="example.value"
	          placeholder="yyyy-MM" min="2013-01" max="2013-12" required />
	       <div role="alert">
	         <span class="error" ng-show="myForm.input.$error.required">
	            Required!</span>
	         <span class="error" ng-show="myForm.input.$error.month">
	            Not a valid month!</span>
	       </div>
	       <tt>value = {{example.value | date: "yyyy-MM"}}</tt><br/>
	       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	     </form>
	   </file>
	   <file name="protractor.js" type="protractor">
	      var value = element(by.binding('example.value | date: "yyyy-MM"'));
	      var valid = element(by.binding('myForm.input.$valid'));

	      // currently protractor/webdriver does not support
	      // sending keys to all known HTML5 input controls
	      // for various browsers (https://github.com/angular/protractor/issues/562).
	      function setInput(val) {
	        // set the value of the element and force validation.
	        var scr = "var ipt = document.getElementById('exampleInput'); " +
	        "ipt.value = '" + val + "';" +
	        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
	        browser.executeScript(scr);
	      }

	      it('should initialize to model', function() {
	        expect(value.getText()).toContain('2013-10');
	        expect(valid.getText()).toContain('myForm.input.$valid = true');
	      });

	      it('should be invalid if empty', function() {
	        setInput('');
	        expect(value.getText()).toEqual('value =');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });

	      it('should be invalid if over max', function() {
	        setInput('2015-01');
	        expect(value.getText()).toContain('');
	        expect(valid.getText()).toContain('myForm.input.$valid = false');
	      });
	   </file>
	   </example>
	   */'month':createDateInputType('month',MONTH_REGEXP,createDateParser(MONTH_REGEXP,['yyyy','MM']),'yyyy-MM'),/**
	   * @ngdoc input
	   * @name input[number]
	   *
	   * @description
	   * Text input with number validation and transformation. Sets the `number` validation
	   * error if not a valid number.
	   *
	   * <div class="alert alert-warning">
	   * The model must always be of type `number` otherwise AngularJS will throw an error.
	   * Be aware that a string containing a number is not enough. See the {@link ngModel:numfmt}
	   * error docs for more information and an example of how to convert your model if necessary.
	   * </div>
	   *
	   *
	   *
	   * @knownIssue
	   *
	   * ### HTML5 constraint validation and `allowInvalid`
	   *
	   * In browsers that follow the
	   * [HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),
	   * `input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.
	   * If a non-number is entered in the input, the browser will report the value as an empty string,
	   * which means the view / model values in `ngModel` and subsequently the scope value
	   * will also be an empty string.
	   *
	   * @knownIssue
	   *
	   * ### Large numbers and `step` validation
	   *
	   * The `step` validation will not work correctly for very large numbers (e.g. 9999999999) due to
	   * Javascript's arithmetic limitations. If you need to handle large numbers, purpose-built
	   * libraries (e.g. https://github.com/MikeMcl/big.js/), can be included into AngularJS by
	   * {@link guide/forms#modifying-built-in-validators overwriting the validators}
	   * for `number` and / or `step`, or by {@link guide/forms#custom-validation applying custom validators}
	   * to an `input[text]` element. The source for `input[number]` type can be used as a starting
	   * point for both implementations.
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
	   *    Can be interpolated.
	   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
	   *    Can be interpolated.
	   * @param {string=} ngMin Like `min`, sets the `min` validation error key if the value entered is less than `ngMin`,
	   *    but does not trigger HTML5 native validation. Takes an expression.
	   * @param {string=} ngMax Like `max`, sets the `max` validation error key if the value entered is greater than `ngMax`,
	   *    but does not trigger HTML5 native validation. Takes an expression.
	   * @param {string=} step Sets the `step` validation error key if the value entered does not fit the `step` constraint.
	   *    Can be interpolated.
	   * @param {string=} ngStep Like `step`, sets the `step` validation error key if the value entered does not fit the `ngStep` constraint,
	   *    but does not trigger HTML5 native validation. Takes an expression.
	   * @param {string=} required Sets `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	   *    minlength.
	   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
	   *    any length.
	   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
	   *    that contains the regular expression body that will be converted to a regular expression
	   *    as in the ngPattern directive.
	   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	   *    If the expression evaluates to a RegExp object, then this is used directly.
	   *    If the expression evaluates to a string, then it will be converted to a RegExp
	   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	   *    `new RegExp('^abc$')`.<br />
	   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	   *    start at the index of the last search's match, thus not taking the whole input value into
	   *    account.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	      <example name="number-input-directive" module="numberExample">
	        <file name="index.html">
	         <script>
	           angular.module('numberExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.example = {
	                 value: 12
	               };
	             }]);
	         </script>
	         <form name="myForm" ng-controller="ExampleController">
	           <label>Number:
	             <input type="number" name="input" ng-model="example.value"
	                    min="0" max="99" required>
	          </label>
	           <div role="alert">
	             <span class="error" ng-show="myForm.input.$error.required">
	               Required!</span>
	             <span class="error" ng-show="myForm.input.$error.number">
	               Not valid number!</span>
	           </div>
	           <tt>value = {{example.value}}</tt><br/>
	           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	          </form>
	        </file>
	        <file name="protractor.js" type="protractor">
	          var value = element(by.binding('example.value'));
	          var valid = element(by.binding('myForm.input.$valid'));
	          var input = element(by.model('example.value'));

	          it('should initialize to model', function() {
	            expect(value.getText()).toContain('12');
	            expect(valid.getText()).toContain('true');
	          });

	          it('should be invalid if empty', function() {
	            input.clear();
	            input.sendKeys('');
	            expect(value.getText()).toEqual('value =');
	            expect(valid.getText()).toContain('false');
	          });

	          it('should be invalid if over max', function() {
	            input.clear();
	            input.sendKeys('123');
	            expect(value.getText()).toEqual('value =');
	            expect(valid.getText()).toContain('false');
	          });
	        </file>
	      </example>
	   */'number':numberInputType,/**
	   * @ngdoc input
	   * @name input[url]
	   *
	   * @description
	   * Text input with URL validation. Sets the `url` validation error key if the content is not a
	   * valid URL.
	   *
	   * <div class="alert alert-warning">
	   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex
	   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify
	   * the built-in validators (see the {@link guide/forms Forms guide})
	   * </div>
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} required Sets `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	   *    minlength.
	   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
	   *    any length.
	   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
	   *    that contains the regular expression body that will be converted to a regular expression
	   *    as in the ngPattern directive.
	   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	   *    If the expression evaluates to a RegExp object, then this is used directly.
	   *    If the expression evaluates to a string, then it will be converted to a RegExp
	   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	   *    `new RegExp('^abc$')`.<br />
	   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	   *    start at the index of the last search's match, thus not taking the whole input value into
	   *    account.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	      <example name="url-input-directive" module="urlExample">
	        <file name="index.html">
	         <script>
	           angular.module('urlExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.url = {
	                 text: 'http://google.com'
	               };
	             }]);
	         </script>
	         <form name="myForm" ng-controller="ExampleController">
	           <label>URL:
	             <input type="url" name="input" ng-model="url.text" required>
	           <label>
	           <div role="alert">
	             <span class="error" ng-show="myForm.input.$error.required">
	               Required!</span>
	             <span class="error" ng-show="myForm.input.$error.url">
	               Not valid url!</span>
	           </div>
	           <tt>text = {{url.text}}</tt><br/>
	           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>
	          </form>
	        </file>
	        <file name="protractor.js" type="protractor">
	          var text = element(by.binding('url.text'));
	          var valid = element(by.binding('myForm.input.$valid'));
	          var input = element(by.model('url.text'));

	          it('should initialize to model', function() {
	            expect(text.getText()).toContain('http://google.com');
	            expect(valid.getText()).toContain('true');
	          });

	          it('should be invalid if empty', function() {
	            input.clear();
	            input.sendKeys('');

	            expect(text.getText()).toEqual('text =');
	            expect(valid.getText()).toContain('false');
	          });

	          it('should be invalid if not url', function() {
	            input.clear();
	            input.sendKeys('box');

	            expect(valid.getText()).toContain('false');
	          });
	        </file>
	      </example>
	   */'url':urlInputType,/**
	   * @ngdoc input
	   * @name input[email]
	   *
	   * @description
	   * Text input with email validation. Sets the `email` validation error key if not a valid email
	   * address.
	   *
	   * <div class="alert alert-warning">
	   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex
	   * used in Chromium, which may not fulfill your app's requirements.
	   * If you need stricter (e.g. requiring a top-level domain), or more relaxed validation
	   * (e.g. allowing IPv6 address literals) you can use `ng-pattern` or
	   * modify the built-in validators (see the {@link guide/forms Forms guide}).
	   * </div>
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} required Sets `required` validation error key if the value is not entered.
	   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	   *    `required` when you want to data-bind to the `required` attribute.
	   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	   *    minlength.
	   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
	   *    any length.
	   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
	   *    that contains the regular expression body that will be converted to a regular expression
	   *    as in the ngPattern directive.
	   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	   *    If the expression evaluates to a RegExp object, then this is used directly.
	   *    If the expression evaluates to a string, then it will be converted to a RegExp
	   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	   *    `new RegExp('^abc$')`.<br />
	   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	   *    start at the index of the last search's match, thus not taking the whole input value into
	   *    account.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	      <example name="email-input-directive" module="emailExample">
	        <file name="index.html">
	         <script>
	           angular.module('emailExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.email = {
	                 text: 'me@example.com'
	               };
	             }]);
	         </script>
	           <form name="myForm" ng-controller="ExampleController">
	             <label>Email:
	               <input type="email" name="input" ng-model="email.text" required>
	             </label>
	             <div role="alert">
	               <span class="error" ng-show="myForm.input.$error.required">
	                 Required!</span>
	               <span class="error" ng-show="myForm.input.$error.email">
	                 Not valid email!</span>
	             </div>
	             <tt>text = {{email.text}}</tt><br/>
	             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
	             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
	             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>
	           </form>
	         </file>
	        <file name="protractor.js" type="protractor">
	          var text = element(by.binding('email.text'));
	          var valid = element(by.binding('myForm.input.$valid'));
	          var input = element(by.model('email.text'));

	          it('should initialize to model', function() {
	            expect(text.getText()).toContain('me@example.com');
	            expect(valid.getText()).toContain('true');
	          });

	          it('should be invalid if empty', function() {
	            input.clear();
	            input.sendKeys('');
	            expect(text.getText()).toEqual('text =');
	            expect(valid.getText()).toContain('false');
	          });

	          it('should be invalid if not email', function() {
	            input.clear();
	            input.sendKeys('xxx');

	            expect(valid.getText()).toContain('false');
	          });
	        </file>
	      </example>
	   */'email':emailInputType,/**
	   * @ngdoc input
	   * @name input[radio]
	   *
	   * @description
	   * HTML radio button.
	   *
	   * **Note:**<br>
	   * All inputs controlled by {@link ngModel ngModel} (including those of type `radio`) will use the
	   * value of their `name` attribute to determine the property under which their
	   * {@link ngModel.NgModelController NgModelController} will be published on the parent
	   * {@link form.FormController FormController}. Thus, if you use the same `name` for multiple
	   * inputs of a form (e.g. a group of radio inputs), only _one_ `NgModelController` will be
	   * published on the parent `FormController` under that name. The rest of the controllers will
	   * continue to work as expected, but you won't be able to access them as properties on the parent
	   * `FormController`.
	   *
	   * <div class="alert alert-info">
	   *   <p>
	   *     In plain HTML forms, the `name` attribute is used to identify groups of radio inputs, so
	   *     that the browser can manage their state (checked/unchecked) based on the state of other
	   *     inputs in the same group.
	   *   </p>
	   *   <p>
	   *     In AngularJS forms, this is not necessary. The input's state will be updated based on the
	   *     value of the underlying model data.
	   *   </p>
	   * </div>
	   *
	   * <div class="alert alert-success">
	   *   If you omit the `name` attribute on a radio input, `ngModel` will automatically assign it a
	   *   unique name.
	   * </div>
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string} value The value to which the `ngModel` expression should be set when selected.
	   *    Note that `value` only supports `string` values, i.e. the scope model needs to be a string,
	   *    too. Use `ngValue` if you need complex models (`number`, `object`, ...).
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   * @param {string} ngValue AngularJS expression to which `ngModel` will be be set when the radio
	   *    is selected. Should be used instead of the `value` attribute if you need
	   *    a non-string `ngModel` (`boolean`, `array`, ...).
	   *
	   * @example
	      <example name="radio-input-directive" module="radioExample">
	        <file name="index.html">
	         <script>
	           angular.module('radioExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.color = {
	                 name: 'blue'
	               };
	               $scope.specialValue = {
	                 "id": "12345",
	                 "value": "green"
	               };
	             }]);
	         </script>
	         <form name="myForm" ng-controller="ExampleController">
	           <label>
	             <input type="radio" ng-model="color.name" value="red">
	             Red
	           </label><br/>
	           <label>
	             <input type="radio" ng-model="color.name" ng-value="specialValue">
	             Green
	           </label><br/>
	           <label>
	             <input type="radio" ng-model="color.name" value="blue">
	             Blue
	           </label><br/>
	           <tt>color = {{color.name | json}}</tt><br/>
	          </form>
	          Note that `ng-value="specialValue"` sets radio item's value to be the value of `$scope.specialValue`.
	        </file>
	        <file name="protractor.js" type="protractor">
	          it('should change state', function() {
	            var inputs = element.all(by.model('color.name'));
	            var color = element(by.binding('color.name'));

	            expect(color.getText()).toContain('blue');

	            inputs.get(0).click();
	            expect(color.getText()).toContain('red');

	            inputs.get(1).click();
	            expect(color.getText()).toContain('green');
	          });
	        </file>
	      </example>
	   */'radio':radioInputType,/**
	   * @ngdoc input
	   * @name input[range]
	   *
	   * @description
	   * Native range input with validation and transformation.
	   *
	   * The model for the range input must always be a `Number`.
	   *
	   * IE9 and other browsers that do not support the `range` type fall back
	   * to a text input without any default values for `min`, `max` and `step`. Model binding,
	   * validation and number parsing are nevertheless supported.
	   *
	   * Browsers that support range (latest Chrome, Safari, Firefox, Edge) treat `input[range]`
	   * in a way that never allows the input to hold an invalid value. That means:
	   * - any non-numerical value is set to `(max + min) / 2`.
	   * - any numerical value that is less than the current min val, or greater than the current max val
	   * is set to the min / max val respectively.
	   * - additionally, the current `step` is respected, so the nearest value that satisfies a step
	   * is used.
	   *
	   * See the [HTML Spec on input[type=range]](https://www.w3.org/TR/html5/forms.html#range-state-(type=range))
	   * for more info.
	   *
	   * This has the following consequences for AngularJS:
	   *
	   * Since the element value should always reflect the current model value, a range input
	   * will set the bound ngModel expression to the value that the browser has set for the
	   * input element. For example, in the following input `<input type="range" ng-model="model.value">`,
	   * if the application sets `model.value = null`, the browser will set the input to `'50'`.
	   * AngularJS will then set the model to `50`, to prevent input and model value being out of sync.
	   *
	   * That means the model for range will immediately be set to `50` after `ngModel` has been
	   * initialized. It also means a range input can never have the required error.
	   *
	   * This does not only affect changes to the model value, but also to the values of the `min`,
	   * `max`, and `step` attributes. When these change in a way that will cause the browser to modify
	   * the input value, AngularJS will also update the model value.
	   *
	   * Automatic value adjustment also means that a range input element can never have the `required`,
	   * `min`, or `max` errors.
	   *
	   * However, `step` is currently only fully implemented by Firefox. Other browsers have problems
	   * when the step value changes dynamically - they do not adjust the element value correctly, but
	   * instead may set the `stepMismatch` error. If that's the case, the AngularJS will set the `step`
	   * error on the input, and set the model to `undefined`.
	   *
	   * Note that `input[range]` is not compatible with`ngMax`, `ngMin`, and `ngStep`, because they do
	   * not set the `min` and `max` attributes, which means that the browser won't automatically adjust
	   * the input value based on their values, and will always assume min = 0, max = 100, and step = 1.
	   *
	   * @param {string}  ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {string=} min Sets the `min` validation to ensure that the value entered is greater
	   *                  than `min`. Can be interpolated.
	   * @param {string=} max Sets the `max` validation to ensure that the value entered is less than `max`.
	   *                  Can be interpolated.
	   * @param {string=} step Sets the `step` validation to ensure that the value entered matches the `step`
	   *                  Can be interpolated.
	   * @param {expression=} ngChange AngularJS expression to be executed when the ngModel value changes due
	   *                      to user interaction with the input element.
	   * @param {expression=} ngChecked If the expression is truthy, then the `checked` attribute will be set on the
	   *                      element. **Note** : `ngChecked` should not be used alongside `ngModel`.
	   *                      Checkout {@link ng.directive:ngChecked ngChecked} for usage.
	   *
	   * @example
	      <example name="range-input-directive" module="rangeExample">
	        <file name="index.html">
	          <script>
	            angular.module('rangeExample', [])
	              .controller('ExampleController', ['$scope', function($scope) {
	                $scope.value = 75;
	                $scope.min = 10;
	                $scope.max = 90;
	              }]);
	          </script>
	          <form name="myForm" ng-controller="ExampleController">

	            Model as range: <input type="range" name="range" ng-model="value" min="{{min}}"  max="{{max}}">
	            <hr>
	            Model as number: <input type="number" ng-model="value"><br>
	            Min: <input type="number" ng-model="min"><br>
	            Max: <input type="number" ng-model="max"><br>
	            value = <code>{{value}}</code><br/>
	            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
	            myForm.range.$error = <code>{{myForm.range.$error}}</code>
	          </form>
	        </file>
	      </example>

	   * ## Range Input with ngMin & ngMax attributes

	   * @example
	      <example name="range-input-directive-ng" module="rangeExample">
	        <file name="index.html">
	          <script>
	            angular.module('rangeExample', [])
	              .controller('ExampleController', ['$scope', function($scope) {
	                $scope.value = 75;
	                $scope.min = 10;
	                $scope.max = 90;
	              }]);
	          </script>
	          <form name="myForm" ng-controller="ExampleController">
	            Model as range: <input type="range" name="range" ng-model="value" ng-min="min" ng-max="max">
	            <hr>
	            Model as number: <input type="number" ng-model="value"><br>
	            Min: <input type="number" ng-model="min"><br>
	            Max: <input type="number" ng-model="max"><br>
	            value = <code>{{value}}</code><br/>
	            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
	            myForm.range.$error = <code>{{myForm.range.$error}}</code>
	          </form>
	        </file>
	      </example>

	   */'range':rangeInputType,/**
	   * @ngdoc input
	   * @name input[checkbox]
	   *
	   * @description
	   * HTML checkbox.
	   *
	   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	   * @param {string=} name Property name of the form under which the control is published.
	   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.
	   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.
	   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	   *    interaction with the input element.
	   *
	   * @example
	      <example name="checkbox-input-directive" module="checkboxExample">
	        <file name="index.html">
	         <script>
	           angular.module('checkboxExample', [])
	             .controller('ExampleController', ['$scope', function($scope) {
	               $scope.checkboxModel = {
	                value1 : true,
	                value2 : 'YES'
	              };
	             }]);
	         </script>
	         <form name="myForm" ng-controller="ExampleController">
	           <label>Value1:
	             <input type="checkbox" ng-model="checkboxModel.value1">
	           </label><br/>
	           <label>Value2:
	             <input type="checkbox" ng-model="checkboxModel.value2"
	                    ng-true-value="'YES'" ng-false-value="'NO'">
	            </label><br/>
	           <tt>value1 = {{checkboxModel.value1}}</tt><br/>
	           <tt>value2 = {{checkboxModel.value2}}</tt><br/>
	          </form>
	        </file>
	        <file name="protractor.js" type="protractor">
	          it('should change state', function() {
	            var value1 = element(by.binding('checkboxModel.value1'));
	            var value2 = element(by.binding('checkboxModel.value2'));

	            expect(value1.getText()).toContain('true');
	            expect(value2.getText()).toContain('YES');

	            element(by.model('checkboxModel.value1')).click();
	            element(by.model('checkboxModel.value2')).click();

	            expect(value1.getText()).toContain('false');
	            expect(value2.getText()).toContain('NO');
	          });
	        </file>
	      </example>
	   */'checkbox':checkboxInputType,'hidden':noop,'button':noop,'submit':noop,'reset':noop,'file':noop};function stringBasedInputType(ctrl){ctrl.$formatters.push(function(value){return ctrl.$isEmpty(value)?value:value.toString();});}function textInputType(scope,element,attr,ctrl,$sniffer,$browser){baseInputType(scope,element,attr,ctrl,$sniffer,$browser);stringBasedInputType(ctrl);}function baseInputType(scope,element,attr,ctrl,$sniffer,$browser){var type=lowercase(element[0].type);// In composition mode, users are still inputting intermediate text buffer,
	// hold the listener until composition is done.
	// More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent
	if(!$sniffer.android){var composing=false;element.on('compositionstart',function(){composing=true;});// Support: IE9+
	element.on('compositionupdate',function(ev){// End composition when ev.data is empty string on 'compositionupdate' event.
	// When the input de-focusses (e.g. by clicking away), IE triggers 'compositionupdate'
	// instead of 'compositionend'.
	if(isUndefined(ev.data)||ev.data===''){composing=false;}});element.on('compositionend',function(){composing=false;listener();});}var timeout;var listener=function listener(ev){if(timeout){$browser.defer.cancel(timeout);timeout=null;}if(composing)return;var value=element.val(),event=ev&&ev.type;// By default we will trim the value
	// If the attribute ng-trim exists we will avoid trimming
	// If input type is 'password', the value is never trimmed
	if(type!=='password'&&(!attr.ngTrim||attr.ngTrim!=='false')){value=trim(value);}// If a control is suffering from bad input (due to native validators), browsers discard its
	// value, so it may be necessary to revalidate (by calling $setViewValue again) even if the
	// control's value is the same empty value twice in a row.
	if(ctrl.$viewValue!==value||value===''&&ctrl.$$hasNativeValidators){ctrl.$setViewValue(value,event);}};// if the browser does support "input" event, we are fine - except on IE9 which doesn't fire the
	// input event on backspace, delete or cut
	if($sniffer.hasEvent('input')){element.on('input',listener);}else{var deferListener=function deferListener(ev,input,origValue){if(!timeout){timeout=$browser.defer(function(){timeout=null;if(!input||input.value!==origValue){listener(ev);}});}};element.on('keydown',/** @this */function(event){var key=event.keyCode;// ignore
	//    command            modifiers                   arrows
	if(key===91||15<key&&key<19||37<=key&&key<=40)return;deferListener(event,this,this.value);});// if user modifies input value using context menu in IE, we need "paste", "cut" and "drop" events to catch it
	if($sniffer.hasEvent('paste')){element.on('paste cut drop',deferListener);}}// if user paste into input using mouse on older browser
	// or form autocomplete on newer browser, we need "change" event to catch it
	element.on('change',listener);// Some native input types (date-family) have the ability to change validity without
	// firing any input/change events.
	// For these event types, when native validators are present and the browser supports the type,
	// check for validity changes on various DOM events.
	if(PARTIAL_VALIDATION_TYPES[type]&&ctrl.$$hasNativeValidators&&type===attr.type){element.on(PARTIAL_VALIDATION_EVENTS,/** @this */function(ev){if(!timeout){var validity=this[VALIDITY_STATE_PROPERTY];var origBadInput=validity.badInput;var origTypeMismatch=validity.typeMismatch;timeout=$browser.defer(function(){timeout=null;if(validity.badInput!==origBadInput||validity.typeMismatch!==origTypeMismatch){listener(ev);}});}});}ctrl.$render=function(){// Workaround for Firefox validation #12102.
	var value=ctrl.$isEmpty(ctrl.$viewValue)?'':ctrl.$viewValue;if(element.val()!==value){element.val(value);}};}function weekParser(isoWeek,existingDate){if(isDate(isoWeek)){return isoWeek;}if(isString(isoWeek)){WEEK_REGEXP.lastIndex=0;var parts=WEEK_REGEXP.exec(isoWeek);if(parts){var year=+parts[1],week=+parts[2],hours=0,minutes=0,seconds=0,milliseconds=0,firstThurs=getFirstThursdayOfYear(year),addDays=(week-1)*7;if(existingDate){hours=existingDate.getHours();minutes=existingDate.getMinutes();seconds=existingDate.getSeconds();milliseconds=existingDate.getMilliseconds();}return new Date(year,0,firstThurs.getDate()+addDays,hours,minutes,seconds,milliseconds);}}return NaN;}function createDateParser(regexp,mapping){return function(iso,previousDate){var parts,map;if(isDate(iso)){return iso;}if(isString(iso)){// When a date is JSON'ified to wraps itself inside of an extra
	// set of double quotes. This makes the date parsing code unable
	// to match the date string and parse it as a date.
	if(iso.charAt(0)==='"'&&iso.charAt(iso.length-1)==='"'){iso=iso.substring(1,iso.length-1);}if(ISO_DATE_REGEXP.test(iso)){return new Date(iso);}regexp.lastIndex=0;parts=regexp.exec(iso);if(parts){parts.shift();if(previousDate){map={yyyy:previousDate.getFullYear(),MM:previousDate.getMonth()+1,dd:previousDate.getDate(),HH:previousDate.getHours(),mm:previousDate.getMinutes(),ss:previousDate.getSeconds(),sss:previousDate.getMilliseconds()/1000};}else{map={yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0};}forEach(parts,function(part,index){if(index<mapping.length){map[mapping[index]]=+part;}});var date=new Date(map.yyyy,map.MM-1,map.dd,map.HH,map.mm,map.ss||0,map.sss*1000||0);if(map.yyyy<100){// In the constructor, 2-digit years map to 1900-1999.
	// Use `setFullYear()` to set the correct year.
	date.setFullYear(map.yyyy);}return date;}}return NaN;};}function createDateInputType(type,regexp,parseDate,format){return function dynamicDateInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter,$parse){badInputChecker(scope,element,attr,ctrl,type);baseInputType(scope,element,attr,ctrl,$sniffer,$browser);var isTimeType=type==='time'||type==='datetimelocal';var previousDate;var previousTimezone;ctrl.$parsers.push(function(value){if(ctrl.$isEmpty(value))return null;if(regexp.test(value)){// Note: We cannot read ctrl.$modelValue, as there might be a different
	// parser/formatter in the processing chain so that the model
	// contains some different data format!
	return parseDateAndConvertTimeZoneToLocal(value,previousDate);}ctrl.$$parserName=type;return undefined;});ctrl.$formatters.push(function(value){if(value&&!isDate(value)){throw ngModelMinErr('datefmt','Expected `{0}` to be a date',value);}if(isValidDate(value)){previousDate=value;var timezone=ctrl.$options.getOption('timezone');if(timezone){previousTimezone=timezone;previousDate=convertTimezoneToLocal(previousDate,timezone,true);}return formatter(value,timezone);}else{previousDate=null;previousTimezone=null;return'';}});if(isDefined(attr.min)||attr.ngMin){var minVal=attr.min||$parse(attr.ngMin)(scope);var parsedMinVal=parseObservedDateValue(minVal);ctrl.$validators.min=function(value){return!isValidDate(value)||isUndefined(parsedMinVal)||parseDate(value)>=parsedMinVal;};attr.$observe('min',function(val){if(val!==minVal){parsedMinVal=parseObservedDateValue(val);minVal=val;ctrl.$validate();}});}if(isDefined(attr.max)||attr.ngMax){var maxVal=attr.max||$parse(attr.ngMax)(scope);var parsedMaxVal=parseObservedDateValue(maxVal);ctrl.$validators.max=function(value){return!isValidDate(value)||isUndefined(parsedMaxVal)||parseDate(value)<=parsedMaxVal;};attr.$observe('max',function(val){if(val!==maxVal){parsedMaxVal=parseObservedDateValue(val);maxVal=val;ctrl.$validate();}});}function isValidDate(value){// Invalid Date: getTime() returns NaN
	return value&&!(value.getTime&&value.getTime()!==value.getTime());}function parseObservedDateValue(val){return isDefined(val)&&!isDate(val)?parseDateAndConvertTimeZoneToLocal(val)||undefined:val;}function parseDateAndConvertTimeZoneToLocal(value,previousDate){var timezone=ctrl.$options.getOption('timezone');if(previousTimezone&&previousTimezone!==timezone){// If the timezone has changed, adjust the previousDate to the default timezone
	// so that the new date is converted with the correct timezone offset
	previousDate=addDateMinutes(previousDate,timezoneToOffset(previousTimezone));}var parsedDate=parseDate(value,previousDate);if(!isNaN(parsedDate)&&timezone){parsedDate=convertTimezoneToLocal(parsedDate,timezone);}return parsedDate;}function formatter(value,timezone){var targetFormat=format;if(isTimeType&&isString(ctrl.$options.getOption('timeSecondsFormat'))){targetFormat=format.replace('ss.sss',ctrl.$options.getOption('timeSecondsFormat')).replace(/:$/,'');}var formatted=$filter('date')(value,targetFormat,timezone);if(isTimeType&&ctrl.$options.getOption('timeStripZeroSeconds')){formatted=formatted.replace(/(?::00)?(?:\.000)?$/,'');}return formatted;}};}function badInputChecker(scope,element,attr,ctrl,parserName){var node=element[0];var nativeValidation=ctrl.$$hasNativeValidators=isObject(node.validity);if(nativeValidation){ctrl.$parsers.push(function(value){var validity=element.prop(VALIDITY_STATE_PROPERTY)||{};if(validity.badInput||validity.typeMismatch){ctrl.$$parserName=parserName;return undefined;}return value;});}}function numberFormatterParser(ctrl){ctrl.$parsers.push(function(value){if(ctrl.$isEmpty(value))return null;if(NUMBER_REGEXP.test(value))return parseFloat(value);ctrl.$$parserName='number';return undefined;});ctrl.$formatters.push(function(value){if(!ctrl.$isEmpty(value)){if(!isNumber(value)){throw ngModelMinErr('numfmt','Expected `{0}` to be a number',value);}value=value.toString();}return value;});}function parseNumberAttrVal(val){if(isDefined(val)&&!isNumber(val)){val=parseFloat(val);}return!isNumberNaN(val)?val:undefined;}function isNumberInteger(num){// See http://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript#14794066
	// (minus the assumption that `num` is a number)
	// eslint-disable-next-line no-bitwise
	return(num|0)===num;}function countDecimals(num){var numString=num.toString();var decimalSymbolIndex=numString.indexOf('.');if(decimalSymbolIndex===-1){if(-1<num&&num<1){// It may be in the exponential notation format (`1e-X`)
	var match=/e-(\d+)$/.exec(numString);if(match){return Number(match[1]);}}return 0;}return numString.length-decimalSymbolIndex-1;}function isValidForStep(viewValue,stepBase,step){// At this point `stepBase` and `step` are expected to be non-NaN values
	// and `viewValue` is expected to be a valid stringified number.
	var value=Number(viewValue);var isNonIntegerValue=!isNumberInteger(value);var isNonIntegerStepBase=!isNumberInteger(stepBase);var isNonIntegerStep=!isNumberInteger(step);// Due to limitations in Floating Point Arithmetic (e.g. `0.3 - 0.2 !== 0.1` or
	// `0.5 % 0.1 !== 0`), we need to convert all numbers to integers.
	if(isNonIntegerValue||isNonIntegerStepBase||isNonIntegerStep){var valueDecimals=isNonIntegerValue?countDecimals(value):0;var stepBaseDecimals=isNonIntegerStepBase?countDecimals(stepBase):0;var stepDecimals=isNonIntegerStep?countDecimals(step):0;var decimalCount=Math.max(valueDecimals,stepBaseDecimals,stepDecimals);var multiplier=Math.pow(10,decimalCount);value=value*multiplier;stepBase=stepBase*multiplier;step=step*multiplier;if(isNonIntegerValue)value=Math.round(value);if(isNonIntegerStepBase)stepBase=Math.round(stepBase);if(isNonIntegerStep)step=Math.round(step);}return(value-stepBase)%step===0;}function numberInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter,$parse){badInputChecker(scope,element,attr,ctrl,'number');numberFormatterParser(ctrl);baseInputType(scope,element,attr,ctrl,$sniffer,$browser);var parsedMinVal;if(isDefined(attr.min)||attr.ngMin){var minVal=attr.min||$parse(attr.ngMin)(scope);parsedMinVal=parseNumberAttrVal(minVal);ctrl.$validators.min=function(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(parsedMinVal)||viewValue>=parsedMinVal;};attr.$observe('min',function(val){if(val!==minVal){parsedMinVal=parseNumberAttrVal(val);minVal=val;// TODO(matsko): implement validateLater to reduce number of validations
	ctrl.$validate();}});}if(isDefined(attr.max)||attr.ngMax){var maxVal=attr.max||$parse(attr.ngMax)(scope);var parsedMaxVal=parseNumberAttrVal(maxVal);ctrl.$validators.max=function(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(parsedMaxVal)||viewValue<=parsedMaxVal;};attr.$observe('max',function(val){if(val!==maxVal){parsedMaxVal=parseNumberAttrVal(val);maxVal=val;// TODO(matsko): implement validateLater to reduce number of validations
	ctrl.$validate();}});}if(isDefined(attr.step)||attr.ngStep){var stepVal=attr.step||$parse(attr.ngStep)(scope);var parsedStepVal=parseNumberAttrVal(stepVal);ctrl.$validators.step=function(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(parsedStepVal)||isValidForStep(viewValue,parsedMinVal||0,parsedStepVal);};attr.$observe('step',function(val){// TODO(matsko): implement validateLater to reduce number of validations
	if(val!==stepVal){parsedStepVal=parseNumberAttrVal(val);stepVal=val;ctrl.$validate();}});}}function rangeInputType(scope,element,attr,ctrl,$sniffer,$browser){badInputChecker(scope,element,attr,ctrl,'range');numberFormatterParser(ctrl);baseInputType(scope,element,attr,ctrl,$sniffer,$browser);var supportsRange=ctrl.$$hasNativeValidators&&element[0].type==='range',minVal=supportsRange?0:undefined,maxVal=supportsRange?100:undefined,stepVal=supportsRange?1:undefined,validity=element[0].validity,hasMinAttr=isDefined(attr.min),hasMaxAttr=isDefined(attr.max),hasStepAttr=isDefined(attr.step);var originalRender=ctrl.$render;ctrl.$render=supportsRange&&isDefined(validity.rangeUnderflow)&&isDefined(validity.rangeOverflow)?//Browsers that implement range will set these values automatically, but reading the adjusted values after
	//$render would cause the min / max validators to be applied with the wrong value
	function rangeRender(){originalRender();ctrl.$setViewValue(element.val());}:originalRender;if(hasMinAttr){minVal=parseNumberAttrVal(attr.min);ctrl.$validators.min=supportsRange?// Since all browsers set the input to a valid value, we don't need to check validity
	function noopMinValidator(){return true;}:// non-support browsers validate the min val
	function minValidator(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(minVal)||viewValue>=minVal;};setInitialValueAndObserver('min',minChange);}if(hasMaxAttr){maxVal=parseNumberAttrVal(attr.max);ctrl.$validators.max=supportsRange?// Since all browsers set the input to a valid value, we don't need to check validity
	function noopMaxValidator(){return true;}:// non-support browsers validate the max val
	function maxValidator(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(maxVal)||viewValue<=maxVal;};setInitialValueAndObserver('max',maxChange);}if(hasStepAttr){stepVal=parseNumberAttrVal(attr.step);ctrl.$validators.step=supportsRange?function nativeStepValidator(){// Currently, only FF implements the spec on step change correctly (i.e. adjusting the
	// input element value to a valid value). It's possible that other browsers set the stepMismatch
	// validity error instead, so we can at least report an error in that case.
	return!validity.stepMismatch;}:// ngStep doesn't set the setp attr, so the browser doesn't adjust the input value as setting step would
	function stepValidator(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||isUndefined(stepVal)||isValidForStep(viewValue,minVal||0,stepVal);};setInitialValueAndObserver('step',stepChange);}function setInitialValueAndObserver(htmlAttrName,changeFn){// interpolated attributes set the attribute value only after a digest, but we need the
	// attribute value when the input is first rendered, so that the browser can adjust the
	// input value based on the min/max value
	element.attr(htmlAttrName,attr[htmlAttrName]);var oldVal=attr[htmlAttrName];attr.$observe(htmlAttrName,function wrappedObserver(val){if(val!==oldVal){oldVal=val;changeFn(val);}});}function minChange(val){minVal=parseNumberAttrVal(val);// ignore changes before model is initialized
	if(isNumberNaN(ctrl.$modelValue)){return;}if(supportsRange){var elVal=element.val();// IE11 doesn't set the el val correctly if the minVal is greater than the element value
	if(minVal>elVal){elVal=minVal;element.val(elVal);}ctrl.$setViewValue(elVal);}else{// TODO(matsko): implement validateLater to reduce number of validations
	ctrl.$validate();}}function maxChange(val){maxVal=parseNumberAttrVal(val);// ignore changes before model is initialized
	if(isNumberNaN(ctrl.$modelValue)){return;}if(supportsRange){var elVal=element.val();// IE11 doesn't set the el val correctly if the maxVal is less than the element value
	if(maxVal<elVal){element.val(maxVal);// IE11 and Chrome don't set the value to the minVal when max < min
	elVal=maxVal<minVal?minVal:maxVal;}ctrl.$setViewValue(elVal);}else{// TODO(matsko): implement validateLater to reduce number of validations
	ctrl.$validate();}}function stepChange(val){stepVal=parseNumberAttrVal(val);// ignore changes before model is initialized
	if(isNumberNaN(ctrl.$modelValue)){return;}// Some browsers don't adjust the input value correctly, but set the stepMismatch error
	if(!supportsRange){// TODO(matsko): implement validateLater to reduce number of validations
	ctrl.$validate();}else if(ctrl.$viewValue!==element.val()){ctrl.$setViewValue(element.val());}}}function urlInputType(scope,element,attr,ctrl,$sniffer,$browser){// Note: no badInputChecker here by purpose as `url` is only a validation
	// in browsers, i.e. we can always read out input.value even if it is not valid!
	baseInputType(scope,element,attr,ctrl,$sniffer,$browser);stringBasedInputType(ctrl);ctrl.$validators.url=function(modelValue,viewValue){var value=modelValue||viewValue;return ctrl.$isEmpty(value)||URL_REGEXP.test(value);};}function emailInputType(scope,element,attr,ctrl,$sniffer,$browser){// Note: no badInputChecker here by purpose as `url` is only a validation
	// in browsers, i.e. we can always read out input.value even if it is not valid!
	baseInputType(scope,element,attr,ctrl,$sniffer,$browser);stringBasedInputType(ctrl);ctrl.$validators.email=function(modelValue,viewValue){var value=modelValue||viewValue;return ctrl.$isEmpty(value)||EMAIL_REGEXP.test(value);};}function radioInputType(scope,element,attr,ctrl){var doTrim=!attr.ngTrim||trim(attr.ngTrim)!=='false';// make the name unique, if not defined
	if(isUndefined(attr.name)){element.attr('name',nextUid());}var listener=function listener(ev){var value;if(element[0].checked){value=attr.value;if(doTrim){value=trim(value);}ctrl.$setViewValue(value,ev&&ev.type);}};element.on('change',listener);ctrl.$render=function(){var value=attr.value;if(doTrim){value=trim(value);}element[0].checked=value===ctrl.$viewValue;};attr.$observe('value',ctrl.$render);}function parseConstantExpr($parse,context,name,expression,fallback){var parseFn;if(isDefined(expression)){parseFn=$parse(expression);if(!parseFn.constant){throw ngModelMinErr('constexpr','Expected constant expression for `{0}`, but saw '+'`{1}`.',name,expression);}return parseFn(context);}return fallback;}function checkboxInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter,$parse){var trueValue=parseConstantExpr($parse,scope,'ngTrueValue',attr.ngTrueValue,true);var falseValue=parseConstantExpr($parse,scope,'ngFalseValue',attr.ngFalseValue,false);var listener=function listener(ev){ctrl.$setViewValue(element[0].checked,ev&&ev.type);};element.on('change',listener);ctrl.$render=function(){element[0].checked=ctrl.$viewValue;};// Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`
	// This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert
	// it to a boolean.
	ctrl.$isEmpty=function(value){return value===false;};ctrl.$formatters.push(function(value){return equals(value,trueValue);});ctrl.$parsers.push(function(value){return value?trueValue:falseValue;});}/**
	 * @ngdoc directive
	 * @name textarea
	 * @restrict E
	 *
	 * @description
	 * HTML textarea element control with AngularJS data-binding. The data-binding and validation
	 * properties of this element are exactly the same as those of the
	 * {@link ng.directive:input input element}.
	 *
	 * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	 * @param {string=} name Property name of the form under which the control is published.
	 * @param {string=} required Sets `required` validation error key if the value is not entered.
	 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	 *    `required` when you want to data-bind to the `required` attribute.
	 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	 *    minlength.
	 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	 *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
	 *    length.
	 * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	 *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	 *    If the expression evaluates to a RegExp object, then this is used directly.
	 *    If the expression evaluates to a string, then it will be converted to a RegExp
	 *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	 *    `new RegExp('^abc$')`.<br />
	 *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	 *    start at the index of the last search's match, thus not taking the whole input value into
	 *    account.
	 * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	 *    interaction with the input element.
	 * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
	 *
	 * @knownIssue
	 *
	 * When specifying the `placeholder` attribute of `<textarea>`, Internet Explorer will temporarily
	 * insert the placeholder value as the textarea's content. If the placeholder value contains
	 * interpolation (`{{ ... }}`), an error will be logged in the console when AngularJS tries to update
	 * the value of the by-then-removed text node. This doesn't affect the functionality of the
	 * textarea, but can be undesirable.
	 *
	 * You can work around this Internet Explorer issue by using `ng-attr-placeholder` instead of
	 * `placeholder` on textareas, whenever you need interpolation in the placeholder value. You can
	 * find more details on `ngAttr` in the
	 * [Interpolation](guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes) section of the
	 * Developer Guide.
	 *//**
	 * @ngdoc directive
	 * @name input
	 * @restrict E
	 *
	 * @description
	 * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,
	 * input state control, and validation.
	 * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.
	 *
	 * <div class="alert alert-warning">
	 * **Note:** Not every feature offered is available for all input types.
	 * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.
	 * </div>
	 *
	 * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	 * @param {string=} name Property name of the form under which the control is published.
	 * @param {string=} required Sets `required` validation error key if the value is not entered.
	 * @param {boolean=} ngRequired Sets `required` attribute if set to true
	 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
	 *    minlength.
	 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
	 *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
	 *    length.
	 * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
	 *    value does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
	 *    If the expression evaluates to a RegExp object, then this is used directly.
	 *    If the expression evaluates to a string, then it will be converted to a RegExp
	 *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
	 *    `new RegExp('^abc$')`.<br />
	 *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	 *    start at the index of the last search's match, thus not taking the whole input value into
	 *    account.
	 * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
	 *    interaction with the input element.
	 * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
	 *    This parameter is ignored for input[type=password] controls, which will never trim the
	 *    input.
	 *
	 * @example
	    <example name="input-directive" module="inputExample">
	      <file name="index.html">
	       <script>
	          angular.module('inputExample', [])
	            .controller('ExampleController', ['$scope', function($scope) {
	              $scope.user = {name: 'guest', last: 'visitor'};
	            }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <form name="myForm">
	           <label>
	              User name:
	              <input type="text" name="userName" ng-model="user.name" required>
	           </label>
	           <div role="alert">
	             <span class="error" ng-show="myForm.userName.$error.required">
	              Required!</span>
	           </div>
	           <label>
	              Last name:
	              <input type="text" name="lastName" ng-model="user.last"
	              ng-minlength="3" ng-maxlength="10">
	           </label>
	           <div role="alert">
	             <span class="error" ng-show="myForm.lastName.$error.minlength">
	               Too short!</span>
	             <span class="error" ng-show="myForm.lastName.$error.maxlength">
	               Too long!</span>
	           </div>
	         </form>
	         <hr>
	         <tt>user = {{user}}</tt><br/>
	         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br/>
	         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br/>
	         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br/>
	         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br/>
	         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br/>
	         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br/>
	       </div>
	      </file>
	      <file name="protractor.js" type="protractor">
	        var user = element(by.exactBinding('user'));
	        var userNameValid = element(by.binding('myForm.userName.$valid'));
	        var lastNameValid = element(by.binding('myForm.lastName.$valid'));
	        var lastNameError = element(by.binding('myForm.lastName.$error'));
	        var formValid = element(by.binding('myForm.$valid'));
	        var userNameInput = element(by.model('user.name'));
	        var userLastInput = element(by.model('user.last'));

	        it('should initialize to model', function() {
	          expect(user.getText()).toContain('{"name":"guest","last":"visitor"}');
	          expect(userNameValid.getText()).toContain('true');
	          expect(formValid.getText()).toContain('true');
	        });

	        it('should be invalid if empty when required', function() {
	          userNameInput.clear();
	          userNameInput.sendKeys('');

	          expect(user.getText()).toContain('{"last":"visitor"}');
	          expect(userNameValid.getText()).toContain('false');
	          expect(formValid.getText()).toContain('false');
	        });

	        it('should be valid if empty when min length is set', function() {
	          userLastInput.clear();
	          userLastInput.sendKeys('');

	          expect(user.getText()).toContain('{"name":"guest","last":""}');
	          expect(lastNameValid.getText()).toContain('true');
	          expect(formValid.getText()).toContain('true');
	        });

	        it('should be invalid if less than required min length', function() {
	          userLastInput.clear();
	          userLastInput.sendKeys('xx');

	          expect(user.getText()).toContain('{"name":"guest"}');
	          expect(lastNameValid.getText()).toContain('false');
	          expect(lastNameError.getText()).toContain('minlength');
	          expect(formValid.getText()).toContain('false');
	        });

	        it('should be invalid if longer than max length', function() {
	          userLastInput.clear();
	          userLastInput.sendKeys('some ridiculously long name');

	          expect(user.getText()).toContain('{"name":"guest"}');
	          expect(lastNameValid.getText()).toContain('false');
	          expect(lastNameError.getText()).toContain('maxlength');
	          expect(formValid.getText()).toContain('false');
	        });
	      </file>
	    </example>
	 */var inputDirective=['$browser','$sniffer','$filter','$parse',function($browser,$sniffer,$filter,$parse){return{restrict:'E',require:['?ngModel'],link:{pre:function pre(scope,element,attr,ctrls){if(ctrls[0]){(inputType[lowercase(attr.type)]||inputType.text)(scope,element,attr,ctrls[0],$sniffer,$browser,$filter,$parse);}}}};}];var hiddenInputBrowserCacheDirective=function hiddenInputBrowserCacheDirective(){var valueProperty={configurable:true,enumerable:false,get:function get(){return this.getAttribute('value')||'';},set:function set(val){this.setAttribute('value',val);}};return{restrict:'E',priority:200,compile:function compile(_,attr){if(lowercase(attr.type)!=='hidden'){return;}return{pre:function pre(scope,element,attr,ctrls){var node=element[0];// Support: Edge
	// Moving the DOM around prevents autofillling
	if(node.parentNode){node.parentNode.insertBefore(node,node.nextSibling);}// Support: FF, IE
	// Avoiding direct assignment to .value prevents autofillling
	if(Object.defineProperty){Object.defineProperty(node,'value',valueProperty);}}};}};};var CONSTANT_VALUE_REGEXP=/^(true|false|\d+)$/;/**
	 * @ngdoc directive
	 * @name ngValue
	 * @restrict A
	 * @priority 100
	 *
	 * @description
	 * Binds the given expression to the value of the element.
	 *
	 * It is mainly used on {@link input[radio] `input[radio]`} and option elements,
	 * so that when the element is selected, the {@link ngModel `ngModel`} of that element (or its
	 * {@link select `select`} parent element) is set to the bound value. It is especially useful
	 * for dynamically generated lists using {@link ngRepeat `ngRepeat`}, as shown below.
	 *
	 * It can also be used to achieve one-way binding of a given expression to an input element
	 * such as an `input[text]` or a `textarea`, when that element does not use ngModel.
	 *
	 * @element ANY
	 * @param {string=} ngValue AngularJS expression, whose value will be bound to the `value` attribute
	 * and `value` property of the element.
	 *
	 * @example
	    <example name="ngValue-directive" module="valueExample">
	      <file name="index.html">
	       <script>
	          angular.module('valueExample', [])
	            .controller('ExampleController', ['$scope', function($scope) {
	              $scope.names = ['pizza', 'unicorns', 'robots'];
	              $scope.my = { favorite: 'unicorns' };
	            }]);
	       </script>
	        <form ng-controller="ExampleController">
	          <h2>Which is your favorite?</h2>
	            <label ng-repeat="name in names" for="{{name}}">
	              {{name}}
	              <input type="radio"
	                     ng-model="my.favorite"
	                     ng-value="name"
	                     id="{{name}}"
	                     name="favorite">
	            </label>
	          <div>You chose {{my.favorite}}</div>
	        </form>
	      </file>
	      <file name="protractor.js" type="protractor">
	        var favorite = element(by.binding('my.favorite'));

	        it('should initialize to model', function() {
	          expect(favorite.getText()).toContain('unicorns');
	        });
	        it('should bind the values to the inputs', function() {
	          element.all(by.model('my.favorite')).get(0).click();
	          expect(favorite.getText()).toContain('pizza');
	        });
	      </file>
	    </example>
	 */var ngValueDirective=function ngValueDirective(){/**
	   *  inputs use the value attribute as their default value if the value property is not set.
	   *  Once the value property has been set (by adding input), it will not react to changes to
	   *  the value attribute anymore. Setting both attribute and property fixes this behavior, and
	   *  makes it possible to use ngValue as a sort of one-way bind.
	   */function updateElementValue(element,attr,value){// Support: IE9 only
	// In IE9 values are converted to string (e.g. `input.value = null` results in `input.value === 'null'`).
	var propValue=isDefined(value)?value:msie===9?'':null;element.prop('value',propValue);attr.$set('value',value);}return{restrict:'A',priority:100,compile:function compile(tpl,tplAttr){if(CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)){return function ngValueConstantLink(scope,elm,attr){var value=scope.$eval(attr.ngValue);updateElementValue(elm,attr,value);};}else{return function ngValueLink(scope,elm,attr){scope.$watch(attr.ngValue,function valueWatchAction(value){updateElementValue(elm,attr,value);});};}}};};/**
	 * @ngdoc directive
	 * @name ngBind
	 * @restrict AC
	 *
	 * @description
	 * The `ngBind` attribute tells AngularJS to replace the text content of the specified HTML element
	 * with the value of a given expression, and to update the text content when the value of that
	 * expression changes.
	 *
	 * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like
	 * `{{ expression }}` which is similar but less verbose.
	 *
	 * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily
	 * displayed by the browser in its raw state before AngularJS compiles it. Since `ngBind` is an
	 * element attribute, it makes the bindings invisible to the user while the page is loading.
	 *
	 * An alternative solution to this problem would be using the
	 * {@link ng.directive:ngCloak ngCloak} directive.
	 *
	 *
	 * @element ANY
	 * @param {expression} ngBind {@link guide/expression Expression} to evaluate.
	 *
	 * @example
	 * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.
	   <example module="bindExample" name="ng-bind">
	     <file name="index.html">
	       <script>
	         angular.module('bindExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.name = 'Whirled';
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	         <label>Enter name: <input type="text" ng-model="name"></label><br>
	         Hello <span ng-bind="name"></span>!
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-bind', function() {
	         var nameInput = element(by.model('name'));

	         expect(element(by.binding('name')).getText()).toBe('Whirled');
	         nameInput.clear();
	         nameInput.sendKeys('world');
	         expect(element(by.binding('name')).getText()).toBe('world');
	       });
	     </file>
	   </example>
	 */var ngBindDirective=['$compile',function($compile){return{restrict:'AC',compile:function ngBindCompile(templateElement){$compile.$$addBindingClass(templateElement);return function ngBindLink(scope,element,attr){$compile.$$addBindingInfo(element,attr.ngBind);element=element[0];scope.$watch(attr.ngBind,function ngBindWatchAction(value){element.textContent=stringify(value);});};}};}];/**
	 * @ngdoc directive
	 * @name ngBindTemplate
	 *
	 * @description
	 * The `ngBindTemplate` directive specifies that the element
	 * text content should be replaced with the interpolation of the template
	 * in the `ngBindTemplate` attribute.
	 * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`
	 * expressions. This directive is needed since some HTML elements
	 * (such as TITLE and OPTION) cannot contain SPAN elements.
	 *
	 * @element ANY
	 * @param {string} ngBindTemplate template of form
	 *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.
	 *
	 * @example
	 * Try it here: enter text in text box and watch the greeting change.
	   <example module="bindExample" name="ng-bind-template">
	     <file name="index.html">
	       <script>
	         angular.module('bindExample', [])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.salutation = 'Hello';
	             $scope.name = 'World';
	           }]);
	       </script>
	       <div ng-controller="ExampleController">
	        <label>Salutation: <input type="text" ng-model="salutation"></label><br>
	        <label>Name: <input type="text" ng-model="name"></label><br>
	        <pre ng-bind-template="{{salutation}} {{name}}!"></pre>
	       </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-bind', function() {
	         var salutationElem = element(by.binding('salutation'));
	         var salutationInput = element(by.model('salutation'));
	         var nameInput = element(by.model('name'));

	         expect(salutationElem.getText()).toBe('Hello World!');

	         salutationInput.clear();
	         salutationInput.sendKeys('Greetings');
	         nameInput.clear();
	         nameInput.sendKeys('user');

	         expect(salutationElem.getText()).toBe('Greetings user!');
	       });
	     </file>
	   </example>
	 */var ngBindTemplateDirective=['$interpolate','$compile',function($interpolate,$compile){return{compile:function ngBindTemplateCompile(templateElement){$compile.$$addBindingClass(templateElement);return function ngBindTemplateLink(scope,element,attr){var interpolateFn=$interpolate(element.attr(attr.$attr.ngBindTemplate));$compile.$$addBindingInfo(element,interpolateFn.expressions);element=element[0];attr.$observe('ngBindTemplate',function(value){element.textContent=isUndefined(value)?'':value;});};}};}];/**
	 * @ngdoc directive
	 * @name ngBindHtml
	 *
	 * @description
	 * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,
	 * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.
	 * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link
	 * ngSanitize} in your module's dependencies (not in core AngularJS). In order to use {@link ngSanitize}
	 * in your module's dependencies, you need to include "angular-sanitize.js" in your application.
	 *
	 * You may also bypass sanitization for values you know are safe. To do so, bind to
	 * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example
	 * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.
	 *
	 * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you
	 * will have an exception (instead of an exploit.)
	 *
	 * @element ANY
	 * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.
	 *
	 * @example

	   <example module="bindHtmlExample" deps="angular-sanitize.js" name="ng-bind-html">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	        <p ng-bind-html="myHTML"></p>
	       </div>
	     </file>

	     <file name="script.js">
	       angular.module('bindHtmlExample', ['ngSanitize'])
	         .controller('ExampleController', ['$scope', function($scope) {
	           $scope.myHTML =
	              'I am an <code>HTML</code>string with ' +
	              '<a href="#">links!</a> and other <em>stuff</em>';
	         }]);
	     </file>

	     <file name="protractor.js" type="protractor">
	       it('should check ng-bind-html', function() {
	         expect(element(by.binding('myHTML')).getText()).toBe(
	             'I am an HTMLstring with links! and other stuff');
	       });
	     </file>
	   </example>
	 */var ngBindHtmlDirective=['$sce','$parse','$compile',function($sce,$parse,$compile){return{restrict:'A',compile:function ngBindHtmlCompile(tElement,tAttrs){var ngBindHtmlGetter=$parse(tAttrs.ngBindHtml);var ngBindHtmlWatch=$parse(tAttrs.ngBindHtml,function sceValueOf(val){// Unwrap the value to compare the actual inner safe value, not the wrapper object.
	return $sce.valueOf(val);});$compile.$$addBindingClass(tElement);return function ngBindHtmlLink(scope,element,attr){$compile.$$addBindingInfo(element,attr.ngBindHtml);scope.$watch(ngBindHtmlWatch,function ngBindHtmlWatchAction(){// The watched value is the unwrapped value. To avoid re-escaping, use the direct getter.
	var value=ngBindHtmlGetter(scope);element.html($sce.getTrustedHtml(value)||'');});};}};}];/**
	 * @ngdoc directive
	 * @name ngChange
	 * @restrict A
	 *
	 * @description
	 * Evaluate the given expression when the user changes the input.
	 * The expression is evaluated immediately, unlike the JavaScript onchange event
	 * which only triggers at the end of a change (usually, when the user leaves the
	 * form element or presses the return key).
	 *
	 * The `ngChange` expression is only evaluated when a change in the input value causes
	 * a new value to be committed to the model.
	 *
	 * It will not be evaluated:
	 * * if the value returned from the `$parsers` transformation pipeline has not changed
	 * * if the input has continued to be invalid since the model will stay `null`
	 * * if the model is changed programmatically and not by a change to the input value
	 *
	 *
	 * Note, this directive requires `ngModel` to be present.
	 *
	 * @element ANY
	 * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change
	 * in input value.
	 *
	 * @example
	 * <example name="ngChange-directive" module="changeExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('changeExample', [])
	 *         .controller('ExampleController', ['$scope', function($scope) {
	 *           $scope.counter = 0;
	 *           $scope.change = function() {
	 *             $scope.counter++;
	 *           };
	 *         }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <input type="checkbox" ng-model="confirmed" ng-change="change()" id="ng-change-example1" />
	 *       <input type="checkbox" ng-model="confirmed" id="ng-change-example2" />
	 *       <label for="ng-change-example2">Confirmed</label><br />
	 *       <tt>debug = {{confirmed}}</tt><br/>
	 *       <tt>counter = {{counter}}</tt><br/>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     var counter = element(by.binding('counter'));
	 *     var debug = element(by.binding('confirmed'));
	 *
	 *     it('should evaluate the expression if changing from view', function() {
	 *       expect(counter.getText()).toContain('0');
	 *
	 *       element(by.id('ng-change-example1')).click();
	 *
	 *       expect(counter.getText()).toContain('1');
	 *       expect(debug.getText()).toContain('true');
	 *     });
	 *
	 *     it('should not evaluate the expression if changing from model', function() {
	 *       element(by.id('ng-change-example2')).click();

	 *       expect(counter.getText()).toContain('0');
	 *       expect(debug.getText()).toContain('true');
	 *     });
	 *   </file>
	 * </example>
	 */var ngChangeDirective=valueFn({restrict:'A',require:'ngModel',link:function link(scope,element,attr,ctrl){ctrl.$viewChangeListeners.push(function(){scope.$eval(attr.ngChange);});}});/* exported
	  ngClassDirective,
	  ngClassEvenDirective,
	  ngClassOddDirective
	*/function classDirective(name,selector){name='ngClass'+name;var indexWatchExpression;return['$parse',function($parse){return{restrict:'AC',link:function link(scope,element,attr){var classCounts=element.data('$classCounts');var oldModulo=true;var oldClassString;if(!classCounts){// Use createMap() to prevent class assumptions involving property
	// names in Object.prototype
	classCounts=createMap();element.data('$classCounts',classCounts);}if(name!=='ngClass'){if(!indexWatchExpression){indexWatchExpression=$parse('$index',function moduloTwo($index){// eslint-disable-next-line no-bitwise
	return $index&1;});}scope.$watch(indexWatchExpression,ngClassIndexWatchAction);}scope.$watch($parse(attr[name],toClassString),ngClassWatchAction);function addClasses(classString){classString=digestClassCounts(split(classString),1);attr.$addClass(classString);}function removeClasses(classString){classString=digestClassCounts(split(classString),-1);attr.$removeClass(classString);}function updateClasses(oldClassString,newClassString){var oldClassArray=split(oldClassString);var newClassArray=split(newClassString);var toRemoveArray=arrayDifference(oldClassArray,newClassArray);var toAddArray=arrayDifference(newClassArray,oldClassArray);var toRemoveString=digestClassCounts(toRemoveArray,-1);var toAddString=digestClassCounts(toAddArray,1);attr.$addClass(toAddString);attr.$removeClass(toRemoveString);}function digestClassCounts(classArray,count){var classesToUpdate=[];forEach(classArray,function(className){if(count>0||classCounts[className]){classCounts[className]=(classCounts[className]||0)+count;if(classCounts[className]===+(count>0)){classesToUpdate.push(className);}}});return classesToUpdate.join(' ');}function ngClassIndexWatchAction(newModulo){// This watch-action should run before the `ngClassWatchAction()`, thus it
	// adds/removes `oldClassString`. If the `ngClass` expression has changed as well, the
	// `ngClassWatchAction()` will update the classes.
	if(newModulo===selector){addClasses(oldClassString);}else{removeClasses(oldClassString);}oldModulo=newModulo;}function ngClassWatchAction(newClassString){if(oldModulo===selector){updateClasses(oldClassString,newClassString);}oldClassString=newClassString;}}};}];// Helpers
	function arrayDifference(tokens1,tokens2){if(!tokens1||!tokens1.length)return[];if(!tokens2||!tokens2.length)return tokens1;var values=[];outer:for(var i=0;i<tokens1.length;i++){var token=tokens1[i];for(var j=0;j<tokens2.length;j++){if(token===tokens2[j])continue outer;}values.push(token);}return values;}function split(classString){return classString&&classString.split(' ');}function toClassString(classValue){if(!classValue)return classValue;var classString=classValue;if(isArray(classValue)){classString=classValue.map(toClassString).join(' ');}else if(isObject(classValue)){classString=Object.keys(classValue).filter(function(key){return classValue[key];}).join(' ');}else if(!isString(classValue)){classString=classValue+'';}return classString;}}/**
	 * @ngdoc directive
	 * @name ngClass
	 * @restrict AC
	 * @element ANY
	 *
	 * @description
	 * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding
	 * an expression that represents all classes to be added.
	 *
	 * The directive operates in three different ways, depending on which of three types the expression
	 * evaluates to:
	 *
	 * 1. If the expression evaluates to a string, the string should be one or more space-delimited class
	 * names.
	 *
	 * 2. If the expression evaluates to an object, then for each key-value pair of the
	 * object with a truthy value the corresponding key is used as a class name.
	 *
	 * 3. If the expression evaluates to an array, each element of the array should either be a string as in
	 * type 1 or an object as in type 2. This means that you can mix strings and objects together in an array
	 * to give you more control over what CSS classes appear. See the code below for an example of this.
	 *
	 *
	 * The directive won't add duplicate classes if a particular class was already set.
	 *
	 * When the expression changes, the previously added classes are removed and only then are the
	 * new classes added.
	 *
	 * @knownIssue
	 * You should not use {@link guide/interpolation interpolation} in the value of the `class`
	 * attribute, when using the `ngClass` directive on the same element.
	 * See {@link guide/interpolation#known-issues here} for more info.
	 *
	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
	 * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
	 * | {@link ng.$animate#setClass setClass} | just before classes are added and classes are removed from the element at the same time |
	 *
	 * ### ngClass and pre-existing CSS3 Transitions/Animations
	   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.
	   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder
	   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure
	   to view the step by step details of {@link $animate#addClass $animate.addClass} and
	   {@link $animate#removeClass $animate.removeClass}.
	 *
	 * @param {expression} ngClass {@link guide/expression Expression} to eval. The result
	 *   of the evaluation can be a string representing space delimited class
	 *   names, an array, or a map of class names to boolean values. In the case of a map, the
	 *   names of the properties whose values are truthy will be added as css classes to the
	 *   element.
	 *
	 * @example
	 * ### Basic
	   <example name="ng-class">
	     <file name="index.html">
	       <p ng-class="{strike: deleted, bold: important, 'has-error': error}">Map Syntax Example</p>
	       <label>
	          <input type="checkbox" ng-model="deleted">
	          deleted (apply "strike" class)
	       </label><br>
	       <label>
	          <input type="checkbox" ng-model="important">
	          important (apply "bold" class)
	       </label><br>
	       <label>
	          <input type="checkbox" ng-model="error">
	          error (apply "has-error" class)
	       </label>
	       <hr>
	       <p ng-class="style">Using String Syntax</p>
	       <input type="text" ng-model="style"
	              placeholder="Type: bold strike red" aria-label="Type: bold strike red">
	       <hr>
	       <p ng-class="[style1, style2, style3]">Using Array Syntax</p>
	       <input ng-model="style1"
	              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red"><br>
	       <input ng-model="style2"
	              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 2"><br>
	       <input ng-model="style3"
	              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 3"><br>
	       <hr>
	       <p ng-class="[style4, {orange: warning}]">Using Array and Map Syntax</p>
	       <input ng-model="style4" placeholder="Type: bold, strike" aria-label="Type: bold, strike"><br>
	       <label><input type="checkbox" ng-model="warning"> warning (apply "orange" class)</label>
	     </file>
	     <file name="style.css">
	       .strike {
	           text-decoration: line-through;
	       }
	       .bold {
	           font-weight: bold;
	       }
	       .red {
	           color: red;
	       }
	       .has-error {
	           color: red;
	           background-color: yellow;
	       }
	       .orange {
	           color: orange;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       var ps = element.all(by.css('p'));

	       it('should let you toggle the class', function() {

	         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);
	         expect(ps.first().getAttribute('class')).not.toMatch(/has-error/);

	         element(by.model('important')).click();
	         expect(ps.first().getAttribute('class')).toMatch(/bold/);

	         element(by.model('error')).click();
	         expect(ps.first().getAttribute('class')).toMatch(/has-error/);
	       });

	       it('should let you toggle string example', function() {
	         expect(ps.get(1).getAttribute('class')).toBe('');
	         element(by.model('style')).clear();
	         element(by.model('style')).sendKeys('red');
	         expect(ps.get(1).getAttribute('class')).toBe('red');
	       });

	       it('array example should have 3 classes', function() {
	         expect(ps.get(2).getAttribute('class')).toBe('');
	         element(by.model('style1')).sendKeys('bold');
	         element(by.model('style2')).sendKeys('strike');
	         element(by.model('style3')).sendKeys('red');
	         expect(ps.get(2).getAttribute('class')).toBe('bold strike red');
	       });

	       it('array with map example should have 2 classes', function() {
	         expect(ps.last().getAttribute('class')).toBe('');
	         element(by.model('style4')).sendKeys('bold');
	         element(by.model('warning')).click();
	         expect(ps.last().getAttribute('class')).toBe('bold orange');
	       });
	     </file>
	   </example>

	   @example
	   ### Animations

	   The example below demonstrates how to perform animations using ngClass.

	   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class">
	     <file name="index.html">
	      <input id="setbtn" type="button" value="set" ng-click="myVar='my-class'">
	      <input id="clearbtn" type="button" value="clear" ng-click="myVar=''">
	      <br>
	      <span class="base-class" ng-class="myVar">Sample Text</span>
	     </file>
	     <file name="style.css">
	       .base-class {
	         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
	       }

	       .base-class.my-class {
	         color: red;
	         font-size:3em;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-class', function() {
	         expect(element(by.css('.base-class')).getAttribute('class')).not.
	           toMatch(/my-class/);

	         element(by.id('setbtn')).click();

	         expect(element(by.css('.base-class')).getAttribute('class')).
	           toMatch(/my-class/);

	         element(by.id('clearbtn')).click();

	         expect(element(by.css('.base-class')).getAttribute('class')).not.
	           toMatch(/my-class/);
	       });
	     </file>
	   </example>
	 */var ngClassDirective=classDirective('',true);/**
	 * @ngdoc directive
	 * @name ngClassOdd
	 * @restrict AC
	 *
	 * @description
	 * The `ngClassOdd` and `ngClassEven` directives work exactly as
	 * {@link ng.directive:ngClass ngClass}, except they work in
	 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
	 *
	 * This directive can be applied only within the scope of an
	 * {@link ng.directive:ngRepeat ngRepeat}.
	 *
	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
	 * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
	 *
	 * @element ANY
	 * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result
	 *   of the evaluation can be a string representing space delimited class names or an array.
	 *
	 * @example
	   <example name="ng-class-odd">
	     <file name="index.html">
	        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
	          <li ng-repeat="name in names">
	           <span ng-class-odd="'odd'" ng-class-even="'even'">
	             {{name}}
	           </span>
	          </li>
	        </ol>
	     </file>
	     <file name="style.css">
	       .odd {
	         color: red;
	       }
	       .even {
	         color: blue;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-class-odd and ng-class-even', function() {
	         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
	           toMatch(/odd/);
	         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
	           toMatch(/even/);
	       });
	     </file>
	   </example>
	 *
	 * <hr />
	 * @example
	 * An example on how to implement animations using `ngClassOdd`:
	 *
	   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class-odd-animate">
	     <file name="index.html">
	       <div ng-init="items=['Item 3', 'Item 2', 'Item 1', 'Item 0']">
	         <button ng-click="items.unshift('Item ' + items.length)">Add item</button>
	         <hr />
	         <table>
	           <tr ng-repeat="item in items" ng-class-odd="'odd'">
	             <td>{{ item }}</td>
	           </tr>
	         </table>
	       </div>
	     </file>
	     <file name="style.css">
	       .odd {
	         background: rgba(255, 255, 0, 0.25);
	       }

	       .odd-add, .odd-remove {
	         transition: 1.5s;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should add new entries to the beginning of the list', function() {
	         var button = element(by.buttonText('Add item'));
	         var rows = element.all(by.repeater('item in items'));

	         expect(rows.count()).toBe(4);
	         expect(rows.get(0).getText()).toBe('Item 3');
	         expect(rows.get(1).getText()).toBe('Item 2');

	         button.click();

	         expect(rows.count()).toBe(5);
	         expect(rows.get(0).getText()).toBe('Item 4');
	         expect(rows.get(1).getText()).toBe('Item 3');
	       });

	       it('should add odd class to odd entries', function() {
	         var button = element(by.buttonText('Add item'));
	         var rows = element.all(by.repeater('item in items'));

	         expect(rows.get(0).getAttribute('class')).toMatch(/odd/);
	         expect(rows.get(1).getAttribute('class')).not.toMatch(/odd/);

	         button.click();

	         expect(rows.get(0).getAttribute('class')).toMatch(/odd/);
	         expect(rows.get(1).getAttribute('class')).not.toMatch(/odd/);
	       });
	     </file>
	   </example>
	 */var ngClassOddDirective=classDirective('Odd',0);/**
	 * @ngdoc directive
	 * @name ngClassEven
	 * @restrict AC
	 *
	 * @description
	 * The `ngClassOdd` and `ngClassEven` directives work exactly as
	 * {@link ng.directive:ngClass ngClass}, except they work in
	 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
	 *
	 * This directive can be applied only within the scope of an
	 * {@link ng.directive:ngRepeat ngRepeat}.
	 *
	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
	 * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
	 *
	 * @element ANY
	 * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The
	 *   result of the evaluation can be a string representing space delimited class names or an array.
	 *
	 * @example
	   <example name="ng-class-even">
	     <file name="index.html">
	        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
	          <li ng-repeat="name in names">
	           <span ng-class-odd="'odd'" ng-class-even="'even'">
	             {{name}} &nbsp; &nbsp; &nbsp;
	           </span>
	          </li>
	        </ol>
	     </file>
	     <file name="style.css">
	       .odd {
	         color: red;
	       }
	       .even {
	         color: blue;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-class-odd and ng-class-even', function() {
	         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
	           toMatch(/odd/);
	         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
	           toMatch(/even/);
	       });
	     </file>
	   </example>
	 *
	 * <hr />
	 * @example
	 * An example on how to implement animations using `ngClassEven`:
	 *
	   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class-even-animate">
	     <file name="index.html">
	       <div ng-init="items=['Item 3', 'Item 2', 'Item 1', 'Item 0']">
	         <button ng-click="items.unshift('Item ' + items.length)">Add item</button>
	         <hr />
	         <table>
	           <tr ng-repeat="item in items" ng-class-even="'even'">
	             <td>{{ item }}</td>
	           </tr>
	         </table>
	       </div>
	     </file>
	     <file name="style.css">
	       .even {
	         background: rgba(255, 255, 0, 0.25);
	       }

	       .even-add, .even-remove {
	         transition: 1.5s;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should add new entries to the beginning of the list', function() {
	         var button = element(by.buttonText('Add item'));
	         var rows = element.all(by.repeater('item in items'));

	         expect(rows.count()).toBe(4);
	         expect(rows.get(0).getText()).toBe('Item 3');
	         expect(rows.get(1).getText()).toBe('Item 2');

	         button.click();

	         expect(rows.count()).toBe(5);
	         expect(rows.get(0).getText()).toBe('Item 4');
	         expect(rows.get(1).getText()).toBe('Item 3');
	       });

	       it('should add even class to even entries', function() {
	         var button = element(by.buttonText('Add item'));
	         var rows = element.all(by.repeater('item in items'));

	         expect(rows.get(0).getAttribute('class')).not.toMatch(/even/);
	         expect(rows.get(1).getAttribute('class')).toMatch(/even/);

	         button.click();

	         expect(rows.get(0).getAttribute('class')).not.toMatch(/even/);
	         expect(rows.get(1).getAttribute('class')).toMatch(/even/);
	       });
	     </file>
	   </example>
	 */var ngClassEvenDirective=classDirective('Even',1);/**
	 * @ngdoc directive
	 * @name ngCloak
	 * @restrict AC
	 *
	 * @description
	 * The `ngCloak` directive is used to prevent the AngularJS html template from being briefly
	 * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this
	 * directive to avoid the undesirable flicker effect caused by the html template display.
	 *
	 * The directive can be applied to the `<body>` element, but the preferred usage is to apply
	 * multiple `ngCloak` directives to small portions of the page to permit progressive rendering
	 * of the browser view.
	 *
	 * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and
	 * `angular.min.js`.
	 * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
	 *
	 * ```css
	 * [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
	 *   display: none !important;
	 * }
	 * ```
	 *
	 * When this css rule is loaded by the browser, all html elements (including their children) that
	 * are tagged with the `ngCloak` directive are hidden. When AngularJS encounters this directive
	 * during the compilation of the template it deletes the `ngCloak` element attribute, making
	 * the compiled element visible.
	 *
	 * For the best result, the `angular.js` script must be loaded in the head section of the html
	 * document; alternatively, the css rule above must be included in the external stylesheet of the
	 * application.
	 *
	 * @element ANY
	 *
	 * @example
	   <example name="ng-cloak">
	     <file name="index.html">
	        <div id="template1" ng-cloak>{{ 'hello' }}</div>
	        <div id="template2" class="ng-cloak">{{ 'world' }}</div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should remove the template directive and css class', function() {
	         expect($('#template1').getAttribute('ng-cloak')).
	           toBeNull();
	         expect($('#template2').getAttribute('ng-cloak')).
	           toBeNull();
	       });
	     </file>
	   </example>
	 *
	 */var ngCloakDirective=ngDirective({compile:function compile(element,attr){attr.$set('ngCloak',undefined);element.removeClass('ng-cloak');}});/**
	 * @ngdoc directive
	 * @name ngController
	 *
	 * @description
	 * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular
	 * supports the principles behind the Model-View-Controller design pattern.
	 *
	 * MVC components in angular:
	 *
	 * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties
	 *   are accessed through bindings.
	 * * View — The template (HTML with data bindings) that is rendered into the View.
	 * * Controller — The `ngController` directive specifies a Controller class; the class contains business
	 *   logic behind the application to decorate the scope with functions and values
	 *
	 * Note that you can also attach controllers to the DOM by declaring it in a route definition
	 * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller
	 * again using `ng-controller` in the template itself.  This will cause the controller to be attached
	 * and executed twice.
	 *
	 * @element ANY
	 * @scope
	 * @priority 500
	 * @param {expression} ngController Name of a constructor function registered with the current
	 * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}
	 * that on the current scope evaluates to a constructor function.
	 *
	 * The controller instance can be published into a scope property by specifying
	 * `ng-controller="as propertyName"`.
	 *
	 * @example
	 * Here is a simple form for editing user contact information. Adding, removing, clearing, and
	 * greeting are methods declared on the controller (see source tab). These methods can
	 * easily be called from the AngularJS markup. Any changes to the data are automatically reflected
	 * in the View without the need for a manual update.
	 *
	 * Two different declaration styles are included below:
	 *
	 * * one binds methods and properties directly onto the controller using `this`:
	 * `ng-controller="SettingsController1 as settings"`
	 * * one injects `$scope` into the controller:
	 * `ng-controller="SettingsController2"`
	 *
	 * The second option is more common in the AngularJS community, and is generally used in boilerplates
	 * and in this guide. However, there are advantages to binding properties directly to the controller
	 * and avoiding scope.
	 *
	 * * Using `controller as` makes it obvious which controller you are accessing in the template when
	 * multiple controllers apply to an element.
	 * * If you are writing your controllers as classes you have easier access to the properties and
	 * methods, which will appear on the scope, from inside the controller code.
	 * * Since there is always a `.` in the bindings, you don't have to worry about prototypal
	 * inheritance masking primitives.
	 *
	 * This example demonstrates the `controller as` syntax.
	 *
	 * <example name="ngControllerAs" module="controllerAsExample">
	 *   <file name="index.html">
	 *    <div id="ctrl-as-exmpl" ng-controller="SettingsController1 as settings">
	 *      <label>Name: <input type="text" ng-model="settings.name"/></label>
	 *      <button ng-click="settings.greet()">greet</button><br/>
	 *      Contact:
	 *      <ul>
	 *        <li ng-repeat="contact in settings.contacts">
	 *          <select ng-model="contact.type" aria-label="Contact method" id="select_{{$index}}">
	 *             <option>phone</option>
	 *             <option>email</option>
	 *          </select>
	 *          <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
	 *          <button ng-click="settings.clearContact(contact)">clear</button>
	 *          <button ng-click="settings.removeContact(contact)" aria-label="Remove">X</button>
	 *        </li>
	 *        <li><button ng-click="settings.addContact()">add</button></li>
	 *     </ul>
	 *    </div>
	 *   </file>
	 *   <file name="app.js">
	 *    angular.module('controllerAsExample', [])
	 *      .controller('SettingsController1', SettingsController1);
	 *
	 *    function SettingsController1() {
	 *      this.name = 'John Smith';
	 *      this.contacts = [
	 *        {type: 'phone', value: '408 555 1212'},
	 *        {type: 'email', value: 'john.smith@example.org'}
	 *      ];
	 *    }
	 *
	 *    SettingsController1.prototype.greet = function() {
	 *      alert(this.name);
	 *    };
	 *
	 *    SettingsController1.prototype.addContact = function() {
	 *      this.contacts.push({type: 'email', value: 'yourname@example.org'});
	 *    };
	 *
	 *    SettingsController1.prototype.removeContact = function(contactToRemove) {
	 *     var index = this.contacts.indexOf(contactToRemove);
	 *      this.contacts.splice(index, 1);
	 *    };
	 *
	 *    SettingsController1.prototype.clearContact = function(contact) {
	 *      contact.type = 'phone';
	 *      contact.value = '';
	 *    };
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     it('should check controller as', function() {
	 *       var container = element(by.id('ctrl-as-exmpl'));
	 *         expect(container.element(by.model('settings.name'))
	 *           .getAttribute('value')).toBe('John Smith');
	 *
	 *       var firstRepeat =
	 *           container.element(by.repeater('contact in settings.contacts').row(0));
	 *       var secondRepeat =
	 *           container.element(by.repeater('contact in settings.contacts').row(1));
	 *
	 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *           .toBe('408 555 1212');
	 *
	 *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *           .toBe('john.smith@example.org');
	 *
	 *       firstRepeat.element(by.buttonText('clear')).click();
	 *
	 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *           .toBe('');
	 *
	 *       container.element(by.buttonText('add')).click();
	 *
	 *       expect(container.element(by.repeater('contact in settings.contacts').row(2))
	 *           .element(by.model('contact.value'))
	 *           .getAttribute('value'))
	 *           .toBe('yourname@example.org');
	 *     });
	 *   </file>
	 * </example>
	 *
	 * This example demonstrates the "attach to `$scope`" style of controller.
	 *
	 * <example name="ngController" module="controllerExample">
	 *  <file name="index.html">
	 *   <div id="ctrl-exmpl" ng-controller="SettingsController2">
	 *     <label>Name: <input type="text" ng-model="name"/></label>
	 *     <button ng-click="greet()">greet</button><br/>
	 *     Contact:
	 *     <ul>
	 *       <li ng-repeat="contact in contacts">
	 *         <select ng-model="contact.type" id="select_{{$index}}">
	 *            <option>phone</option>
	 *            <option>email</option>
	 *         </select>
	 *         <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
	 *         <button ng-click="clearContact(contact)">clear</button>
	 *         <button ng-click="removeContact(contact)">X</button>
	 *       </li>
	 *       <li>[ <button ng-click="addContact()">add</button> ]</li>
	 *    </ul>
	 *   </div>
	 *  </file>
	 *  <file name="app.js">
	 *   angular.module('controllerExample', [])
	 *     .controller('SettingsController2', ['$scope', SettingsController2]);
	 *
	 *   function SettingsController2($scope) {
	 *     $scope.name = 'John Smith';
	 *     $scope.contacts = [
	 *       {type:'phone', value:'408 555 1212'},
	 *       {type:'email', value:'john.smith@example.org'}
	 *     ];
	 *
	 *     $scope.greet = function() {
	 *       alert($scope.name);
	 *     };
	 *
	 *     $scope.addContact = function() {
	 *       $scope.contacts.push({type:'email', value:'yourname@example.org'});
	 *     };
	 *
	 *     $scope.removeContact = function(contactToRemove) {
	 *       var index = $scope.contacts.indexOf(contactToRemove);
	 *       $scope.contacts.splice(index, 1);
	 *     };
	 *
	 *     $scope.clearContact = function(contact) {
	 *       contact.type = 'phone';
	 *       contact.value = '';
	 *     };
	 *   }
	 *  </file>
	 *  <file name="protractor.js" type="protractor">
	 *    it('should check controller', function() {
	 *      var container = element(by.id('ctrl-exmpl'));
	 *
	 *      expect(container.element(by.model('name'))
	 *          .getAttribute('value')).toBe('John Smith');
	 *
	 *      var firstRepeat =
	 *          container.element(by.repeater('contact in contacts').row(0));
	 *      var secondRepeat =
	 *          container.element(by.repeater('contact in contacts').row(1));
	 *
	 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *          .toBe('408 555 1212');
	 *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *          .toBe('john.smith@example.org');
	 *
	 *      firstRepeat.element(by.buttonText('clear')).click();
	 *
	 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
	 *          .toBe('');
	 *
	 *      container.element(by.buttonText('add')).click();
	 *
	 *      expect(container.element(by.repeater('contact in contacts').row(2))
	 *          .element(by.model('contact.value'))
	 *          .getAttribute('value'))
	 *          .toBe('yourname@example.org');
	 *    });
	 *  </file>
	 *</example>

	 */var ngControllerDirective=[function(){return{restrict:'A',scope:true,controller:'@',priority:500};}];/**
	 * @ngdoc directive
	 * @name ngCsp
	 *
	 * @restrict A
	 * @element ANY
	 * @description
	 *
	 * AngularJS has some features that can conflict with certain restrictions that are applied when using
	 * [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) rules.
	 *
	 * If you intend to implement CSP with these rules then you must tell AngularJS not to use these
	 * features.
	 *
	 * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.
	 *
	 *
	 * The following default rules in CSP affect AngularJS:
	 *
	 * * The use of `eval()`, `Function(string)` and similar functions to dynamically create and execute
	 * code from strings is forbidden. AngularJS makes use of this in the {@link $parse} service to
	 * provide a 30% increase in the speed of evaluating AngularJS expressions. (This CSP rule can be
	 * disabled with the CSP keyword `unsafe-eval`, but it is generally not recommended as it would
	 * weaken the protections offered by CSP.)
	 *
	 * * The use of inline resources, such as inline `<script>` and `<style>` elements, are forbidden.
	 * This prevents apps from injecting custom styles directly into the document. AngularJS makes use of
	 * this to include some CSS rules (e.g. {@link ngCloak} and {@link ngHide}). To make these
	 * directives work when a CSP rule is blocking inline styles, you must link to the `angular-csp.css`
	 * in your HTML manually. (This CSP rule can be disabled with the CSP keyword `unsafe-inline`, but
	 * it is generally not recommended as it would weaken the protections offered by CSP.)
	 *
	 * If you do not provide `ngCsp` then AngularJS tries to autodetect if CSP is blocking dynamic code
	 * creation from strings (e.g., `unsafe-eval` not specified in CSP header) and automatically
	 * deactivates this feature in the {@link $parse} service. This autodetection, however, triggers a
	 * CSP error to be logged in the console:
	 *
	 * ```
	 * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of
	 * script in the following Content Security Policy directive: "default-src 'self'". Note that
	 * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.
	 * ```
	 *
	 * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`
	 * directive on an element of the HTML document that appears before the `<script>` tag that loads
	 * the `angular.js` file.
	 *
	 * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*
	 *
	 * You can specify which of the CSP related AngularJS features should be deactivated by providing
	 * a value for the `ng-csp` attribute. The options are as follows:
	 *
	 * * no-inline-style: this stops AngularJS from injecting CSS styles into the DOM
	 *
	 * * no-unsafe-eval: this stops AngularJS from optimizing $parse with unsafe eval of strings
	 *
	 * You can use these values in the following combinations:
	 *
	 *
	 * * No declaration means that AngularJS will assume that you can do inline styles, but it will do
	 * a runtime check for unsafe-eval. E.g. `<body>`. This is backwardly compatible with previous
	 * versions of AngularJS.
	 *
	 * * A simple `ng-csp` (or `data-ng-csp`) attribute will tell AngularJS to deactivate both inline
	 * styles and unsafe eval. E.g. `<body ng-csp>`. This is backwardly compatible with previous
	 * versions of AngularJS.
	 *
	 * * Specifying only `no-unsafe-eval` tells AngularJS that we must not use eval, but that we can
	 * inject inline styles. E.g. `<body ng-csp="no-unsafe-eval">`.
	 *
	 * * Specifying only `no-inline-style` tells AngularJS that we must not inject styles, but that we can
	 * run eval - no automatic check for unsafe eval will occur. E.g. `<body ng-csp="no-inline-style">`
	 *
	 * * Specifying both `no-unsafe-eval` and `no-inline-style` tells AngularJS that we must not inject
	 * styles nor use eval, which is the same as an empty: ng-csp.
	 * E.g.`<body ng-csp="no-inline-style;no-unsafe-eval">`
	 *
	 * @example
	 *
	 * This example shows how to apply the `ngCsp` directive to the `html` tag.
	   ```html
	     <!doctype html>
	     <html ng-app ng-csp>
	     ...
	     ...
	     </html>
	   ```

	  <!-- Note: the `.csp` suffix in the example name triggers CSP mode in our http server! -->
	  <example name="example.csp" module="cspExample" ng-csp="true">
	    <file name="index.html">
	      <div ng-controller="MainController as ctrl">
	        <div>
	          <button ng-click="ctrl.inc()" id="inc">Increment</button>
	          <span id="counter">
	            {{ctrl.counter}}
	          </span>
	        </div>

	        <div>
	          <button ng-click="ctrl.evil()" id="evil">Evil</button>
	          <span id="evilError">
	            {{ctrl.evilError}}
	          </span>
	        </div>
	      </div>
	    </file>
	    <file name="script.js">
	       angular.module('cspExample', [])
	         .controller('MainController', function MainController() {
	            this.counter = 0;
	            this.inc = function() {
	              this.counter++;
	            };
	            this.evil = function() {
	              try {
	                eval('1+2'); // eslint-disable-line no-eval
	              } catch (e) {
	                this.evilError = e.message;
	              }
	            };
	          });
	    </file>
	    <file name="protractor.js" type="protractor">
	      var util, webdriver;

	      var incBtn = element(by.id('inc'));
	      var counter = element(by.id('counter'));
	      var evilBtn = element(by.id('evil'));
	      var evilError = element(by.id('evilError'));

	      function getAndClearSevereErrors() {
	        return browser.manage().logs().get('browser').then(function(browserLog) {
	          return browserLog.filter(function(logEntry) {
	            return logEntry.level.value > webdriver.logging.Level.WARNING.value;
	          });
	        });
	      }

	      function clearErrors() {
	        getAndClearSevereErrors();
	      }

	      function expectNoErrors() {
	        getAndClearSevereErrors().then(function(filteredLog) {
	          expect(filteredLog.length).toEqual(0);
	          if (filteredLog.length) {
	            console.log('browser console errors: ' + util.inspect(filteredLog));
	          }
	        });
	      }

	      function expectError(regex) {
	        getAndClearSevereErrors().then(function(filteredLog) {
	          var found = false;
	          filteredLog.forEach(function(log) {
	            if (log.message.match(regex)) {
	              found = true;
	            }
	          });
	          if (!found) {
	            throw new Error('expected an error that matches ' + regex);
	          }
	        });
	      }

	      beforeEach(function() {
	        util = require('util');
	        webdriver = require('selenium-webdriver');
	      });

	      // For now, we only test on Chrome,
	      // as Safari does not load the page with Protractor's injected scripts,
	      // and Firefox webdriver always disables content security policy (#6358)
	      if (browser.params.browser !== 'chrome') {
	        return;
	      }

	      it('should not report errors when the page is loaded', function() {
	        // clear errors so we are not dependent on previous tests
	        clearErrors();
	        // Need to reload the page as the page is already loaded when
	        // we come here
	        browser.driver.getCurrentUrl().then(function(url) {
	          browser.get(url);
	        });
	        expectNoErrors();
	      });

	      it('should evaluate expressions', function() {
	        expect(counter.getText()).toEqual('0');
	        incBtn.click();
	        expect(counter.getText()).toEqual('1');
	        expectNoErrors();
	      });

	      it('should throw and report an error when using "eval"', function() {
	        evilBtn.click();
	        expect(evilError.getText()).toMatch(/Content Security Policy/);
	        expectError(/Content Security Policy/);
	      });
	    </file>
	  </example>
	  */// `ngCsp` is not implemented as a proper directive any more, because we need it be processed while
	// we bootstrap the app (before `$parse` is instantiated). For this reason, we just have the `csp()`
	// fn that looks for the `ng-csp` attribute anywhere in the current doc.
	/**
	 * @ngdoc directive
	 * @name ngClick
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * The ngClick directive allows you to specify custom behavior when
	 * an element is clicked.
	 *
	 * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon
	 * click. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-click">
	     <file name="index.html">
	      <button ng-click="count = count + 1" ng-init="count=0">
	        Increment
	      </button>
	      <span>
	        count: {{count}}
	      </span>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-click', function() {
	         expect(element(by.binding('count')).getText()).toMatch('0');
	         element(by.css('button')).click();
	         expect(element(by.binding('count')).getText()).toMatch('1');
	       });
	     </file>
	   </example>
	 *//*
	 * A collection of directives that allows creation of custom event handlers that are defined as
	 * AngularJS expressions and are compiled and executed within the current scope.
	 */var ngEventDirectives={};// For events that might fire synchronously during DOM manipulation
	// we need to execute their event handlers asynchronously using $evalAsync,
	// so that they are not executed in an inconsistent state.
	var forceAsyncEvents={'blur':true,'focus':true};forEach('click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),function(eventName){var directiveName=directiveNormalize('ng-'+eventName);ngEventDirectives[directiveName]=['$parse','$rootScope','$exceptionHandler',function($parse,$rootScope,$exceptionHandler){return createEventDirective($parse,$rootScope,$exceptionHandler,directiveName,eventName,forceAsyncEvents[eventName]);}];});function createEventDirective($parse,$rootScope,$exceptionHandler,directiveName,eventName,forceAsync){return{restrict:'A',compile:function compile($element,attr){// NOTE:
	// We expose the powerful `$event` object on the scope that provides access to the Window,
	// etc. This is OK, because expressions are not sandboxed any more (and the expression
	// sandbox was never meant to be a security feature anyway).
	var fn=$parse(attr[directiveName]);return function ngEventHandler(scope,element){element.on(eventName,function(event){var callback=function callback(){fn(scope,{$event:event});};if(!$rootScope.$$phase){scope.$apply(callback);}else if(forceAsync){scope.$evalAsync(callback);}else{try{callback();}catch(error){$exceptionHandler(error);}}});};}};}/**
	 * @ngdoc directive
	 * @name ngDblclick
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.
	 *
	 * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon
	 * a dblclick. (The Event object is available as `$event`)
	 *
	 * @example
	   <example name="ng-dblclick">
	     <file name="index.html">
	      <button ng-dblclick="count = count + 1" ng-init="count=0">
	        Increment (on double click)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMousedown
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * The ngMousedown directive allows you to specify custom behavior on mousedown event.
	 *
	 * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon
	 * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mousedown">
	     <file name="index.html">
	      <button ng-mousedown="count = count + 1" ng-init="count=0">
	        Increment (on mouse down)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMouseup
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on mouseup event.
	 *
	 * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon
	 * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mouseup">
	     <file name="index.html">
	      <button ng-mouseup="count = count + 1" ng-init="count=0">
	        Increment (on mouse up)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMouseover
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on mouseover event.
	 *
	 * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon
	 * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mouseover">
	     <file name="index.html">
	      <button ng-mouseover="count = count + 1" ng-init="count=0">
	        Increment (when mouse is over)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMouseenter
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on mouseenter event.
	 *
	 * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon
	 * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mouseenter">
	     <file name="index.html">
	      <button ng-mouseenter="count = count + 1" ng-init="count=0">
	        Increment (when mouse enters)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMouseleave
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on mouseleave event.
	 *
	 * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon
	 * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mouseleave">
	     <file name="index.html">
	      <button ng-mouseleave="count = count + 1" ng-init="count=0">
	        Increment (when mouse leaves)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngMousemove
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on mousemove event.
	 *
	 * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon
	 * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-mousemove">
	     <file name="index.html">
	      <button ng-mousemove="count = count + 1" ng-init="count=0">
	        Increment (when mouse moves)
	      </button>
	      count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngKeydown
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on keydown event.
	 *
	 * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon
	 * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
	 *
	 * @example
	   <example name="ng-keydown">
	     <file name="index.html">
	      <input ng-keydown="count = count + 1" ng-init="count=0">
	      key down count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngKeyup
	 * @restrict A
	 * @element ANY
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on keyup event.
	 *
	 * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon
	 * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
	 *
	 * @example
	   <example name="ng-keyup">
	     <file name="index.html">
	       <p>Typing in the input box below updates the key count</p>
	       <input ng-keyup="count = count + 1" ng-init="count=0"> key up count: {{count}}

	       <p>Typing in the input box below updates the keycode</p>
	       <input ng-keyup="event=$event">
	       <p>event keyCode: {{ event.keyCode }}</p>
	       <p>event altKey: {{ event.altKey }}</p>
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngKeypress
	 * @restrict A
	 * @element ANY
	 *
	 * @description
	 * Specify custom behavior on keypress event.
	 *
	 * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon
	 * keypress. ({@link guide/expression#-event- Event object is available as `$event`}
	 * and can be interrogated for keyCode, altKey, etc.)
	 *
	 * @example
	   <example name="ng-keypress">
	     <file name="index.html">
	      <input ng-keypress="count = count + 1" ng-init="count=0">
	      key press count: {{count}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngSubmit
	 * @restrict A
	 * @element form
	 * @priority 0
	 *
	 * @description
	 * Enables binding AngularJS expressions to onsubmit events.
	 *
	 * Additionally it prevents the default action (which for form means sending the request to the
	 * server and reloading the current page), but only if the form does not contain `action`,
	 * `data-action`, or `x-action` attributes.
	 *
	 * <div class="alert alert-warning">
	 * **Warning:** Be careful not to cause "double-submission" by using both the `ngClick` and
	 * `ngSubmit` handlers together. See the
	 * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}
	 * for a detailed discussion of when `ngSubmit` may be triggered.
	 * </div>
	 *
	 * @param {expression} ngSubmit {@link guide/expression Expression} to eval.
	 * ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example module="submitExample" name="ng-submit">
	     <file name="index.html">
	      <script>
	        angular.module('submitExample', [])
	          .controller('ExampleController', ['$scope', function($scope) {
	            $scope.list = [];
	            $scope.text = 'hello';
	            $scope.submit = function() {
	              if ($scope.text) {
	                $scope.list.push(this.text);
	                $scope.text = '';
	              }
	            };
	          }]);
	      </script>
	      <form ng-submit="submit()" ng-controller="ExampleController">
	        Enter text and hit enter:
	        <input type="text" ng-model="text" name="text" />
	        <input type="submit" id="submit" value="Submit" />
	        <pre>list={{list}}</pre>
	      </form>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should check ng-submit', function() {
	         expect(element(by.binding('list')).getText()).toBe('list=[]');
	         element(by.css('#submit')).click();
	         expect(element(by.binding('list')).getText()).toContain('hello');
	         expect(element(by.model('text')).getAttribute('value')).toBe('');
	       });
	       it('should ignore empty strings', function() {
	         expect(element(by.binding('list')).getText()).toBe('list=[]');
	         element(by.css('#submit')).click();
	         element(by.css('#submit')).click();
	         expect(element(by.binding('list')).getText()).toContain('hello');
	        });
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngFocus
	 * @restrict A
	 * @element window, input, select, textarea, a
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on focus event.
	 *
	 * Note: As the `focus` event is executed synchronously when calling `input.focus()`
	 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
	 * during an `$apply` to ensure a consistent state.
	 *
	 * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon
	 * focus. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	 * See {@link ng.directive:ngClick ngClick}
	 *//**
	 * @ngdoc directive
	 * @name ngBlur
	 * @restrict A
	 * @element window, input, select, textarea, a
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on blur event.
	 *
	 * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when
	 * an element has lost focus.
	 *
	 * Note: As the `blur` event is executed synchronously also during DOM manipulations
	 * (e.g. removing a focussed input),
	 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
	 * during an `$apply` to ensure a consistent state.
	 *
	 * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon
	 * blur. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	 * See {@link ng.directive:ngClick ngClick}
	 *//**
	 * @ngdoc directive
	 * @name ngCopy
	 * @restrict A
	 * @element window, input, select, textarea, a
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on copy event.
	 *
	 * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon
	 * copy. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-copy">
	     <file name="index.html">
	      <input ng-copy="copied=true" ng-init="copied=false; value='copy me'" ng-model="value">
	      copied: {{copied}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngCut
	 * @restrict A
	 * @element window, input, select, textarea, a
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on cut event.
	 *
	 * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon
	 * cut. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-cut">
	     <file name="index.html">
	      <input ng-cut="cut=true" ng-init="cut=false; value='cut me'" ng-model="value">
	      cut: {{cut}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngPaste
	 * @restrict A
	 * @element window, input, select, textarea, a
	 * @priority 0
	 *
	 * @description
	 * Specify custom behavior on paste event.
	 *
	 * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon
	 * paste. ({@link guide/expression#-event- Event object is available as `$event`})
	 *
	 * @example
	   <example name="ng-paste">
	     <file name="index.html">
	      <input ng-paste="paste=true" ng-init="paste=false" placeholder='paste here'>
	      pasted: {{paste}}
	     </file>
	   </example>
	 *//**
	 * @ngdoc directive
	 * @name ngIf
	 * @restrict A
	 * @multiElement
	 *
	 * @description
	 * The `ngIf` directive removes or recreates a portion of the DOM tree based on an
	 * {expression}. If the expression assigned to `ngIf` evaluates to a false
	 * value then the element is removed from the DOM, otherwise a clone of the
	 * element is reinserted into the DOM.
	 *
	 * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the
	 * element in the DOM rather than changing its visibility via the `display` css property.  A common
	 * case when this difference is significant is when using css selectors that rely on an element's
	 * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.
	 *
	 * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope
	 * is created when the element is restored.  The scope created within `ngIf` inherits from
	 * its parent scope using
	 * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).
	 * An important implication of this is if `ngModel` is used within `ngIf` to bind to
	 * a javascript primitive defined in the parent scope. In this case any modifications made to the
	 * variable within the child scope will override (hide) the value in the parent scope.
	 *
	 * Also, `ngIf` recreates elements using their compiled state. An example of this behavior
	 * is if an element's class attribute is directly modified after it's compiled, using something like
	 * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element
	 * the added class will be lost because the original compiled state is used to regenerate the element.
	 *
	 * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`
	 * and `leave` effects.
	 *
	 * @animations
	 * | Animation                        | Occurs                               |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#enter enter}  | just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container |
	 * | {@link ng.$animate#leave leave}  | just before the `ngIf` contents are removed from the DOM |
	 *
	 * @element ANY
	 * @scope
	 * @priority 600
	 * @param {expression} ngIf If the {@link guide/expression expression} is falsy then
	 *     the element is removed from the DOM tree. If it is truthy a copy of the compiled
	 *     element is added to the DOM tree.
	 *
	 * @example
	  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-if">
	    <file name="index.html">
	      <label>Click me: <input type="checkbox" ng-model="checked" ng-init="checked=true" /></label><br/>
	      Show when checked:
	      <span ng-if="checked" class="animate-if">
	        This is removed when the checkbox is unchecked.
	      </span>
	    </file>
	    <file name="animations.css">
	      .animate-if {
	        background:white;
	        border:1px solid black;
	        padding:10px;
	      }

	      .animate-if.ng-enter, .animate-if.ng-leave {
	        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
	      }

	      .animate-if.ng-enter,
	      .animate-if.ng-leave.ng-leave-active {
	        opacity:0;
	      }

	      .animate-if.ng-leave,
	      .animate-if.ng-enter.ng-enter-active {
	        opacity:1;
	      }
	    </file>
	  </example>
	 */var ngIfDirective=['$animate','$compile',function($animate,$compile){return{multiElement:true,transclude:'element',priority:600,terminal:true,restrict:'A',$$tlb:true,link:function link($scope,$element,$attr,ctrl,$transclude){var block,childScope,previousElements;$scope.$watch($attr.ngIf,function ngIfWatchAction(value){if(value){if(!childScope){$transclude(function(clone,newScope){childScope=newScope;clone[clone.length++]=$compile.$$createComment('end ngIf',$attr.ngIf);// Note: We only need the first/last node of the cloned nodes.
	// However, we need to keep the reference to the jqlite wrapper as it might be changed later
	// by a directive with templateUrl when its template arrives.
	block={clone:clone};$animate.enter(clone,$element.parent(),$element);});}}else{if(previousElements){previousElements.remove();previousElements=null;}if(childScope){childScope.$destroy();childScope=null;}if(block){previousElements=getBlockNodes(block.clone);$animate.leave(previousElements).done(function(response){if(response!==false)previousElements=null;});block=null;}}});}};}];/**
	 * @ngdoc directive
	 * @name ngInclude
	 * @restrict ECA
	 * @scope
	 * @priority -400
	 *
	 * @description
	 * Fetches, compiles and includes an external HTML fragment.
	 *
	 * By default, the template URL is restricted to the same domain and protocol as the
	 * application document. This is done by calling {@link $sce#getTrustedResourceUrl
	 * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols
	 * you may either add them to your {@link ng.$sceDelegateProvider#trustedResourceUrlList trusted
	 * resource URL list} or {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to
	 * AngularJS's {@link ng.$sce Strict Contextual Escaping}.
	 *
	 * In addition, the browser's
	 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
	 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
	 * policy may further restrict whether the template is successfully loaded.
	 * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`
	 * access on some browsers.
	 *
	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#enter enter}  | when the expression changes, on the new include |
	 * | {@link ng.$animate#leave leave}  | when the expression changes, on the old include |
	 *
	 * The enter and leave animation occur concurrently.
	 *
	 * @param {string} ngInclude|src AngularJS expression evaluating to URL. If the source is a string constant,
	 *                 make sure you wrap it in **single** quotes, e.g. `src="'myPartialTemplate.html'"`.
	 * @param {string=} onload Expression to evaluate when a new partial is loaded.
	 *                  <div class="alert alert-warning">
	 *                  **Note:** When using onload on SVG elements in IE11, the browser will try to call
	 *                  a function with the name on the window element, which will usually throw a
	 *                  "function is undefined" error. To fix this, you can instead use `data-onload` or a
	 *                  different form that {@link guide/directive#normalization matches} `onload`.
	 *                  </div>
	   *
	 * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll
	 *                  $anchorScroll} to scroll the viewport after the content is loaded.
	 *
	 *                  - If the attribute is not set, disable scrolling.
	 *                  - If the attribute is set without value, enable scrolling.
	 *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.
	 *
	 * @example
	  <example module="includeExample" deps="angular-animate.js" animations="true" name="ng-include">
	    <file name="index.html">
	     <div ng-controller="ExampleController">
	       <select ng-model="template" ng-options="t.name for t in templates">
	        <option value="">(blank)</option>
	       </select>
	       url of the template: <code>{{template.url}}</code>
	       <hr/>
	       <div class="slide-animate-container">
	         <div class="slide-animate" ng-include="template.url"></div>
	       </div>
	     </div>
	    </file>
	    <file name="script.js">
	      angular.module('includeExample', ['ngAnimate'])
	        .controller('ExampleController', ['$scope', function($scope) {
	          $scope.templates =
	            [{ name: 'template1.html', url: 'template1.html'},
	             { name: 'template2.html', url: 'template2.html'}];
	          $scope.template = $scope.templates[0];
	        }]);
	     </file>
	    <file name="template1.html">
	      Content of template1.html
	    </file>
	    <file name="template2.html">
	      Content of template2.html
	    </file>
	    <file name="animations.css">
	      .slide-animate-container {
	        position:relative;
	        background:white;
	        border:1px solid black;
	        height:40px;
	        overflow:hidden;
	      }

	      .slide-animate {
	        padding:10px;
	      }

	      .slide-animate.ng-enter, .slide-animate.ng-leave {
	        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

	        position:absolute;
	        top:0;
	        left:0;
	        right:0;
	        bottom:0;
	        display:block;
	        padding:10px;
	      }

	      .slide-animate.ng-enter {
	        top:-50px;
	      }
	      .slide-animate.ng-enter.ng-enter-active {
	        top:0;
	      }

	      .slide-animate.ng-leave {
	        top:0;
	      }
	      .slide-animate.ng-leave.ng-leave-active {
	        top:50px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      var templateSelect = element(by.model('template'));
	      var includeElem = element(by.css('[ng-include]'));

	      it('should load template1.html', function() {
	        expect(includeElem.getText()).toMatch(/Content of template1.html/);
	      });

	      it('should load template2.html', function() {
	        if (browser.params.browser === 'firefox') {
	          // Firefox can't handle using selects
	          // See https://github.com/angular/protractor/issues/480
	          return;
	        }
	        templateSelect.click();
	        templateSelect.all(by.css('option')).get(2).click();
	        expect(includeElem.getText()).toMatch(/Content of template2.html/);
	      });

	      it('should change to blank', function() {
	        if (browser.params.browser === 'firefox') {
	          // Firefox can't handle using selects
	          return;
	        }
	        templateSelect.click();
	        templateSelect.all(by.css('option')).get(0).click();
	        expect(includeElem.isPresent()).toBe(false);
	      });
	    </file>
	  </example>
	 *//**
	 * @ngdoc event
	 * @name ngInclude#$includeContentRequested
	 * @eventType emit on the scope ngInclude was declared in
	 * @description
	 * Emitted every time the ngInclude content is requested.
	 *
	 * @param {Object} angularEvent Synthetic event object.
	 * @param {String} src URL of content to load.
	 *//**
	 * @ngdoc event
	 * @name ngInclude#$includeContentLoaded
	 * @eventType emit on the current ngInclude scope
	 * @description
	 * Emitted every time the ngInclude content is reloaded.
	 *
	 * @param {Object} angularEvent Synthetic event object.
	 * @param {String} src URL of content to load.
	 *//**
	 * @ngdoc event
	 * @name ngInclude#$includeContentError
	 * @eventType emit on the scope ngInclude was declared in
	 * @description
	 * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)
	 *
	 * @param {Object} angularEvent Synthetic event object.
	 * @param {String} src URL of content to load.
	 */var ngIncludeDirective=['$templateRequest','$anchorScroll','$animate',function($templateRequest,$anchorScroll,$animate){return{restrict:'ECA',priority:400,terminal:true,transclude:'element',controller:angular.noop,compile:function compile(element,attr){var srcExp=attr.ngInclude||attr.src,onloadExp=attr.onload||'',autoScrollExp=attr.autoscroll;return function(scope,$element,$attr,ctrl,$transclude){var changeCounter=0,currentScope,previousElement,currentElement;var cleanupLastIncludeContent=function cleanupLastIncludeContent(){if(previousElement){previousElement.remove();previousElement=null;}if(currentScope){currentScope.$destroy();currentScope=null;}if(currentElement){$animate.leave(currentElement).done(function(response){if(response!==false)previousElement=null;});previousElement=currentElement;currentElement=null;}};scope.$watch(srcExp,function ngIncludeWatchAction(src){var afterAnimation=function afterAnimation(response){if(response!==false&&isDefined(autoScrollExp)&&(!autoScrollExp||scope.$eval(autoScrollExp))){$anchorScroll();}};var thisChangeId=++changeCounter;if(src){//set the 2nd param to true to ignore the template request error so that the inner
	//contents and scope can be cleaned up.
	$templateRequest(src,true).then(function(response){if(scope.$$destroyed)return;if(thisChangeId!==changeCounter)return;var newScope=scope.$new();ctrl.template=response;// Note: This will also link all children of ng-include that were contained in the original
	// html. If that content contains controllers, ... they could pollute/change the scope.
	// However, using ng-include on an element with additional content does not make sense...
	// Note: We can't remove them in the cloneAttchFn of $transclude as that
	// function is called before linking the content, which would apply child
	// directives to non existing elements.
	var clone=$transclude(newScope,function(clone){cleanupLastIncludeContent();$animate.enter(clone,null,$element).done(afterAnimation);});currentScope=newScope;currentElement=clone;currentScope.$emit('$includeContentLoaded',src);scope.$eval(onloadExp);},function(){if(scope.$$destroyed)return;if(thisChangeId===changeCounter){cleanupLastIncludeContent();scope.$emit('$includeContentError',src);}});scope.$emit('$includeContentRequested',src);}else{cleanupLastIncludeContent();ctrl.template=null;}});};}};}];// This directive is called during the $transclude call of the first `ngInclude` directive.
	// It will replace and compile the content of the element with the loaded template.
	// We need this directive so that the element content is already filled when
	// the link function of another directive on the same element as ngInclude
	// is called.
	var ngIncludeFillContentDirective=['$compile',function($compile){return{restrict:'ECA',priority:-400,require:'ngInclude',link:function link(scope,$element,$attr,ctrl){if(toString.call($element[0]).match(/SVG/)){// WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not
	// support innerHTML, so detect this here and try to generate the contents
	// specially.
	$element.empty();$compile(jqLiteBuildFragment(ctrl.template,window.document).childNodes)(scope,function namespaceAdaptedClone(clone){$element.append(clone);},{futureParentElement:$element});return;}$element.html(ctrl.template);$compile($element.contents())(scope);}};}];/**
	 * @ngdoc directive
	 * @name ngInit
	 * @restrict AC
	 * @priority 450
	 * @element ANY
	 *
	 * @param {expression} ngInit {@link guide/expression Expression} to eval.
	 *
	 * @description
	 * The `ngInit` directive allows you to evaluate an expression in the
	 * current scope.
	 *
	 * <div class="alert alert-danger">
	 * This directive can be abused to add unnecessary amounts of logic into your templates.
	 * There are only a few appropriate uses of `ngInit`:
	 * <ul>
	 *   <li>aliasing special properties of {@link ng.directive:ngRepeat `ngRepeat`},
	 *     as seen in the demo below.</li>
	 *   <li>initializing data during development, or for examples, as seen throughout these docs.</li>
	 *   <li>injecting data via server side scripting.</li>
	 * </ul>
	 *
	 * Besides these few cases, you should use {@link guide/component Components} or
	 * {@link guide/controller Controllers} rather than `ngInit` to initialize values on a scope.
	 * </div>
	 *
	 * <div class="alert alert-warning">
	 * **Note**: If you have assignment in `ngInit` along with a {@link ng.$filter `filter`}, make
	 * sure you have parentheses to ensure correct operator precedence:
	 * <pre class="prettyprint">
	 * `<div ng-init="test1 = ($index | toString)"></div>`
	 * </pre>
	 * </div>
	 *
	 * @example
	   <example module="initExample" name="ng-init">
	     <file name="index.html">
	   <script>
	     angular.module('initExample', [])
	       .controller('ExampleController', ['$scope', function($scope) {
	         $scope.list = [['a', 'b'], ['c', 'd']];
	       }]);
	   </script>
	   <div ng-controller="ExampleController">
	     <div ng-repeat="innerList in list" ng-init="outerIndex = $index">
	       <div ng-repeat="value in innerList" ng-init="innerIndex = $index">
	          <span class="example-init">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>
	       </div>
	     </div>
	   </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should alias index positions', function() {
	         var elements = element.all(by.css('.example-init'));
	         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');
	         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');
	         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');
	         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');
	       });
	     </file>
	   </example>
	 */var ngInitDirective=ngDirective({priority:450,compile:function compile(){return{pre:function pre(scope,element,attrs){scope.$eval(attrs.ngInit);}};}});/**
	 * @ngdoc directive
	 * @name ngList
	 * @restrict A
	 * @priority 100
	 *
	 * @param {string=} ngList optional delimiter that should be used to split the value.
	 *
	 * @description
	 * Text input that converts between a delimited string and an array of strings. The default
	 * delimiter is a comma followed by a space - equivalent to `ng-list=", "`. You can specify a custom
	 * delimiter as the value of the `ngList` attribute - for example, `ng-list=" | "`.
	 *
	 * The behaviour of the directive is affected by the use of the `ngTrim` attribute.
	 * * If `ngTrim` is set to `"false"` then whitespace around both the separator and each
	 *   list item is respected. This implies that the user of the directive is responsible for
	 *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a
	 *   tab or newline character.
	 * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected
	 *   when joining the list items back together) and whitespace around each list item is stripped
	 *   before it is added to the model.
	 *
	 * @example
	 * ### Validation
	 *
	 * <example name="ngList-directive" module="listExample">
	 *   <file name="app.js">
	 *      angular.module('listExample', [])
	 *        .controller('ExampleController', ['$scope', function($scope) {
	 *          $scope.names = ['morpheus', 'neo', 'trinity'];
	 *        }]);
	 *   </file>
	 *   <file name="index.html">
	 *    <form name="myForm" ng-controller="ExampleController">
	 *      <label>List: <input name="namesInput" ng-model="names" ng-list required></label>
	 *      <span role="alert">
	 *        <span class="error" ng-show="myForm.namesInput.$error.required">
	 *        Required!</span>
	 *      </span>
	 *      <br>
	 *      <tt>names = {{names}}</tt><br/>
	 *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>
	 *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>
	 *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
	 *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
	 *     </form>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     var listInput = element(by.model('names'));
	 *     var names = element(by.exactBinding('names'));
	 *     var valid = element(by.binding('myForm.namesInput.$valid'));
	 *     var error = element(by.css('span.error'));
	 *
	 *     it('should initialize to model', function() {
	 *       expect(names.getText()).toContain('["morpheus","neo","trinity"]');
	 *       expect(valid.getText()).toContain('true');
	 *       expect(error.getCssValue('display')).toBe('none');
	 *     });
	 *
	 *     it('should be invalid if empty', function() {
	 *       listInput.clear();
	 *       listInput.sendKeys('');
	 *
	 *       expect(names.getText()).toContain('');
	 *       expect(valid.getText()).toContain('false');
	 *       expect(error.getCssValue('display')).not.toBe('none');
	 *     });
	 *   </file>
	 * </example>
	 *
	 * @example
	 * ### Splitting on newline
	 *
	 * <example name="ngList-directive-newlines">
	 *   <file name="index.html">
	 *    <textarea ng-model="list" ng-list="&#10;" ng-trim="false"></textarea>
	 *    <pre>{{ list | json }}</pre>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     it("should split the text by newlines", function() {
	 *       var listInput = element(by.model('list'));
	 *       var output = element(by.binding('list | json'));
	 *       listInput.sendKeys('abc\ndef\nghi');
	 *       expect(output.getText()).toContain('[\n  "abc",\n  "def",\n  "ghi"\n]');
	 *     });
	 *   </file>
	 * </example>
	 *
	 */var ngListDirective=function ngListDirective(){return{restrict:'A',priority:100,require:'ngModel',link:function link(scope,element,attr,ctrl){var ngList=attr.ngList||', ';var trimValues=attr.ngTrim!=='false';var separator=trimValues?trim(ngList):ngList;var parse=function parse(viewValue){// If the viewValue is invalid (say required but empty) it will be `undefined`
	if(isUndefined(viewValue))return;var list=[];if(viewValue){forEach(viewValue.split(separator),function(value){if(value)list.push(trimValues?trim(value):value);});}return list;};ctrl.$parsers.push(parse);ctrl.$formatters.push(function(value){if(isArray(value)){return value.join(ngList);}return undefined;});// Override the standard $isEmpty because an empty array means the input is empty.
	ctrl.$isEmpty=function(value){return!value||!value.length;};}};};/* global VALID_CLASS: true,
	  INVALID_CLASS: true,
	  PRISTINE_CLASS: true,
	  DIRTY_CLASS: true,
	  UNTOUCHED_CLASS: true,
	  TOUCHED_CLASS: true,
	  PENDING_CLASS: true,
	  addSetValidityMethod: true,
	  setupValidity: true,
	  defaultModelOptions: false
	*/var VALID_CLASS='ng-valid',INVALID_CLASS='ng-invalid',PRISTINE_CLASS='ng-pristine',DIRTY_CLASS='ng-dirty',UNTOUCHED_CLASS='ng-untouched',TOUCHED_CLASS='ng-touched',EMPTY_CLASS='ng-empty',NOT_EMPTY_CLASS='ng-not-empty';var ngModelMinErr=minErr('ngModel');/**
	 * @ngdoc type
	 * @name ngModel.NgModelController
	 * @property {*} $viewValue The actual value from the control's view. For `input` elements, this is a
	 * String. See {@link ngModel.NgModelController#$setViewValue} for information about when the $viewValue
	 * is set.
	 *
	 * @property {*} $modelValue The value in the model that the control is bound to.
	 *
	 * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever
	 *  the control updates the ngModelController with a new {@link ngModel.NgModelController#$viewValue
	    `$viewValue`} from the DOM, usually via user input.
	    See {@link ngModel.NgModelController#$setViewValue `$setViewValue()`} for a detailed lifecycle explanation.
	    Note that the `$parsers` are not called when the bound ngModel expression changes programmatically.

	  The functions are called in array order, each passing
	    its return value through to the next. The last return value is forwarded to the
	    {@link ngModel.NgModelController#$validators `$validators`} collection.

	  Parsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue
	    `$viewValue`}.

	  Returning `undefined` from a parser means a parse error occurred. In that case,
	    no {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`
	    will be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}
	    is set to `true`. The parse error is stored in `ngModel.$error.parse`.

	  This simple example shows a parser that would convert text input value to lowercase:
	 * ```js
	 * function parse(value) {
	 *   if (value) {
	 *     return value.toLowerCase();
	 *   }
	 * }
	 * ngModelController.$parsers.push(parse);
	 * ```

	 *
	 * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever
	    the bound ngModel expression changes programmatically. The `$formatters` are not called when the
	    value of the control is changed by user interaction.

	  Formatters are used to format / convert the {@link ngModel.NgModelController#$modelValue
	    `$modelValue`} for display in the control.

	  The functions are called in reverse array order, each passing the value through to the
	    next. The last return value is used as the actual DOM value.

	  This simple example shows a formatter that would convert the model value to uppercase:

	 * ```js
	 * function format(value) {
	 *   if (value) {
	 *     return value.toUpperCase();
	 *   }
	 * }
	 * ngModel.$formatters.push(format);
	 * ```
	 *
	 * @property {Object.<string, function>} $validators A collection of validators that are applied
	 *      whenever the model value changes. The key value within the object refers to the name of the
	 *      validator while the function refers to the validation operation. The validation operation is
	 *      provided with the model value as an argument and must return a true or false value depending
	 *      on the response of that validation.
	 *
	 * ```js
	 * ngModel.$validators.validCharacters = function(modelValue, viewValue) {
	 *   var value = modelValue || viewValue;
	 *   return /[0-9]+/.test(value) &&
	 *          /[a-z]+/.test(value) &&
	 *          /[A-Z]+/.test(value) &&
	 *          /\W+/.test(value);
	 * };
	 * ```
	 *
	 * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to
	 *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided
	 *      is expected to return a promise when it is run during the model validation process. Once the promise
	 *      is delivered then the validation status will be set to true when fulfilled and false when rejected.
	 *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model
	 *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator
	 *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators
	 *      will only run once all synchronous validators have passed.
	 *
	 * Please note that if $http is used then it is important that the server returns a success HTTP response code
	 * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.
	 *
	 * ```js
	 * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {
	 *   var value = modelValue || viewValue;
	 *
	 *   // Lookup user by username
	 *   return $http.get('/api/users/' + value).
	 *      then(function resolved() {
	 *        //username exists, this means validation fails
	 *        return $q.reject('exists');
	 *      }, function rejected() {
	 *        //username does not exist, therefore this validation passes
	 *        return true;
	 *      });
	 * };
	 * ```
	 *
	 * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever
	 *     a change to {@link ngModel.NgModelController#$viewValue `$viewValue`} has caused a change
	 *     to {@link ngModel.NgModelController#$modelValue `$modelValue`}.
	 *     It is called with no arguments, and its return value is ignored.
	 *     This can be used in place of additional $watches against the model value.
	 *
	 * @property {Object} $error An object hash with all failing validator ids as keys.
	 * @property {Object} $pending An object hash with all pending validator ids as keys.
	 *
	 * @property {boolean} $untouched True if control has not lost focus yet.
	 * @property {boolean} $touched True if control has lost focus.
	 * @property {boolean} $pristine True if user has not interacted with the control yet.
	 * @property {boolean} $dirty True if user has already interacted with the control.
	 * @property {boolean} $valid True if there is no error.
	 * @property {boolean} $invalid True if at least one error on the control.
	 * @property {string} $name The name attribute of the control.
	 *
	 * @description
	 *
	 * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.
	 * The controller contains services for data-binding, validation, CSS updates, and value formatting
	 * and parsing. It purposefully does not contain any logic which deals with DOM rendering or
	 * listening to DOM events.
	 * Such DOM related logic should be provided by other directives which make use of
	 * `NgModelController` for data-binding to control elements.
	 * AngularJS provides this DOM logic for most {@link input `input`} elements.
	 * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example
	 * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.
	 *
	 * @example
	 * ### Custom Control Example
	 * This example shows how to use `NgModelController` with a custom control to achieve
	 * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)
	 * collaborate together to achieve the desired result.
	 *
	 * `contenteditable` is an HTML5 attribute, which tells the browser to let the element
	 * contents be edited in place by the user.
	 *
	 * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}
	 * module to automatically remove "bad" content like inline event listener (e.g. `<span onclick="...">`).
	 * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks
	 * that content using the `$sce` service.
	 *
	 * <example name="NgModelController" module="customControl" deps="angular-sanitize.js">
	    <file name="style.css">
	      [contenteditable] {
	        border: 1px solid black;
	        background-color: white;
	        min-height: 20px;
	      }

	      .ng-invalid {
	        border: 1px solid red;
	      }

	    </file>
	    <file name="script.js">
	      angular.module('customControl', ['ngSanitize']).
	        directive('contenteditable', ['$sce', function($sce) {
	          return {
	            restrict: 'A', // only activate on element attribute
	            require: '?ngModel', // get a hold of NgModelController
	            link: function(scope, element, attrs, ngModel) {
	              if (!ngModel) return; // do nothing if no ng-model

	              // Specify how UI should be updated
	              ngModel.$render = function() {
	                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));
	              };

	              // Listen for change events to enable binding
	              element.on('blur keyup change', function() {
	                scope.$evalAsync(read);
	              });
	              read(); // initialize

	              // Write data to the model
	              function read() {
	                var html = element.html();
	                // When we clear the content editable the browser leaves a <br> behind
	                // If strip-br attribute is provided then we strip this out
	                if (attrs.stripBr && html === '<br>') {
	                  html = '';
	                }
	                ngModel.$setViewValue(html);
	              }
	            }
	          };
	        }]);
	    </file>
	    <file name="index.html">
	      <form name="myForm">
	       <div contenteditable
	            name="myWidget" ng-model="userContent"
	            strip-br="true"
	            required>Change me!</div>
	        <span ng-show="myForm.myWidget.$error.required">Required!</span>
	       <hr>
	       <textarea ng-model="userContent" aria-label="Dynamic textarea"></textarea>
	      </form>
	    </file>
	    <file name="protractor.js" type="protractor">
	    it('should data-bind and become invalid', function() {
	      if (browser.params.browser === 'safari' || browser.params.browser === 'firefox') {
	        // SafariDriver can't handle contenteditable
	        // and Firefox driver can't clear contenteditables very well
	        return;
	      }
	      var contentEditable = element(by.css('[contenteditable]'));
	      var content = 'Change me!';

	      expect(contentEditable.getText()).toEqual(content);

	      contentEditable.clear();
	      contentEditable.sendKeys(protractor.Key.BACK_SPACE);
	      expect(contentEditable.getText()).toEqual('');
	      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);
	    });
	    </file>
	 * </example>
	 *
	 *
	 */NgModelController.$inject=['$scope','$exceptionHandler','$attrs','$element','$parse','$animate','$timeout','$q','$interpolate'];function NgModelController($scope,$exceptionHandler,$attr,$element,$parse,$animate,$timeout,$q,$interpolate){this.$viewValue=Number.NaN;this.$modelValue=Number.NaN;this.$$rawModelValue=undefined;// stores the parsed modelValue / model set from scope regardless of validity.
	this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=true;this.$touched=false;this.$pristine=true;this.$dirty=false;this.$valid=true;this.$invalid=false;this.$error={};// keep invalid keys here
	this.$$success={};// keep valid keys here
	this.$pending=undefined;// keep pending keys here
	this.$name=$interpolate($attr.name||'',false)($scope);this.$$parentForm=nullFormCtrl;this.$options=defaultModelOptions;this.$$updateEvents='';// Attach the correct context to the event handler function for updateOn
	this.$$updateEventHandler=this.$$updateEventHandler.bind(this);this.$$parsedNgModel=$parse($attr.ngModel);this.$$parsedNgModelAssign=this.$$parsedNgModel.assign;this.$$ngModelGet=this.$$parsedNgModel;this.$$ngModelSet=this.$$parsedNgModelAssign;this.$$pendingDebounce=null;this.$$parserValid=undefined;this.$$parserName='parse';this.$$currentValidationRunId=0;this.$$scope=$scope;this.$$rootScope=$scope.$root;this.$$attr=$attr;this.$$element=$element;this.$$animate=$animate;this.$$timeout=$timeout;this.$$parse=$parse;this.$$q=$q;this.$$exceptionHandler=$exceptionHandler;setupValidity(this);setupModelWatcher(this);}NgModelController.prototype={$$initGetterSetters:function $$initGetterSetters(){if(this.$options.getOption('getterSetter')){var invokeModelGetter=this.$$parse(this.$$attr.ngModel+'()'),invokeModelSetter=this.$$parse(this.$$attr.ngModel+'($$$p)');this.$$ngModelGet=function($scope){var modelValue=this.$$parsedNgModel($scope);if(isFunction(modelValue)){modelValue=invokeModelGetter($scope);}return modelValue;};this.$$ngModelSet=function($scope,newValue){if(isFunction(this.$$parsedNgModel($scope))){invokeModelSetter($scope,{$$$p:newValue});}else{this.$$parsedNgModelAssign($scope,newValue);}};}else if(!this.$$parsedNgModel.assign){throw ngModelMinErr('nonassign','Expression \'{0}\' is non-assignable. Element: {1}',this.$$attr.ngModel,startingTag(this.$$element));}},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$render
	   *
	   * @description
	   * Called when the view needs to be updated. It is expected that the user of the ng-model
	   * directive will implement this method.
	   *
	   * The `$render()` method is invoked in the following situations:
	   *
	   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last
	   *   committed value then `$render()` is called to update the input control.
	   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and
	   *   the `$viewValue` are different from last time.
	   *
	   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of
	   * `$modelValue` and `$viewValue` are actually different from their previous values. If `$modelValue`
	   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be
	   * invoked if you only change a property on the objects.
	   */$render:noop,/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$isEmpty
	   *
	   * @description
	   * This is called when we need to determine if the value of an input is empty.
	   *
	   * For instance, the required directive does this to work out if the input has data or not.
	   *
	   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.
	   *
	   * You can override this for input directives whose concept of being empty is different from the
	   * default. The `checkboxInputType` directive does this because in its case a value of `false`
	   * implies empty.
	   *
	   * @param {*} value The value of the input to check for emptiness.
	   * @returns {boolean} True if `value` is "empty".
	   */$isEmpty:function $isEmpty(value){// eslint-disable-next-line no-self-compare
	return isUndefined(value)||value===''||value===null||value!==value;},$$updateEmptyClasses:function $$updateEmptyClasses(value){if(this.$isEmpty(value)){this.$$animate.removeClass(this.$$element,NOT_EMPTY_CLASS);this.$$animate.addClass(this.$$element,EMPTY_CLASS);}else{this.$$animate.removeClass(this.$$element,EMPTY_CLASS);this.$$animate.addClass(this.$$element,NOT_EMPTY_CLASS);}},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$setPristine
	   *
	   * @description
	   * Sets the control to its pristine state.
	   *
	   * This method can be called to remove the `ng-dirty` class and set the control to its pristine
	   * state (`ng-pristine` class). A model is considered to be pristine when the control
	   * has not been changed from when first compiled.
	   */$setPristine:function $setPristine(){this.$dirty=false;this.$pristine=true;this.$$animate.removeClass(this.$$element,DIRTY_CLASS);this.$$animate.addClass(this.$$element,PRISTINE_CLASS);},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$setDirty
	   *
	   * @description
	   * Sets the control to its dirty state.
	   *
	   * This method can be called to remove the `ng-pristine` class and set the control to its dirty
	   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed
	   * from when first compiled.
	   */$setDirty:function $setDirty(){this.$dirty=true;this.$pristine=false;this.$$animate.removeClass(this.$$element,PRISTINE_CLASS);this.$$animate.addClass(this.$$element,DIRTY_CLASS);this.$$parentForm.$setDirty();},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$setUntouched
	   *
	   * @description
	   * Sets the control to its untouched state.
	   *
	   * This method can be called to remove the `ng-touched` class and set the control to its
	   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched
	   * by default, however this function can be used to restore that state if the model has
	   * already been touched by the user.
	   */$setUntouched:function $setUntouched(){this.$touched=false;this.$untouched=true;this.$$animate.setClass(this.$$element,UNTOUCHED_CLASS,TOUCHED_CLASS);},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$setTouched
	   *
	   * @description
	   * Sets the control to its touched state.
	   *
	   * This method can be called to remove the `ng-untouched` class and set the control to its
	   * touched state (`ng-touched` class). A model is considered to be touched when the user has
	   * first focused the control element and then shifted focus away from the control (blur event).
	   */$setTouched:function $setTouched(){this.$touched=true;this.$untouched=false;this.$$animate.setClass(this.$$element,TOUCHED_CLASS,UNTOUCHED_CLASS);},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$rollbackViewValue
	   *
	   * @description
	   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,
	   * which may be caused by a pending debounced event or because the input is waiting for some
	   * future event.
	   *
	   * If you have an input that uses `ng-model-options` to set up debounced updates or updates that
	   * depend on special events such as `blur`, there can be a period when the `$viewValue` is out of
	   * sync with the ngModel's `$modelValue`.
	   *
	   * In this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update
	   * and reset the input to the last committed view value.
	   *
	   * It is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`
	   * programmatically before these debounced/future events have resolved/occurred, because AngularJS's
	   * dirty checking mechanism is not able to tell whether the model has actually changed or not.
	   *
	   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an
	   * input which may have such events pending. This is important in order to make sure that the
	   * input field will be updated with the new model value and any pending operations are cancelled.
	   *
	   * @example
	   * <example name="ng-model-cancel-update" module="cancel-update-example">
	   *   <file name="app.js">
	   *     angular.module('cancel-update-example', [])
	   *
	   *     .controller('CancelUpdateController', ['$scope', function($scope) {
	   *       $scope.model = {value1: '', value2: ''};
	   *
	   *       $scope.setEmpty = function(e, value, rollback) {
	   *         if (e.keyCode === 27) {
	   *           e.preventDefault();
	   *           if (rollback) {
	   *             $scope.myForm[value].$rollbackViewValue();
	   *           }
	   *           $scope.model[value] = '';
	   *         }
	   *       };
	   *     }]);
	   *   </file>
	   *   <file name="index.html">
	   *     <div ng-controller="CancelUpdateController">
	   *       <p>Both of these inputs are only updated if they are blurred. Hitting escape should
	   *       empty them. Follow these steps and observe the difference:</p>
	   *       <ol>
	   *         <li>Type something in the input. You will see that the model is not yet updated</li>
	   *         <li>Press the Escape key.
	   *           <ol>
	   *             <li> In the first example, nothing happens, because the model is already '', and no
	   *             update is detected. If you blur the input, the model will be set to the current view.
	   *             </li>
	   *             <li> In the second example, the pending update is cancelled, and the input is set back
	   *             to the last committed view value (''). Blurring the input does nothing.
	   *             </li>
	   *           </ol>
	   *         </li>
	   *       </ol>
	   *
	   *       <form name="myForm" ng-model-options="{ updateOn: 'blur' }">
	   *         <div>
	   *           <p id="inputDescription1">Without $rollbackViewValue():</p>
	   *           <input name="value1" aria-describedby="inputDescription1" ng-model="model.value1"
	   *                  ng-keydown="setEmpty($event, 'value1')">
	   *           value1: "{{ model.value1 }}"
	   *         </div>
	   *
	   *         <div>
	   *           <p id="inputDescription2">With $rollbackViewValue():</p>
	   *           <input name="value2" aria-describedby="inputDescription2" ng-model="model.value2"
	   *                  ng-keydown="setEmpty($event, 'value2', true)">
	   *           value2: "{{ model.value2 }}"
	   *         </div>
	   *       </form>
	   *     </div>
	   *   </file>
	       <file name="style.css">
	          div {
	            display: table-cell;
	          }
	          div:nth-child(1) {
	            padding-right: 30px;
	          }

	        </file>
	   * </example>
	   */$rollbackViewValue:function $rollbackViewValue(){this.$$timeout.cancel(this.$$pendingDebounce);this.$viewValue=this.$$lastCommittedViewValue;this.$render();},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$validate
	   *
	   * @description
	   * Runs each of the registered validators (first synchronous validators and then
	   * asynchronous validators).
	   * If the validity changes to invalid, the model will be set to `undefined`,
	   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.
	   * If the validity changes to valid, it will set the model to the last available valid
	   * `$modelValue`, i.e. either the last parsed value or the last value set from the scope.
	   */$validate:function $validate(){// ignore $validate before model is initialized
	if(isNumberNaN(this.$modelValue)){return;}var viewValue=this.$$lastCommittedViewValue;// Note: we use the $$rawModelValue as $modelValue might have been
	// set to undefined during a view -> model update that found validation
	// errors. We can't parse the view here, since that could change
	// the model although neither viewValue nor the model on the scope changed
	var modelValue=this.$$rawModelValue;var prevValid=this.$valid;var prevModelValue=this.$modelValue;var allowInvalid=this.$options.getOption('allowInvalid');var that=this;this.$$runValidators(modelValue,viewValue,function(allValid){// If there was no change in validity, don't update the model
	// This prevents changing an invalid modelValue to undefined
	if(!allowInvalid&&prevValid!==allValid){// Note: Don't check this.$valid here, as we could have
	// external validators (e.g. calculated on the server),
	// that just call $setValidity and need the model value
	// to calculate their validity.
	that.$modelValue=allValid?modelValue:undefined;if(that.$modelValue!==prevModelValue){that.$$writeModelToScope();}}});},$$runValidators:function $$runValidators(modelValue,viewValue,doneCallback){this.$$currentValidationRunId++;var localValidationRunId=this.$$currentValidationRunId;var that=this;// check parser error
	if(!processParseErrors()){validationDone(false);return;}if(!processSyncValidators()){validationDone(false);return;}processAsyncValidators();function processParseErrors(){var errorKey=that.$$parserName;if(isUndefined(that.$$parserValid)){setValidity(errorKey,null);}else{if(!that.$$parserValid){forEach(that.$validators,function(v,name){setValidity(name,null);});forEach(that.$asyncValidators,function(v,name){setValidity(name,null);});}// Set the parse error last, to prevent unsetting it, should a $validators key == parserName
	setValidity(errorKey,that.$$parserValid);return that.$$parserValid;}return true;}function processSyncValidators(){var syncValidatorsValid=true;forEach(that.$validators,function(validator,name){var result=Boolean(validator(modelValue,viewValue));syncValidatorsValid=syncValidatorsValid&&result;setValidity(name,result);});if(!syncValidatorsValid){forEach(that.$asyncValidators,function(v,name){setValidity(name,null);});return false;}return true;}function processAsyncValidators(){var validatorPromises=[];var allValid=true;forEach(that.$asyncValidators,function(validator,name){var promise=validator(modelValue,viewValue);if(!isPromiseLike(promise)){throw ngModelMinErr('nopromise','Expected asynchronous validator to return a promise but got \'{0}\' instead.',promise);}setValidity(name,undefined);validatorPromises.push(promise.then(function(){setValidity(name,true);},function(){allValid=false;setValidity(name,false);}));});if(!validatorPromises.length){validationDone(true);}else{that.$$q.all(validatorPromises).then(function(){validationDone(allValid);},noop);}}function setValidity(name,isValid){if(localValidationRunId===that.$$currentValidationRunId){that.$setValidity(name,isValid);}}function validationDone(allValid){if(localValidationRunId===that.$$currentValidationRunId){doneCallback(allValid);}}},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$commitViewValue
	   *
	   * @description
	   * Commit a pending update to the `$modelValue`.
	   *
	   * Updates may be pending by a debounced event or because the input is waiting for a some future
	   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`
	   * usually handles calling this in response to input events.
	   */$commitViewValue:function $commitViewValue(){var viewValue=this.$viewValue;this.$$timeout.cancel(this.$$pendingDebounce);// If the view value has not changed then we should just exit, except in the case where there is
	// a native validator on the element. In this case the validation state may have changed even though
	// the viewValue has stayed empty.
	if(this.$$lastCommittedViewValue===viewValue&&(viewValue!==''||!this.$$hasNativeValidators)){return;}this.$$updateEmptyClasses(viewValue);this.$$lastCommittedViewValue=viewValue;// change to dirty
	if(this.$pristine){this.$setDirty();}this.$$parseAndValidate();},$$parseAndValidate:function $$parseAndValidate(){var viewValue=this.$$lastCommittedViewValue;var modelValue=viewValue;var that=this;this.$$parserValid=isUndefined(modelValue)?undefined:true;// Reset any previous parse error
	this.$setValidity(this.$$parserName,null);this.$$parserName='parse';if(this.$$parserValid){for(var i=0;i<this.$parsers.length;i++){modelValue=this.$parsers[i](modelValue);if(isUndefined(modelValue)){this.$$parserValid=false;break;}}}if(isNumberNaN(this.$modelValue)){// this.$modelValue has not been touched yet...
	this.$modelValue=this.$$ngModelGet(this.$$scope);}var prevModelValue=this.$modelValue;var allowInvalid=this.$options.getOption('allowInvalid');this.$$rawModelValue=modelValue;if(allowInvalid){this.$modelValue=modelValue;writeToModelIfNeeded();}// Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.
	// This can happen if e.g. $setViewValue is called from inside a parser
	this.$$runValidators(modelValue,this.$$lastCommittedViewValue,function(allValid){if(!allowInvalid){// Note: Don't check this.$valid here, as we could have
	// external validators (e.g. calculated on the server),
	// that just call $setValidity and need the model value
	// to calculate their validity.
	that.$modelValue=allValid?modelValue:undefined;writeToModelIfNeeded();}});function writeToModelIfNeeded(){if(that.$modelValue!==prevModelValue){that.$$writeModelToScope();}}},$$writeModelToScope:function $$writeModelToScope(){this.$$ngModelSet(this.$$scope,this.$modelValue);forEach(this.$viewChangeListeners,function(listener){try{listener();}catch(e){// eslint-disable-next-line no-invalid-this
	this.$$exceptionHandler(e);}},this);},/**
	   * @ngdoc method
	   * @name ngModel.NgModelController#$setViewValue
	   *
	   * @description
	   * Update the view value.
	   *
	   * This method should be called when a control wants to change the view value; typically,
	   * this is done from within a DOM event handler. For example, the {@link ng.directive:input input}
	   * directive calls it when the value of the input changes and {@link ng.directive:select select}
	   * calls it when an option is selected.
	   *
	   * When `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`
	   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged
	   * value is sent directly for processing through the `$parsers` pipeline. After this, the `$validators` and
	   * `$asyncValidators` are called and the value is applied to `$modelValue`.
	   * Finally, the value is set to the **expression** specified in the `ng-model` attribute and
	   * all the registered change listeners, in the `$viewChangeListeners` list are called.
	   *
	   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`
	   * and the `default` trigger is not listed, all those actions will remain pending until one of the
	   * `updateOn` events is triggered on the DOM element.
	   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}
	   * directive is used with a custom debounce for this particular event.
	   * Note that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`
	   * is specified, once the timer runs out.
	   *
	   * When used with standard inputs, the view value will always be a string (which is in some cases
	   * parsed into another type, such as a `Date` object for `input[date]`.)
	   * However, custom controls might also pass objects to this method. In this case, we should make
	   * a copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not
	   * perform a deep watch of objects, it only looks for a change of identity. If you only change
	   * the property of the object then ngModel will not realize that the object has changed and
	   * will not invoke the `$parsers` and `$validators` pipelines. For this reason, you should
	   * not change properties of the copy once it has been passed to `$setViewValue`.
	   * Otherwise you may cause the model value on the scope to change incorrectly.
	   *
	   * <div class="alert alert-info">
	   * In any case, the value passed to the method should always reflect the current value
	   * of the control. For example, if you are calling `$setViewValue` for an input element,
	   * you should pass the input DOM value. Otherwise, the control and the scope model become
	   * out of sync. It's also important to note that `$setViewValue` does not call `$render` or change
	   * the control's DOM value in any way. If we want to change the control's DOM value
	   * programmatically, we should update the `ngModel` scope expression. Its new value will be
	   * picked up by the model controller, which will run it through the `$formatters`, `$render` it
	   * to update the DOM, and finally call `$validate` on it.
	   * </div>
	   *
	   * @param {*} value value from the view.
	   * @param {string} trigger Event that triggered the update.
	   */$setViewValue:function $setViewValue(value,trigger){this.$viewValue=value;if(this.$options.getOption('updateOnDefault')){this.$$debounceViewValueCommit(trigger);}},$$debounceViewValueCommit:function $$debounceViewValueCommit(trigger){var debounceDelay=this.$options.getOption('debounce');if(isNumber(debounceDelay[trigger])){debounceDelay=debounceDelay[trigger];}else if(isNumber(debounceDelay['default'])&&this.$options.getOption('updateOn').indexOf(trigger)===-1){debounceDelay=debounceDelay['default'];}else if(isNumber(debounceDelay['*'])){debounceDelay=debounceDelay['*'];}this.$$timeout.cancel(this.$$pendingDebounce);var that=this;if(debounceDelay>0){// this fails if debounceDelay is an object
	this.$$pendingDebounce=this.$$timeout(function(){that.$commitViewValue();},debounceDelay);}else if(this.$$rootScope.$$phase){this.$commitViewValue();}else{this.$$scope.$apply(function(){that.$commitViewValue();});}},/**
	   * @ngdoc method
	   *
	   * @name ngModel.NgModelController#$overrideModelOptions
	   *
	   * @description
	   *
	   * Override the current model options settings programmatically.
	   *
	   * The previous `ModelOptions` value will not be modified. Instead, a
	   * new `ModelOptions` object will inherit from the previous one overriding
	   * or inheriting settings that are defined in the given parameter.
	   *
	   * See {@link ngModelOptions} for information about what options can be specified
	   * and how model option inheritance works.
	   *
	   * <div class="alert alert-warning">
	   * **Note:** this function only affects the options set on the `ngModelController`,
	   * and not the options on the {@link ngModelOptions} directive from which they might have been
	   * obtained initially.
	   * </div>
	   *
	   * <div class="alert alert-danger">
	   * **Note:** it is not possible to override the `getterSetter` option.
	   * </div>
	   *
	   * @param {Object} options a hash of settings to override the previous options
	   *
	   */$overrideModelOptions:function $overrideModelOptions(options){this.$options=this.$options.createChild(options);this.$$setUpdateOnEvents();},/**
	   * @ngdoc method
	   *
	   * @name  ngModel.NgModelController#$processModelValue

	   * @description
	   *
	   * Runs the model -> view pipeline on the current
	   * {@link ngModel.NgModelController#$modelValue $modelValue}.
	   *
	   * The following actions are performed by this method:
	   *
	   * - the `$modelValue` is run through the {@link ngModel.NgModelController#$formatters $formatters}
	   * and the result is set to the {@link ngModel.NgModelController#$viewValue $viewValue}
	   * - the `ng-empty` or `ng-not-empty` class is set on the element
	   * - if the `$viewValue` has changed:
	   *   - {@link ngModel.NgModelController#$render $render} is called on the control
	   *   - the {@link ngModel.NgModelController#$validators $validators} are run and
	   *   the validation status is set.
	   *
	   * This method is called by ngModel internally when the bound scope value changes.
	   * Application developers usually do not have to call this function themselves.
	   *
	   * This function can be used when the `$viewValue` or the rendered DOM value are not correctly
	   * formatted and the `$modelValue` must be run through the `$formatters` again.
	   *
	   * @example
	   * Consider a text input with an autocomplete list (for fruit), where the items are
	   * objects with a name and an id.
	   * A user enters `ap` and then selects `Apricot` from the list.
	   * Based on this, the autocomplete widget will call `$setViewValue({name: 'Apricot', id: 443})`,
	   * but the rendered value will still be `ap`.
	   * The widget can then call `ctrl.$processModelValue()` to run the model -> view
	   * pipeline again, which formats the object to the string `Apricot`,
	   * then updates the `$viewValue`, and finally renders it in the DOM.
	   *
	   * <example module="inputExample" name="ng-model-process">
	     <file name="index.html">
	      <div ng-controller="inputController" style="display: flex;">
	        <div style="margin-right: 30px;">
	          Search Fruit:
	          <basic-autocomplete items="items" on-select="selectedFruit = item"></basic-autocomplete>
	        </div>
	        <div>
	          Model:<br>
	          <pre>{{selectedFruit | json}}</pre>
	        </div>
	      </div>
	     </file>
	     <file name="app.js">
	      angular.module('inputExample', [])
	        .controller('inputController', function($scope) {
	          $scope.items = [
	            {name: 'Apricot', id: 443},
	            {name: 'Clementine', id: 972},
	            {name: 'Durian', id: 169},
	            {name: 'Jackfruit', id: 982},
	            {name: 'Strawberry', id: 863}
	          ];
	        })
	        .component('basicAutocomplete', {
	          bindings: {
	            items: '<',
	            onSelect: '&'
	          },
	          templateUrl: 'autocomplete.html',
	          controller: function($element, $scope) {
	            var that = this;
	            var ngModel;

	            that.$postLink = function() {
	              ngModel = $element.find('input').controller('ngModel');

	              ngModel.$formatters.push(function(value) {
	                return (value && value.name) || value;
	              });

	              ngModel.$parsers.push(function(value) {
	                var match = value;
	                for (var i = 0; i < that.items.length; i++) {
	                  if (that.items[i].name === value) {
	                    match = that.items[i];
	                    break;
	                  }
	                }

	                return match;
	              });
	            };

	            that.selectItem = function(item) {
	              ngModel.$setViewValue(item);
	              ngModel.$processModelValue();
	              that.onSelect({item: item});
	            };
	          }
	        });
	     </file>
	     <file name="autocomplete.html">
	       <div>
	         <input type="search" ng-model="$ctrl.searchTerm" />
	         <ul>
	           <li ng-repeat="item in $ctrl.items | filter:$ctrl.searchTerm">
	             <button ng-click="$ctrl.selectItem(item)">{{ item.name }}</button>
	           </li>
	         </ul>
	       </div>
	     </file>
	   * </example>
	   *
	   */$processModelValue:function $processModelValue(){var viewValue=this.$$format();if(this.$viewValue!==viewValue){this.$$updateEmptyClasses(viewValue);this.$viewValue=this.$$lastCommittedViewValue=viewValue;this.$render();// It is possible that model and view value have been updated during render
	this.$$runValidators(this.$modelValue,this.$viewValue,noop);}},/**
	   * This method is called internally to run the $formatters on the $modelValue
	   */$$format:function $$format(){var formatters=this.$formatters,idx=formatters.length;var viewValue=this.$modelValue;while(idx--){viewValue=formatters[idx](viewValue);}return viewValue;},/**
	   * This method is called internally when the bound scope value changes.
	   */$$setModelValue:function $$setModelValue(modelValue){this.$modelValue=this.$$rawModelValue=modelValue;this.$$parserValid=undefined;this.$processModelValue();},$$setUpdateOnEvents:function $$setUpdateOnEvents(){if(this.$$updateEvents){this.$$element.off(this.$$updateEvents,this.$$updateEventHandler);}this.$$updateEvents=this.$options.getOption('updateOn');if(this.$$updateEvents){this.$$element.on(this.$$updateEvents,this.$$updateEventHandler);}},$$updateEventHandler:function $$updateEventHandler(ev){this.$$debounceViewValueCommit(ev&&ev.type);}};function setupModelWatcher(ctrl){// model -> value
	// Note: we cannot use a normal scope.$watch as we want to detect the following:
	// 1. scope value is 'a'
	// 2. user enters 'b'
	// 3. ng-change kicks in and reverts scope value to 'a'
	//    -> scope value did not change since the last digest as
	//       ng-change executes in apply phase
	// 4. view should be changed back to 'a'
	ctrl.$$scope.$watch(function ngModelWatch(scope){var modelValue=ctrl.$$ngModelGet(scope);// if scope model value and ngModel value are out of sync
	// This cannot be moved to the action function, because it would not catch the
	// case where the model is changed in the ngChange function or the model setter
	if(modelValue!==ctrl.$modelValue&&(// checks for NaN is needed to allow setting the model to NaN when there's an asyncValidator
	// eslint-disable-next-line no-self-compare
	ctrl.$modelValue===ctrl.$modelValue||modelValue===modelValue)){ctrl.$$setModelValue(modelValue);}return modelValue;});}/**
	 * @ngdoc method
	 * @name ngModel.NgModelController#$setValidity
	 *
	 * @description
	 * Change the validity state, and notify the form.
	 *
	 * This method can be called within $parsers/$formatters or a custom validation implementation.
	 * However, in most cases it should be sufficient to use the `ngModel.$validators` and
	 * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.
	 *
	 * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned
	 *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`
	 *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.
	 *        The `validationErrorKey` should be in camelCase and will get converted into dash-case
	 *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`
	 *        classes and can be bound to as `{{ someForm.someControl.$error.myError }}`.
	 * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),
	 *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.
	 *                          Skipped is used by AngularJS when validators do not run because of parse errors and
	 *                          when `$asyncValidators` do not run because any of the `$validators` failed.
	 */addSetValidityMethod({clazz:NgModelController,set:function set(object,property){object[property]=true;},unset:function unset(object,property){delete object[property];}});/**
	 * @ngdoc directive
	 * @name ngModel
	 * @restrict A
	 * @priority 1
	 * @param {expression} ngModel assignable {@link guide/expression Expression} to bind to.
	 *
	 * @description
	 * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a
	 * property on the scope using {@link ngModel.NgModelController NgModelController},
	 * which is created and exposed by this directive.
	 *
	 * `ngModel` is responsible for:
	 *
	 * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`
	 *   require.
	 * - Providing validation behavior (i.e. required, number, email, url).
	 * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).
	 * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`,
	 *   `ng-untouched`, `ng-empty`, `ng-not-empty`) including animations.
	 * - Registering the control with its parent {@link ng.directive:form form}.
	 *
	 * Note: `ngModel` will try to bind to the property given by evaluating the expression on the
	 * current scope. If the property doesn't already exist on this scope, it will be created
	 * implicitly and added to the scope.
	 *
	 * For best practices on using `ngModel`, see:
	 *
	 *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)
	 *
	 * For basic examples, how to use `ngModel`, see:
	 *
	 *  - {@link ng.directive:input input}
	 *    - {@link input[text] text}
	 *    - {@link input[checkbox] checkbox}
	 *    - {@link input[radio] radio}
	 *    - {@link input[number] number}
	 *    - {@link input[email] email}
	 *    - {@link input[url] url}
	 *    - {@link input[date] date}
	 *    - {@link input[datetime-local] datetime-local}
	 *    - {@link input[time] time}
	 *    - {@link input[month] month}
	 *    - {@link input[week] week}
	 *  - {@link ng.directive:select select}
	 *  - {@link ng.directive:textarea textarea}
	 *
	 * ## Complex Models (objects or collections)
	 *
	 * By default, `ngModel` watches the model by reference, not value. This is important to know when
	 * binding inputs to models that are objects (e.g. `Date`) or collections (e.g. arrays). If only properties of the
	 * object or collection change, `ngModel` will not be notified and so the input will not be  re-rendered.
	 *
	 * The model must be assigned an entirely new object or collection before a re-rendering will occur.
	 *
	 * Some directives have options that will cause them to use a custom `$watchCollection` on the model expression
	 * - for example, `ngOptions` will do so when a `track by` clause is included in the comprehension expression or
	 * if the select is given the `multiple` attribute.
	 *
	 * The `$watchCollection()` method only does a shallow comparison, meaning that changing properties deeper than the
	 * first level of the object (or only changing the properties of an item in the collection if it's an array) will still
	 * not trigger a re-rendering of the model.
	 *
	 * ## CSS classes
	 * The following CSS classes are added and removed on the associated input/select/textarea element
	 * depending on the validity of the model.
	 *
	 *  - `ng-valid`: the model is valid
	 *  - `ng-invalid`: the model is invalid
	 *  - `ng-valid-[key]`: for each valid key added by `$setValidity`
	 *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`
	 *  - `ng-pristine`: the control hasn't been interacted with yet
	 *  - `ng-dirty`: the control has been interacted with
	 *  - `ng-touched`: the control has been blurred
	 *  - `ng-untouched`: the control hasn't been blurred
	 *  - `ng-pending`: any `$asyncValidators` are unfulfilled
	 *  - `ng-empty`: the view does not contain a value or the value is deemed "empty", as defined
	 *     by the {@link ngModel.NgModelController#$isEmpty} method
	 *  - `ng-not-empty`: the view contains a non-empty value
	 *
	 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
	 *
	 * @animations
	 * Animations within models are triggered when any of the associated CSS classes are added and removed
	 * on the input element which is attached to the model. These classes include: `.ng-pristine`, `.ng-dirty`,
	 * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.
	 * The animations that are triggered within ngModel are similar to how they work in ngClass and
	 * animations can be hooked into using CSS transitions, keyframes as well as JS animations.
	 *
	 * The following example shows a simple way to utilize CSS transitions to style an input element
	 * that has been rendered as invalid after it has been validated:
	 *
	 * <pre>
	 * //be sure to include ngAnimate as a module to hook into more
	 * //advanced animations
	 * .my-input {
	 *   transition:0.5s linear all;
	 *   background: white;
	 * }
	 * .my-input.ng-invalid {
	 *   background: red;
	 *   color:white;
	 * }
	 * </pre>
	 *
	 * @example
	 * ### Basic Usage
	 * <example deps="angular-animate.js" animations="true" fixBase="true" module="inputExample" name="ng-model">
	     <file name="index.html">
	       <script>
	        angular.module('inputExample', [])
	          .controller('ExampleController', ['$scope', function($scope) {
	            $scope.val = '1';
	          }]);
	       </script>
	       <style>
	         .my-input {
	           transition:all linear 0.5s;
	           background: transparent;
	         }
	         .my-input.ng-invalid {
	           color:white;
	           background: red;
	         }
	       </style>
	       <p id="inputDescription">
	        Update input to see transitions when valid/invalid.
	        Integer is a valid value.
	       </p>
	       <form name="testForm" ng-controller="ExampleController">
	         <input ng-model="val" ng-pattern="/^\d+$/" name="anim" class="my-input"
	                aria-describedby="inputDescription" />
	       </form>
	     </file>
	 * </example>
	 *
	 * @example
	 * ### Binding to a getter/setter
	 *
	 * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a
	 * function that returns a representation of the model when called with zero arguments, and sets
	 * the internal state of a model when called with an argument. It's sometimes useful to use this
	 * for models that have an internal representation that's different from what the model exposes
	 * to the view.
	 *
	 * <div class="alert alert-success">
	 * **Best Practice:** It's best to keep getters fast because AngularJS is likely to call them more
	 * frequently than other parts of your code.
	 * </div>
	 *
	 * You use this behavior by adding `ng-model-options="{ getterSetter: true }"` to an element that
	 * has `ng-model` attached to it. You can also add `ng-model-options="{ getterSetter: true }"` to
	 * a `<form>`, which will enable this behavior for all `<input>`s within it. See
	 * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.
	 *
	 * The following example shows how to use `ngModel` with a getter/setter:
	 *
	 * @example
	 * <example name="ngModel-getter-setter" module="getterSetterExample">
	     <file name="index.html">
	       <div ng-controller="ExampleController">
	         <form name="userForm">
	           <label>Name:
	             <input type="text" name="userName"
	                    ng-model="user.name"
	                    ng-model-options="{ getterSetter: true }" />
	           </label>
	         </form>
	         <pre>user.name = <span ng-bind="user.name()"></span></pre>
	       </div>
	     </file>
	     <file name="app.js">
	       angular.module('getterSetterExample', [])
	         .controller('ExampleController', ['$scope', function($scope) {
	           var _name = 'Brian';
	           $scope.user = {
	             name: function(newName) {
	              // Note that newName can be undefined for two reasons:
	              // 1. Because it is called as a getter and thus called with no arguments
	              // 2. Because the property should actually be set to undefined. This happens e.g. if the
	              //    input is invalid
	              return arguments.length ? (_name = newName) : _name;
	             }
	           };
	         }]);
	     </file>
	 * </example>
	 */var ngModelDirective=['$rootScope',function($rootScope){return{restrict:'A',require:['ngModel','^?form','^?ngModelOptions'],controller:NgModelController,// Prelink needs to run before any input directive
	// so that we can set the NgModelOptions in NgModelController
	// before anyone else uses it.
	priority:1,compile:function ngModelCompile(element){// Setup initial state of the control
	element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);return{pre:function ngModelPreLink(scope,element,attr,ctrls){var modelCtrl=ctrls[0],formCtrl=ctrls[1]||modelCtrl.$$parentForm,optionsCtrl=ctrls[2];if(optionsCtrl){modelCtrl.$options=optionsCtrl.$options;}modelCtrl.$$initGetterSetters();// notify others, especially parent forms
	formCtrl.$addControl(modelCtrl);attr.$observe('name',function(newValue){if(modelCtrl.$name!==newValue){modelCtrl.$$parentForm.$$renameControl(modelCtrl,newValue);}});scope.$on('$destroy',function(){modelCtrl.$$parentForm.$removeControl(modelCtrl);});},post:function ngModelPostLink(scope,element,attr,ctrls){var modelCtrl=ctrls[0];modelCtrl.$$setUpdateOnEvents();function setTouched(){modelCtrl.$setTouched();}element.on('blur',function(){if(modelCtrl.$touched)return;if($rootScope.$$phase){scope.$evalAsync(setTouched);}else{scope.$apply(setTouched);}});}};}};}];/* exported defaultModelOptions */var defaultModelOptions;var DEFAULT_REGEXP=/(\s+|^)default(\s+|$)/;/**
	 * @ngdoc type
	 * @name ModelOptions
	 * @description
	 * A container for the options set by the {@link ngModelOptions} directive
	 */function ModelOptions(options){this.$$options=options;}ModelOptions.prototype={/**
	   * @ngdoc method
	   * @name ModelOptions#getOption
	   * @param {string} name the name of the option to retrieve
	   * @returns {*} the value of the option
	   * @description
	   * Returns the value of the given option
	   */getOption:function getOption(name){return this.$$options[name];},/**
	   * @ngdoc method
	   * @name ModelOptions#createChild
	   * @param {Object} options a hash of options for the new child that will override the parent's options
	   * @return {ModelOptions} a new `ModelOptions` object initialized with the given options.
	   */createChild:function createChild(options){var inheritAll=false;// make a shallow copy
	options=extend({},options);// Inherit options from the parent if specified by the value `"$inherit"`
	forEach(options,/** @this */function(option,key){if(option==='$inherit'){if(key==='*'){inheritAll=true;}else{options[key]=this.$$options[key];// `updateOn` is special so we must also inherit the `updateOnDefault` option
	if(key==='updateOn'){options.updateOnDefault=this.$$options.updateOnDefault;}}}else{if(key==='updateOn'){// If the `updateOn` property contains the `default` event then we have to remove
	// it from the event list and set the `updateOnDefault` flag.
	options.updateOnDefault=false;options[key]=trim(option.replace(DEFAULT_REGEXP,function(){options.updateOnDefault=true;return' ';}));}}},this);if(inheritAll){// We have a property of the form: `"*": "$inherit"`
	delete options['*'];defaults(options,this.$$options);}// Finally add in any missing defaults
	defaults(options,defaultModelOptions.$$options);return new ModelOptions(options);}};defaultModelOptions=new ModelOptions({updateOn:'',updateOnDefault:true,debounce:0,getterSetter:false,allowInvalid:false,timezone:null});/**
	 * @ngdoc directive
	 * @name ngModelOptions
	 * @restrict A
	 * @priority 10
	 *
	 * @description
	 * This directive allows you to modify the behaviour of {@link ngModel} directives within your
	 * application. You can specify an `ngModelOptions` directive on any element. All {@link ngModel}
	 * directives will use the options of their nearest `ngModelOptions` ancestor.
	 *
	 * The `ngModelOptions` settings are found by evaluating the value of the attribute directive as
	 * an AngularJS expression. This expression should evaluate to an object, whose properties contain
	 * the settings. For example: `<div ng-model-options="{ debounce: 100 }"`.
	 *
	 * ## Inheriting Options
	 *
	 * You can specify that an `ngModelOptions` setting should be inherited from a parent `ngModelOptions`
	 * directive by giving it the value of `"$inherit"`.
	 * Then it will inherit that setting from the first `ngModelOptions` directive found by traversing up the
	 * DOM tree. If there is no ancestor element containing an `ngModelOptions` directive then default settings
	 * will be used.
	 *
	 * For example given the following fragment of HTML
	 *
	 *
	 * ```html
	 * <div ng-model-options="{ allowInvalid: true, debounce: 200 }">
	 *   <form ng-model-options="{ updateOn: 'blur', allowInvalid: '$inherit' }">
	 *     <input ng-model-options="{ updateOn: 'default', allowInvalid: '$inherit' }" />
	 *   </form>
	 * </div>
	 * ```
	 *
	 * the `input` element will have the following settings
	 *
	 * ```js
	 * { allowInvalid: true, updateOn: 'default', debounce: 0 }
	 * ```
	 *
	 * Notice that the `debounce` setting was not inherited and used the default value instead.
	 *
	 * You can specify that all undefined settings are automatically inherited from an ancestor by
	 * including a property with key of `"*"` and value of `"$inherit"`.
	 *
	 * For example given the following fragment of HTML
	 *
	 *
	 * ```html
	 * <div ng-model-options="{ allowInvalid: true, debounce: 200 }">
	 *   <form ng-model-options="{ updateOn: 'blur', "*": '$inherit' }">
	 *     <input ng-model-options="{ updateOn: 'default', "*": '$inherit' }" />
	 *   </form>
	 * </div>
	 * ```
	 *
	 * the `input` element will have the following settings
	 *
	 * ```js
	 * { allowInvalid: true, updateOn: 'default', debounce: 200 }
	 * ```
	 *
	 * Notice that the `debounce` setting now inherits the value from the outer `<div>` element.
	 *
	 * If you are creating a reusable component then you should be careful when using `"*": "$inherit"`
	 * since you may inadvertently inherit a setting in the future that changes the behavior of your component.
	 *
	 *
	 * ## Triggering and debouncing model updates
	 *
	 * The `updateOn` and `debounce` properties allow you to specify a custom list of events that will
	 * trigger a model update and/or a debouncing delay so that the actual update only takes place when
	 * a timer expires; this timer will be reset after another change takes place.
	 *
	 * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might
	 * be different from the value in the actual model. This means that if you update the model you
	 * should also invoke {@link ngModel.NgModelController#$rollbackViewValue} on the relevant input field in
	 * order to make sure it is synchronized with the model and that any debounced action is canceled.
	 *
	 * The easiest way to reference the control's {@link ngModel.NgModelController#$rollbackViewValue}
	 * method is by making sure the input is placed inside a form that has a `name` attribute. This is
	 * important because `form` controllers are published to the related scope under the name in their
	 * `name` attribute.
	 *
	 * Any pending changes will take place immediately when an enclosing form is submitted via the
	 * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
	 * to have access to the updated model.
	 *
	 * ### Overriding immediate updates
	 *
	 * The following example shows how to override immediate updates. Changes on the inputs within the
	 * form will update the model only when the control loses focus (blur event). If `escape` key is
	 * pressed while the input field is focused, the value is reset to the value in the current model.
	 *
	 * <example name="ngModelOptions-directive-blur" module="optionsExample">
	 *   <file name="index.html">
	 *     <div ng-controller="ExampleController">
	 *       <form name="userForm">
	 *         <label>
	 *           Name:
	 *           <input type="text" name="userName"
	 *                  ng-model="user.name"
	 *                  ng-model-options="{ updateOn: 'blur' }"
	 *                  ng-keyup="cancel($event)" />
	 *         </label><br />
	 *         <label>
	 *           Other data:
	 *           <input type="text" ng-model="user.data" />
	 *         </label><br />
	 *       </form>
	 *       <pre>user.name = <span ng-bind="user.name"></span></pre>
	 *     </div>
	 *   </file>
	 *   <file name="app.js">
	 *     angular.module('optionsExample', [])
	 *       .controller('ExampleController', ['$scope', function($scope) {
	 *         $scope.user = { name: 'say', data: '' };
	 *
	 *         $scope.cancel = function(e) {
	 *           if (e.keyCode === 27) {
	 *             $scope.userForm.userName.$rollbackViewValue();
	 *           }
	 *         };
	 *       }]);
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     var model = element(by.binding('user.name'));
	 *     var input = element(by.model('user.name'));
	 *     var other = element(by.model('user.data'));
	 *
	 *     it('should allow custom events', function() {
	 *       input.sendKeys(' hello');
	 *       input.click();
	 *       expect(model.getText()).toEqual('say');
	 *       other.click();
	 *       expect(model.getText()).toEqual('say hello');
	 *     });
	 *
	 *     it('should $rollbackViewValue when model changes', function() {
	 *       input.sendKeys(' hello');
	 *       expect(input.getAttribute('value')).toEqual('say hello');
	 *       input.sendKeys(protractor.Key.ESCAPE);
	 *       expect(input.getAttribute('value')).toEqual('say');
	 *       other.click();
	 *       expect(model.getText()).toEqual('say');
	 *     });
	 *   </file>
	 * </example>
	 *
	 * ### Debouncing updates
	 *
	 * The next example shows how to debounce model changes. Model will be updated only 1 sec after last change.
	 * If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.
	 *
	 * <example name="ngModelOptions-directive-debounce" module="optionsExample">
	 *   <file name="index.html">
	 *     <div ng-controller="ExampleController">
	 *       <form name="userForm">
	 *         Name:
	 *         <input type="text" name="userName"
	 *                ng-model="user.name"
	 *                ng-model-options="{ debounce: 1000 }" />
	 *         <button ng-click="userForm.userName.$rollbackViewValue(); user.name=''">Clear</button><br />
	 *       </form>
	 *       <pre>user.name = <span ng-bind="user.name"></span></pre>
	 *     </div>
	 *   </file>
	 *   <file name="app.js">
	 *     angular.module('optionsExample', [])
	 *       .controller('ExampleController', ['$scope', function($scope) {
	 *         $scope.user = { name: 'say' };
	 *       }]);
	 *   </file>
	 * </example>
	 *
	 * ### Default events, extra triggers, and catch-all debounce values
	 *
	 * This example shows the relationship between "default" update events and
	 * additional `updateOn` triggers.
	 *
	 * `default` events are those that are bound to the control, and when fired, update the `$viewValue`
	 * via {@link ngModel.NgModelController#$setViewValue $setViewValue}. Every event that is not listed
	 * in `updateOn` is considered a "default" event, since different control types have different
	 * default events.
	 *
	 * The control in this example updates by "default", "click", and "blur", with different `debounce`
	 * values. You can see that "click" doesn't have an individual `debounce` value -
	 * therefore it uses the `*` debounce value.
	 *
	 * There is also a button that calls {@link ngModel.NgModelController#$setViewValue $setViewValue}
	 * directly with a "custom" event. Since "custom" is not defined in the `updateOn` list,
	 * it is considered a "default" event and will update the
	 * control if "default" is defined in `updateOn`, and will receive the "default" debounce value.
	 * Note that this is just to illustrate how custom controls would possibly call `$setViewValue`.
	 *
	 * You can change the `updateOn` and `debounce` configuration to test different scenarios. This
	 * is done with {@link ngModel.NgModelController#$overrideModelOptions $overrideModelOptions}.
	 *
	  <example name="ngModelOptions-advanced" module="optionsExample">
	    <file name="index.html">
	       <model-update-demo></model-update-demo>
	    </file>
	    <file name="app.js">
	      angular.module('optionsExample', [])
	        .component('modelUpdateDemo', {
	          templateUrl: 'template.html',
	          controller: function() {
	            this.name = 'Chinua';

	            this.options = {
	              updateOn: 'default blur click',
	              debounce: {
	                default: 2000,
	                blur: 0,
	                '*': 1000
	              }
	            };

	            this.updateEvents = function() {
	              var eventList = this.options.updateOn.split(' ');
	              eventList.push('*');
	              var events = {};

	              for (var i = 0; i < eventList.length; i++) {
	                events[eventList[i]] = this.options.debounce[eventList[i]];
	              }

	              this.events = events;
	            };

	            this.updateOptions = function() {
	              var options = angular.extend(this.options, {
	                updateOn: Object.keys(this.events).join(' ').replace('*', ''),
	                debounce: this.events
	              });

	              this.form.input.$overrideModelOptions(options);
	            };

	            // Initialize the event form
	            this.updateEvents();
	          }
	        });
	    </file>
	    <file name="template.html">
	      <form name="$ctrl.form">
	        Input: <input type="text" name="input" ng-model="$ctrl.name" ng-model-options="$ctrl.options" />
	      </form>
	      Model: <tt>{{$ctrl.name}}</tt>
	      <hr>
	      <button ng-click="$ctrl.form.input.$setViewValue('some value', 'custom')">Trigger setViewValue with 'some value' and 'custom' event</button>

	      <hr>
	      <form ng-submit="$ctrl.updateOptions()">
	        <b>updateOn</b><br>
	        <input type="text" ng-model="$ctrl.options.updateOn" ng-change="$ctrl.updateEvents()" ng-model-options="{debounce: 500}">

	        <table>
	          <tr>
	            <th>Option</th>
	            <th>Debounce value</th>
	          </tr>
	          <tr ng-repeat="(key, value) in $ctrl.events">
	            <td>{{key}}</td>
	            <td><input type="number" ng-model="$ctrl.events[key]" /></td>
	          </tr>
	        </table>

	        <br>
	        <input type="submit" value="Update options">
	      </form>
	    </file>
	  </example>
	 *
	 *
	 * ## Model updates and validation
	 *
	 * The default behaviour in `ngModel` is that the model value is set to `undefined` when the
	 * validation determines that the value is invalid. By setting the `allowInvalid` property to true,
	 * the model will still be updated even if the value is invalid.
	 *
	 *
	 * ## Connecting to the scope
	 *
	 * By setting the `getterSetter` property to true you are telling ngModel that the `ngModel` expression
	 * on the scope refers to a "getter/setter" function rather than the value itself.
	 *
	 * The following example shows how to bind to getter/setters:
	 *
	 * <example name="ngModelOptions-directive-getter-setter" module="getterSetterExample">
	 *   <file name="index.html">
	 *     <div ng-controller="ExampleController">
	 *       <form name="userForm">
	 *         <label>
	 *           Name:
	 *           <input type="text" name="userName"
	 *                  ng-model="user.name"
	 *                  ng-model-options="{ getterSetter: true }" />
	 *         </label>
	 *       </form>
	 *       <pre>user.name = <span ng-bind="user.name()"></span></pre>
	 *     </div>
	 *   </file>
	 *   <file name="app.js">
	 *     angular.module('getterSetterExample', [])
	 *       .controller('ExampleController', ['$scope', function($scope) {
	 *         var _name = 'Brian';
	 *         $scope.user = {
	 *           name: function(newName) {
	 *             return angular.isDefined(newName) ? (_name = newName) : _name;
	 *           }
	 *         };
	 *       }]);
	 *   </file>
	 * </example>
	 *
	 *
	 * ## Programmatically changing options
	 *
	 * The `ngModelOptions` expression is only evaluated once when the directive is linked; it is not
	 * watched for changes. However, it is possible to override the options on a single
	 * {@link ngModel.NgModelController} instance with
	 * {@link ngModel.NgModelController#$overrideModelOptions `NgModelController#$overrideModelOptions()`}.
	 * See also the example for
	 * {@link ngModelOptions#default-events-extra-triggers-and-catch-all-debounce-values
	 * Default events, extra triggers, and catch-all debounce values}.
	 *
	 *
	 * ## Specifying timezones
	 *
	 * You can specify the timezone that date/time input directives expect by providing its name in the
	 * `timezone` property.
	 *
	 *
	 * ## Formatting the value of `time` and `datetime-local`
	 *
	 * With the options `timeSecondsFormat` and `timeStripZeroSeconds` it is possible to adjust the value
	 * that is displayed in the control. Note that browsers may apply their own formatting
	 * in the user interface.
	 *
	   <example name="ngModelOptions-time-format" module="timeExample">
	     <file name="index.html">
	       <time-example></time-example>
	     </file>
	     <file name="script.js">
	        angular.module('timeExample', [])
	          .component('timeExample', {
	            templateUrl: 'timeExample.html',
	            controller: function() {
	              this.time = new Date(1970, 0, 1, 14, 57, 0);

	              this.options = {
	                timeSecondsFormat: 'ss',
	                timeStripZeroSeconds: true
	              };

	              this.optionChange = function() {
	                this.timeForm.timeFormatted.$overrideModelOptions(this.options);
	                this.time = new Date(this.time);
	              };
	            }
	          });
	     </file>
	     <file name="timeExample.html">
	       <form name="$ctrl.timeForm">
	         <strong>Default</strong>:
	         <input type="time" ng-model="$ctrl.time" step="any" /><br>
	         <strong>With options</strong>:
	         <input type="time" name="timeFormatted" ng-model="$ctrl.time" step="any" ng-model-options="$ctrl.options" />
	         <br>

	         Options:<br>
	         <code>timeSecondsFormat</code>:
	         <input
	           type="text"
	           ng-model="$ctrl.options.timeSecondsFormat"
	           ng-change="$ctrl.optionChange()">
	         <br>
	         <code>timeStripZeroSeconds</code>:
	         <input
	           type="checkbox"
	           ng-model="$ctrl.options.timeStripZeroSeconds"
	           ng-change="$ctrl.optionChange()">
	        </form>
	      </file>
	 *  </example>
	 *
	 * @param {Object} ngModelOptions options to apply to {@link ngModel} directives on this element and
	 *   and its descendents.
	 *
	 * **General options**:
	 *
	 *   - `updateOn`: string specifying which event should the input be bound to. You can set several
	 *     events using an space delimited list. There is a special event called `default` that
	 *     matches the default events belonging to the control. These are the events that are bound to
	 *     the control, and when fired, update the `$viewValue` via `$setViewValue`.
	 *
	 *     `ngModelOptions` considers every event that is not listed in `updateOn` a "default" event,
	 *     since different control types use different default events.
	 *
	 *     See also the section {@link ngModelOptions#triggering-and-debouncing-model-updates
	 *     Triggering and debouncing model updates}.
	 *
	 *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A
	 *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a
	 *     custom value for each event. For example:
	 *     ```
	 *     ng-model-options="{
	 *       updateOn: 'default blur',
	 *       debounce: { 'default': 500, 'blur': 0 }
	 *     }"
	 *     ```
	 *     You can use the `*` key to specify a debounce value that applies to all events that are not
	 *     specifically listed. In the following example, `mouseup` would have a debounce delay of 1000:
	 *     ```
	 *     ng-model-options="{
	 *       updateOn: 'default blur mouseup',
	 *       debounce: { 'default': 500, 'blur': 0, '*': 1000 }
	 *     }"
	 *     ```
	 *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did
	 *     not validate correctly instead of the default behavior of setting the model to undefined.
	 *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to
	 *     `ngModel` as getters/setters.
	 *
	 *
	 *  **Input-type specific options**:
	 *
	 *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for
	 *     `<input type="date" />`, `<input type="time" />`, ... . It understands UTC/GMT and the
	 *     continental US time zone abbreviations, but for general use, use a time zone offset, for
	 *     example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
	 *     If not specified, the timezone of the browser will be used.
	 *     Note that changing the timezone will have no effect on the current date, and is only applied after
	 *     the next input / model change.
	 *
	 *   - `timeSecondsFormat`: Defines if the `time` and `datetime-local` types should show seconds and
	 *     milliseconds. The option follows the format string of {@link date date filter}.
	 *     By default, the options is `undefined` which is equal to `'ss.sss'` (seconds and milliseconds).
	 *     The other options are `'ss'` (strips milliseconds), and `''` (empty string), which strips both
	 *     seconds and milliseconds.
	 *     Note that browsers that support `time` and `datetime-local` require the hour and minutes
	 *     part of the time string, and may show the value differently in the user interface.
	 *     {@link ngModelOptions#formatting-the-value-of-time-and-datetime-local- See the example}.
	 *
	 *   - `timeStripZeroSeconds`: Defines if the `time` and `datetime-local` types should strip the
	 *     seconds and milliseconds from the formatted value if they are zero. This option is applied
	 *     after `timeSecondsFormat`.
	 *     This option can be used to make the formatting consistent over different browsers, as some
	 *     browsers with support for `time` will natively hide the milliseconds and
	 *     seconds if they are zero, but others won't, and browsers that don't implement these input
	 *     types will always show the full string.
	 *     {@link ngModelOptions#formatting-the-value-of-time-and-datetime-local- See the example}.
	 *
	 */var ngModelOptionsDirective=function ngModelOptionsDirective(){NgModelOptionsController.$inject=['$attrs','$scope'];function NgModelOptionsController($attrs,$scope){this.$$attrs=$attrs;this.$$scope=$scope;}NgModelOptionsController.prototype={$onInit:function $onInit(){var parentOptions=this.parentCtrl?this.parentCtrl.$options:defaultModelOptions;var modelOptionsDefinition=this.$$scope.$eval(this.$$attrs.ngModelOptions);this.$options=parentOptions.createChild(modelOptionsDefinition);}};return{restrict:'A',// ngModelOptions needs to run before ngModel and input directives
	priority:10,require:{parentCtrl:'?^^ngModelOptions'},bindToController:true,controller:NgModelOptionsController};};// shallow copy over values from `src` that are not already specified on `dst`
	function defaults(dst,src){forEach(src,function(value,key){if(!isDefined(dst[key])){dst[key]=value;}});}/**
	 * @ngdoc directive
	 * @name ngNonBindable
	 * @restrict AC
	 * @priority 1000
	 * @element ANY
	 *
	 * @description
	 * The `ngNonBindable` directive tells AngularJS not to compile or bind the contents of the current
	 * DOM element, including directives on the element itself that have a lower priority than
	 * `ngNonBindable`. This is useful if the element contains what appears to be AngularJS directives
	 * and bindings but which should be ignored by AngularJS. This could be the case if you have a site
	 * that displays snippets of code, for instance.
	 *
	 * @example
	 * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,
	 * but the one wrapped in `ngNonBindable` is left alone.
	 *
	  <example name="ng-non-bindable">
	    <file name="index.html">
	      <div>Normal: {{1 + 2}}</div>
	      <div ng-non-bindable>Ignored: {{1 + 2}}</div>
	    </file>
	    <file name="protractor.js" type="protractor">
	     it('should check ng-non-bindable', function() {
	       expect(element(by.binding('1 + 2')).getText()).toContain('3');
	       expect(element.all(by.css('div')).last().getText()).toMatch(/1 \+ 2/);
	     });
	    </file>
	  </example>
	 */var ngNonBindableDirective=ngDirective({terminal:true,priority:1000});/* exported ngOptionsDirective *//* global jqLiteRemove */var ngOptionsMinErr=minErr('ngOptions');/**
	 * @ngdoc directive
	 * @name ngOptions
	 * @restrict A
	 *
	 * @description
	 *
	 * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`
	 * elements for the `<select>` element using the array or object obtained by evaluating the
	 * `ngOptions` comprehension expression.
	 *
	 * In many cases, {@link ng.directive:ngRepeat ngRepeat} can be used on `<option>` elements instead of
	 * `ngOptions` to achieve a similar result. However, `ngOptions` provides some benefits:
	 * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
	 * comprehension expression
	 * - reduced memory consumption by not creating a new scope for each repeated instance
	 * - increased render speed by creating the options in a documentFragment instead of individually
	 *
	 * When an item in the `<select>` menu is selected, the array element or object property
	 * represented by the selected option will be bound to the model identified by the `ngModel`
	 * directive.
	 *
	 * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
	 * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
	 * option. See example below for demonstration.
	 *
	 * ## Complex Models (objects or collections)
	 *
	 * By default, `ngModel` watches the model by reference, not value. This is important to know when
	 * binding the select to a model that is an object or a collection.
	 *
	 * One issue occurs if you want to preselect an option. For example, if you set
	 * the model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,
	 * because the objects are not identical. So by default, you should always reference the item in your collection
	 * for preselections, e.g.: `$scope.selected = $scope.collection[3]`.
	 *
	 * Another solution is to use a `track by` clause, because then `ngOptions` will track the identity
	 * of the item not by reference, but by the result of the `track by` expression. For example, if your
	 * collection items have an id property, you would `track by item.id`.
	 *
	 * A different issue with objects or collections is that ngModel won't detect if an object property or
	 * a collection item changes. For that reason, `ngOptions` additionally watches the model using
	 * `$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.
	 * This allows ngOptions to trigger a re-rendering of the options even if the actual object/collection
	 * has not changed identity, but only a property on the object or an item in the collection changes.
	 *
	 * Note that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection
	 * if the model is an array). This means that changing a property deeper than the first level inside the
	 * object/collection will not trigger a re-rendering.
	 *
	 * ## `select` **`as`**
	 *
	 * Using `select` **`as`** will bind the result of the `select` expression to the model, but
	 * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)
	 * or property name (for object data sources) of the value within the collection. If a **`track by`** expression
	 * is used, the result of that expression will be set as the value of the `option` and `select` elements.
	 *
	 *
	 * ### `select` **`as`** and **`track by`**
	 *
	 * <div class="alert alert-warning">
	 * Be careful when using `select` **`as`** and **`track by`** in the same expression.
	 * </div>
	 *
	 * Given this array of items on the $scope:
	 *
	 * ```js
	 * $scope.items = [{
	 *   id: 1,
	 *   label: 'aLabel',
	 *   subItem: { name: 'aSubItem' }
	 * }, {
	 *   id: 2,
	 *   label: 'bLabel',
	 *   subItem: { name: 'bSubItem' }
	 * }];
	 * ```
	 *
	 * This will work:
	 *
	 * ```html
	 * <select ng-options="item as item.label for item in items track by item.id" ng-model="selected"></select>
	 * ```
	 * ```js
	 * $scope.selected = $scope.items[0];
	 * ```
	 *
	 * but this will not work:
	 *
	 * ```html
	 * <select ng-options="item.subItem as item.label for item in items track by item.id" ng-model="selected"></select>
	 * ```
	 * ```js
	 * $scope.selected = $scope.items[0].subItem;
	 * ```
	 *
	 * In both examples, the **`track by`** expression is applied successfully to each `item` in the
	 * `items` array. Because the selected option has been set programmatically in the controller, the
	 * **`track by`** expression is also applied to the `ngModel` value. In the first example, the
	 * `ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with
	 * no issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**
	 * expression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value
	 * is not matched against any `<option>` and the `<select>` appears as having no selected value.
	 *
	 *
	 * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	 * @param {comprehension_expression} ngOptions in one of the following forms:
	 *
	 *   * for array data sources:
	 *     * `label` **`for`** `value` **`in`** `array`
	 *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`
	 *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`
	 *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array`
	 *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
	 *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
	 *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`
	 *        (for including a filter with `track by`)
	 *   * for object data sources:
	 *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
	 *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
	 *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`
	 *     * `label` **`disable when`** `disable` **`for (`**`key`**`,`** `value`**`) in`** `object`
	 *     * `select` **`as`** `label` **`group by`** `group`
	 *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
	 *     * `select` **`as`** `label` **`disable when`** `disable`
	 *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
	 *
	 * Where:
	 *
	 *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.
	 *   * `value`: local variable which will refer to each item in the `array` or each property value
	 *      of `object` during iteration.
	 *   * `key`: local variable which will refer to a property name in `object` during iteration.
	 *   * `label`: The result of this expression will be the label for `<option>` element. The
	 *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).
	 *   * `select`: The result of this expression will be bound to the model of the parent `<select>`
	 *      element. If not specified, `select` expression will default to `value`.
	 *   * `group`: The result of this expression will be used to group options using the `<optgroup>`
	 *      DOM element.
	 *   * `disable`: The result of this expression will be used to disable the rendered `<option>`
	 *      element. Return `true` to disable.
	 *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be
	 *      used to identify the objects in the array. The `trackexpr` will most likely refer to the
	 *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved
	 *      even when the options are recreated (e.g. reloaded from the server).
	 * @param {string=} name Property name of the form under which the control is published.
	 * @param {string=} required The control is considered valid only if value is entered.
	 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
	 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
	 *    `required` when you want to data-bind to the `required` attribute.
	 * @param {string=} ngAttrSize sets the size of the select element dynamically. Uses the
	 * {@link guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes ngAttr} directive.
	 *
	 * @example
	    <example module="selectExample" name="select">
	      <file name="index.html">
	        <script>
	        angular.module('selectExample', [])
	          .controller('ExampleController', ['$scope', function($scope) {
	            $scope.colors = [
	              {name:'black', shade:'dark'},
	              {name:'white', shade:'light', notAnOption: true},
	              {name:'red', shade:'dark'},
	              {name:'blue', shade:'dark', notAnOption: true},
	              {name:'yellow', shade:'light', notAnOption: false}
	            ];
	            $scope.myColor = $scope.colors[2]; // red
	          }]);
	        </script>
	        <div ng-controller="ExampleController">
	          <ul>
	            <li ng-repeat="color in colors">
	              <label>Name: <input ng-model="color.name"></label>
	              <label><input type="checkbox" ng-model="color.notAnOption"> Disabled?</label>
	              <button ng-click="colors.splice($index, 1)" aria-label="Remove">X</button>
	            </li>
	            <li>
	              <button ng-click="colors.push({})">add</button>
	            </li>
	          </ul>
	          <hr/>
	          <label>Color (null not allowed):
	            <select ng-model="myColor" ng-options="color.name for color in colors"></select>
	          </label><br/>
	          <label>Color (null allowed):
	          <span  class="nullable">
	            <select ng-model="myColor" ng-options="color.name for color in colors">
	              <option value="">-- choose color --</option>
	            </select>
	          </span></label><br/>

	          <label>Color grouped by shade:
	            <select ng-model="myColor" ng-options="color.name group by color.shade for color in colors">
	            </select>
	          </label><br/>

	          <label>Color grouped by shade, with some disabled:
	            <select ng-model="myColor"
	                  ng-options="color.name group by color.shade disable when color.notAnOption for color in colors">
	            </select>
	          </label><br/>



	          Select <button ng-click="myColor = { name:'not in list', shade: 'other' }">bogus</button>.
	          <br/>
	          <hr/>
	          Currently selected: {{ {selected_color:myColor} }}
	          <div style="border:solid 1px black; height:20px"
	               ng-style="{'background-color':myColor.name}">
	          </div>
	        </div>
	      </file>
	      <file name="protractor.js" type="protractor">
	         it('should check ng-options', function() {
	           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');
	           element.all(by.model('myColor')).first().click();
	           element.all(by.css('select[ng-model="myColor"] option')).first().click();
	           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');
	           element(by.css('.nullable select[ng-model="myColor"]')).click();
	           element.all(by.css('.nullable select[ng-model="myColor"] option')).first().click();
	           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');
	         });
	      </file>
	    </example>
	 *//* eslint-disable max-len *///                     //00001111111111000000000002222222222000000000000000000000333333333300000000000000000000000004444444444400000000000005555555555555000000000666666666666600000007777777777777000000000000000888888888800000000000000000009999999999
	var NG_OPTIONS_REGEXP=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;// 1: value expression (valueFn)
	// 2: label expression (displayFn)
	// 3: group by expression (groupByFn)
	// 4: disable when expression (disableWhenFn)
	// 5: array item variable name
	// 6: object item key variable name
	// 7: object item value variable name
	// 8: collection expression
	// 9: track by expression
	/* eslint-enable */var ngOptionsDirective=['$compile','$document','$parse',function($compile,$document,$parse){function parseOptionsExpression(optionsExp,selectElement,scope){var match=optionsExp.match(NG_OPTIONS_REGEXP);if(!match){throw ngOptionsMinErr('iexp','Expected expression in form of '+'\'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\''+' but got \'{0}\'. Element: {1}',optionsExp,startingTag(selectElement));}// Extract the parts from the ngOptions expression
	// The variable name for the value of the item in the collection
	var valueName=match[5]||match[7];// The variable name for the key of the item in the collection
	var keyName=match[6];// An expression that generates the viewValue for an option if there is a label expression
	var selectAs=/ as /.test(match[0])&&match[1];// An expression that is used to track the id of each object in the options collection
	var trackBy=match[9];// An expression that generates the viewValue for an option if there is no label expression
	var valueFn=$parse(match[2]?match[1]:valueName);var selectAsFn=selectAs&&$parse(selectAs);var viewValueFn=selectAsFn||valueFn;var trackByFn=trackBy&&$parse(trackBy);// Get the value by which we are going to track the option
	// if we have a trackFn then use that (passing scope and locals)
	// otherwise just hash the given viewValue
	var getTrackByValueFn=trackBy?function(value,locals){return trackByFn(scope,locals);}:function getHashOfValue(value){return hashKey(value);};var getTrackByValue=function getTrackByValue(value,key){return getTrackByValueFn(value,getLocals(value,key));};var displayFn=$parse(match[2]||match[1]);var groupByFn=$parse(match[3]||'');var disableWhenFn=$parse(match[4]||'');var valuesFn=$parse(match[8]);var locals={};var getLocals=keyName?function(value,key){locals[keyName]=key;locals[valueName]=value;return locals;}:function(value){locals[valueName]=value;return locals;};function Option(selectValue,viewValue,label,group,disabled){this.selectValue=selectValue;this.viewValue=viewValue;this.label=label;this.group=group;this.disabled=disabled;}function getOptionValuesKeys(optionValues){var optionValuesKeys;if(!keyName&&isArrayLike(optionValues)){optionValuesKeys=optionValues;}else{// if object, extract keys, in enumeration order, unsorted
	optionValuesKeys=[];for(var itemKey in optionValues){if(optionValues.hasOwnProperty(itemKey)&&itemKey.charAt(0)!=='$'){optionValuesKeys.push(itemKey);}}}return optionValuesKeys;}return{trackBy:trackBy,getTrackByValue:getTrackByValue,getWatchables:$parse(valuesFn,function(optionValues){// Create a collection of things that we would like to watch (watchedArray)
	// so that they can all be watched using a single $watchCollection
	// that only runs the handler once if anything changes
	var watchedArray=[];optionValues=optionValues||[];var optionValuesKeys=getOptionValuesKeys(optionValues);var optionValuesLength=optionValuesKeys.length;for(var index=0;index<optionValuesLength;index++){var key=optionValues===optionValuesKeys?index:optionValuesKeys[index];var value=optionValues[key];var locals=getLocals(value,key);var selectValue=getTrackByValueFn(value,locals);watchedArray.push(selectValue);// Only need to watch the displayFn if there is a specific label expression
	if(match[2]||match[1]){var label=displayFn(scope,locals);watchedArray.push(label);}// Only need to watch the disableWhenFn if there is a specific disable expression
	if(match[4]){var disableWhen=disableWhenFn(scope,locals);watchedArray.push(disableWhen);}}return watchedArray;}),getOptions:function getOptions(){var optionItems=[];var selectValueMap={};// The option values were already computed in the `getWatchables` fn,
	// which must have been called to trigger `getOptions`
	var optionValues=valuesFn(scope)||[];var optionValuesKeys=getOptionValuesKeys(optionValues);var optionValuesLength=optionValuesKeys.length;for(var index=0;index<optionValuesLength;index++){var key=optionValues===optionValuesKeys?index:optionValuesKeys[index];var value=optionValues[key];var locals=getLocals(value,key);var viewValue=viewValueFn(scope,locals);var selectValue=getTrackByValueFn(viewValue,locals);var label=displayFn(scope,locals);var group=groupByFn(scope,locals);var disabled=disableWhenFn(scope,locals);var optionItem=new Option(selectValue,viewValue,label,group,disabled);optionItems.push(optionItem);selectValueMap[selectValue]=optionItem;}return{items:optionItems,selectValueMap:selectValueMap,getOptionFromViewValue:function getOptionFromViewValue(value){return selectValueMap[getTrackByValue(value)];},getViewValueFromOption:function getViewValueFromOption(option){// If the viewValue could be an object that may be mutated by the application,
	// we need to make a copy and not return the reference to the value on the option.
	return trackBy?copy(option.viewValue):option.viewValue;}};}};}// Support: IE 9 only
	// We can't just jqLite('<option>') since jqLite is not smart enough
	// to create it in <select> and IE barfs otherwise.
	var optionTemplate=window.document.createElement('option'),optGroupTemplate=window.document.createElement('optgroup');function ngOptionsPostLink(scope,selectElement,attr,ctrls){var selectCtrl=ctrls[0];var ngModelCtrl=ctrls[1];var multiple=attr.multiple;// The emptyOption allows the application developer to provide their own custom "empty"
	// option when the viewValue does not match any of the option values.
	for(var i=0,children=selectElement.children(),ii=children.length;i<ii;i++){if(children[i].value===''){selectCtrl.hasEmptyOption=true;selectCtrl.emptyOption=children.eq(i);break;}}// The empty option will be compiled and rendered before we first generate the options
	selectElement.empty();var providedEmptyOption=!!selectCtrl.emptyOption;var unknownOption=jqLite(optionTemplate.cloneNode(false));unknownOption.val('?');var options;var ngOptions=parseOptionsExpression(attr.ngOptions,selectElement,scope);// This stores the newly created options before they are appended to the select.
	// Since the contents are removed from the fragment when it is appended,
	// we only need to create it once.
	var listFragment=$document[0].createDocumentFragment();// Overwrite the implementation. ngOptions doesn't use hashes
	selectCtrl.generateUnknownOptionValue=function(val){return'?';};// Update the controller methods for multiple selectable options
	if(!multiple){selectCtrl.writeValue=function writeNgOptionsValue(value){// The options might not be defined yet when ngModel tries to render
	if(!options)return;var selectedOption=selectElement[0].options[selectElement[0].selectedIndex];var option=options.getOptionFromViewValue(value);// Make sure to remove the selected attribute from the previously selected option
	// Otherwise, screen readers might get confused
	if(selectedOption)selectedOption.removeAttribute('selected');if(option){// Don't update the option when it is already selected.
	// For example, the browser will select the first option by default. In that case,
	// most properties are set automatically - except the `selected` attribute, which we
	// set always
	if(selectElement[0].value!==option.selectValue){selectCtrl.removeUnknownOption();selectElement[0].value=option.selectValue;option.element.selected=true;}option.element.setAttribute('selected','selected');}else{selectCtrl.selectUnknownOrEmptyOption(value);}};selectCtrl.readValue=function readNgOptionsValue(){var selectedOption=options.selectValueMap[selectElement.val()];if(selectedOption&&!selectedOption.disabled){selectCtrl.unselectEmptyOption();selectCtrl.removeUnknownOption();return options.getViewValueFromOption(selectedOption);}return null;};// If we are using `track by` then we must watch the tracked value on the model
	// since ngModel only watches for object identity change
	// FIXME: When a user selects an option, this watch will fire needlessly
	if(ngOptions.trackBy){scope.$watch(function(){return ngOptions.getTrackByValue(ngModelCtrl.$viewValue);},function(){ngModelCtrl.$render();});}}else{selectCtrl.writeValue=function writeNgOptionsMultiple(values){// The options might not be defined yet when ngModel tries to render
	if(!options)return;// Only set `<option>.selected` if necessary, in order to prevent some browsers from
	// scrolling to `<option>` elements that are outside the `<select>` element's viewport.
	var selectedOptions=values&&values.map(getAndUpdateSelectedOption)||[];options.items.forEach(function(option){if(option.element.selected&&!includes(selectedOptions,option)){option.element.selected=false;}});};selectCtrl.readValue=function readNgOptionsMultiple(){var selectedValues=selectElement.val()||[],selections=[];forEach(selectedValues,function(value){var option=options.selectValueMap[value];if(option&&!option.disabled)selections.push(options.getViewValueFromOption(option));});return selections;};// If we are using `track by` then we must watch these tracked values on the model
	// since ngModel only watches for object identity change
	if(ngOptions.trackBy){scope.$watchCollection(function(){if(isArray(ngModelCtrl.$viewValue)){return ngModelCtrl.$viewValue.map(function(value){return ngOptions.getTrackByValue(value);});}},function(){ngModelCtrl.$render();});}}if(providedEmptyOption){// compile the element since there might be bindings in it
	$compile(selectCtrl.emptyOption)(scope);selectElement.prepend(selectCtrl.emptyOption);if(selectCtrl.emptyOption[0].nodeType===NODE_TYPE_COMMENT){// This means the empty option has currently no actual DOM node, probably because
	// it has been modified by a transclusion directive.
	selectCtrl.hasEmptyOption=false;// Redefine the registerOption function, which will catch
	// options that are added by ngIf etc. (rendering of the node is async because of
	// lazy transclusion)
	selectCtrl.registerOption=function(optionScope,optionEl){if(optionEl.val()===''){selectCtrl.hasEmptyOption=true;selectCtrl.emptyOption=optionEl;selectCtrl.emptyOption.removeClass('ng-scope');// This ensures the new empty option is selected if previously no option was selected
	ngModelCtrl.$render();optionEl.on('$destroy',function(){var needsRerender=selectCtrl.$isEmptyOptionSelected();selectCtrl.hasEmptyOption=false;selectCtrl.emptyOption=undefined;if(needsRerender)ngModelCtrl.$render();});}};}else{// remove the class, which is added automatically because we recompile the element and it
	// becomes the compilation root
	selectCtrl.emptyOption.removeClass('ng-scope');}}// We will re-render the option elements if the option values or labels change
	scope.$watchCollection(ngOptions.getWatchables,updateOptions);// ------------------------------------------------------------------ //
	function addOptionElement(option,parent){var optionElement=optionTemplate.cloneNode(false);parent.appendChild(optionElement);updateOptionElement(option,optionElement);}function getAndUpdateSelectedOption(viewValue){var option=options.getOptionFromViewValue(viewValue);var element=option&&option.element;if(element&&!element.selected)element.selected=true;return option;}function updateOptionElement(option,element){option.element=element;element.disabled=option.disabled;// Support: IE 11 only, Edge 12-13 only
	// NOTE: The label must be set before the value, otherwise IE 11 & Edge create unresponsive
	// selects in certain circumstances when multiple selects are next to each other and display
	// the option list in listbox style, i.e. the select is [multiple], or specifies a [size].
	// See https://github.com/angular/angular.js/issues/11314 for more info.
	// This is unfortunately untestable with unit / e2e tests
	if(option.label!==element.label){element.label=option.label;element.textContent=option.label;}element.value=option.selectValue;}function updateOptions(){var previousValue=options&&selectCtrl.readValue();// We must remove all current options, but cannot simply set innerHTML = null
	// since the providedEmptyOption might have an ngIf on it that inserts comments which we
	// must preserve.
	// Instead, iterate over the current option elements and remove them or their optgroup
	// parents
	if(options){for(var i=options.items.length-1;i>=0;i--){var option=options.items[i];if(isDefined(option.group)){jqLiteRemove(option.element.parentNode);}else{jqLiteRemove(option.element);}}}options=ngOptions.getOptions();var groupElementMap={};options.items.forEach(function addOption(option){var groupElement;if(isDefined(option.group)){// This option is to live in a group
	// See if we have already created this group
	groupElement=groupElementMap[option.group];if(!groupElement){groupElement=optGroupTemplate.cloneNode(false);listFragment.appendChild(groupElement);// Update the label on the group element
	// "null" is special cased because of Safari
	groupElement.label=option.group===null?'null':option.group;// Store it for use later
	groupElementMap[option.group]=groupElement;}addOptionElement(option,groupElement);}else{// This option is not in a group
	addOptionElement(option,listFragment);}});selectElement[0].appendChild(listFragment);ngModelCtrl.$render();// Check to see if the value has changed due to the update to the options
	if(!ngModelCtrl.$isEmpty(previousValue)){var nextValue=selectCtrl.readValue();var isNotPrimitive=ngOptions.trackBy||multiple;if(isNotPrimitive?!equals(previousValue,nextValue):previousValue!==nextValue){ngModelCtrl.$setViewValue(nextValue);ngModelCtrl.$render();}}}}return{restrict:'A',terminal:true,require:['select','ngModel'],link:{pre:function ngOptionsPreLink(scope,selectElement,attr,ctrls){// Deactivate the SelectController.register method to prevent
	// option directives from accidentally registering themselves
	// (and unwanted $destroy handlers etc.)
	ctrls[0].registerOption=noop;},post:ngOptionsPostLink}};}];/**
	 * @ngdoc directive
	 * @name ngPluralize
	 * @restrict EA
	 *
	 * @description
	 * `ngPluralize` is a directive that displays messages according to en-US localization rules.
	 * These rules are bundled with angular.js, but can be overridden
	 * (see {@link guide/i18n AngularJS i18n} dev guide). You configure ngPluralize directive
	 * by specifying the mappings between
	 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
	 * and the strings to be displayed.
	 *
	 * ## Plural categories and explicit number rules
	 * There are two
	 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
	 * in AngularJS's default en-US locale: "one" and "other".
	 *
	 * While a plural category may match many numbers (for example, in en-US locale, "other" can match
	 * any number that is not 1), an explicit number rule can only match one number. For example, the
	 * explicit number rule for "3" matches the number 3. There are examples of plural categories
	 * and explicit number rules throughout the rest of this documentation.
	 *
	 * ## Configuring ngPluralize
	 * You configure ngPluralize by providing 2 attributes: `count` and `when`.
	 * You can also provide an optional attribute, `offset`.
	 *
	 * The value of the `count` attribute can be either a string or an {@link guide/expression
	 * AngularJS expression}; these are evaluated on the current scope for its bound value.
	 *
	 * The `when` attribute specifies the mappings between plural categories and the actual
	 * string to be displayed. The value of the attribute should be a JSON object.
	 *
	 * The following example shows how to configure ngPluralize:
	 *
	 * ```html
	 * <ng-pluralize count="personCount"
	                 when="{'0': 'Nobody is viewing.',
	 *                      'one': '1 person is viewing.',
	 *                      'other': '{} people are viewing.'}">
	 * </ng-pluralize>
	 *```
	 *
	 * In the example, `"0: Nobody is viewing."` is an explicit number rule. If you did not
	 * specify this rule, 0 would be matched to the "other" category and "0 people are viewing"
	 * would be shown instead of "Nobody is viewing". You can specify an explicit number rule for
	 * other numbers, for example 12, so that instead of showing "12 people are viewing", you can
	 * show "a dozen people are viewing".
	 *
	 * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted
	 * into pluralized strings. In the previous example, AngularJS will replace `{}` with
	 * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder
	 * for <span ng-non-bindable>{{numberExpression}}</span>.
	 *
	 * If no rule is defined for a category, then an empty string is displayed and a warning is generated.
	 * Note that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.
	 *
	 * ## Configuring ngPluralize with offset
	 * The `offset` attribute allows further customization of pluralized text, which can result in
	 * a better user experience. For example, instead of the message "4 people are viewing this document",
	 * you might display "John, Kate and 2 others are viewing this document".
	 * The offset attribute allows you to offset a number by any desired value.
	 * Let's take a look at an example:
	 *
	 * ```html
	 * <ng-pluralize count="personCount" offset=2
	 *               when="{'0': 'Nobody is viewing.',
	 *                      '1': '{{person1}} is viewing.',
	 *                      '2': '{{person1}} and {{person2}} are viewing.',
	 *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',
	 *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
	 * </ng-pluralize>
	 * ```
	 *
	 * Notice that we are still using two plural categories(one, other), but we added
	 * three explicit number rules 0, 1 and 2.
	 * When one person, perhaps John, views the document, "John is viewing" will be shown.
	 * When three people view the document, no explicit number rule is found, so
	 * an offset of 2 is taken off 3, and AngularJS uses 1 to decide the plural category.
	 * In this case, plural category 'one' is matched and "John, Mary and one other person are viewing"
	 * is shown.
	 *
	 * Note that when you specify offsets, you must provide explicit number rules for
	 * numbers from 0 up to and including the offset. If you use an offset of 3, for example,
	 * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for
	 * plural categories "one" and "other".
	 *
	 * @param {string|expression} count The variable to be bound to.
	 * @param {string} when The mapping between plural category to its corresponding strings.
	 * @param {number=} offset Offset to deduct from the total number.
	 *
	 * @example
	    <example module="pluralizeExample" name="ng-pluralize">
	      <file name="index.html">
	        <script>
	          angular.module('pluralizeExample', [])
	            .controller('ExampleController', ['$scope', function($scope) {
	              $scope.person1 = 'Igor';
	              $scope.person2 = 'Misko';
	              $scope.personCount = 1;
	            }]);
	        </script>
	        <div ng-controller="ExampleController">
	          <label>Person 1:<input type="text" ng-model="person1" value="Igor" /></label><br/>
	          <label>Person 2:<input type="text" ng-model="person2" value="Misko" /></label><br/>
	          <label>Number of People:<input type="text" ng-model="personCount" value="1" /></label><br/>

	          <!--- Example with simple pluralization rules for en locale --->
	          Without Offset:
	          <ng-pluralize count="personCount"
	                        when="{'0': 'Nobody is viewing.',
	                               'one': '1 person is viewing.',
	                               'other': '{} people are viewing.'}">
	          </ng-pluralize><br>

	          <!--- Example with offset --->
	          With Offset(2):
	          <ng-pluralize count="personCount" offset=2
	                        when="{'0': 'Nobody is viewing.',
	                               '1': '{{person1}} is viewing.',
	                               '2': '{{person1}} and {{person2}} are viewing.',
	                               'one': '{{person1}}, {{person2}} and one other person are viewing.',
	                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
	          </ng-pluralize>
	        </div>
	      </file>
	      <file name="protractor.js" type="protractor">
	        it('should show correct pluralized string', function() {
	          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);
	          var withOffset = element.all(by.css('ng-pluralize')).get(1);
	          var countInput = element(by.model('personCount'));

	          expect(withoutOffset.getText()).toEqual('1 person is viewing.');
	          expect(withOffset.getText()).toEqual('Igor is viewing.');

	          countInput.clear();
	          countInput.sendKeys('0');

	          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');
	          expect(withOffset.getText()).toEqual('Nobody is viewing.');

	          countInput.clear();
	          countInput.sendKeys('2');

	          expect(withoutOffset.getText()).toEqual('2 people are viewing.');
	          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');

	          countInput.clear();
	          countInput.sendKeys('3');

	          expect(withoutOffset.getText()).toEqual('3 people are viewing.');
	          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');

	          countInput.clear();
	          countInput.sendKeys('4');

	          expect(withoutOffset.getText()).toEqual('4 people are viewing.');
	          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');
	        });
	        it('should show data-bound names', function() {
	          var withOffset = element.all(by.css('ng-pluralize')).get(1);
	          var personCount = element(by.model('personCount'));
	          var person1 = element(by.model('person1'));
	          var person2 = element(by.model('person2'));
	          personCount.clear();
	          personCount.sendKeys('4');
	          person1.clear();
	          person1.sendKeys('Di');
	          person2.clear();
	          person2.sendKeys('Vojta');
	          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');
	        });
	      </file>
	    </example>
	 */var ngPluralizeDirective=['$locale','$interpolate','$log',function($locale,$interpolate,$log){var BRACE=/{}/g,IS_WHEN=/^when(Minus)?(.+)$/;return{link:function link(scope,element,attr){var numberExp=attr.count,whenExp=attr.$attr.when&&element.attr(attr.$attr.when),// we have {{}} in attrs
	offset=attr.offset||0,whens=scope.$eval(whenExp)||{},whensExpFns={},startSymbol=$interpolate.startSymbol(),endSymbol=$interpolate.endSymbol(),braceReplacement=startSymbol+numberExp+'-'+offset+endSymbol,watchRemover=angular.noop,lastCount;forEach(attr,function(expression,attributeName){var tmpMatch=IS_WHEN.exec(attributeName);if(tmpMatch){var whenKey=(tmpMatch[1]?'-':'')+lowercase(tmpMatch[2]);whens[whenKey]=element.attr(attr.$attr[attributeName]);}});forEach(whens,function(expression,key){whensExpFns[key]=$interpolate(expression.replace(BRACE,braceReplacement));});scope.$watch(numberExp,function ngPluralizeWatchAction(newVal){var count=parseFloat(newVal);var countIsNaN=isNumberNaN(count);if(!countIsNaN&&!(count in whens)){// If an explicit number rule such as 1, 2, 3... is defined, just use it.
	// Otherwise, check it against pluralization rules in $locale service.
	count=$locale.pluralCat(count-offset);}// If both `count` and `lastCount` are NaN, we don't need to re-register a watch.
	// In JS `NaN !== NaN`, so we have to explicitly check.
	if(count!==lastCount&&!(countIsNaN&&isNumberNaN(lastCount))){watchRemover();var whenExpFn=whensExpFns[count];if(isUndefined(whenExpFn)){if(newVal!=null){$log.debug('ngPluralize: no rule defined for \''+count+'\' in '+whenExp);}watchRemover=noop;updateElementText();}else{watchRemover=scope.$watch(whenExpFn,updateElementText);}lastCount=count;}});function updateElementText(newText){element.text(newText||'');}}};}];/**
	 * @ngdoc directive
	 * @name ngRef
	 * @restrict A
	 *
	 * @description
	 * The `ngRef` attribute tells AngularJS to assign the controller of a component (or a directive)
	 * to the given property in the current scope. It is also possible to add the jqlite-wrapped DOM
	 * element to the scope.
	 *
	 * If the element with `ngRef` is destroyed `null` is assigned to the property.
	 *
	 * Note that if you want to assign from a child into the parent scope, you must initialize the
	 * target property on the parent scope, otherwise `ngRef` will assign on the child scope.
	 * This commonly happens when assigning elements or components wrapped in {@link ngIf} or
	 * {@link ngRepeat}. See the second example below.
	 *
	 *
	 * @element ANY
	 * @param {string} ngRef property name - A valid AngularJS expression identifier to which the
	 *                       controller or jqlite-wrapped DOM element will be bound.
	 * @param {string=} ngRefRead read value - The name of a directive (or component) on this element,
	 *                            or the special string `$element`. If a name is provided, `ngRef` will
	 *                            assign the matching controller. If `$element` is provided, the element
	 *                            itself is assigned (even if a controller is available).
	 *
	 *
	 * @example
	 * ### Simple toggle
	 * This example shows how the controller of the component toggle
	 * is reused in the template through the scope to use its logic.
	 * <example name="ng-ref-component" module="myApp">
	 *   <file name="index.html">
	 *     <my-toggle ng-ref="myToggle"></my-toggle>
	 *     <button ng-click="myToggle.toggle()">Toggle</button>
	 *     <div ng-show="myToggle.isOpen()">
	 *       You are using a component in the same template to show it.
	 *     </div>
	 *   </file>
	 *   <file name="index.js">
	 *     angular.module('myApp', [])
	 *     .component('myToggle', {
	 *       controller: function ToggleController() {
	 *         var opened = false;
	 *         this.isOpen = function() { return opened; };
	 *         this.toggle = function() { opened = !opened; };
	 *       }
	 *     });
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *      it('should publish the toggle into the scope', function() {
	 *        var toggle = element(by.buttonText('Toggle'));
	 *        expect(toggle.evaluate('myToggle.isOpen()')).toEqual(false);
	 *        toggle.click();
	 *        expect(toggle.evaluate('myToggle.isOpen()')).toEqual(true);
	 *      });
	 *   </file>
	 * </example>
	 *
	 * @example
	 * ### ngRef inside scopes
	 * This example shows how `ngRef` works with child scopes. The `ngRepeat`-ed `myWrapper` components
	 * are assigned to the scope of `myRoot`, because the `toggles` property has been initialized.
	 * The repeated `myToggle` components are published to the child scopes created by `ngRepeat`.
	 * `ngIf` behaves similarly - the assignment of `myToggle` happens in the `ngIf` child scope,
	 * because the target property has not been initialized on the `myRoot` component controller.
	 *
	 * <example name="ng-ref-scopes" module="myApp">
	 *   <file name="index.html">
	 *     <my-root></my-root>
	 *   </file>
	 *   <file name="index.js">
	 *     angular.module('myApp', [])
	 *     .component('myRoot', {
	 *       templateUrl: 'root.html',
	 *       controller: function() {
	 *         this.wrappers = []; // initialize the array so that the wrappers are assigned into the parent scope
	 *       }
	 *     })
	 *     .component('myToggle', {
	 *       template: '<strong>myToggle</strong><button ng-click="$ctrl.toggle()" ng-transclude></button>',
	 *       transclude: true,
	 *       controller: function ToggleController() {
	 *         var opened = false;
	 *         this.isOpen = function() { return opened; };
	 *         this.toggle = function() { opened = !opened; };
	 *       }
	 *     })
	 *     .component('myWrapper', {
	 *       transclude: true,
	 *       template: '<strong>myWrapper</strong>' +
	 *         '<div>ngRepeatToggle.isOpen(): {{$ctrl.ngRepeatToggle.isOpen() | json}}</div>' +
	 *         '<my-toggle ng-ref="$ctrl.ngRepeatToggle"><ng-transclude></ng-transclude></my-toggle>'
	 *     });
	 *   </file>
	 *   <file name="root.html">
	 *     <strong>myRoot</strong>
	 *     <my-toggle ng-ref="$ctrl.outerToggle">Outer Toggle</my-toggle>
	 *     <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
	 *     <div><em>wrappers assigned to root</em><br>
	 *     <div ng-repeat="wrapper in $ctrl.wrappers">
	 *       wrapper.ngRepeatToggle.isOpen(): {{wrapper.ngRepeatToggle.isOpen() | json}}
	 *     </div>
	 *
	 *     <ul>
	 *       <li ng-repeat="(index, value) in [1,2,3]">
	 *         <strong>ngRepeat</strong>
	 *         <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
	 *         <my-wrapper ng-ref="$ctrl.wrappers[index]">ngRepeat Toggle {{$index + 1}}</my-wrapper>
	 *       </li>
	 *     </ul>
	 *
	 *     <div>ngIfToggle.isOpen(): {{ngIfToggle.isOpen()}} // This is always undefined because it's
	 *       assigned to the child scope created by ngIf.
	 *     </div>
	 *     <div ng-if="true">
	          <strong>ngIf</strong>
	 *        <my-toggle ng-ref="ngIfToggle">ngIf Toggle</my-toggle>
	 *        <div>ngIfToggle.isOpen(): {{ngIfToggle.isOpen() | json}}</div>
	 *        <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
	 *     </div>
	 *   </file>
	 *   <file name="styles.css">
	 *     ul {
	 *       list-style: none;
	 *       padding-left: 0;
	 *     }
	 *
	 *     li[ng-repeat] {
	 *       background: lightgreen;
	 *       padding: 8px;
	 *       margin: 8px;
	 *     }
	 *
	 *     [ng-if] {
	 *       background: lightgrey;
	 *       padding: 8px;
	 *     }
	 *
	 *     my-root {
	 *       background: lightgoldenrodyellow;
	 *       padding: 8px;
	 *       display: block;
	 *     }
	 *
	 *     my-wrapper {
	 *       background: lightsalmon;
	 *       padding: 8px;
	 *       display: block;
	 *     }
	 *
	 *     my-toggle {
	 *       background: lightblue;
	 *       padding: 8px;
	 *       display: block;
	 *     }
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *      var OuterToggle = function() {
	 *        this.toggle = function() {
	 *          element(by.buttonText('Outer Toggle')).click();
	 *        };
	 *        this.isOpen = function() {
	 *          return element.all(by.binding('outerToggle.isOpen()')).first().getText();
	 *        };
	 *      };
	 *      var NgRepeatToggle = function(i) {
	 *        var parent = element.all(by.repeater('(index, value) in [1,2,3]')).get(i - 1);
	 *        this.toggle = function() {
	 *          element(by.buttonText('ngRepeat Toggle ' + i)).click();
	 *        };
	 *        this.isOpen = function() {
	 *          return parent.element(by.binding('ngRepeatToggle.isOpen() | json')).getText();
	 *        };
	 *        this.isOuterOpen = function() {
	 *          return parent.element(by.binding('outerToggle.isOpen() | json')).getText();
	 *        };
	 *      };
	 *      var NgRepeatToggles = function() {
	 *        var toggles = [1,2,3].map(function(i) { return new NgRepeatToggle(i); });
	 *        this.forEach = function(fn) {
	 *          toggles.forEach(fn);
	 *        };
	 *        this.isOuterOpen = function(i) {
	 *          return toggles[i - 1].isOuterOpen();
	 *        };
	 *      };
	 *      var NgIfToggle = function() {
	 *        var parent = element(by.css('[ng-if]'));
	 *        this.toggle = function() {
	 *          element(by.buttonText('ngIf Toggle')).click();
	 *        };
	 *        this.isOpen = function() {
	 *          return by.binding('ngIfToggle.isOpen() | json').getText();
	 *        };
	 *        this.isOuterOpen = function() {
	 *          return parent.element(by.binding('outerToggle.isOpen() | json')).getText();
	 *        };
	 *      };
	 *
	 *      it('should toggle the outer toggle', function() {
	 *        var outerToggle = new OuterToggle();
	 *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): false');
	 *        outerToggle.toggle();
	 *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): true');
	 *      });
	 *
	 *      it('should toggle all outer toggles', function() {
	 *        var outerToggle = new OuterToggle();
	 *        var repeatToggles = new NgRepeatToggles();
	 *        var ifToggle = new NgIfToggle();
	 *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): false');
	 *        expect(repeatToggles.isOuterOpen(1)).toEqual('outerToggle.isOpen(): false');
	 *        expect(repeatToggles.isOuterOpen(2)).toEqual('outerToggle.isOpen(): false');
	 *        expect(repeatToggles.isOuterOpen(3)).toEqual('outerToggle.isOpen(): false');
	 *        expect(ifToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
	 *        outerToggle.toggle();
	 *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): true');
	 *        expect(repeatToggles.isOuterOpen(1)).toEqual('outerToggle.isOpen(): true');
	 *        expect(repeatToggles.isOuterOpen(2)).toEqual('outerToggle.isOpen(): true');
	 *        expect(repeatToggles.isOuterOpen(3)).toEqual('outerToggle.isOpen(): true');
	 *        expect(ifToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): true');
	 *      });
	 *
	 *      it('should toggle each repeat iteration separately', function() {
	 *        var repeatToggles = new NgRepeatToggles();
	 *
	 *        repeatToggles.forEach(function(repeatToggle) {
	 *          expect(repeatToggle.isOpen()).toEqual('ngRepeatToggle.isOpen(): false');
	 *          expect(repeatToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
	 *          repeatToggle.toggle();
	 *          expect(repeatToggle.isOpen()).toEqual('ngRepeatToggle.isOpen(): true');
	 *          expect(repeatToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
	 *        });
	 *      });
	 *   </file>
	 * </example>
	 *
	 */var ngRefMinErr=minErr('ngRef');var ngRefDirective=['$parse',function($parse){return{priority:-1,// Needed for compatibility with element transclusion on the same element
	restrict:'A',compile:function compile(tElement,tAttrs){// Get the expected controller name, converts <data-some-thing> into "someThing"
	var controllerName=directiveNormalize(nodeName_(tElement));// Get the expression for value binding
	var getter=$parse(tAttrs.ngRef);var setter=getter.assign||function(){throw ngRefMinErr('nonassign','Expression in ngRef="{0}" is non-assignable!',tAttrs.ngRef);};return function(scope,element,attrs){var refValue;if(attrs.hasOwnProperty('ngRefRead')){if(attrs.ngRefRead==='$element'){refValue=element;}else{refValue=element.data('$'+attrs.ngRefRead+'Controller');if(!refValue){throw ngRefMinErr('noctrl','The controller for ngRefRead="{0}" could not be found on ngRef="{1}"',attrs.ngRefRead,tAttrs.ngRef);}}}else{refValue=element.data('$'+controllerName+'Controller');}refValue=refValue||element;setter(scope,refValue);// when the element is removed, remove it (nullify it)
	element.on('$destroy',function(){// only remove it if value has not changed,
	// because animations (and other procedures) may duplicate elements
	if(getter(scope)===refValue){setter(scope,null);}});};}};}];/* exported ngRepeatDirective *//**
	 * @ngdoc directive
	 * @name ngRepeat
	 * @multiElement
	 * @restrict A
	 *
	 * @description
	 * The `ngRepeat` directive instantiates a template once per item from a collection. Each template
	 * instance gets its own scope, where the given loop variable is set to the current collection item,
	 * and `$index` is set to the item index or key.
	 *
	 * Special properties are exposed on the local scope of each template instance, including:
	 *
	 * | Variable  | Type            | Details                                                                     |
	 * |-----------|-----------------|-----------------------------------------------------------------------------|
	 * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |
	 * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |
	 * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |
	 * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |
	 * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |
	 * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |
	 *
	 * <div class="alert alert-info">
	 *   Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.
	 *   This may be useful when, for instance, nesting ngRepeats.
	 * </div>
	 *
	 *
	 * ## Iterating over object properties
	 *
	 * It is possible to get `ngRepeat` to iterate over the properties of an object using the following
	 * syntax:
	 *
	 * ```js
	 * <div ng-repeat="(key, value) in myObj"> ... </div>
	 * ```
	 *
	 * However, there are a few limitations compared to array iteration:
	 *
	 * - The JavaScript specification does not define the order of keys
	 *   returned for an object, so AngularJS relies on the order returned by the browser
	 *   when running `for key in myObj`. Browsers generally follow the strategy of providing
	 *   keys in the order in which they were defined, although there are exceptions when keys are deleted
	 *   and reinstated. See the
	 *   [MDN page on `delete` for more info](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete#Cross-browser_notes).
	 *
	 * - `ngRepeat` will silently *ignore* object keys starting with `$`, because
	 *   it's a prefix used by AngularJS for public (`$`) and private (`$$`) properties.
	 *
	 * - The built-in filters {@link ng.orderBy orderBy} and {@link ng.filter filter} do not work with
	 *   objects, and will throw an error if used with one.
	 *
	 * If you are hitting any of these limitations, the recommended workaround is to convert your object into an array
	 * that is sorted into the order that you prefer before providing it to `ngRepeat`. You could
	 * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)
	 * or implement a `$watch` on the object yourself.
	 *
	 *
	 * ## Tracking and Duplicates
	 *
	 * `ngRepeat` uses {@link $rootScope.Scope#$watchCollection $watchCollection} to detect changes in
	 * the collection. When a change happens, `ngRepeat` then makes the corresponding changes to the DOM:
	 *
	 * * When an item is added, a new instance of the template is added to the DOM.
	 * * When an item is removed, its template instance is removed from the DOM.
	 * * When items are reordered, their respective templates are reordered in the DOM.
	 *
	 * To minimize creation of DOM elements, `ngRepeat` uses a function
	 * to "keep track" of all items in the collection and their corresponding DOM elements.
	 * For example, if an item is added to the collection, `ngRepeat` will know that all other items
	 * already have DOM elements, and will not re-render them.
	 *
	 * All different types of tracking functions, their syntax, and their support for duplicate
	 * items in collections can be found in the
	 * {@link ngRepeat#ngRepeat-arguments ngRepeat expression description}.
	 *
	 * <div class="alert alert-success">
	 * **Best Practice:** If you are working with objects that have a unique identifier property, you
	 * should track by this identifier instead of the object instance,
	 * e.g. `item in items track by item.id`.
	 * Should you reload your data later, `ngRepeat` will not have to rebuild the DOM elements for items
	 * it has already rendered, even if the JavaScript objects in the collection have been substituted
	 * for new ones. For large collections, this significantly improves rendering performance.
	 * </div>
	 *
	 * ### Effects of DOM Element re-use
	 *
	 * When DOM elements are re-used, ngRepeat updates the scope for the element, which will
	 * automatically update any active bindings on the template. However, other
	 * functionality will not be updated, because the element is not re-created:
	 *
	 * - Directives are not re-compiled
	 * - {@link guide/expression#one-time-binding one-time expressions} on the repeated template are not
	 * updated if they have stabilized.
	 *
	 * The above affects all kinds of element re-use due to tracking, but may be especially visible
	 * when tracking by `$index` due to the way ngRepeat re-uses elements.
	 *
	 * The following example shows the effects of different actions with tracking:

	  <example module="ngRepeat" name="ngRepeat-tracking" deps="angular-animate.js" animations="true">
	    <file name="script.js">
	      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {
	        var friends = [
	          {name:'John', age:25},
	          {name:'Mary', age:40},
	          {name:'Peter', age:85}
	        ];

	        $scope.removeFirst = function() {
	          $scope.friends.shift();
	        };

	        $scope.updateAge = function() {
	          $scope.friends.forEach(function(el) {
	            el.age = el.age + 5;
	          });
	        };

	        $scope.copy = function() {
	          $scope.friends = angular.copy($scope.friends);
	        };

	        $scope.reset = function() {
	          $scope.friends = angular.copy(friends);
	        };

	        $scope.reset();
	      });
	    </file>
	    <file name="index.html">
	      <div ng-controller="repeatController">
	        <ol>
	          <li>When you click "Update Age", only the first list updates the age, because all others have
	          a one-time binding on the age property. If you then click "Copy", the current friend list
	          is copied, and now the second list updates the age, because the identity of the collection items
	          has changed and the list must be re-rendered. The 3rd and 4th list stay the same, because all the
	          items are already known according to their tracking functions.
	          </li>
	          <li>When you click "Remove First", the 4th list has the wrong age on both remaining items. This is
	          due to tracking by $index: when the first collection item is removed, ngRepeat reuses the first
	          DOM element for the new first collection item, and so on. Since the age property is one-time
	          bound, the value remains from the collection item which was previously at this index.
	          </li>
	        </ol>

	        <button ng-click="removeFirst()">Remove First</button>
	        <button ng-click="updateAge()">Update Age</button>
	        <button ng-click="copy()">Copy</button>
	        <br><button ng-click="reset()">Reset List</button>
	        <br>
	        <code>track by $id(friend)</code> (default):
	        <ul class="example-animate-container">
	          <li class="animate-repeat" ng-repeat="friend in friends">
	            {{friend.name}} is {{friend.age}} years old.
	          </li>
	        </ul>
	        <code>track by $id(friend)</code> (default), with age one-time binding:
	        <ul class="example-animate-container">
	          <li class="animate-repeat" ng-repeat="friend in friends">
	            {{friend.name}} is {{::friend.age}} years old.
	          </li>
	        </ul>
	        <code>track by friend.name</code>, with age one-time binding:
	        <ul class="example-animate-container">
	          <li class="animate-repeat" ng-repeat="friend in friends track by friend.name">
	            {{friend.name}}  is {{::friend.age}} years old.
	          </li>
	        </ul>
	        <code>track by $index</code>, with age one-time binding:
	        <ul class="example-animate-container">
	          <li class="animate-repeat" ng-repeat="friend in friends track by $index">
	            {{friend.name}} is {{::friend.age}} years old.
	          </li>
	        </ul>
	      </div>
	    </file>
	    <file name="animations.css">
	      .example-animate-container {
	        background:white;
	        border:1px solid black;
	        list-style:none;
	        margin:0;
	        padding:0 10px;
	      }

	      .animate-repeat {
	        line-height:30px;
	        list-style:none;
	        box-sizing:border-box;
	      }

	      .animate-repeat.ng-move,
	      .animate-repeat.ng-enter,
	      .animate-repeat.ng-leave {
	        transition:all linear 0.5s;
	      }

	      .animate-repeat.ng-leave.ng-leave-active,
	      .animate-repeat.ng-move,
	      .animate-repeat.ng-enter {
	        opacity:0;
	        max-height:0;
	      }

	      .animate-repeat.ng-leave,
	      .animate-repeat.ng-move.ng-move-active,
	      .animate-repeat.ng-enter.ng-enter-active {
	        opacity:1;
	        max-height:30px;
	      }
	    </file>
	  </example>

	 *
	 * ## Special repeat start and end points
	 * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending
	 * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.
	 * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)
	 * up to and including the ending HTML tag where **ng-repeat-end** is placed.
	 *
	 * The example below makes use of this feature:
	 * ```html
	 *   <header ng-repeat-start="item in items">
	 *     Header {{ item }}
	 *   </header>
	 *   <div class="body">
	 *     Body {{ item }}
	 *   </div>
	 *   <footer ng-repeat-end>
	 *     Footer {{ item }}
	 *   </footer>
	 * ```
	 *
	 * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:
	 * ```html
	 *   <header>
	 *     Header A
	 *   </header>
	 *   <div class="body">
	 *     Body A
	 *   </div>
	 *   <footer>
	 *     Footer A
	 *   </footer>
	 *   <header>
	 *     Header B
	 *   </header>
	 *   <div class="body">
	 *     Body B
	 *   </div>
	 *   <footer>
	 *     Footer B
	 *   </footer>
	 * ```
	 *
	 * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such
	 * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).
	 *
	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#enter enter} | when a new item is added to the list or when an item is revealed after a filter |
	 * | {@link ng.$animate#leave leave} | when an item is removed from the list or when an item is filtered out |
	 * | {@link ng.$animate#move move } | when an adjacent item is filtered out causing a reorder or when the item contents are reordered |
	 *
	 * See the example below for defining CSS animations with ngRepeat.
	 *
	 * @element ANY
	 * @scope
	 * @priority 1000
	 * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These
	 *   formats are currently supported:
	 *
	 *   * `variable in expression` – where variable is the user defined loop variable and `expression`
	 *     is a scope expression giving the collection to enumerate.
	 *
	 *     For example: `album in artist.albums`.
	 *
	 *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,
	 *     and `expression` is the scope expression giving the collection to enumerate.
	 *
	 *     For example: `(name, age) in {'adam':10, 'amalie':12}`.
	 *
	 *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression
	 *     which can be used to associate the objects in the collection with the DOM elements. If no tracking expression
	 *     is specified, ng-repeat associates elements by identity. It is an error to have
	 *     more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are
	 *     mapped to the same DOM element, which is not possible.)
	 *
	 *     *Default tracking: $id()*: `item in items` is equivalent to `item in items track by $id(item)`.
	 *     This implies that the DOM elements will be associated by item identity in the collection.
	 *
	 *     The built-in `$id()` function can be used to assign a unique
	 *     `$$hashKey` property to each item in the collection. This property is then used as a key to associated DOM elements
	 *     with the corresponding item in the collection by identity. Moving the same object would move
	 *     the DOM element in the same way in the DOM.
	 *     Note that the default id function does not support duplicate primitive values (`number`, `string`),
	 *     but supports duplictae non-primitive values (`object`) that are *equal* in shape.
	 *
	 *     *Custom Expression*: It is possible to use any AngularJS expression to compute the tracking
	 *     id, for example with a function, or using a property on the collection items.
	 *     `item in items track by item.id` is a typical pattern when the items have a unique identifier,
	 *     e.g. database id. In this case the object identity does not matter. Two objects are considered
	 *     equivalent as long as their `id` property is same.
	 *     Tracking by unique identifier is the most performant way and should be used whenever possible.
	 *
	 *     *$index*: This special property tracks the collection items by their index, and
	 *     re-uses the DOM elements that match that index, e.g. `item in items track by $index`. This can
	 *     be used for a performance improvement if no unique identfier is available and the identity of
	 *     the collection items cannot be easily computed. It also allows duplicates.
	 *
	 *     <div class="alert alert-warning">
	 *       <strong>Note:</strong> Re-using DOM elements can have unforeseen effects. Read the
	 *       {@link ngRepeat#tracking-and-duplicates section on tracking and duplicates} for
	 *       more info.
	 *     </div>
	 *
	 *     <div class="alert alert-warning">
	 *       <strong>Note:</strong> the `track by` expression must come last - after any filters, and the alias expression:
	 *       `item in items | filter:searchText as results  track by item.id`
	 *     </div>
	 *
	 *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the
	 *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message
	 *     when a filter is active on the repeater, but the filtered result set is empty.
	 *
	 *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after
	 *     the items have been processed through the filter.
	 *
	 *     Please note that `as [variable name]` is not an operator but rather a part of ngRepeat
	 *     micro-syntax so it can be used only after all filters (and not as operator, inside an expression).
	 *
	 *     For example: `item in items | filter : x | orderBy : order | limitTo : limit as results track by item.id` .
	 *
	 * @example
	 * This example uses `ngRepeat` to display a list of people. A filter is used to restrict the displayed
	 * results by name or by age. New (entering) and removed (leaving) items are animated.
	  <example module="ngRepeat" name="ngRepeat" deps="angular-animate.js" animations="true">
	    <file name="index.html">
	      <div ng-controller="repeatController">
	        I have {{friends.length}} friends. They are:
	        <input type="search" ng-model="q" placeholder="filter friends..." aria-label="filter friends" />
	        <ul class="example-animate-container">
	          <li class="animate-repeat" ng-repeat="friend in friends | filter:q as results track by friend.name">
	            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.
	          </li>
	          <li class="animate-repeat" ng-if="results.length === 0">
	            <strong>No results found...</strong>
	          </li>
	        </ul>
	      </div>
	    </file>
	    <file name="script.js">
	      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {
	        $scope.friends = [
	          {name:'John', age:25, gender:'boy'},
	          {name:'Jessie', age:30, gender:'girl'},
	          {name:'Johanna', age:28, gender:'girl'},
	          {name:'Joy', age:15, gender:'girl'},
	          {name:'Mary', age:28, gender:'girl'},
	          {name:'Peter', age:95, gender:'boy'},
	          {name:'Sebastian', age:50, gender:'boy'},
	          {name:'Erika', age:27, gender:'girl'},
	          {name:'Patrick', age:40, gender:'boy'},
	          {name:'Samantha', age:60, gender:'girl'}
	        ];
	      });
	    </file>
	    <file name="animations.css">
	      .example-animate-container {
	        background:white;
	        border:1px solid black;
	        list-style:none;
	        margin:0;
	        padding:0 10px;
	      }

	      .animate-repeat {
	        line-height:30px;
	        list-style:none;
	        box-sizing:border-box;
	      }

	      .animate-repeat.ng-move,
	      .animate-repeat.ng-enter,
	      .animate-repeat.ng-leave {
	        transition:all linear 0.5s;
	      }

	      .animate-repeat.ng-leave.ng-leave-active,
	      .animate-repeat.ng-move,
	      .animate-repeat.ng-enter {
	        opacity:0;
	        max-height:0;
	      }

	      .animate-repeat.ng-leave,
	      .animate-repeat.ng-move.ng-move-active,
	      .animate-repeat.ng-enter.ng-enter-active {
	        opacity:1;
	        max-height:30px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      var friends = element.all(by.repeater('friend in friends'));

	      it('should render initial data set', function() {
	        expect(friends.count()).toBe(10);
	        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');
	        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');
	        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');
	        expect(element(by.binding('friends.length')).getText())
	            .toMatch("I have 10 friends. They are:");
	      });

	       it('should update repeater when filter predicate changes', function() {
	         expect(friends.count()).toBe(10);

	         element(by.model('q')).sendKeys('ma');

	         expect(friends.count()).toBe(2);
	         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');
	         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');
	       });
	      </file>
	    </example>
	 */var ngRepeatDirective=['$parse','$animate','$compile',function($parse,$animate,$compile){var NG_REMOVED='$$NG_REMOVED';var ngRepeatMinErr=minErr('ngRepeat');var updateScope=function updateScope(scope,index,valueIdentifier,value,keyIdentifier,key,arrayLength){// TODO(perf): generate setters to shave off ~40ms or 1-1.5%
	scope[valueIdentifier]=value;if(keyIdentifier)scope[keyIdentifier]=key;scope.$index=index;scope.$first=index===0;scope.$last=index===arrayLength-1;scope.$middle=!(scope.$first||scope.$last);// eslint-disable-next-line no-bitwise
	scope.$odd=!(scope.$even=(index&1)===0);};var getBlockStart=function getBlockStart(block){return block.clone[0];};var getBlockEnd=function getBlockEnd(block){return block.clone[block.clone.length-1];};var trackByIdArrayFn=function trackByIdArrayFn($scope,key,value){return hashKey(value);};var trackByIdObjFn=function trackByIdObjFn($scope,key){return key;};return{restrict:'A',multiElement:true,transclude:'element',priority:1000,terminal:true,$$tlb:true,compile:function ngRepeatCompile($element,$attr){var expression=$attr.ngRepeat;var ngRepeatEndComment=$compile.$$createComment('end ngRepeat',expression);var match=expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!match){throw ngRepeatMinErr('iexp','Expected expression in form of \'_item_ in _collection_[ track by _id_]\' but got \'{0}\'.',expression);}var lhs=match[1];var rhs=match[2];var aliasAs=match[3];var trackByExp=match[4];match=lhs.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);if(!match){throw ngRepeatMinErr('iidexp','\'_item_\' in \'_item_ in _collection_\' should be an identifier or \'(_key_, _value_)\' expression, but got \'{0}\'.',lhs);}var valueIdentifier=match[3]||match[1];var keyIdentifier=match[2];if(aliasAs&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))){throw ngRepeatMinErr('badident','alias \'{0}\' is invalid --- must be a valid JS identifier which is not a reserved name.',aliasAs);}var trackByIdExpFn;if(trackByExp){var hashFnLocals={$id:hashKey};var trackByExpGetter=$parse(trackByExp);trackByIdExpFn=function trackByIdExpFn($scope,key,value,index){// assign key, value, and $index to the locals so that they can be used in hash functions
	if(keyIdentifier)hashFnLocals[keyIdentifier]=key;hashFnLocals[valueIdentifier]=value;hashFnLocals.$index=index;return trackByExpGetter($scope,hashFnLocals);};}return function ngRepeatLink($scope,$element,$attr,ctrl,$transclude){// Store a list of elements from previous run. This is a hash where key is the item from the
	// iterator, and the value is objects with following properties.
	//   - scope: bound scope
	//   - clone: previous element.
	//   - index: position
	//
	// We are using no-proto object so that we don't need to guard against inherited props via
	// hasOwnProperty.
	var lastBlockMap=createMap();//watch props
	$scope.$watchCollection(rhs,function ngRepeatAction(collection){var index,length,previousNode=$element[0],// node that cloned nodes should be inserted after
	// initialized to the comment node anchor
	nextNode,// Same as lastBlockMap but it has the current state. It will become the
	// lastBlockMap on the next iteration.
	nextBlockMap=createMap(),collectionLength,key,value,// key/value of iteration
	trackById,trackByIdFn,collectionKeys,block,// last object information {scope, element, id}
	nextBlockOrder,elementsToRemove;if(aliasAs){$scope[aliasAs]=collection;}if(isArrayLike(collection)){collectionKeys=collection;trackByIdFn=trackByIdExpFn||trackByIdArrayFn;}else{trackByIdFn=trackByIdExpFn||trackByIdObjFn;// if object, extract keys, in enumeration order, unsorted
	collectionKeys=[];for(var itemKey in collection){if(hasOwnProperty.call(collection,itemKey)&&itemKey.charAt(0)!=='$'){collectionKeys.push(itemKey);}}}collectionLength=collectionKeys.length;nextBlockOrder=new Array(collectionLength);// locate existing items
	for(index=0;index<collectionLength;index++){key=collection===collectionKeys?index:collectionKeys[index];value=collection[key];trackById=trackByIdFn($scope,key,value,index);if(lastBlockMap[trackById]){// found previously seen block
	block=lastBlockMap[trackById];delete lastBlockMap[trackById];nextBlockMap[trackById]=block;nextBlockOrder[index]=block;}else if(nextBlockMap[trackById]){// if collision detected. restore lastBlockMap and throw an error
	forEach(nextBlockOrder,function(block){if(block&&block.scope)lastBlockMap[block.id]=block;});throw ngRepeatMinErr('dupes','Duplicates in a repeater are not allowed. Use \'track by\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}',expression,trackById,value);}else{// new never before seen block
	nextBlockOrder[index]={id:trackById,scope:undefined,clone:undefined};nextBlockMap[trackById]=true;}}// Clear the value property from the hashFnLocals object to prevent a reference to the last value
	// being leaked into the ngRepeatCompile function scope
	if(hashFnLocals){hashFnLocals[valueIdentifier]=undefined;}// remove leftover items
	for(var blockKey in lastBlockMap){block=lastBlockMap[blockKey];elementsToRemove=getBlockNodes(block.clone);$animate.leave(elementsToRemove);if(elementsToRemove[0].parentNode){// if the element was not removed yet because of pending animation, mark it as deleted
	// so that we can ignore it later
	for(index=0,length=elementsToRemove.length;index<length;index++){elementsToRemove[index][NG_REMOVED]=true;}}block.scope.$destroy();}// we are not using forEach for perf reasons (trying to avoid #call)
	for(index=0;index<collectionLength;index++){key=collection===collectionKeys?index:collectionKeys[index];value=collection[key];block=nextBlockOrder[index];if(block.scope){// if we have already seen this object, then we need to reuse the
	// associated scope/element
	nextNode=previousNode;// skip nodes that are already pending removal via leave animation
	do{nextNode=nextNode.nextSibling;}while(nextNode&&nextNode[NG_REMOVED]);if(getBlockStart(block)!==nextNode){// existing item which got moved
	$animate.move(getBlockNodes(block.clone),null,previousNode);}previousNode=getBlockEnd(block);updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength);}else{// new item which we don't know about
	$transclude(function ngRepeatTransclude(clone,scope){block.scope=scope;// http://jsperf.com/clone-vs-createcomment
	var endNode=ngRepeatEndComment.cloneNode(false);clone[clone.length++]=endNode;$animate.enter(clone,null,previousNode);previousNode=endNode;// Note: We only need the first/last node of the cloned nodes.
	// However, we need to keep the reference to the jqlite wrapper as it might be changed later
	// by a directive with templateUrl when its template arrives.
	block.clone=clone;nextBlockMap[block.id]=block;updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength);});}}lastBlockMap=nextBlockMap;});};}};}];var NG_HIDE_CLASS='ng-hide';var NG_HIDE_IN_PROGRESS_CLASS='ng-hide-animate';/**
	 * @ngdoc directive
	 * @name ngShow
	 * @multiElement
	 *
	 * @description
	 * The `ngShow` directive shows or hides the given HTML element based on the expression provided to
	 * the `ngShow` attribute.
	 *
	 * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
	 * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
	 * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
	 * {@link ng.directive:ngCsp ngCsp}).
	 *
	 * ```html
	 * <!-- when $scope.myValue is truthy (element is visible) -->
	 * <div ng-show="myValue"></div>
	 *
	 * <!-- when $scope.myValue is falsy (element is hidden) -->
	 * <div ng-show="myValue" class="ng-hide"></div>
	 * ```
	 *
	 * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added
	 * to the class attribute on the element causing it to become hidden. When truthy, the `.ng-hide`
	 * CSS class is removed from the element causing the element not to appear hidden.
	 *
	 * ## Why is `!important` used?
	 *
	 * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
	 * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
	 * simple as changing the display style on a HTML list item would make hidden elements appear
	 * visible. This also becomes a bigger issue when dealing with CSS frameworks.
	 *
	 * By using `!important`, the show and hide behavior will work as expected despite any clash between
	 * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
	 * developer chooses to override the styling to change how to hide an element then it is just a
	 * matter of using `!important` in their own CSS code.
	 *
	 * ### Overriding `.ng-hide`
	 *
	 * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
	 * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
	 * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
	 * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
	 *
	 * ```css
	 * .ng-hide:not(.ng-hide-animate) {
	 *   /&#42; These are just alternative ways of hiding an element &#42;/
	 *   display: block!important;
	 *   position: absolute;
	 *   top: -9999px;
	 *   left: -9999px;
	 * }
	 * ```
	 *
	 * By default you don't need to override anything in CSS and the animations will work around the
	 * display style.
	 *
	 * @animations
	 * | Animation                                           | Occurs                                                                                                        |
	 * |-----------------------------------------------------|---------------------------------------------------------------------------------------------------------------|
	 * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden. |
	 * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngShow` expression evaluates to a truthy value and just before contents are set to visible.        |
	 *
	 * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
	 * directive expression is true and false. This system works like the animation system present with
	 * `ngClass` except that you must also include the `!important` flag to override the display
	 * property so that the elements are not actually hidden during the animation.
	 *
	 * ```css
	 * /&#42; A working example can be found at the bottom of this page. &#42;/
	 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
	 *   transition: all 0.5s linear;
	 * }
	 *
	 * .my-element.ng-hide-add { ... }
	 * .my-element.ng-hide-add.ng-hide-add-active { ... }
	 * .my-element.ng-hide-remove { ... }
	 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
	 * ```
	 *
	 * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
	 * to block during animation states - ngAnimate will automatically handle the style toggling for you.
	 *
	 * @element ANY
	 * @param {expression} ngShow If the {@link guide/expression expression} is truthy/falsy then the
	 *                            element is shown/hidden respectively.
	 *
	 * @example
	 * A simple example, animating the element's opacity:
	 *
	  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-simple">
	    <file name="index.html">
	      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
	      <div class="check-element animate-show-hide" ng-show="checked">
	        I show up when your checkbox is checked.
	      </div>
	    </file>
	    <file name="animations.css">
	      .animate-show-hide.ng-hide {
	        opacity: 0;
	      }

	      .animate-show-hide.ng-hide-add,
	      .animate-show-hide.ng-hide-remove {
	        transition: all linear 0.5s;
	      }

	      .check-element {
	        border: 1px solid black;
	        opacity: 1;
	        padding: 10px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      it('should check ngShow', function() {
	        var checkbox = element(by.model('checked'));
	        var checkElem = element(by.css('.check-element'));

	        expect(checkElem.isDisplayed()).toBe(false);
	        checkbox.click();
	        expect(checkElem.isDisplayed()).toBe(true);
	      });
	    </file>
	  </example>
	 *
	 * <hr />
	 * @example
	 * A more complex example, featuring different show/hide animations:
	 *
	  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-complex">
	    <file name="index.html">
	      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
	      <div class="check-element funky-show-hide" ng-show="checked">
	        I show up when your checkbox is checked.
	      </div>
	    </file>
	    <file name="animations.css">
	      body {
	        overflow: hidden;
	        perspective: 1000px;
	      }

	      .funky-show-hide.ng-hide-add {
	        transform: rotateZ(0);
	        transform-origin: right;
	        transition: all 0.5s ease-in-out;
	      }

	      .funky-show-hide.ng-hide-add.ng-hide-add-active {
	        transform: rotateZ(-135deg);
	      }

	      .funky-show-hide.ng-hide-remove {
	        transform: rotateY(90deg);
	        transform-origin: left;
	        transition: all 0.5s ease;
	      }

	      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
	        transform: rotateY(0);
	      }

	      .check-element {
	        border: 1px solid black;
	        opacity: 1;
	        padding: 10px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      it('should check ngShow', function() {
	        var checkbox = element(by.model('checked'));
	        var checkElem = element(by.css('.check-element'));

	        expect(checkElem.isDisplayed()).toBe(false);
	        checkbox.click();
	        expect(checkElem.isDisplayed()).toBe(true);
	      });
	    </file>
	  </example>
	 *
	 * @knownIssue
	 *
	 * ### Flickering when using ngShow to toggle between elements
	 *
	 * When using {@link ngShow} and / or {@link ngHide} to toggle between elements, it can
	 * happen that both the element to show and the element to hide are visible for a very short time.
	 *
	 * This usually happens when the {@link ngAnimate ngAnimate module} is included, but no actual animations
	 * are defined for {@link ngShow} / {@link ngHide}. Internet Explorer is affected more often than
	 * other browsers.
	 *
	 * There are several way to mitigate this problem:
	 *
	 * - {@link guide/animations#how-to-selectively-enable-disable-and-skip-animations Disable animations on the affected elements}.
	 * - Use {@link ngIf} or {@link ngSwitch} instead of {@link ngShow} / {@link ngHide}.
	 * - Use the special CSS selector `ng-hide.ng-hide-animate` to set `{display: none}` or similar on the affected elements.
	 * - Use `ng-class="{'ng-hide': expression}` instead of instead of {@link ngShow} / {@link ngHide}.
	 * - Define an animation on the affected elements.
	 */var ngShowDirective=['$animate',function($animate){return{restrict:'A',multiElement:true,link:function link(scope,element,attr){scope.$watch(attr.ngShow,function ngShowWatchAction(value){// we're adding a temporary, animation-specific class for ng-hide since this way
	// we can control when the element is actually displayed on screen without having
	// to have a global/greedy CSS selector that breaks when other animations are run.
	// Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845
	$animate[value?'removeClass':'addClass'](element,NG_HIDE_CLASS,{tempClasses:NG_HIDE_IN_PROGRESS_CLASS});});}};}];/**
	 * @ngdoc directive
	 * @name ngHide
	 * @multiElement
	 *
	 * @description
	 * The `ngHide` directive shows or hides the given HTML element based on the expression provided to
	 * the `ngHide` attribute.
	 *
	 * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
	 * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
	 * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
	 * {@link ng.directive:ngCsp ngCsp}).
	 *
	 * ```html
	 * <!-- when $scope.myValue is truthy (element is hidden) -->
	 * <div ng-hide="myValue" class="ng-hide"></div>
	 *
	 * <!-- when $scope.myValue is falsy (element is visible) -->
	 * <div ng-hide="myValue"></div>
	 * ```
	 *
	 * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added
	 * to the class attribute on the element causing it to become hidden. When falsy, the `.ng-hide`
	 * CSS class is removed from the element causing the element not to appear hidden.
	 *
	 * ## Why is `!important` used?
	 *
	 * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
	 * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
	 * simple as changing the display style on a HTML list item would make hidden elements appear
	 * visible. This also becomes a bigger issue when dealing with CSS frameworks.
	 *
	 * By using `!important`, the show and hide behavior will work as expected despite any clash between
	 * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
	 * developer chooses to override the styling to change how to hide an element then it is just a
	 * matter of using `!important` in their own CSS code.
	 *
	 * ### Overriding `.ng-hide`
	 *
	 * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
	 * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
	 * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
	 * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
	 *
	 * ```css
	 * .ng-hide:not(.ng-hide-animate) {
	 *   /&#42; These are just alternative ways of hiding an element &#42;/
	 *   display: block!important;
	 *   position: absolute;
	 *   top: -9999px;
	 *   left: -9999px;
	 * }
	 * ```
	 *
	 * By default you don't need to override in CSS anything and the animations will work around the
	 * display style.
	 *
	 * @animations
	 * | Animation                                           | Occurs                                                                                                     |
	 * |-----------------------------------------------------|------------------------------------------------------------------------------------------------------------|
	 * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden.  |
	 * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngHide` expression evaluates to a non truthy value and just before contents are set to visible. |
	 *
	 * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
	 * directive expression is true and false. This system works like the animation system present with
	 * `ngClass` except that you must also include the `!important` flag to override the display
	 * property so that the elements are not actually hidden during the animation.
	 *
	 * ```css
	 * /&#42; A working example can be found at the bottom of this page. &#42;/
	 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
	 *   transition: all 0.5s linear;
	 * }
	 *
	 * .my-element.ng-hide-add { ... }
	 * .my-element.ng-hide-add.ng-hide-add-active { ... }
	 * .my-element.ng-hide-remove { ... }
	 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
	 * ```
	 *
	 * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
	 * to block during animation states - ngAnimate will automatically handle the style toggling for you.
	 *
	 * @element ANY
	 * @param {expression} ngHide If the {@link guide/expression expression} is truthy/falsy then the
	 *                            element is hidden/shown respectively.
	 *
	 * @example
	 * A simple example, animating the element's opacity:
	 *
	  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-simple">
	    <file name="index.html">
	      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
	      <div class="check-element animate-show-hide" ng-hide="checked">
	        I hide when your checkbox is checked.
	      </div>
	    </file>
	    <file name="animations.css">
	      .animate-show-hide.ng-hide {
	        opacity: 0;
	      }

	      .animate-show-hide.ng-hide-add,
	      .animate-show-hide.ng-hide-remove {
	        transition: all linear 0.5s;
	      }

	      .check-element {
	        border: 1px solid black;
	        opacity: 1;
	        padding: 10px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      it('should check ngHide', function() {
	        var checkbox = element(by.model('checked'));
	        var checkElem = element(by.css('.check-element'));

	        expect(checkElem.isDisplayed()).toBe(true);
	        checkbox.click();
	        expect(checkElem.isDisplayed()).toBe(false);
	      });
	    </file>
	  </example>
	 *
	 * <hr />
	 * @example
	 * A more complex example, featuring different show/hide animations:
	 *
	  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-complex">
	    <file name="index.html">
	      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
	      <div class="check-element funky-show-hide" ng-hide="checked">
	        I hide when your checkbox is checked.
	      </div>
	    </file>
	    <file name="animations.css">
	      body {
	        overflow: hidden;
	        perspective: 1000px;
	      }

	      .funky-show-hide.ng-hide-add {
	        transform: rotateZ(0);
	        transform-origin: right;
	        transition: all 0.5s ease-in-out;
	      }

	      .funky-show-hide.ng-hide-add.ng-hide-add-active {
	        transform: rotateZ(-135deg);
	      }

	      .funky-show-hide.ng-hide-remove {
	        transform: rotateY(90deg);
	        transform-origin: left;
	        transition: all 0.5s ease;
	      }

	      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
	        transform: rotateY(0);
	      }

	      .check-element {
	        border: 1px solid black;
	        opacity: 1;
	        padding: 10px;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      it('should check ngHide', function() {
	        var checkbox = element(by.model('checked'));
	        var checkElem = element(by.css('.check-element'));

	        expect(checkElem.isDisplayed()).toBe(true);
	        checkbox.click();
	        expect(checkElem.isDisplayed()).toBe(false);
	      });
	    </file>
	  </example>
	 *
	 * @knownIssue
	 *
	 * ### Flickering when using ngHide to toggle between elements
	 *
	 * When using {@link ngShow} and / or {@link ngHide} to toggle between elements, it can
	 * happen that both the element to show and the element to hide are visible for a very short time.
	 *
	 * This usually happens when the {@link ngAnimate ngAnimate module} is included, but no actual animations
	 * are defined for {@link ngShow} / {@link ngHide}. Internet Explorer is affected more often than
	 * other browsers.
	 *
	 * There are several way to mitigate this problem:
	 *
	 * - {@link guide/animations#how-to-selectively-enable-disable-and-skip-animations Disable animations on the affected elements}.
	 * - Use {@link ngIf} or {@link ngSwitch} instead of {@link ngShow} / {@link ngHide}.
	 * - Use the special CSS selector `ng-hide.ng-hide-animate` to set `{display: none}` or similar on the affected elements.
	 * - Use `ng-class="{'ng-hide': expression}` instead of instead of {@link ngShow} / {@link ngHide}.
	 * - Define an animation on the affected elements.
	 */var ngHideDirective=['$animate',function($animate){return{restrict:'A',multiElement:true,link:function link(scope,element,attr){scope.$watch(attr.ngHide,function ngHideWatchAction(value){// The comment inside of the ngShowDirective explains why we add and
	// remove a temporary class for the show/hide animation
	$animate[value?'addClass':'removeClass'](element,NG_HIDE_CLASS,{tempClasses:NG_HIDE_IN_PROGRESS_CLASS});});}};}];/**
	 * @ngdoc directive
	 * @name ngStyle
	 * @restrict AC
	 *
	 * @description
	 * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.
	 *
	 * @knownIssue
	 * You should not use {@link guide/interpolation interpolation} in the value of the `style`
	 * attribute, when using the `ngStyle` directive on the same element.
	 * See {@link guide/interpolation#known-issues here} for more info.
	 *
	 * @element ANY
	 * @param {expression} ngStyle
	 *
	 * {@link guide/expression Expression} which evals to an
	 * object whose keys are CSS style names and values are corresponding values for those CSS
	 * keys.
	 *
	 * Since some CSS style names are not valid keys for an object, they must be quoted.
	 * See the 'background-color' style in the example below.
	 *
	 * @example
	   <example name="ng-style">
	     <file name="index.html">
	        <input type="button" value="set color" ng-click="myStyle={color:'red'}">
	        <input type="button" value="set background" ng-click="myStyle={'background-color':'blue'}">
	        <input type="button" value="clear" ng-click="myStyle={}">
	        <br/>
	        <span ng-style="myStyle">Sample Text</span>
	        <pre>myStyle={{myStyle}}</pre>
	     </file>
	     <file name="style.css">
	       span {
	         color: black;
	       }
	     </file>
	     <file name="protractor.js" type="protractor">
	       var colorSpan = element(by.css('span'));

	       it('should check ng-style', function() {
	         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(0, 0, 0, 1\)|rgb\(0, 0, 0\)/);
	         element(by.css('input[value=\'set color\']')).click();
	         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(255, 0, 0, 1\)|rgb\(255, 0, 0\)/);
	         element(by.css('input[value=clear]')).click();
	         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(0, 0, 0, 1\)|rgb\(0, 0, 0\)/);
	       });
	     </file>
	   </example>
	 */var ngStyleDirective=ngDirective(function(scope,element,attr){scope.$watchCollection(attr.ngStyle,function ngStyleWatchAction(newStyles,oldStyles){if(oldStyles&&newStyles!==oldStyles){forEach(oldStyles,function(val,style){element.css(style,'');});}if(newStyles)element.css(newStyles);});});/**
	 * @ngdoc directive
	 * @name ngSwitch
	 * @restrict EA
	 *
	 * @description
	 * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.
	 * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location
	 * as specified in the template.
	 *
	 * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it
	 * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element
	 * matches the value obtained from the evaluated expression. In other words, you define a container element
	 * (where you place the directive), place an expression on the **`on="..."` attribute**
	 * (or the **`ng-switch="..."` attribute**), define any inner elements inside of the directive and place
	 * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on
	 * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default
	 * attribute is displayed.
	 *
	 * <div class="alert alert-info">
	 * Be aware that the attribute values to match against cannot be expressions. They are interpreted
	 * as literal string values to match against.
	 * For example, **`ng-switch-when="someVal"`** will match against the string `"someVal"` not against the
	 * value of the expression `$scope.someVal`.
	 * </div>

	 * @animations
	 * | Animation                        | Occurs                              |
	 * |----------------------------------|-------------------------------------|
	 * | {@link ng.$animate#enter enter}  | after the ngSwitch contents change and the matched child element is placed inside the container |
	 * | {@link ng.$animate#leave leave}  | after the ngSwitch contents change and just before the former contents are removed from the DOM |
	 *
	 * @usage
	 *
	 * ```
	 * <ANY ng-switch="expression">
	 *   <ANY ng-switch-when="matchValue1">...</ANY>
	 *   <ANY ng-switch-when="matchValue2">...</ANY>
	 *   <ANY ng-switch-default>...</ANY>
	 * </ANY>
	 * ```
	 *
	 *
	 * @scope
	 * @priority 1200
	 * @param {*} ngSwitch|on expression to match against <code>ng-switch-when</code>.
	 * On child elements add:
	 *
	 * * `ngSwitchWhen`: the case statement to match against. If match then this
	 *   case will be displayed. If the same match appears multiple times, all the
	 *   elements will be displayed. It is possible to associate multiple values to
	 *   the same `ngSwitchWhen` by defining the optional attribute
	 *   `ngSwitchWhenSeparator`. The separator will be used to split the value of
	 *   the `ngSwitchWhen` attribute into multiple tokens, and the element will show
	 *   if any of the `ngSwitch` evaluates to any of these tokens.
	 * * `ngSwitchDefault`: the default case when no other case match. If there
	 *   are multiple default cases, all of them will be displayed when no other
	 *   case match.
	 *
	 *
	 * @example
	  <example module="switchExample" deps="angular-animate.js" animations="true" name="ng-switch">
	    <file name="index.html">
	      <div ng-controller="ExampleController">
	        <select ng-model="selection" ng-options="item for item in items">
	        </select>
	        <code>selection={{selection}}</code>
	        <hr/>
	        <div class="animate-switch-container"
	          ng-switch on="selection">
	            <div class="animate-switch" ng-switch-when="settings|options" ng-switch-when-separator="|">Settings Div</div>
	            <div class="animate-switch" ng-switch-when="home">Home Span</div>
	            <div class="animate-switch" ng-switch-default>default</div>
	        </div>
	      </div>
	    </file>
	    <file name="script.js">
	      angular.module('switchExample', ['ngAnimate'])
	        .controller('ExampleController', ['$scope', function($scope) {
	          $scope.items = ['settings', 'home', 'options', 'other'];
	          $scope.selection = $scope.items[0];
	        }]);
	    </file>
	    <file name="animations.css">
	      .animate-switch-container {
	        position:relative;
	        background:white;
	        border:1px solid black;
	        height:40px;
	        overflow:hidden;
	      }

	      .animate-switch {
	        padding:10px;
	      }

	      .animate-switch.ng-animate {
	        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

	        position:absolute;
	        top:0;
	        left:0;
	        right:0;
	        bottom:0;
	      }

	      .animate-switch.ng-leave.ng-leave-active,
	      .animate-switch.ng-enter {
	        top:-50px;
	      }
	      .animate-switch.ng-leave,
	      .animate-switch.ng-enter.ng-enter-active {
	        top:0;
	      }
	    </file>
	    <file name="protractor.js" type="protractor">
	      var switchElem = element(by.css('[ng-switch]'));
	      var select = element(by.model('selection'));

	      it('should start in settings', function() {
	        expect(switchElem.getText()).toMatch(/Settings Div/);
	      });
	      it('should change to home', function() {
	        select.all(by.css('option')).get(1).click();
	        expect(switchElem.getText()).toMatch(/Home Span/);
	      });
	      it('should change to settings via "options"', function() {
	        select.all(by.css('option')).get(2).click();
	        expect(switchElem.getText()).toMatch(/Settings Div/);
	      });
	      it('should select default', function() {
	        select.all(by.css('option')).get(3).click();
	        expect(switchElem.getText()).toMatch(/default/);
	      });
	    </file>
	  </example>
	 */var ngSwitchDirective=['$animate','$compile',function($animate,$compile){return{require:'ngSwitch',// asks for $scope to fool the BC controller module
	controller:['$scope',function NgSwitchController(){this.cases={};}],link:function link(scope,element,attr,ngSwitchController){var watchExpr=attr.ngSwitch||attr.on,selectedTranscludes=[],selectedElements=[],previousLeaveAnimations=[],selectedScopes=[];var spliceFactory=function spliceFactory(array,index){return function(response){if(response!==false)array.splice(index,1);};};scope.$watch(watchExpr,function ngSwitchWatchAction(value){var i,ii;// Start with the last, in case the array is modified during the loop
	while(previousLeaveAnimations.length){$animate.cancel(previousLeaveAnimations.pop());}for(i=0,ii=selectedScopes.length;i<ii;++i){var selected=getBlockNodes(selectedElements[i].clone);selectedScopes[i].$destroy();var runner=previousLeaveAnimations[i]=$animate.leave(selected);runner.done(spliceFactory(previousLeaveAnimations,i));}selectedElements.length=0;selectedScopes.length=0;if(selectedTranscludes=ngSwitchController.cases['!'+value]||ngSwitchController.cases['?']){forEach(selectedTranscludes,function(selectedTransclude){selectedTransclude.transclude(function(caseElement,selectedScope){selectedScopes.push(selectedScope);var anchor=selectedTransclude.element;caseElement[caseElement.length++]=$compile.$$createComment('end ngSwitchWhen');var block={clone:caseElement};selectedElements.push(block);$animate.enter(caseElement,anchor.parent(),anchor);});});}});}};}];var ngSwitchWhenDirective=ngDirective({transclude:'element',priority:1200,require:'^ngSwitch',multiElement:true,link:function link(scope,element,attrs,ctrl,$transclude){var cases=attrs.ngSwitchWhen.split(attrs.ngSwitchWhenSeparator).sort().filter(// Filter duplicate cases
	function(element,index,array){return array[index-1]!==element;});forEach(cases,function(whenCase){ctrl.cases['!'+whenCase]=ctrl.cases['!'+whenCase]||[];ctrl.cases['!'+whenCase].push({transclude:$transclude,element:element});});}});var ngSwitchDefaultDirective=ngDirective({transclude:'element',priority:1200,require:'^ngSwitch',multiElement:true,link:function link(scope,element,attr,ctrl,$transclude){ctrl.cases['?']=ctrl.cases['?']||[];ctrl.cases['?'].push({transclude:$transclude,element:element});}});/**
	 * @ngdoc directive
	 * @name ngTransclude
	 * @restrict EAC
	 *
	 * @description
	 * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.
	 *
	 * You can specify that you want to insert a named transclusion slot, instead of the default slot, by providing the slot name
	 * as the value of the `ng-transclude` or `ng-transclude-slot` attribute.
	 *
	 * If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing
	 * content of this element will be removed before the transcluded content is inserted.
	 * If the transcluded content is empty (or only whitespace), the existing content is left intact. This lets you provide fallback
	 * content in the case that no transcluded content is provided.
	 *
	 * @element ANY
	 *
	 * @param {string} ngTransclude|ngTranscludeSlot the name of the slot to insert at this point. If this is not provided, is empty
	 *                                               or its value is the same as the name of the attribute then the default slot is used.
	 *
	 * @example
	 * ### Basic transclusion
	 * This example demonstrates basic transclusion of content into a component directive.
	 * <example name="simpleTranscludeExample" module="transcludeExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('transcludeExample', [])
	 *        .directive('pane', function(){
	 *           return {
	 *             restrict: 'E',
	 *             transclude: true,
	 *             scope: { title:'@' },
	 *             template: '<div style="border: 1px solid black;">' +
	 *                         '<div style="background-color: gray">{{title}}</div>' +
	 *                         '<ng-transclude></ng-transclude>' +
	 *                       '</div>'
	 *           };
	 *       })
	 *       .controller('ExampleController', ['$scope', function($scope) {
	 *         $scope.title = 'Lorem Ipsum';
	 *         $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
	 *       }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <input ng-model="title" aria-label="title"> <br/>
	 *       <textarea ng-model="text" aria-label="text"></textarea> <br/>
	 *       <pane title="{{title}}"><span>{{text}}</span></pane>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *      it('should have transcluded', function() {
	 *        var titleElement = element(by.model('title'));
	 *        titleElement.clear();
	 *        titleElement.sendKeys('TITLE');
	 *        var textElement = element(by.model('text'));
	 *        textElement.clear();
	 *        textElement.sendKeys('TEXT');
	 *        expect(element(by.binding('title')).getText()).toEqual('TITLE');
	 *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
	 *      });
	 *   </file>
	 * </example>
	 *
	 * @example
	 * ### Transclude fallback content
	 * This example shows how to use `NgTransclude` with fallback content, that
	 * is displayed if no transcluded content is provided.
	 *
	 * <example module="transcludeFallbackContentExample" name="ng-transclude">
	 * <file name="index.html">
	 * <script>
	 * angular.module('transcludeFallbackContentExample', [])
	 * .directive('myButton', function(){
	 *             return {
	 *               restrict: 'E',
	 *               transclude: true,
	 *               scope: true,
	 *               template: '<button style="cursor: pointer;">' +
	 *                           '<ng-transclude>' +
	 *                             '<b style="color: red;">Button1</b>' +
	 *                           '</ng-transclude>' +
	 *                         '</button>'
	 *             };
	 *         });
	 * </script>
	 * <!-- fallback button content -->
	 * <my-button id="fallback"></my-button>
	 * <!-- modified button content -->
	 * <my-button id="modified">
	 *   <i style="color: green;">Button2</i>
	 * </my-button>
	 * </file>
	 * <file name="protractor.js" type="protractor">
	 * it('should have different transclude element content', function() {
	 *          expect(element(by.id('fallback')).getText()).toBe('Button1');
	 *          expect(element(by.id('modified')).getText()).toBe('Button2');
	 *        });
	 * </file>
	 * </example>
	 *
	 * @example
	 * ### Multi-slot transclusion
	 * This example demonstrates using multi-slot transclusion in a component directive.
	 * <example name="multiSlotTranscludeExample" module="multiSlotTranscludeExample">
	 *   <file name="index.html">
	 *    <style>
	 *      .title, .footer {
	 *        background-color: gray
	 *      }
	 *    </style>
	 *    <div ng-controller="ExampleController">
	 *      <input ng-model="title" aria-label="title"> <br/>
	 *      <textarea ng-model="text" aria-label="text"></textarea> <br/>
	 *      <pane>
	 *        <pane-title><a ng-href="{{link}}">{{title}}</a></pane-title>
	 *        <pane-body><p>{{text}}</p></pane-body>
	 *      </pane>
	 *    </div>
	 *   </file>
	 *   <file name="app.js">
	 *    angular.module('multiSlotTranscludeExample', [])
	 *     .directive('pane', function() {
	 *        return {
	 *          restrict: 'E',
	 *          transclude: {
	 *            'title': '?paneTitle',
	 *            'body': 'paneBody',
	 *            'footer': '?paneFooter'
	 *          },
	 *          template: '<div style="border: 1px solid black;">' +
	 *                      '<div class="title" ng-transclude="title">Fallback Title</div>' +
	 *                      '<div ng-transclude="body"></div>' +
	 *                      '<div class="footer" ng-transclude="footer">Fallback Footer</div>' +
	 *                    '</div>'
	 *        };
	 *    })
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.title = 'Lorem Ipsum';
	 *      $scope.link = 'https://google.com';
	 *      $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
	 *    }]);
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *      it('should have transcluded the title and the body', function() {
	 *        var titleElement = element(by.model('title'));
	 *        titleElement.clear();
	 *        titleElement.sendKeys('TITLE');
	 *        var textElement = element(by.model('text'));
	 *        textElement.clear();
	 *        textElement.sendKeys('TEXT');
	 *        expect(element(by.css('.title')).getText()).toEqual('TITLE');
	 *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
	 *        expect(element(by.css('.footer')).getText()).toEqual('Fallback Footer');
	 *      });
	 *   </file>
	 * </example>
	 */var ngTranscludeMinErr=minErr('ngTransclude');var ngTranscludeDirective=['$compile',function($compile){return{restrict:'EAC',compile:function ngTranscludeCompile(tElement){// Remove and cache any original content to act as a fallback
	var fallbackLinkFn=$compile(tElement.contents());tElement.empty();return function ngTranscludePostLink($scope,$element,$attrs,controller,$transclude){if(!$transclude){throw ngTranscludeMinErr('orphan','Illegal use of ngTransclude directive in the template! '+'No parent directive that requires a transclusion found. '+'Element: {0}',startingTag($element));}// If the attribute is of the form: `ng-transclude="ng-transclude"` then treat it like the default
	if($attrs.ngTransclude===$attrs.$attr.ngTransclude){$attrs.ngTransclude='';}var slotName=$attrs.ngTransclude||$attrs.ngTranscludeSlot;// If the slot is required and no transclusion content is provided then this call will throw an error
	$transclude(ngTranscludeCloneAttachFn,null,slotName);// If the slot is optional and no transclusion content is provided then use the fallback content
	if(slotName&&!$transclude.isSlotFilled(slotName)){useFallbackContent();}function ngTranscludeCloneAttachFn(clone,transcludedScope){if(clone.length&&notWhitespace(clone)){$element.append(clone);}else{useFallbackContent();// There is nothing linked against the transcluded scope since no content was available,
	// so it should be safe to clean up the generated scope.
	transcludedScope.$destroy();}}function useFallbackContent(){// Since this is the fallback content rather than the transcluded content,
	// we link against the scope of this directive rather than the transcluded scope
	fallbackLinkFn($scope,function(clone){$element.append(clone);});}function notWhitespace(nodes){for(var i=0,ii=nodes.length;i<ii;i++){var node=nodes[i];if(node.nodeType!==NODE_TYPE_TEXT||node.nodeValue.trim()){return true;}}}};}};}];/**
	 * @ngdoc directive
	 * @name script
	 * @restrict E
	 *
	 * @description
	 * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the
	 * template can be used by {@link ng.directive:ngInclude `ngInclude`},
	 * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the
	 * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be
	 * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.
	 *
	 * @param {string} type Must be set to `'text/ng-template'`.
	 * @param {string} id Cache name of the template.
	 *
	 * @example
	  <example  name="script-tag">
	    <file name="index.html">
	      <script type="text/ng-template" id="/tpl.html">
	        Content of the template.
	      </script>

	      <a ng-click="currentTpl='/tpl.html'" id="tpl-link">Load inlined template</a>
	      <div id="tpl-content" ng-include src="currentTpl"></div>
	    </file>
	    <file name="protractor.js" type="protractor">
	      it('should load template defined inside script tag', function() {
	        element(by.css('#tpl-link')).click();
	        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);
	      });
	    </file>
	  </example>
	 */var scriptDirective=['$templateCache',function($templateCache){return{restrict:'E',terminal:true,compile:function compile(element,attr){if(attr.type==='text/ng-template'){var templateUrl=attr.id,text=element[0].text;$templateCache.put(templateUrl,text);}}};}];/* exported selectDirective, optionDirective */var noopNgModelController={$setViewValue:noop,$render:noop};function setOptionSelectedStatus(optionEl,value){optionEl.prop('selected',value);/**
	   * When unselecting an option, setting the property to null / false should be enough
	   * However, screenreaders might react to the selected attribute instead, see
	   * https://github.com/angular/angular.js/issues/14419
	   * Note: "selected" is a boolean attr and will be removed when the "value" arg in attr() is false
	   * or null
	   */optionEl.attr('selected',value);}/**
	 * @ngdoc type
	 * @name  select.SelectController
	 *
	 * @description
	 * The controller for the {@link ng.select select} directive. The controller exposes
	 * a few utility methods that can be used to augment the behavior of a regular or an
	 * {@link ng.ngOptions ngOptions} select element.
	 *
	 * @example
	 * ### Set a custom error when the unknown option is selected
	 *
	 * This example sets a custom error "unknownValue" on the ngModelController
	 * when the select element's unknown option is selected, i.e. when the model is set to a value
	 * that is not matched by any option.
	 *
	 * <example name="select-unknown-value-error" module="staticSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="testSelect"> Single select: </label><br>
	 *     <select name="testSelect" ng-model="selected" unknown-value-error>
	 *       <option value="option-1">Option 1</option>
	 *       <option value="option-2">Option 2</option>
	 *     </select><br>
	 *     <span class="error" ng-if="myForm.testSelect.$error.unknownValue">
	 *       Error: The current model doesn't match any option</span><br>
	 *
	 *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
	 *   </form>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('staticSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.selected = null;
	 *
	 *      $scope.forceUnknownOption = function() {
	 *        $scope.selected = 'nonsense';
	 *      };
	 *   }])
	 *   .directive('unknownValueError', function() {
	 *     return {
	 *       require: ['ngModel', 'select'],
	 *       link: function(scope, element, attrs, ctrls) {
	 *         var ngModelCtrl = ctrls[0];
	 *         var selectCtrl = ctrls[1];
	 *
	 *         ngModelCtrl.$validators.unknownValue = function(modelValue, viewValue) {
	 *           if (selectCtrl.$isUnknownOptionSelected()) {
	 *             return false;
	 *           }
	 *
	 *           return true;
	 *         };
	 *       }
	 *
	 *     };
	 *   });
	 * </file>
	 *</example>
	 *
	 *
	 * @example
	 * ### Set the "required" error when the unknown option is selected.
	 *
	 * By default, the "required" error on the ngModelController is only set on a required select
	 * when the empty option is selected. This example adds a custom directive that also sets the
	 * error when the unknown option is selected.
	 *
	 * <example name="select-unknown-value-required" module="staticSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="testSelect"> Select: </label><br>
	 *     <select name="testSelect" ng-model="selected" required unknown-value-required>
	 *       <option value="option-1">Option 1</option>
	 *       <option value="option-2">Option 2</option>
	 *     </select><br>
	 *     <span class="error" ng-if="myForm.testSelect.$error.required">Error: Please select a value</span><br>
	 *
	 *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
	 *   </form>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('staticSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.selected = null;
	 *
	 *      $scope.forceUnknownOption = function() {
	 *        $scope.selected = 'nonsense';
	 *      };
	 *   }])
	 *   .directive('unknownValueRequired', function() {
	 *     return {
	 *       priority: 1, // This directive must run after the required directive has added its validator
	 *       require: ['ngModel', 'select'],
	 *       link: function(scope, element, attrs, ctrls) {
	 *         var ngModelCtrl = ctrls[0];
	 *         var selectCtrl = ctrls[1];
	 *
	 *         var originalRequiredValidator = ngModelCtrl.$validators.required;
	 *
	 *         ngModelCtrl.$validators.required = function() {
	 *           if (attrs.required && selectCtrl.$isUnknownOptionSelected()) {
	 *             return false;
	 *           }
	 *
	 *           return originalRequiredValidator.apply(this, arguments);
	 *         };
	 *       }
	 *     };
	 *   });
	 * </file>
	 * <file name="protractor.js" type="protractor">
	 *  it('should show the error message when the unknown option is selected', function() {

	      var error = element(by.className('error'));

	      expect(error.getText()).toBe('Error: Please select a value');

	      element(by.cssContainingText('option', 'Option 1')).click();

	      expect(error.isPresent()).toBe(false);

	      element(by.tagName('button')).click();

	      expect(error.getText()).toBe('Error: Please select a value');
	    });
	 * </file>
	 *</example>
	 *
	 *
	 */var SelectController=['$element','$scope',/** @this */function($element,$scope){var self=this,optionsMap=new NgMap();self.selectValueMap={};// Keys are the hashed values, values the original values
	// If the ngModel doesn't get provided then provide a dummy noop version to prevent errors
	self.ngModelCtrl=noopNgModelController;self.multiple=false;// The "unknown" option is one that is prepended to the list if the viewValue
	// does not match any of the options. When it is rendered the value of the unknown
	// option is '? XXX ?' where XXX is the hashKey of the value that is not known.
	//
	// Support: IE 9 only
	// We can't just jqLite('<option>') since jqLite is not smart enough
	// to create it in <select> and IE barfs otherwise.
	self.unknownOption=jqLite(window.document.createElement('option'));// The empty option is an option with the value '' that the application developer can
	// provide inside the select. It is always selectable and indicates that a "null" selection has
	// been made by the user.
	// If the select has an empty option, and the model of the select is set to "undefined" or "null",
	// the empty option is selected.
	// If the model is set to a different unmatched value, the unknown option is rendered and
	// selected, i.e both are present, because a "null" selection and an unknown value are different.
	self.hasEmptyOption=false;self.emptyOption=undefined;self.renderUnknownOption=function(val){var unknownVal=self.generateUnknownOptionValue(val);self.unknownOption.val(unknownVal);$element.prepend(self.unknownOption);setOptionSelectedStatus(self.unknownOption,true);$element.val(unknownVal);};self.updateUnknownOption=function(val){var unknownVal=self.generateUnknownOptionValue(val);self.unknownOption.val(unknownVal);setOptionSelectedStatus(self.unknownOption,true);$element.val(unknownVal);};self.generateUnknownOptionValue=function(val){return'? '+hashKey(val)+' ?';};self.removeUnknownOption=function(){if(self.unknownOption.parent())self.unknownOption.remove();};self.selectEmptyOption=function(){if(self.emptyOption){$element.val('');setOptionSelectedStatus(self.emptyOption,true);}};self.unselectEmptyOption=function(){if(self.hasEmptyOption){setOptionSelectedStatus(self.emptyOption,false);}};$scope.$on('$destroy',function(){// disable unknown option so that we don't do work when the whole select is being destroyed
	self.renderUnknownOption=noop;});// Read the value of the select control, the implementation of this changes depending
	// upon whether the select can have multiple values and whether ngOptions is at work.
	self.readValue=function readSingleValue(){var val=$element.val();// ngValue added option values are stored in the selectValueMap, normal interpolations are not
	var realVal=val in self.selectValueMap?self.selectValueMap[val]:val;if(self.hasOption(realVal)){return realVal;}return null;};// Write the value to the select control, the implementation of this changes depending
	// upon whether the select can have multiple values and whether ngOptions is at work.
	self.writeValue=function writeSingleValue(value){// Make sure to remove the selected attribute from the previously selected option
	// Otherwise, screen readers might get confused
	var currentlySelectedOption=$element[0].options[$element[0].selectedIndex];if(currentlySelectedOption)setOptionSelectedStatus(jqLite(currentlySelectedOption),false);if(self.hasOption(value)){self.removeUnknownOption();var hashedVal=hashKey(value);$element.val(hashedVal in self.selectValueMap?hashedVal:value);// Set selected attribute and property on selected option for screen readers
	var selectedOption=$element[0].options[$element[0].selectedIndex];setOptionSelectedStatus(jqLite(selectedOption),true);}else{self.selectUnknownOrEmptyOption(value);}};// Tell the select control that an option, with the given value, has been added
	self.addOption=function(value,element){// Skip comment nodes, as they only pollute the `optionsMap`
	if(element[0].nodeType===NODE_TYPE_COMMENT)return;assertNotHasOwnProperty(value,'"option value"');if(value===''){self.hasEmptyOption=true;self.emptyOption=element;}var count=optionsMap.get(value)||0;optionsMap.set(value,count+1);// Only render at the end of a digest. This improves render performance when many options
	// are added during a digest and ensures all relevant options are correctly marked as selected
	scheduleRender();};// Tell the select control that an option, with the given value, has been removed
	self.removeOption=function(value){var count=optionsMap.get(value);if(count){if(count===1){optionsMap.delete(value);if(value===''){self.hasEmptyOption=false;self.emptyOption=undefined;}}else{optionsMap.set(value,count-1);}}};// Check whether the select control has an option matching the given value
	self.hasOption=function(value){return!!optionsMap.get(value);};/**
	   * @ngdoc method
	   * @name select.SelectController#$hasEmptyOption
	   *
	   * @description
	   *
	   * Returns `true` if the select element currently has an empty option
	   * element, i.e. an option that signifies that the select is empty / the selection is null.
	   *
	   */self.$hasEmptyOption=function(){return self.hasEmptyOption;};/**
	   * @ngdoc method
	   * @name select.SelectController#$isUnknownOptionSelected
	   *
	   * @description
	   *
	   * Returns `true` if the select element's unknown option is selected. The unknown option is added
	   * and automatically selected whenever the select model doesn't match any option.
	   *
	   */self.$isUnknownOptionSelected=function(){// Presence of the unknown option means it is selected
	return $element[0].options[0]===self.unknownOption[0];};/**
	   * @ngdoc method
	   * @name select.SelectController#$isEmptyOptionSelected
	   *
	   * @description
	   *
	   * Returns `true` if the select element has an empty option and this empty option is currently
	   * selected. Returns `false` if the select element has no empty option or it is not selected.
	   *
	   */self.$isEmptyOptionSelected=function(){return self.hasEmptyOption&&$element[0].options[$element[0].selectedIndex]===self.emptyOption[0];};self.selectUnknownOrEmptyOption=function(value){if(value==null&&self.emptyOption){self.removeUnknownOption();self.selectEmptyOption();}else if(self.unknownOption.parent().length){self.updateUnknownOption(value);}else{self.renderUnknownOption(value);}};var renderScheduled=false;function scheduleRender(){if(renderScheduled)return;renderScheduled=true;$scope.$$postDigest(function(){renderScheduled=false;self.ngModelCtrl.$render();});}var updateScheduled=false;function scheduleViewValueUpdate(renderAfter){if(updateScheduled)return;updateScheduled=true;$scope.$$postDigest(function(){if($scope.$$destroyed)return;updateScheduled=false;self.ngModelCtrl.$setViewValue(self.readValue());if(renderAfter)self.ngModelCtrl.$render();});}self.registerOption=function(optionScope,optionElement,optionAttrs,interpolateValueFn,interpolateTextFn){if(optionAttrs.$attr.ngValue){// The value attribute is set by ngValue
	var oldVal,hashedVal;optionAttrs.$observe('value',function valueAttributeObserveAction(newVal){var removal;var previouslySelected=optionElement.prop('selected');if(isDefined(hashedVal)){self.removeOption(oldVal);delete self.selectValueMap[hashedVal];removal=true;}hashedVal=hashKey(newVal);oldVal=newVal;self.selectValueMap[hashedVal]=newVal;self.addOption(newVal,optionElement);// Set the attribute directly instead of using optionAttrs.$set - this stops the observer
	// from firing a second time. Other $observers on value will also get the result of the
	// ngValue expression, not the hashed value
	optionElement.attr('value',hashedVal);if(removal&&previouslySelected){scheduleViewValueUpdate();}});}else if(interpolateValueFn){// The value attribute is interpolated
	optionAttrs.$observe('value',function valueAttributeObserveAction(newVal){// This method is overwritten in ngOptions and has side-effects!
	self.readValue();var removal;var previouslySelected=optionElement.prop('selected');if(isDefined(oldVal)){self.removeOption(oldVal);removal=true;}oldVal=newVal;self.addOption(newVal,optionElement);if(removal&&previouslySelected){scheduleViewValueUpdate();}});}else if(interpolateTextFn){// The text content is interpolated
	optionScope.$watch(interpolateTextFn,function interpolateWatchAction(newVal,oldVal){optionAttrs.$set('value',newVal);var previouslySelected=optionElement.prop('selected');if(oldVal!==newVal){self.removeOption(oldVal);}self.addOption(newVal,optionElement);if(oldVal&&previouslySelected){scheduleViewValueUpdate();}});}else{// The value attribute is static
	self.addOption(optionAttrs.value,optionElement);}optionAttrs.$observe('disabled',function(newVal){// Since model updates will also select disabled options (like ngOptions),
	// we only have to handle options becoming disabled, not enabled
	if(newVal==='true'||newVal&&optionElement.prop('selected')){if(self.multiple){scheduleViewValueUpdate(true);}else{self.ngModelCtrl.$setViewValue(null);self.ngModelCtrl.$render();}}});optionElement.on('$destroy',function(){var currentValue=self.readValue();var removeValue=optionAttrs.value;self.removeOption(removeValue);scheduleRender();if(self.multiple&&currentValue&&currentValue.indexOf(removeValue)!==-1||currentValue===removeValue){// When multiple (selected) options are destroyed at the same time, we don't want
	// to run a model update for each of them. Instead, run a single update in the $$postDigest
	scheduleViewValueUpdate(true);}});};}];/**
	 * @ngdoc directive
	 * @name select
	 * @restrict E
	 *
	 * @description
	 * HTML `select` element with AngularJS data-binding.
	 *
	 * The `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding
	 * between the scope and the `<select>` control (including setting default values).
	 * It also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or
	 * {@link ngOptions `ngOptions`} directives.
	 *
	 * When an item in the `<select>` menu is selected, the value of the selected option will be bound
	 * to the model identified by the `ngModel` directive. With static or repeated options, this is
	 * the content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.
	 * Value and textContent can be interpolated.
	 *
	 * The {@link select.SelectController select controller} exposes utility functions that can be used
	 * to manipulate the select's behavior.
	 *
	 * ## Matching model and option values
	 *
	 * In general, the match between the model and an option is evaluated by strictly comparing the model
	 * value against the value of the available options.
	 *
	 * If you are setting the option value with the option's `value` attribute, or textContent, the
	 * value will always be a `string` which means that the model value must also be a string.
	 * Otherwise the `select` directive cannot match them correctly.
	 *
	 * To bind the model to a non-string value, you can use one of the following strategies:
	 * - the {@link ng.ngOptions `ngOptions`} directive
	 *   ({@link ng.select#using-select-with-ngoptions-and-setting-a-default-value})
	 * - the {@link ng.ngValue `ngValue`} directive, which allows arbitrary expressions to be
	 *   option values ({@link ng.select#using-ngvalue-to-bind-the-model-to-an-array-of-objects Example})
	 * - model $parsers / $formatters to convert the string value
	 *   ({@link ng.select#binding-select-to-a-non-string-value-via-ngmodel-parsing-formatting Example})
	 *
	 * If the viewValue of `ngModel` does not match any of the options, then the control
	 * will automatically add an "unknown" option, which it then removes when the mismatch is resolved.
	 *
	 * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
	 * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
	 * option. See example below for demonstration.
	 *
	 * ## Choosing between `ngRepeat` and `ngOptions`
	 *
	 * In many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions
	 * ngOptions} to achieve a similar result. However, `ngOptions` provides some benefits:
	 * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
	 * comprehension expression
	 * - reduced memory consumption by not creating a new scope for each repeated instance
	 * - increased render speed by creating the options in a documentFragment instead of individually
	 *
	 * Specifically, select with repeated options slows down significantly starting at 2000 options in
	 * Chrome and Internet Explorer / Edge.
	 *
	 *
	 * @param {string} ngModel Assignable AngularJS expression to data-bind to.
	 * @param {string=} name Property name of the form under which the control is published.
	 * @param {string=} multiple Allows multiple options to be selected. The selected values will be
	 *     bound to the model as an array.
	 * @param {string=} required Sets `required` validation error key if the value is not entered.
	 * @param {string=} ngRequired Adds required attribute and required validation constraint to
	 * the element when the ngRequired expression evaluates to true. Use ngRequired instead of required
	 * when you want to data-bind to the required attribute.
	 * @param {string=} ngChange AngularJS expression to be executed when selected option(s) changes due to user
	 *    interaction with the select element.
	 * @param {string=} ngOptions sets the options that the select is populated with and defines what is
	 * set on the model on selection. See {@link ngOptions `ngOptions`}.
	 * @param {string=} ngAttrSize sets the size of the select element dynamically. Uses the
	 * {@link guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes ngAttr} directive.
	 *
	 *
	 * @example
	 * ### Simple `select` elements with static options
	 *
	 * <example name="static-select" module="staticSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="singleSelect"> Single select: </label><br>
	 *     <select name="singleSelect" ng-model="data.singleSelect">
	 *       <option value="option-1">Option 1</option>
	 *       <option value="option-2">Option 2</option>
	 *     </select><br>
	 *
	 *     <label for="singleSelect"> Single select with "not selected" option and dynamic option values: </label><br>
	 *     <select name="singleSelect" id="singleSelect" ng-model="data.singleSelect">
	 *       <option value="">---Please select---</option> <!-- not selected / blank option -->
	 *       <option value="{{data.option1}}">Option 1</option> <!-- interpolation -->
	 *       <option value="option-2">Option 2</option>
	 *     </select><br>
	 *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
	 *     <tt>singleSelect = {{data.singleSelect}}</tt>
	 *
	 *     <hr>
	 *     <label for="multipleSelect"> Multiple select: </label><br>
	 *     <select name="multipleSelect" id="multipleSelect" ng-model="data.multipleSelect" multiple>
	 *       <option value="option-1">Option 1</option>
	 *       <option value="option-2">Option 2</option>
	 *       <option value="option-3">Option 3</option>
	 *     </select><br>
	 *     <tt>multipleSelect = {{data.multipleSelect}}</tt><br/>
	 *   </form>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('staticSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.data = {
	 *       singleSelect: null,
	 *       multipleSelect: [],
	 *       option1: 'option-1'
	 *      };
	 *
	 *      $scope.forceUnknownOption = function() {
	 *        $scope.data.singleSelect = 'nonsense';
	 *      };
	 *   }]);
	 * </file>
	 *</example>
	 *
	 * @example
	 * ### Using `ngRepeat` to generate `select` options
	 * <example name="select-ngrepeat" module="ngrepeatSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="repeatSelect"> Repeat select: </label>
	 *     <select name="repeatSelect" id="repeatSelect" ng-model="data.model">
	 *       <option ng-repeat="option in data.availableOptions" value="{{option.id}}">{{option.name}}</option>
	 *     </select>
	 *   </form>
	 *   <hr>
	 *   <tt>model = {{data.model}}</tt><br/>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('ngrepeatSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.data = {
	 *       model: null,
	 *       availableOptions: [
	 *         {id: '1', name: 'Option A'},
	 *         {id: '2', name: 'Option B'},
	 *         {id: '3', name: 'Option C'}
	 *       ]
	 *      };
	 *   }]);
	 * </file>
	 *</example>
	 *
	 * @example
	 * ### Using `ngValue` to bind the model to an array of objects
	 * <example name="select-ngvalue" module="ngvalueSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="ngvalueselect"> ngvalue select: </label>
	 *     <select size="6" name="ngvalueselect" ng-model="data.model" multiple>
	 *       <option ng-repeat="option in data.availableOptions" ng-value="option.value">{{option.name}}</option>
	 *     </select>
	 *   </form>
	 *   <hr>
	 *   <pre>model = {{data.model | json}}</pre><br/>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('ngvalueSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.data = {
	 *       model: null,
	 *       availableOptions: [
	           {value: 'myString', name: 'string'},
	           {value: 1, name: 'integer'},
	           {value: true, name: 'boolean'},
	           {value: null, name: 'null'},
	           {value: {prop: 'value'}, name: 'object'},
	           {value: ['a'], name: 'array'}
	 *       ]
	 *      };
	 *   }]);
	 * </file>
	 *</example>
	 *
	 * @example
	 * ### Using `select` with `ngOptions` and setting a default value
	 * See the {@link ngOptions ngOptions documentation} for more `ngOptions` usage examples.
	 *
	 * <example name="select-with-default-values" module="defaultValueSelect">
	 * <file name="index.html">
	 * <div ng-controller="ExampleController">
	 *   <form name="myForm">
	 *     <label for="mySelect">Make a choice:</label>
	 *     <select name="mySelect" id="mySelect"
	 *       ng-options="option.name for option in data.availableOptions track by option.id"
	 *       ng-model="data.selectedOption"></select>
	 *   </form>
	 *   <hr>
	 *   <tt>option = {{data.selectedOption}}</tt><br/>
	 * </div>
	 * </file>
	 * <file name="app.js">
	 *  angular.module('defaultValueSelect', [])
	 *    .controller('ExampleController', ['$scope', function($scope) {
	 *      $scope.data = {
	 *       availableOptions: [
	 *         {id: '1', name: 'Option A'},
	 *         {id: '2', name: 'Option B'},
	 *         {id: '3', name: 'Option C'}
	 *       ],
	 *       selectedOption: {id: '3', name: 'Option C'} //This sets the default value of the select in the ui
	 *       };
	 *   }]);
	 * </file>
	 *</example>
	 *
	 * @example
	 * ### Binding `select` to a non-string value via `ngModel` parsing / formatting
	 *
	 * <example name="select-with-non-string-options" module="nonStringSelect">
	 *   <file name="index.html">
	 *     <select ng-model="model.id" convert-to-number>
	 *       <option value="0">Zero</option>
	 *       <option value="1">One</option>
	 *       <option value="2">Two</option>
	 *     </select>
	 *     {{ model }}
	 *   </file>
	 *   <file name="app.js">
	 *     angular.module('nonStringSelect', [])
	 *       .run(function($rootScope) {
	 *         $rootScope.model = { id: 2 };
	 *       })
	 *       .directive('convertToNumber', function() {
	 *         return {
	 *           require: 'ngModel',
	 *           link: function(scope, element, attrs, ngModel) {
	 *             ngModel.$parsers.push(function(val) {
	 *               return parseInt(val, 10);
	 *             });
	 *             ngModel.$formatters.push(function(val) {
	 *               return '' + val;
	 *             });
	 *           }
	 *         };
	 *       });
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	 *     it('should initialize to model', function() {
	 *       expect(element(by.model('model.id')).$('option:checked').getText()).toEqual('Two');
	 *     });
	 *   </file>
	 * </example>
	 *
	 */var selectDirective=function selectDirective(){return{restrict:'E',require:['select','?ngModel'],controller:SelectController,priority:1,link:{pre:selectPreLink,post:selectPostLink}};function selectPreLink(scope,element,attr,ctrls){var selectCtrl=ctrls[0];var ngModelCtrl=ctrls[1];// if ngModel is not defined, we don't need to do anything but set the registerOption
	// function to noop, so options don't get added internally
	if(!ngModelCtrl){selectCtrl.registerOption=noop;return;}selectCtrl.ngModelCtrl=ngModelCtrl;// When the selected item(s) changes we delegate getting the value of the select control
	// to the `readValue` method, which can be changed if the select can have multiple
	// selected values or if the options are being generated by `ngOptions`
	element.on('change',function(){selectCtrl.removeUnknownOption();scope.$apply(function(){ngModelCtrl.$setViewValue(selectCtrl.readValue());});});// If the select allows multiple values then we need to modify how we read and write
	// values from and to the control; also what it means for the value to be empty and
	// we have to add an extra watch since ngModel doesn't work well with arrays - it
	// doesn't trigger rendering if only an item in the array changes.
	if(attr.multiple){selectCtrl.multiple=true;// Read value now needs to check each option to see if it is selected
	selectCtrl.readValue=function readMultipleValue(){var array=[];forEach(element.find('option'),function(option){if(option.selected&&!option.disabled){var val=option.value;array.push(val in selectCtrl.selectValueMap?selectCtrl.selectValueMap[val]:val);}});return array;};// Write value now needs to set the selected property of each matching option
	selectCtrl.writeValue=function writeMultipleValue(value){forEach(element.find('option'),function(option){var shouldBeSelected=!!value&&(includes(value,option.value)||includes(value,selectCtrl.selectValueMap[option.value]));var currentlySelected=option.selected;// Support: IE 9-11 only, Edge 12-15+
	// In IE and Edge adding options to the selection via shift+click/UP/DOWN
	// will de-select already selected options if "selected" on those options was set
	// more than once (i.e. when the options were already selected)
	// So we only modify the selected property if necessary.
	// Note: this behavior cannot be replicated via unit tests because it only shows in the
	// actual user interface.
	if(shouldBeSelected!==currentlySelected){setOptionSelectedStatus(jqLite(option),shouldBeSelected);}});};// we have to do it on each watch since ngModel watches reference, but
	// we need to work of an array, so we need to see if anything was inserted/removed
	var lastView,lastViewRef=NaN;scope.$watch(function selectMultipleWatch(){if(lastViewRef===ngModelCtrl.$viewValue&&!equals(lastView,ngModelCtrl.$viewValue)){lastView=shallowCopy(ngModelCtrl.$viewValue);ngModelCtrl.$render();}lastViewRef=ngModelCtrl.$viewValue;});// If we are a multiple select then value is now a collection
	// so the meaning of $isEmpty changes
	ngModelCtrl.$isEmpty=function(value){return!value||value.length===0;};}}function selectPostLink(scope,element,attrs,ctrls){// if ngModel is not defined, we don't need to do anything
	var ngModelCtrl=ctrls[1];if(!ngModelCtrl)return;var selectCtrl=ctrls[0];// We delegate rendering to the `writeValue` method, which can be changed
	// if the select can have multiple selected values or if the options are being
	// generated by `ngOptions`.
	// This must be done in the postLink fn to prevent $render to be called before
	// all nodes have been linked correctly.
	ngModelCtrl.$render=function(){selectCtrl.writeValue(ngModelCtrl.$viewValue);};}};// The option directive is purely designed to communicate the existence (or lack of)
	// of dynamically created (and destroyed) option elements to their containing select
	// directive via its controller.
	var optionDirective=['$interpolate',function($interpolate){return{restrict:'E',priority:100,compile:function compile(element,attr){var interpolateValueFn,interpolateTextFn;if(isDefined(attr.ngValue)){// Will be handled by registerOption
	}else if(isDefined(attr.value)){// If the value attribute is defined, check if it contains an interpolation
	interpolateValueFn=$interpolate(attr.value,true);}else{// If the value attribute is not defined then we fall back to the
	// text content of the option element, which may be interpolated
	interpolateTextFn=$interpolate(element.text(),true);if(!interpolateTextFn){attr.$set('value',element.text());}}return function(scope,element,attr){// This is an optimization over using ^^ since we don't want to have to search
	// all the way to the root of the DOM for every single option element
	var selectCtrlName='$selectController',parent=element.parent(),selectCtrl=parent.data(selectCtrlName)||parent.parent().data(selectCtrlName);// in case we are in optgroup
	if(selectCtrl){selectCtrl.registerOption(scope,element,attr,interpolateValueFn,interpolateTextFn);}};}};}];/**
	 * @ngdoc directive
	 * @name ngRequired
	 * @restrict A
	 *
	 * @param {expression} ngRequired AngularJS expression. If it evaluates to `true`, it sets the
	 *                                `required` attribute to the element and adds the `required`
	 *                                {@link ngModel.NgModelController#$validators `validator`}.
	 *
	 * @description
	 *
	 * ngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
	 * It is most often used for {@link input `input`} and {@link select `select`} controls, but can also be
	 * applied to custom controls.
	 *
	 * The directive sets the `required` attribute on the element if the AngularJS expression inside
	 * `ngRequired` evaluates to true. A special directive for setting `required` is necessary because we
	 * cannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}
	 * for more info.
	 *
	 * The validator will set the `required` error key to true if the `required` attribute is set and
	 * calling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the
	 * {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the
	 * `$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing
	 * custom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.
	 *
	 * @example
	 * <example name="ngRequiredDirective" module="ngRequiredExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('ngRequiredExample', [])
	 *         .controller('ExampleController', ['$scope', function($scope) {
	 *           $scope.required = true;
	 *         }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <form name="form">
	 *         <label for="required">Toggle required: </label>
	 *         <input type="checkbox" ng-model="required" id="required" />
	 *         <br>
	 *         <label for="input">This input must be filled if `required` is true: </label>
	 *         <input type="text" ng-model="model" id="input" name="input" ng-required="required" /><br>
	 *         <hr>
	 *         required error set? = <code>{{form.input.$error.required}}</code><br>
	 *         model = <code>{{model}}</code>
	 *       </form>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	       var required = element(by.binding('form.input.$error.required'));
	       var model = element(by.binding('model'));
	       var input = element(by.id('input'));

	       it('should set the required error', function() {
	         expect(required.getText()).toContain('true');

	         input.sendKeys('123');
	         expect(required.getText()).not.toContain('true');
	         expect(model.getText()).toContain('123');
	       });
	 *   </file>
	 * </example>
	 */var requiredDirective=['$parse',function($parse){return{restrict:'A',require:'?ngModel',link:function link(scope,elm,attr,ctrl){if(!ctrl)return;// For boolean attributes like required, presence means true
	var value=attr.hasOwnProperty('required')||$parse(attr.ngRequired)(scope);if(!attr.ngRequired){// force truthy in case we are on non input element
	// (input elements do this automatically for boolean attributes like required)
	attr.required=true;}ctrl.$validators.required=function(modelValue,viewValue){return!value||!ctrl.$isEmpty(viewValue);};attr.$observe('required',function(newVal){if(value!==newVal){value=newVal;ctrl.$validate();}});}};}];/**
	 * @ngdoc directive
	 * @name ngPattern
	 * @restrict A
	 *
	 * @param {expression|RegExp} ngPattern AngularJS expression that must evaluate to a `RegExp` or a `String`
	 *                                      parsable into a `RegExp`, or a `RegExp` literal. See above for
	 *                                      more details.
	 *
	 * @description
	 *
	 * ngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
	 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
	 *
	 * The validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
	 * does not match a RegExp which is obtained from the `ngPattern` attribute value:
	 * - the value is an AngularJS expression:
	 *   - If the expression evaluates to a RegExp object, then this is used directly.
	 *   - If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it
	 *     in `^` and `$` characters. For instance, `"abc"` will be converted to `new RegExp('^abc$')`.
	 * - If the value is a RegExp literal, e.g. `ngPattern="/^\d+$/"`, it is used directly.
	 *
	 * <div class="alert alert-info">
	 * **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
	 * start at the index of the last search's match, thus not taking the whole input value into
	 * account.
	 * </div>
	 *
	 * <div class="alert alert-info">
	 * **Note:** This directive is also added when the plain `pattern` attribute is used, with two
	 * differences:
	 * <ol>
	 *   <li>
	 *     `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is
	 *     not available.
	 *   </li>
	 *   <li>
	 *     The `ngPattern` attribute must be an expression, while the `pattern` value must be
	 *     interpolated.
	 *   </li>
	 * </ol>
	 * </div>
	 *
	 * @example
	 * <example name="ngPatternDirective" module="ngPatternExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('ngPatternExample', [])
	 *         .controller('ExampleController', ['$scope', function($scope) {
	 *           $scope.regex = '\\d+';
	 *         }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <form name="form">
	 *         <label for="regex">Set a pattern (regex string): </label>
	 *         <input type="text" ng-model="regex" id="regex" />
	 *         <br>
	 *         <label for="input">This input is restricted by the current pattern: </label>
	 *         <input type="text" ng-model="model" id="input" name="input" ng-pattern="regex" /><br>
	 *         <hr>
	 *         input valid? = <code>{{form.input.$valid}}</code><br>
	 *         model = <code>{{model}}</code>
	 *       </form>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	       var model = element(by.binding('model'));
	       var input = element(by.id('input'));

	       it('should validate the input with the default pattern', function() {
	         input.sendKeys('aaa');
	         expect(model.getText()).not.toContain('aaa');

	         input.clear().then(function() {
	           input.sendKeys('123');
	           expect(model.getText()).toContain('123');
	         });
	       });
	 *   </file>
	 * </example>
	 */var patternDirective=['$parse',function($parse){return{restrict:'A',require:'?ngModel',compile:function compile(tElm,tAttr){var patternExp;var parseFn;if(tAttr.ngPattern){patternExp=tAttr.ngPattern;// ngPattern might be a scope expression, or an inlined regex, which is not parsable.
	// We get value of the attribute here, so we can compare the old and the new value
	// in the observer to avoid unnecessary validations
	if(tAttr.ngPattern.charAt(0)==='/'&&REGEX_STRING_REGEXP.test(tAttr.ngPattern)){parseFn=function parseFn(){return tAttr.ngPattern;};}else{parseFn=$parse(tAttr.ngPattern);}}return function(scope,elm,attr,ctrl){if(!ctrl)return;var attrVal=attr.pattern;if(attr.ngPattern){attrVal=parseFn(scope);}else{patternExp=attr.pattern;}var regexp=parsePatternAttr(attrVal,patternExp,elm);attr.$observe('pattern',function(newVal){var oldRegexp=regexp;regexp=parsePatternAttr(newVal,patternExp,elm);if((oldRegexp&&oldRegexp.toString())!==(regexp&&regexp.toString())){ctrl.$validate();}});ctrl.$validators.pattern=function(modelValue,viewValue){// HTML5 pattern constraint validates the input value, so we validate the viewValue
	return ctrl.$isEmpty(viewValue)||isUndefined(regexp)||regexp.test(viewValue);};};}};}];/**
	 * @ngdoc directive
	 * @name ngMaxlength
	 * @restrict A
	 *
	 * @param {expression} ngMaxlength AngularJS expression that must evaluate to a `Number` or `String`
	 *                                 parsable into a `Number`. Used as value for the `maxlength`
	 *                                 {@link ngModel.NgModelController#$validators validator}.
	 *
	 * @description
	 *
	 * ngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
	 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
	 *
	 * The validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
	 * is longer than the integer obtained by evaluating the AngularJS expression given in the
	 * `ngMaxlength` attribute value.
	 *
	 * <div class="alert alert-info">
	 * **Note:** This directive is also added when the plain `maxlength` attribute is used, with two
	 * differences:
	 * <ol>
	 *   <li>
	 *     `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint
	 *     validation is not available.
	 *   </li>
	 *   <li>
	 *     The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be
	 *     interpolated.
	 *   </li>
	 * </ol>
	 * </div>
	 *
	 * @example
	 * <example name="ngMaxlengthDirective" module="ngMaxlengthExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('ngMaxlengthExample', [])
	 *         .controller('ExampleController', ['$scope', function($scope) {
	 *           $scope.maxlength = 5;
	 *         }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <form name="form">
	 *         <label for="maxlength">Set a maxlength: </label>
	 *         <input type="number" ng-model="maxlength" id="maxlength" />
	 *         <br>
	 *         <label for="input">This input is restricted by the current maxlength: </label>
	 *         <input type="text" ng-model="model" id="input" name="input" ng-maxlength="maxlength" /><br>
	 *         <hr>
	 *         input valid? = <code>{{form.input.$valid}}</code><br>
	 *         model = <code>{{model}}</code>
	 *       </form>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	       var model = element(by.binding('model'));
	       var input = element(by.id('input'));

	       it('should validate the input with the default maxlength', function() {
	         input.sendKeys('abcdef');
	         expect(model.getText()).not.toContain('abcdef');

	         input.clear().then(function() {
	           input.sendKeys('abcde');
	           expect(model.getText()).toContain('abcde');
	         });
	       });
	 *   </file>
	 * </example>
	 */var maxlengthDirective=['$parse',function($parse){return{restrict:'A',require:'?ngModel',link:function link(scope,elm,attr,ctrl){if(!ctrl)return;var maxlength=attr.maxlength||$parse(attr.ngMaxlength)(scope);var maxlengthParsed=parseLength(maxlength);attr.$observe('maxlength',function(value){if(maxlength!==value){maxlengthParsed=parseLength(value);maxlength=value;ctrl.$validate();}});ctrl.$validators.maxlength=function(modelValue,viewValue){return maxlengthParsed<0||ctrl.$isEmpty(viewValue)||viewValue.length<=maxlengthParsed;};}};}];/**
	 * @ngdoc directive
	 * @name ngMinlength
	 * @restrict A
	 *
	 * @param {expression} ngMinlength AngularJS expression that must evaluate to a `Number` or `String`
	 *                                 parsable into a `Number`. Used as value for the `minlength`
	 *                                 {@link ngModel.NgModelController#$validators validator}.
	 *
	 * @description
	 *
	 * ngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
	 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
	 *
	 * The validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
	 * is shorter than the integer obtained by evaluating the AngularJS expression given in the
	 * `ngMinlength` attribute value.
	 *
	 * <div class="alert alert-info">
	 * **Note:** This directive is also added when the plain `minlength` attribute is used, with two
	 * differences:
	 * <ol>
	 *   <li>
	 *     `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint
	 *     validation is not available.
	 *   </li>
	 *   <li>
	 *     The `ngMinlength` value must be an expression, while the `minlength` value must be
	 *     interpolated.
	 *   </li>
	 * </ol>
	 * </div>
	 *
	 * @example
	 * <example name="ngMinlengthDirective" module="ngMinlengthExample">
	 *   <file name="index.html">
	 *     <script>
	 *       angular.module('ngMinlengthExample', [])
	 *         .controller('ExampleController', ['$scope', function($scope) {
	 *           $scope.minlength = 3;
	 *         }]);
	 *     </script>
	 *     <div ng-controller="ExampleController">
	 *       <form name="form">
	 *         <label for="minlength">Set a minlength: </label>
	 *         <input type="number" ng-model="minlength" id="minlength" />
	 *         <br>
	 *         <label for="input">This input is restricted by the current minlength: </label>
	 *         <input type="text" ng-model="model" id="input" name="input" ng-minlength="minlength" /><br>
	 *         <hr>
	 *         input valid? = <code>{{form.input.$valid}}</code><br>
	 *         model = <code>{{model}}</code>
	 *       </form>
	 *     </div>
	 *   </file>
	 *   <file name="protractor.js" type="protractor">
	       var model = element(by.binding('model'));
	       var input = element(by.id('input'));

	       it('should validate the input with the default minlength', function() {
	         input.sendKeys('ab');
	         expect(model.getText()).not.toContain('ab');

	         input.sendKeys('abc');
	         expect(model.getText()).toContain('abc');
	       });
	 *   </file>
	 * </example>
	 */var minlengthDirective=['$parse',function($parse){return{restrict:'A',require:'?ngModel',link:function link(scope,elm,attr,ctrl){if(!ctrl)return;var minlength=attr.minlength||$parse(attr.ngMinlength)(scope);var minlengthParsed=parseLength(minlength)||-1;attr.$observe('minlength',function(value){if(minlength!==value){minlengthParsed=parseLength(value)||-1;minlength=value;ctrl.$validate();}});ctrl.$validators.minlength=function(modelValue,viewValue){return ctrl.$isEmpty(viewValue)||viewValue.length>=minlengthParsed;};}};}];function parsePatternAttr(regex,patternExp,elm){if(!regex)return undefined;if(isString(regex)){regex=new RegExp('^'+regex+'$');}if(!regex.test){throw minErr('ngPattern')('noregexp','Expected {0} to be a RegExp but was {1}. Element: {2}',patternExp,regex,startingTag(elm));}return regex;}function parseLength(val){var intVal=toInt(val);return isNumberNaN(intVal)?-1:intVal;}if(window.angular.bootstrap){// AngularJS is already loaded, so we can return here...
	if(window.console){console.log('WARNING: Tried to load AngularJS more than once.');}return;}// try to bind to jquery now so that one can write jqLite(fn)
	// but we will rebind on bootstrap again.
	bindJQuery();publishExternalAPI(angular);angular.module("ngLocale",[],["$provide",function($provide){var PLURAL_CATEGORY={ZERO:"zero",ONE:"one",TWO:"two",FEW:"few",MANY:"many",OTHER:"other"};function getDecimals(n){n=n+'';var i=n.indexOf('.');return i==-1?0:n.length-i-1;}function getVF(n,opt_precision){var v=opt_precision;if(undefined===v){v=Math.min(getDecimals(n),3);}var base=Math.pow(10,v);var f=(n*base|0)%base;return{v:v,f:f};}$provide.value("$locale",{"DATETIME_FORMATS":{"AMPMS":["AM","PM"],"DAY":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"ERANAMES":["Before Christ","Anno Domini"],"ERAS":["BC","AD"],"FIRSTDAYOFWEEK":6,"MONTH":["January","February","March","April","May","June","July","August","September","October","November","December"],"SHORTDAY":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"SHORTMONTH":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"STANDALONEMONTH":["January","February","March","April","May","June","July","August","September","October","November","December"],"WEEKENDRANGE":[5,6],"fullDate":"EEEE, MMMM d, y","longDate":"MMMM d, y","medium":"MMM d, y h:mm:ss a","mediumDate":"MMM d, y","mediumTime":"h:mm:ss a","short":"M/d/yy h:mm a","shortDate":"M/d/yy","shortTime":"h:mm a"},"NUMBER_FORMATS":{"CURRENCY_SYM":"$","DECIMAL_SEP":".","GROUP_SEP":",","PATTERNS":[{"gSize":3,"lgSize":3,"maxFrac":3,"minFrac":0,"minInt":1,"negPre":"-","negSuf":"","posPre":"","posSuf":""},{"gSize":3,"lgSize":3,"maxFrac":2,"minFrac":2,"minInt":1,"negPre":'-\xA4',"negSuf":"","posPre":'\xA4',"posSuf":""}]},"id":"en-us","localeID":"en_US","pluralCat":function pluralCat(n,opt_precision){var i=n|0;var vf=getVF(n,opt_precision);if(i==1&&vf.v==0){return PLURAL_CATEGORY.ONE;}return PLURAL_CATEGORY.OTHER;}});}]);jqLite(function(){angularInit(window.document,bootstrap);});})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend(window.angular.element('<style>').text('@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}'));

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(4);
	module.exports = 'ngSanitize';

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * @license AngularJS v1.8.3
	 * (c) 2010-2020 Google LLC. http://angularjs.org
	 * License: MIT
	 */
	(function (window, angular) {
	  'use strict';

	  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	   *     Any commits to this file should be reviewed with security in mind.  *
	   *   Changes to this file can potentially create security vulnerabilities. *
	   *          An approval from 2 Core members with history of modifying      *
	   *                         this file is required.                          *
	   *                                                                         *
	   *  Does the change somehow allow for arbitrary javascript to be executed? *
	   *    Or allows for someone to change the prototype of built-in objects?   *
	   *     Or gives undesired access to variables likes document or window?    *
	   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

	  var $sanitizeMinErr = angular.$$minErr('$sanitize');
	  var bind;
	  var extend;
	  var forEach;
	  var isArray;
	  var isDefined;
	  var lowercase;
	  var noop;
	  var nodeContains;
	  var htmlParser;
	  var htmlSanitizeWriter;

	  /**
	   * @ngdoc module
	   * @name ngSanitize
	   * @description
	   *
	   * The `ngSanitize` module provides functionality to sanitize HTML.
	   *
	   * See {@link ngSanitize.$sanitize `$sanitize`} for usage.
	   */

	  /**
	   * @ngdoc service
	   * @name $sanitize
	   * @kind function
	   *
	   * @description
	   *   Sanitizes an html string by stripping all potentially dangerous tokens.
	   *
	   *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a trusted URI list) are
	   *   then serialized back to a properly escaped HTML string. This means that no unsafe input can make
	   *   it into the returned string.
	   *
	   *   The trusted URIs for URL sanitization of attribute values is configured using the functions
	   *   `aHrefSanitizationTrustedUrlList` and `imgSrcSanitizationTrustedUrlList` of {@link $compileProvider}.
	   *
	   *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.
	   *
	   * @param {string} html HTML input.
	   * @returns {string} Sanitized HTML.
	   *
	   * @example
	     <example module="sanitizeExample" deps="angular-sanitize.js" name="sanitize-service">
	     <file name="index.html">
	       <script>
	           angular.module('sanitizeExample', ['ngSanitize'])
	             .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {
	               $scope.snippet =
	                 '<p style="color:blue">an html\n' +
	                 '<em onmouseover="this.textContent=\'PWN3D!\'">click here</em>\n' +
	                 'snippet</p>';
	               $scope.deliberatelyTrustDangerousSnippet = function() {
	                 return $sce.trustAsHtml($scope.snippet);
	               };
	             }]);
	       </script>
	       <div ng-controller="ExampleController">
	          Snippet: <textarea ng-model="snippet" cols="60" rows="3"></textarea>
	         <table>
	           <tr>
	             <td>Directive</td>
	             <td>How</td>
	             <td>Source</td>
	             <td>Rendered</td>
	           </tr>
	           <tr id="bind-html-with-sanitize">
	             <td>ng-bind-html</td>
	             <td>Automatically uses $sanitize</td>
	             <td><pre>&lt;div ng-bind-html="snippet"&gt;<br/>&lt;/div&gt;</pre></td>
	             <td><div ng-bind-html="snippet"></div></td>
	           </tr>
	           <tr id="bind-html-with-trust">
	             <td>ng-bind-html</td>
	             <td>Bypass $sanitize by explicitly trusting the dangerous value</td>
	             <td>
	             <pre>&lt;div ng-bind-html="deliberatelyTrustDangerousSnippet()"&gt;
	  &lt;/div&gt;</pre>
	             </td>
	             <td><div ng-bind-html="deliberatelyTrustDangerousSnippet()"></div></td>
	           </tr>
	           <tr id="bind-default">
	             <td>ng-bind</td>
	             <td>Automatically escapes</td>
	             <td><pre>&lt;div ng-bind="snippet"&gt;<br/>&lt;/div&gt;</pre></td>
	             <td><div ng-bind="snippet"></div></td>
	           </tr>
	         </table>
	         </div>
	     </file>
	     <file name="protractor.js" type="protractor">
	       it('should sanitize the html snippet by default', function() {
	         expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).
	           toBe('<p>an html\n<em>click here</em>\nsnippet</p>');
	       });
	  
	       it('should inline raw snippet if bound to a trusted value', function() {
	         expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).
	           toBe("<p style=\"color:blue\">an html\n" +
	                "<em onmouseover=\"this.textContent='PWN3D!'\">click here</em>\n" +
	                "snippet</p>");
	       });
	  
	       it('should escape snippet without any filter', function() {
	         expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).
	           toBe("&lt;p style=\"color:blue\"&gt;an html\n" +
	                "&lt;em onmouseover=\"this.textContent='PWN3D!'\"&gt;click here&lt;/em&gt;\n" +
	                "snippet&lt;/p&gt;");
	       });
	  
	       it('should update', function() {
	         element(by.model('snippet')).clear();
	         element(by.model('snippet')).sendKeys('new <b onclick="alert(1)">text</b>');
	         expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).
	           toBe('new <b>text</b>');
	         expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(
	           'new <b onclick="alert(1)">text</b>');
	         expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(
	           "new &lt;b onclick=\"alert(1)\"&gt;text&lt;/b&gt;");
	       });
	     </file>
	     </example>
	   */

	  /**
	   * @ngdoc provider
	   * @name $sanitizeProvider
	   * @this
	   *
	   * @description
	   * Creates and configures {@link $sanitize} instance.
	   */
	  function $SanitizeProvider() {
	    var hasBeenInstantiated = false;
	    var svgEnabled = false;

	    this.$get = ['$$sanitizeUri', function ($$sanitizeUri) {
	      hasBeenInstantiated = true;
	      if (svgEnabled) {
	        extend(validElements, svgElements);
	      }
	      return function (html) {
	        var buf = [];
	        htmlParser(html, htmlSanitizeWriter(buf, function (uri, isImage) {
	          return !/^unsafe:/.test($$sanitizeUri(uri, isImage));
	        }));
	        return buf.join('');
	      };
	    }];

	    /**
	     * @ngdoc method
	     * @name $sanitizeProvider#enableSvg
	     * @kind function
	     *
	     * @description
	     * Enables a subset of svg to be supported by the sanitizer.
	     *
	     * <div class="alert alert-warning">
	     *   <p>By enabling this setting without taking other precautions, you might expose your
	     *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned
	     *   outside of the containing element and be rendered over other elements on the page (e.g. a login
	     *   link). Such behavior can then result in phishing incidents.</p>
	     *
	     *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg
	     *   tags within the sanitized content:</p>
	     *
	     *   <br>
	     *
	     *   <pre><code>
	     *   .rootOfTheIncludedContent svg {
	     *     overflow: hidden !important;
	     *   }
	     *   </code></pre>
	     * </div>
	     *
	     * @param {boolean=} flag Enable or disable SVG support in the sanitizer.
	     * @returns {boolean|$sanitizeProvider} Returns the currently configured value if called
	     *    without an argument or self for chaining otherwise.
	     */
	    this.enableSvg = function (enableSvg) {
	      if (isDefined(enableSvg)) {
	        svgEnabled = enableSvg;
	        return this;
	      } else {
	        return svgEnabled;
	      }
	    };

	    /**
	     * @ngdoc method
	     * @name $sanitizeProvider#addValidElements
	     * @kind function
	     *
	     * @description
	     * Extends the built-in lists of valid HTML/SVG elements, i.e. elements that are considered safe
	     * and are not stripped off during sanitization. You can extend the following lists of elements:
	     *
	     * - `htmlElements`: A list of elements (tag names) to extend the current list of safe HTML
	     *   elements. HTML elements considered safe will not be removed during sanitization. All other
	     *   elements will be stripped off.
	     *
	     * - `htmlVoidElements`: This is similar to `htmlElements`, but marks the elements as
	     *   "void elements" (similar to HTML
	     *   [void elements](https://rawgit.com/w3c/html/html5.1-2/single-page.html#void-elements)). These
	     *   elements have no end tag and cannot have content.
	     *
	     * - `svgElements`: This is similar to `htmlElements`, but for SVG elements. This list is only
	     *   taken into account if SVG is {@link ngSanitize.$sanitizeProvider#enableSvg enabled} for
	     *   `$sanitize`.
	     *
	     * <div class="alert alert-info">
	     *   This method must be called during the {@link angular.Module#config config} phase. Once the
	     *   `$sanitize` service has been instantiated, this method has no effect.
	     * </div>
	     *
	     * <div class="alert alert-warning">
	     *   Keep in mind that extending the built-in lists of elements may expose your app to XSS or
	     *   other vulnerabilities. Be very mindful of the elements you add.
	     * </div>
	     *
	     * @param {Array<String>|Object} elements - A list of valid HTML elements or an object with one or
	     *   more of the following properties:
	     *   - **htmlElements** - `{Array<String>}` - A list of elements to extend the current list of
	     *     HTML elements.
	     *   - **htmlVoidElements** - `{Array<String>}` - A list of elements to extend the current list of
	     *     void HTML elements; i.e. elements that do not have an end tag.
	     *   - **svgElements** - `{Array<String>}` - A list of elements to extend the current list of SVG
	     *     elements. The list of SVG elements is only taken into account if SVG is
	     *     {@link ngSanitize.$sanitizeProvider#enableSvg enabled} for `$sanitize`.
	     *
	     * Passing an array (`[...]`) is equivalent to passing `{htmlElements: [...]}`.
	     *
	     * @return {$sanitizeProvider} Returns self for chaining.
	     */
	    this.addValidElements = function (elements) {
	      if (!hasBeenInstantiated) {
	        if (isArray(elements)) {
	          elements = { htmlElements: elements };
	        }

	        addElementsTo(svgElements, elements.svgElements);
	        addElementsTo(voidElements, elements.htmlVoidElements);
	        addElementsTo(validElements, elements.htmlVoidElements);
	        addElementsTo(validElements, elements.htmlElements);
	      }

	      return this;
	    };

	    /**
	     * @ngdoc method
	     * @name $sanitizeProvider#addValidAttrs
	     * @kind function
	     *
	     * @description
	     * Extends the built-in list of valid attributes, i.e. attributes that are considered safe and are
	     * not stripped off during sanitization.
	     *
	     * **Note**:
	     * The new attributes will not be treated as URI attributes, which means their values will not be
	     * sanitized as URIs using `$compileProvider`'s
	     * {@link ng.$compileProvider#aHrefSanitizationTrustedUrlList aHrefSanitizationTrustedUrlList} and
	     * {@link ng.$compileProvider#imgSrcSanitizationTrustedUrlList imgSrcSanitizationTrustedUrlList}.
	     *
	     * <div class="alert alert-info">
	     *   This method must be called during the {@link angular.Module#config config} phase. Once the
	     *   `$sanitize` service has been instantiated, this method has no effect.
	     * </div>
	     *
	     * <div class="alert alert-warning">
	     *   Keep in mind that extending the built-in list of attributes may expose your app to XSS or
	     *   other vulnerabilities. Be very mindful of the attributes you add.
	     * </div>
	     *
	     * @param {Array<String>} attrs - A list of valid attributes.
	     *
	     * @returns {$sanitizeProvider} Returns self for chaining.
	     */
	    this.addValidAttrs = function (attrs) {
	      if (!hasBeenInstantiated) {
	        extend(validAttrs, arrayToMap(attrs, true));
	      }
	      return this;
	    };

	    //////////////////////////////////////////////////////////////////////////////////////////////////
	    // Private stuff
	    //////////////////////////////////////////////////////////////////////////////////////////////////

	    bind = angular.bind;
	    extend = angular.extend;
	    forEach = angular.forEach;
	    isArray = angular.isArray;
	    isDefined = angular.isDefined;
	    lowercase = angular.$$lowercase;
	    noop = angular.noop;

	    htmlParser = htmlParserImpl;
	    htmlSanitizeWriter = htmlSanitizeWriterImpl;

	    nodeContains = window.Node.prototype.contains || /** @this */function (arg) {
	      // eslint-disable-next-line no-bitwise
	      return !!(this.compareDocumentPosition(arg) & 16);
	    };

	    // Regular Expressions for parsing tags and attributes
	    var SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,

	    // Match everything outside of normal chars and " (quote character)
	    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;

	    // Good source of info about elements and attributes
	    // http://dev.w3.org/html5/spec/Overview.html#semantics
	    // http://simon.html5.org/html-elements

	    // Safe Void Elements - HTML5
	    // http://dev.w3.org/html5/spec/Overview.html#void-elements
	    var voidElements = stringToMap('area,br,col,hr,img,wbr');

	    // Elements that you can, intentionally, leave open (and which close themselves)
	    // http://dev.w3.org/html5/spec/Overview.html#optional-tags
	    var optionalEndTagBlockElements = stringToMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
	        optionalEndTagInlineElements = stringToMap('rp,rt'),
	        optionalEndTagElements = extend({}, optionalEndTagInlineElements, optionalEndTagBlockElements);

	    // Safe Block Elements - HTML5
	    var blockElements = extend({}, optionalEndTagBlockElements, stringToMap('address,article,' + 'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' + 'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));

	    // Inline Elements - HTML5
	    var inlineElements = extend({}, optionalEndTagInlineElements, stringToMap('a,abbr,acronym,b,' + 'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' + 'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));

	    // SVG Elements
	    // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements
	    // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.
	    // They can potentially allow for arbitrary javascript to be executed. See #11290
	    var svgElements = stringToMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' + 'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' + 'radialGradient,rect,stop,svg,switch,text,title,tspan');

	    // Blocked Elements (will be stripped)
	    var blockedElements = stringToMap('script,style');

	    var validElements = extend({}, voidElements, blockElements, inlineElements, optionalEndTagElements);

	    //Attributes that have href and hence need to be sanitized
	    var uriAttrs = stringToMap('background,cite,href,longdesc,src,xlink:href,xml:base');

	    var htmlAttrs = stringToMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' + 'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' + 'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' + 'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' + 'valign,value,vspace,width');

	    // SVG attributes (without "id" and "name" attributes)
	    // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes
	    var svgAttrs = stringToMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' + 'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' + 'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' + 'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' + 'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' + 'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' + 'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' + 'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' + 'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' + 'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' + 'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' + 'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' + 'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' + 'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' + 'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);

	    var validAttrs = extend({}, uriAttrs, svgAttrs, htmlAttrs);

	    function stringToMap(str, lowercaseKeys) {
	      return arrayToMap(str.split(','), lowercaseKeys);
	    }

	    function arrayToMap(items, lowercaseKeys) {
	      var obj = {},
	          i;
	      for (i = 0; i < items.length; i++) {
	        obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;
	      }
	      return obj;
	    }

	    function addElementsTo(elementsMap, newElements) {
	      if (newElements && newElements.length) {
	        extend(elementsMap, arrayToMap(newElements));
	      }
	    }

	    /**
	     * Create an inert document that contains the dirty HTML that needs sanitizing.
	     * We use the DOMParser API by default and fall back to createHTMLDocument if DOMParser is not
	     * available.
	     */
	    var getInertBodyElement /* function(html: string): HTMLBodyElement */ = function (window, document) {
	      if (isDOMParserAvailable()) {
	        return getInertBodyElement_DOMParser;
	      }

	      if (!document || !document.implementation) {
	        throw $sanitizeMinErr('noinert', 'Can\'t create an inert html document');
	      }
	      var inertDocument = document.implementation.createHTMLDocument('inert');
	      var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');
	      return getInertBodyElement_InertDocument;

	      function isDOMParserAvailable() {
	        try {
	          return !!getInertBodyElement_DOMParser('');
	        } catch (e) {
	          return false;
	        }
	      }

	      function getInertBodyElement_DOMParser(html) {
	        // We add this dummy element to ensure that the rest of the content is parsed as expected
	        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.
	        html = '<remove></remove>' + html;
	        try {
	          var body = new window.DOMParser().parseFromString(html, 'text/html').body;
	          body.firstChild.remove();
	          return body;
	        } catch (e) {
	          return undefined;
	        }
	      }

	      function getInertBodyElement_InertDocument(html) {
	        inertBodyElement.innerHTML = html;

	        // Support: IE 9-11 only
	        // strip custom-namespaced attributes on IE<=11
	        if (document.documentMode) {
	          stripCustomNsAttrs(inertBodyElement);
	        }

	        return inertBodyElement;
	      }
	    }(window, window.document);

	    /**
	     * @example
	     * htmlParser(htmlString, {
	     *     start: function(tag, attrs) {},
	     *     end: function(tag) {},
	     *     chars: function(text) {},
	     *     comment: function(text) {}
	     * });
	     *
	     * @param {string} html string
	     * @param {object} handler
	     */
	    function htmlParserImpl(html, handler) {
	      if (html === null || html === undefined) {
	        html = '';
	      } else if (typeof html !== 'string') {
	        html = '' + html;
	      }

	      var inertBodyElement = getInertBodyElement(html);
	      if (!inertBodyElement) return '';

	      //mXSS protection
	      var mXSSAttempts = 5;
	      do {
	        if (mXSSAttempts === 0) {
	          throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');
	        }
	        mXSSAttempts--;

	        // trigger mXSS if it is going to happen by reading and writing the innerHTML
	        html = inertBodyElement.innerHTML;
	        inertBodyElement = getInertBodyElement(html);
	      } while (html !== inertBodyElement.innerHTML);

	      var node = inertBodyElement.firstChild;
	      while (node) {
	        switch (node.nodeType) {
	          case 1:
	            // ELEMENT_NODE
	            handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));
	            break;
	          case 3:
	            // TEXT NODE
	            handler.chars(node.textContent);
	            break;
	        }

	        var nextNode;
	        if (!(nextNode = node.firstChild)) {
	          if (node.nodeType === 1) {
	            handler.end(node.nodeName.toLowerCase());
	          }
	          nextNode = getNonDescendant('nextSibling', node);
	          if (!nextNode) {
	            while (nextNode == null) {
	              node = getNonDescendant('parentNode', node);
	              if (node === inertBodyElement) break;
	              nextNode = getNonDescendant('nextSibling', node);
	              if (node.nodeType === 1) {
	                handler.end(node.nodeName.toLowerCase());
	              }
	            }
	          }
	        }
	        node = nextNode;
	      }

	      while (node = inertBodyElement.firstChild) {
	        inertBodyElement.removeChild(node);
	      }
	    }

	    function attrToMap(attrs) {
	      var map = {};
	      for (var i = 0, ii = attrs.length; i < ii; i++) {
	        var attr = attrs[i];
	        map[attr.name] = attr.value;
	      }
	      return map;
	    }

	    /**
	     * Escapes all potentially dangerous characters, so that the
	     * resulting string can be safely inserted into attribute or
	     * element text.
	     * @param value
	     * @returns {string} escaped text
	     */
	    function encodeEntities(value) {
	      return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, function (value) {
	        var hi = value.charCodeAt(0);
	        var low = value.charCodeAt(1);
	        return '&#' + ((hi - 0xD800) * 0x400 + (low - 0xDC00) + 0x10000) + ';';
	      }).replace(NON_ALPHANUMERIC_REGEXP, function (value) {
	        return '&#' + value.charCodeAt(0) + ';';
	      }).replace(/</g, '&lt;').replace(/>/g, '&gt;');
	    }

	    /**
	     * create an HTML/XML writer which writes to buffer
	     * @param {Array} buf use buf.join('') to get out sanitized html string
	     * @returns {object} in the form of {
	     *     start: function(tag, attrs) {},
	     *     end: function(tag) {},
	     *     chars: function(text) {},
	     *     comment: function(text) {}
	     * }
	     */
	    function htmlSanitizeWriterImpl(buf, uriValidator) {
	      var ignoreCurrentElement = false;
	      var out = bind(buf, buf.push);
	      return {
	        start: function start(tag, attrs) {
	          tag = lowercase(tag);
	          if (!ignoreCurrentElement && blockedElements[tag]) {
	            ignoreCurrentElement = tag;
	          }
	          if (!ignoreCurrentElement && validElements[tag] === true) {
	            out('<');
	            out(tag);
	            forEach(attrs, function (value, key) {
	              var lkey = lowercase(key);
	              var isImage = tag === 'img' && lkey === 'src' || lkey === 'background';
	              if (validAttrs[lkey] === true && (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {
	                out(' ');
	                out(key);
	                out('="');
	                out(encodeEntities(value));
	                out('"');
	              }
	            });
	            out('>');
	          }
	        },
	        end: function end(tag) {
	          tag = lowercase(tag);
	          if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {
	            out('</');
	            out(tag);
	            out('>');
	          }
	          // eslint-disable-next-line eqeqeq
	          if (tag == ignoreCurrentElement) {
	            ignoreCurrentElement = false;
	          }
	        },
	        chars: function chars(_chars) {
	          if (!ignoreCurrentElement) {
	            out(encodeEntities(_chars));
	          }
	        }
	      };
	    }

	    /**
	     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare
	     * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want
	     * to allow any of these custom attributes. This method strips them all.
	     *
	     * @param node Root element to process
	     */
	    function stripCustomNsAttrs(node) {
	      while (node) {
	        if (node.nodeType === window.Node.ELEMENT_NODE) {
	          var attrs = node.attributes;
	          for (var i = 0, l = attrs.length; i < l; i++) {
	            var attrNode = attrs[i];
	            var attrName = attrNode.name.toLowerCase();
	            if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {
	              node.removeAttributeNode(attrNode);
	              i--;
	              l--;
	            }
	          }
	        }

	        var nextNode = node.firstChild;
	        if (nextNode) {
	          stripCustomNsAttrs(nextNode);
	        }

	        node = getNonDescendant('nextSibling', node);
	      }
	    }

	    function getNonDescendant(propName, node) {
	      // An element is clobbered if its `propName` property points to one of its descendants
	      var nextNode = node[propName];
	      if (nextNode && nodeContains.call(node, nextNode)) {
	        throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);
	      }
	      return nextNode;
	    }
	  }

	  function sanitizeText(chars) {
	    var buf = [];
	    var writer = htmlSanitizeWriter(buf, noop);
	    writer.chars(chars);
	    return buf.join('');
	  }

	  // define ngSanitize module and register $sanitize service
	  angular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider).info({ angularVersion: '1.8.3' });

	  /**
	   * @ngdoc filter
	   * @name linky
	   * @kind function
	   *
	   * @description
	   * Finds links in text input and turns them into html links. Supports `http/https/ftp/sftp/mailto` and
	   * plain email address links.
	   *
	   * Requires the {@link ngSanitize `ngSanitize`} module to be installed.
	   *
	   * @param {string} text Input text.
	   * @param {string} [target] Window (`_blank|_self|_parent|_top`) or named frame to open links in.
	   * @param {object|function(url)} [attributes] Add custom attributes to the link element.
	   *
	   *    Can be one of:
	   *
	   *    - `object`: A map of attributes
	   *    - `function`: Takes the url as a parameter and returns a map of attributes
	   *
	   *    If the map of attributes contains a value for `target`, it overrides the value of
	   *    the target parameter.
	   *
	   *
	   * @returns {string} Html-linkified and {@link $sanitize sanitized} text.
	   *
	   * @usage
	     <span ng-bind-html="linky_expression | linky"></span>
	   *
	   * @example
	     <example module="linkyExample" deps="angular-sanitize.js" name="linky-filter">
	       <file name="index.html">
	         <div ng-controller="ExampleController">
	         Snippet: <textarea ng-model="snippet" cols="60" rows="3"></textarea>
	         <table>
	           <tr>
	             <th>Filter</th>
	             <th>Source</th>
	             <th>Rendered</th>
	           </tr>
	           <tr id="linky-filter">
	             <td>linky filter</td>
	             <td>
	               <pre>&lt;div ng-bind-html="snippet | linky"&gt;<br>&lt;/div&gt;</pre>
	             </td>
	             <td>
	               <div ng-bind-html="snippet | linky"></div>
	             </td>
	           </tr>
	           <tr id="linky-target">
	            <td>linky target</td>
	            <td>
	              <pre>&lt;div ng-bind-html="snippetWithSingleURL | linky:'_blank'"&gt;<br>&lt;/div&gt;</pre>
	            </td>
	            <td>
	              <div ng-bind-html="snippetWithSingleURL | linky:'_blank'"></div>
	            </td>
	           </tr>
	           <tr id="linky-custom-attributes">
	            <td>linky custom attributes</td>
	            <td>
	              <pre>&lt;div ng-bind-html="snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}"&gt;<br>&lt;/div&gt;</pre>
	            </td>
	            <td>
	              <div ng-bind-html="snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}"></div>
	            </td>
	           </tr>
	           <tr id="escaped-html">
	             <td>no filter</td>
	             <td><pre>&lt;div ng-bind="snippet"&gt;<br>&lt;/div&gt;</pre></td>
	             <td><div ng-bind="snippet"></div></td>
	           </tr>
	         </table>
	       </file>
	       <file name="script.js">
	         angular.module('linkyExample', ['ngSanitize'])
	           .controller('ExampleController', ['$scope', function($scope) {
	             $scope.snippet =
	               'Pretty text with some links:\n' +
	               'http://angularjs.org/,\n' +
	               'mailto:us@somewhere.org,\n' +
	               'another@somewhere.org,\n' +
	               'and one more: ftp://127.0.0.1/.';
	             $scope.snippetWithSingleURL = 'http://angularjs.org/';
	           }]);
	       </file>
	       <file name="protractor.js" type="protractor">
	         it('should linkify the snippet with urls', function() {
	           expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).
	               toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +
	                    'another@somewhere.org, and one more: ftp://127.0.0.1/.');
	           expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);
	         });
	  
	         it('should not linkify snippet without the linky filter', function() {
	           expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).
	               toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +
	                    'another@somewhere.org, and one more: ftp://127.0.0.1/.');
	           expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);
	         });
	  
	         it('should update', function() {
	           element(by.model('snippet')).clear();
	           element(by.model('snippet')).sendKeys('new http://link.');
	           expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).
	               toBe('new http://link.');
	           expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);
	           expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())
	               .toBe('new http://link.');
	         });
	  
	         it('should work with the target property', function() {
	          expect(element(by.id('linky-target')).
	              element(by.binding("snippetWithSingleURL | linky:'_blank'")).getText()).
	              toBe('http://angularjs.org/');
	          expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');
	         });
	  
	         it('should optionally add custom attributes', function() {
	          expect(element(by.id('linky-custom-attributes')).
	              element(by.binding("snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}")).getText()).
	              toBe('http://angularjs.org/');
	          expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');
	         });
	       </file>
	     </example>
	   */
	  angular.module('ngSanitize').filter('linky', ['$sanitize', function ($sanitize) {
	    var LINKY_URL_REGEXP = /((s?ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
	        MAILTO_REGEXP = /^mailto:/i;

	    var linkyMinErr = angular.$$minErr('linky');
	    var isDefined = angular.isDefined;
	    var isFunction = angular.isFunction;
	    var isObject = angular.isObject;
	    var isString = angular.isString;

	    return function (text, target, attributes) {
	      if (text == null || text === '') return text;
	      if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);

	      var attributesFn = isFunction(attributes) ? attributes : isObject(attributes) ? function getAttributesObject() {
	        return attributes;
	      } : function getEmptyAttributesObject() {
	        return {};
	      };

	      var match;
	      var raw = text;
	      var html = [];
	      var url;
	      var i;
	      while (match = raw.match(LINKY_URL_REGEXP)) {
	        // We can not end in these as they are sometimes found at the end of the sentence
	        url = match[0];
	        // if we did not match ftp/http/www/mailto then assume mailto
	        if (!match[2] && !match[4]) {
	          url = (match[3] ? 'http://' : 'mailto:') + url;
	        }
	        i = match.index;
	        addText(raw.substr(0, i));
	        addLink(url, match[0].replace(MAILTO_REGEXP, ''));
	        raw = raw.substring(i + match[0].length);
	      }
	      addText(raw);
	      return $sanitize(html.join(''));

	      function addText(text) {
	        if (!text) {
	          return;
	        }
	        html.push(sanitizeText(text));
	      }

	      function addLink(url, text) {
	        var key,
	            linkAttributes = attributesFn(url);
	        html.push('<a ');

	        for (key in linkAttributes) {
	          html.push(key + '="' + linkAttributes[key] + '" ');
	        }

	        if (isDefined(target) && !('target' in linkAttributes)) {
	          html.push('target="', target, '" ');
	        }
	        html.push('href="', url.replace(/"/g, '&quot;'), '">');
	        addText(text);
	        html.push('</a>');
	      }
	    };
	  }]);
	})(window, window.angular);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(1);
	__webpack_require__(6);

	module.exports = 'duScroll';

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {'use strict';

	/**
	  * x is a value between 0 and 1, indicating where in the animation you are.
	  */
	var duScrollDefaultEasing = function duScrollDefaultEasing(x) {
	  'use strict';

	  if (x < 0.5) {
	    return Math.pow(x * 2, 2) / 2;
	  }
	  return 1 - Math.pow((1 - x) * 2, 2) / 2;
	};

	var duScroll = angular.module('duScroll', ['duScroll.scrollspy', 'duScroll.smoothScroll', 'duScroll.scrollContainer', 'duScroll.spyContext', 'duScroll.scrollHelpers'])
	//Default animation duration for smoothScroll directive
	.value('duScrollDuration', 350)
	//Scrollspy debounce interval, set to 0 to disable
	.value('duScrollSpyWait', 100)
	//Scrollspy forced refresh interval, use if your content changes or reflows without scrolling.
	//0 to disable
	.value('duScrollSpyRefreshInterval', 0)
	//Wether or not multiple scrollspies can be active at once
	.value('duScrollGreedy', false)
	//Default offset for smoothScroll directive
	.value('duScrollOffset', 0)
	//Default easing function for scroll animation
	.value('duScrollEasing', duScrollDefaultEasing)
	//Which events on the container (such as body) should cancel scroll animations
	.value('duScrollCancelOnEvents', 'scroll mousedown mousewheel touchmove keydown')
	//Whether or not to activate the last scrollspy, when page/container bottom is reached
	.value('duScrollBottomSpy', false)
	//Active class name
	.value('duScrollActiveClass', 'active');

	if (typeof module !== 'undefined' && module && module.exports) {
	  module.exports = duScroll;
	}

	angular.module('duScroll.scrollHelpers', ['duScroll.requestAnimation']).run(["$window", "$q", "cancelAnimation", "requestAnimation", "duScrollEasing", "duScrollDuration", "duScrollOffset", "duScrollCancelOnEvents", function ($window, $q, cancelAnimation, requestAnimation, duScrollEasing, duScrollDuration, duScrollOffset, duScrollCancelOnEvents) {
	  'use strict';

	  var proto = {};

	  var isDocument = function isDocument(el) {
	    return typeof HTMLDocument !== 'undefined' && el instanceof HTMLDocument || el.nodeType && el.nodeType === el.DOCUMENT_NODE;
	  };

	  var isElement = function isElement(el) {
	    return typeof HTMLElement !== 'undefined' && el instanceof HTMLElement || el.nodeType && el.nodeType === el.ELEMENT_NODE;
	  };

	  var unwrap = function unwrap(el) {
	    return isElement(el) || isDocument(el) ? el : el[0];
	  };

	  proto.duScrollTo = function (left, top, duration, easing) {
	    var aliasFn;
	    if (angular.isElement(left)) {
	      aliasFn = this.duScrollToElement;
	    } else if (angular.isDefined(duration)) {
	      aliasFn = this.duScrollToAnimated;
	    }
	    if (aliasFn) {
	      return aliasFn.apply(this, arguments);
	    }
	    var el = unwrap(this);
	    if (isDocument(el)) {
	      return $window.scrollTo(left, top);
	    }
	    el.scrollLeft = left;
	    el.scrollTop = top;
	  };

	  var scrollAnimation, deferred;
	  proto.duScrollToAnimated = function (left, top, duration, easing) {
	    if (duration && !easing) {
	      easing = duScrollEasing;
	    }
	    var startLeft = this.duScrollLeft(),
	        startTop = this.duScrollTop(),
	        deltaLeft = Math.round(left - startLeft),
	        deltaTop = Math.round(top - startTop);

	    var startTime = null,
	        progress = 0;
	    var el = this;

	    var cancelScrollAnimation = function cancelScrollAnimation($event) {
	      if (!$event || progress && $event.which > 0) {
	        if (duScrollCancelOnEvents) {
	          el.unbind(duScrollCancelOnEvents, cancelScrollAnimation);
	        }
	        cancelAnimation(scrollAnimation);
	        deferred.reject();
	        scrollAnimation = null;
	      }
	    };

	    if (scrollAnimation) {
	      cancelScrollAnimation();
	    }
	    deferred = $q.defer();

	    if (duration === 0 || !deltaLeft && !deltaTop) {
	      if (duration === 0) {
	        el.duScrollTo(left, top);
	      }
	      deferred.resolve();
	      return deferred.promise;
	    }

	    var animationStep = function animationStep(timestamp) {
	      if (startTime === null) {
	        startTime = timestamp;
	      }

	      progress = timestamp - startTime;
	      var percent = progress >= duration ? 1 : easing(progress / duration);

	      el.scrollTo(startLeft + Math.ceil(deltaLeft * percent), startTop + Math.ceil(deltaTop * percent));
	      if (percent < 1) {
	        scrollAnimation = requestAnimation(animationStep);
	      } else {
	        if (duScrollCancelOnEvents) {
	          el.unbind(duScrollCancelOnEvents, cancelScrollAnimation);
	        }
	        scrollAnimation = null;
	        deferred.resolve();
	      }
	    };

	    //Fix random mobile safari bug when scrolling to top by hitting status bar
	    el.duScrollTo(startLeft, startTop);

	    if (duScrollCancelOnEvents) {
	      el.bind(duScrollCancelOnEvents, cancelScrollAnimation);
	    }

	    scrollAnimation = requestAnimation(animationStep);
	    return deferred.promise;
	  };

	  proto.duScrollToElement = function (target, offset, duration, easing) {
	    var el = unwrap(this);
	    if (!angular.isNumber(offset) || isNaN(offset)) {
	      offset = duScrollOffset;
	    }
	    var top = this.duScrollTop() + unwrap(target).getBoundingClientRect().top - offset;
	    if (isElement(el)) {
	      top -= el.getBoundingClientRect().top;
	    }
	    return this.duScrollTo(0, top, duration, easing);
	  };

	  proto.duScrollLeft = function (value, duration, easing) {
	    if (angular.isNumber(value)) {
	      return this.duScrollTo(value, this.duScrollTop(), duration, easing);
	    }
	    var el = unwrap(this);
	    if (isDocument(el)) {
	      return $window.scrollX || document.documentElement.scrollLeft || document.body.scrollLeft;
	    }
	    return el.scrollLeft;
	  };
	  proto.duScrollTop = function (value, duration, easing) {
	    if (angular.isNumber(value)) {
	      return this.duScrollTo(this.duScrollLeft(), value, duration, easing);
	    }
	    var el = unwrap(this);
	    if (isDocument(el)) {
	      return $window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;
	    }
	    return el.scrollTop;
	  };

	  proto.duScrollToElementAnimated = function (target, offset, duration, easing) {
	    return this.duScrollToElement(target, offset, duration || duScrollDuration, easing);
	  };

	  proto.duScrollTopAnimated = function (top, duration, easing) {
	    return this.duScrollTop(top, duration || duScrollDuration, easing);
	  };

	  proto.duScrollLeftAnimated = function (left, duration, easing) {
	    return this.duScrollLeft(left, duration || duScrollDuration, easing);
	  };

	  angular.forEach(proto, function (fn, key) {
	    angular.element.prototype[key] = fn;

	    //Remove prefix if not already claimed by jQuery / ui.utils
	    var unprefixed = key.replace(/^duScroll/, 'scroll');
	    if (angular.isUndefined(angular.element.prototype[unprefixed])) {
	      angular.element.prototype[unprefixed] = fn;
	    }
	  });
	}]);

	//Adapted from https://gist.github.com/paulirish/1579671
	angular.module('duScroll.polyfill', []).factory('polyfill', ["$window", function ($window) {
	  'use strict';

	  var vendors = ['webkit', 'moz', 'o', 'ms'];

	  return function (fnName, fallback) {
	    if ($window[fnName]) {
	      return $window[fnName];
	    }
	    var suffix = fnName.substr(0, 1).toUpperCase() + fnName.substr(1);
	    for (var key, i = 0; i < vendors.length; i++) {
	      key = vendors[i] + suffix;
	      if ($window[key]) {
	        return $window[key];
	      }
	    }
	    return fallback;
	  };
	}]);

	angular.module('duScroll.requestAnimation', ['duScroll.polyfill']).factory('requestAnimation', ["polyfill", "$timeout", function (polyfill, $timeout) {
	  'use strict';

	  var lastTime = 0;
	  var fallback = function fallback(callback, element) {
	    var currTime = new Date().getTime();
	    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
	    var id = $timeout(function () {
	      callback(currTime + timeToCall);
	    }, timeToCall);
	    lastTime = currTime + timeToCall;
	    return id;
	  };

	  return polyfill('requestAnimationFrame', fallback);
	}]).factory('cancelAnimation', ["polyfill", "$timeout", function (polyfill, $timeout) {
	  'use strict';

	  var fallback = function fallback(promise) {
	    $timeout.cancel(promise);
	  };

	  return polyfill('cancelAnimationFrame', fallback);
	}]);

	angular.module('duScroll.spyAPI', ['duScroll.scrollContainerAPI']).factory('spyAPI', ["$rootScope", "$timeout", "$interval", "$window", "$document", "scrollContainerAPI", "duScrollGreedy", "duScrollSpyWait", "duScrollSpyRefreshInterval", "duScrollBottomSpy", "duScrollActiveClass", function ($rootScope, $timeout, $interval, $window, $document, scrollContainerAPI, duScrollGreedy, duScrollSpyWait, duScrollSpyRefreshInterval, duScrollBottomSpy, duScrollActiveClass) {
	  'use strict';

	  var createScrollHandler = function createScrollHandler(context) {
	    var timer = false,
	        queued = false;
	    var handler = function handler() {
	      queued = false;
	      var container = context.container,
	          containerEl = container[0],
	          containerOffset = 0,
	          bottomReached;

	      if (typeof HTMLElement !== 'undefined' && containerEl instanceof HTMLElement || containerEl.nodeType && containerEl.nodeType === containerEl.ELEMENT_NODE) {
	        containerOffset = containerEl.getBoundingClientRect().top;
	        bottomReached = Math.round(containerEl.scrollTop + containerEl.clientHeight) >= containerEl.scrollHeight;
	      } else {
	        var documentScrollHeight = $document[0].body.scrollHeight || $document[0].documentElement.scrollHeight; // documentElement for IE11
	        bottomReached = Math.round($window.pageYOffset + $window.innerHeight) >= documentScrollHeight;
	      }
	      var compareProperty = duScrollBottomSpy && bottomReached ? 'bottom' : 'top';

	      var i, currentlyActive, toBeActive, spies, spy, pos;
	      spies = context.spies;
	      currentlyActive = context.currentlyActive;
	      toBeActive = undefined;

	      for (i = 0; i < spies.length; i++) {
	        spy = spies[i];
	        pos = spy.getTargetPosition();
	        if (!pos || !spy.$element) continue;

	        if (duScrollBottomSpy && bottomReached || pos.top + spy.offset - containerOffset < 20 && (duScrollGreedy || pos.top * -1 + containerOffset) < pos.height) {
	          //Find the one closest the viewport top or the page bottom if it's reached
	          if (!toBeActive || toBeActive[compareProperty] < pos[compareProperty]) {
	            toBeActive = {
	              spy: spy
	            };
	            toBeActive[compareProperty] = pos[compareProperty];
	          }
	        }
	      }

	      if (toBeActive) {
	        toBeActive = toBeActive.spy;
	      }
	      if (currentlyActive === toBeActive || duScrollGreedy && !toBeActive) return;
	      if (currentlyActive && currentlyActive.$element) {
	        currentlyActive.$element.removeClass(duScrollActiveClass);
	        $rootScope.$broadcast('duScrollspy:becameInactive', currentlyActive.$element, angular.element(currentlyActive.getTargetElement()));
	      }
	      if (toBeActive) {
	        toBeActive.$element.addClass(duScrollActiveClass);
	        $rootScope.$broadcast('duScrollspy:becameActive', toBeActive.$element, angular.element(toBeActive.getTargetElement()));
	      }
	      context.currentlyActive = toBeActive;
	    };

	    if (!duScrollSpyWait) {
	      return handler;
	    }

	    //Debounce for potential performance savings
	    return function () {
	      if (!timer) {
	        handler();
	        timer = $timeout(function () {
	          timer = false;
	          if (queued) {
	            handler();
	          }
	        }, duScrollSpyWait, false);
	      } else {
	        queued = true;
	      }
	    };
	  };

	  var contexts = {};

	  var createContext = function createContext($scope) {
	    var id = $scope.$id;
	    var context = {
	      spies: []
	    };

	    context.handler = createScrollHandler(context);
	    contexts[id] = context;

	    $scope.$on('$destroy', function () {
	      destroyContext($scope);
	    });

	    return id;
	  };

	  var destroyContext = function destroyContext($scope) {
	    var id = $scope.$id;
	    var context = contexts[id],
	        container = context.container;
	    if (context.intervalPromise) {
	      $interval.cancel(context.intervalPromise);
	    }
	    if (container) {
	      container.off('scroll', context.handler);
	    }
	    delete contexts[id];
	  };

	  var defaultContextId = createContext($rootScope);

	  var getContextForScope = function getContextForScope(scope) {
	    if (contexts[scope.$id]) {
	      return contexts[scope.$id];
	    }
	    if (scope.$parent) {
	      return getContextForScope(scope.$parent);
	    }
	    return contexts[defaultContextId];
	  };

	  var getContextForSpy = function getContextForSpy(spy) {
	    var context,
	        contextId,
	        scope = spy.$scope;
	    if (scope) {
	      return getContextForScope(scope);
	    }
	    //No scope, most likely destroyed
	    for (contextId in contexts) {
	      context = contexts[contextId];
	      if (context.spies.indexOf(spy) !== -1) {
	        return context;
	      }
	    }
	  };

	  var isElementInDocument = function isElementInDocument(element) {
	    while (element.parentNode) {
	      element = element.parentNode;
	      if (element === document) {
	        return true;
	      }
	    }
	    return false;
	  };

	  var addSpy = function addSpy(spy) {
	    var context = getContextForSpy(spy);
	    if (!context) return;
	    context.spies.push(spy);
	    if (!context.container || !isElementInDocument(context.container)) {
	      if (context.container) {
	        context.container.off('scroll', context.handler);
	      }
	      context.container = scrollContainerAPI.getContainer(spy.$scope);
	      if (duScrollSpyRefreshInterval && !context.intervalPromise) {
	        context.intervalPromise = $interval(context.handler, duScrollSpyRefreshInterval, 0, false);
	      }
	      context.container.on('scroll', context.handler).triggerHandler('scroll');
	    }
	  };

	  var removeSpy = function removeSpy(spy) {
	    var context = getContextForSpy(spy);
	    if (spy === context.currentlyActive) {
	      $rootScope.$broadcast('duScrollspy:becameInactive', context.currentlyActive.$element);
	      context.currentlyActive = null;
	    }
	    var i = context.spies.indexOf(spy);
	    if (i !== -1) {
	      context.spies.splice(i, 1);
	    }
	    spy.$element = null;
	  };

	  return {
	    addSpy: addSpy,
	    removeSpy: removeSpy,
	    createContext: createContext,
	    destroyContext: destroyContext,
	    getContextForScope: getContextForScope
	  };
	}]);

	angular.module('duScroll.scrollContainerAPI', []).factory('scrollContainerAPI', ["$document", function ($document) {
	  'use strict';

	  var containers = {};

	  var setContainer = function setContainer(scope, element) {
	    var id = scope.$id;
	    containers[id] = element;
	    return id;
	  };

	  var getContainerId = function getContainerId(scope) {
	    if (containers[scope.$id]) {
	      return scope.$id;
	    }
	    if (scope.$parent) {
	      return getContainerId(scope.$parent);
	    }
	    return;
	  };

	  var getContainer = function getContainer(scope) {
	    var id = getContainerId(scope);
	    return id ? containers[id] : $document;
	  };

	  var removeContainer = function removeContainer(scope) {
	    var id = getContainerId(scope);
	    if (id) {
	      delete containers[id];
	    }
	  };

	  return {
	    getContainerId: getContainerId,
	    getContainer: getContainer,
	    setContainer: setContainer,
	    removeContainer: removeContainer
	  };
	}]);

	angular.module('duScroll.smoothScroll', ['duScroll.scrollHelpers', 'duScroll.scrollContainerAPI']).directive('duSmoothScroll', ["duScrollDuration", "duScrollOffset", "scrollContainerAPI", function (duScrollDuration, duScrollOffset, scrollContainerAPI) {
	  'use strict';

	  return {
	    link: function link($scope, $element, $attr) {
	      $element.on('click', function (e) {
	        if ((!$attr.href || $attr.href.indexOf('#') === -1) && $attr.duSmoothScroll === '') return;

	        var id = $attr.href ? $attr.href.replace(/.*(?=#[^\s]+$)/, '').substring(1) : $attr.duSmoothScroll;

	        var target = document.getElementById(id) || document.getElementsByName(id)[0];
	        if (!target || !target.getBoundingClientRect) return;

	        if (e.stopPropagation) e.stopPropagation();
	        if (e.preventDefault) e.preventDefault();

	        var offset = $attr.offset ? parseInt($attr.offset, 10) : duScrollOffset;
	        var duration = $attr.duration ? parseInt($attr.duration, 10) : duScrollDuration;
	        var container = scrollContainerAPI.getContainer($scope);

	        container.duScrollToElement(angular.element(target), isNaN(offset) ? 0 : offset, isNaN(duration) ? 0 : duration);
	      });
	    }
	  };
	}]);

	angular.module('duScroll.spyContext', ['duScroll.spyAPI']).directive('duSpyContext', ["spyAPI", function (spyAPI) {
	  'use strict';

	  return {
	    restrict: 'A',
	    scope: true,
	    compile: function compile(tElement, tAttrs, transclude) {
	      return {
	        pre: function preLink($scope, iElement, iAttrs, controller) {
	          spyAPI.createContext($scope);
	        }
	      };
	    }
	  };
	}]);

	angular.module('duScroll.scrollContainer', ['duScroll.scrollContainerAPI']).directive('duScrollContainer', ["scrollContainerAPI", function (scrollContainerAPI) {
	  'use strict';

	  return {
	    restrict: 'A',
	    scope: true,
	    compile: function compile(tElement, tAttrs, transclude) {
	      return {
	        pre: function preLink($scope, iElement, iAttrs, controller) {
	          iAttrs.$observe('duScrollContainer', function (element) {
	            if (angular.isString(element)) {
	              element = document.getElementById(element);
	            }

	            element = angular.isElement(element) ? angular.element(element) : iElement;
	            scrollContainerAPI.setContainer($scope, element);
	            $scope.$on('$destroy', function () {
	              scrollContainerAPI.removeContainer($scope);
	            });
	          });
	        }
	      };
	    }
	  };
	}]);

	angular.module('duScroll.scrollspy', ['duScroll.spyAPI']).directive('duScrollspy', ["spyAPI", "duScrollOffset", "$timeout", "$rootScope", function (spyAPI, duScrollOffset, $timeout, $rootScope) {
	  'use strict';

	  var Spy = function Spy(targetElementOrId, $scope, $element, offset) {
	    if (angular.isElement(targetElementOrId)) {
	      this.target = targetElementOrId;
	    } else if (angular.isString(targetElementOrId)) {
	      this.targetId = targetElementOrId;
	    }
	    this.$scope = $scope;
	    this.$element = $element;
	    this.offset = offset;
	  };

	  Spy.prototype.getTargetElement = function () {
	    if (!this.target && this.targetId) {
	      this.target = document.getElementById(this.targetId) || document.getElementsByName(this.targetId)[0];
	    }
	    return this.target;
	  };

	  Spy.prototype.getTargetPosition = function () {
	    var target = this.getTargetElement();
	    if (target) {
	      return target.getBoundingClientRect();
	    }
	  };

	  Spy.prototype.flushTargetCache = function () {
	    if (this.targetId) {
	      this.target = undefined;
	    }
	  };

	  return {
	    link: function link($scope, $element, $attr) {
	      var href = $attr.ngHref || $attr.href;
	      var targetId;

	      if (href && href.indexOf('#') !== -1) {
	        targetId = href.replace(/.*(?=#[^\s]+$)/, '').substring(1);
	      } else if ($attr.duScrollspy) {
	        targetId = $attr.duScrollspy;
	      } else if ($attr.duSmoothScroll) {
	        targetId = $attr.duSmoothScroll;
	      }
	      if (!targetId) return;

	      // Run this in the next execution loop so that the scroll context has a chance
	      // to initialize
	      var timeoutPromise = $timeout(function () {
	        var spy = new Spy(targetId, $scope, $element, -($attr.offset ? parseInt($attr.offset, 10) : duScrollOffset));
	        spyAPI.addSpy(spy);

	        $scope.$on('$locationChangeSuccess', spy.flushTargetCache.bind(spy));
	        var deregisterOnStateChange = $rootScope.$on('$stateChangeSuccess', spy.flushTargetCache.bind(spy));
	        $scope.$on('$destroy', function () {
	          spyAPI.removeSpy(spy);
	          deregisterOnStateChange();
	        });
	      }, 0, false);
	      $scope.$on('$destroy', function () {
	        $timeout.cancel(timeoutPromise);
	      });
	    }
	  };
	}]);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	"use strict";

	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _reader = __webpack_require__(9);

	var _reader2 = _interopRequireDefault(_reader);

	var _toc = __webpack_require__(10);

	var _toc2 = _interopRequireDefault(_toc);

	var _noteOverlay = __webpack_require__(11);

	var _noteOverlay2 = _interopRequireDefault(_noteOverlay);

	var _searchForm = __webpack_require__(12);

	var _searchForm2 = _interopRequireDefault(_searchForm);

	var _searchResults = __webpack_require__(13);

	var _searchResults2 = _interopRequireDefault(_searchResults);

	var _pageJump = __webpack_require__(14);

	var _pageJump2 = _interopRequireDefault(_pageJump);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var components = _angular2.default.module('app.components', [_noteOverlay2.default, _pageJump2.default, _reader2.default, _searchForm2.default, _searchResults2.default, _toc2.default]).name;

	exports.default = components;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _angularSanitize = __webpack_require__(3);

	var ngSanitize = _interopRequireWildcard(_angularSanitize);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReaderController = function () {
	    function ReaderController($sce) {
	        _classCallCheck(this, ReaderController);

	        this.$sce = $sce;
	    }

	    _createClass(ReaderController, [{
	        key: 'safe',
	        value: function safe(page) {
	            if (page.highlight_contents) {
	                return this.$sce.trustAsHtml(page.highlight_contents);
	            } else {
	                return this.$sce.trustAsHtml(page.contents);
	            }
	        }
	    }]);

	    return ReaderController;
	}();

	var ReaderComponent = {
	    bindings: {
	        pages: '=',
	        openNote: '&',
	        highlight: '@'
	    },
	    controller: ReaderController,
	    template: '\n        <div id="reader">\n            <div ng-repeat="page in $ctrl.pages" id="{{ page.page_id }}" class="page-container">\n                <div class="page-id">{{ page.page_id }}</div>\n                <div ng-bind-html="$ctrl.safe(page)"></div>\n            </div>\n        </div>\n        '
	};

	var reader = angular.module('reader', ['ngSanitize']).component('reader', ReaderComponent).name;

	exports.default = reader;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var TocController = function () {
	    function TocController($rootScope) {
	        _classCallCheck(this, TocController);

	        this.items = [];
	        this.sortItems();
	        this.scope = $rootScope;
	    }

	    _createClass(TocController, [{
	        key: 'sortItems',
	        value: function sortItems() {
	            var _this = this;

	            // Sort the items
	            this.items.sort(function (a, b) {

	                var aNorm = _this.normalizeKey(a.key);
	                var bNorm = _this.normalizeKey(b.key);

	                if (aNorm < bNorm) {
	                    return -1;
	                }
	                if (aNorm > bNorm) {
	                    return 1;
	                }
	                return 0;
	            });
	        }
	    }, {
	        key: 'normalizeKey',
	        value: function normalizeKey(key) {
	            var parts = key.split('.');
	            var normalized = [];
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var part = _step.value;

	                    if (isNaN(part)) {
	                        var alpha = part.substr(0, 1);
	                        var num = part.substr(1);
	                        num = num.length == 1 ? '0' + num : num;
	                        normalized.push(alpha + num);
	                    } else {
	                        var _num = part.length == 1 ? '0' + part : part;
	                        normalized.push(_num);
	                    }
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            return normalized.join('.');
	        }
	    }, {
	        key: 'expand',
	        value: function expand(key) {
	            this.scope.$broadcast('expand', { 'key': this.removeDots(key) });
	        }
	    }, {
	        key: 'removeDots',
	        value: function removeDots(key) {
	            return key.replace(/\./g, '-');
	        }
	    }]);

	    return TocController;
	}();

	var TocComponent = {
	    bindings: {
	        items: '<'
	    },
	    controller: TocController,
	    template: '\n        <ul class="nav nav-sidebar">\n          <li ng-repeat="item in $ctrl.items track by $index" du-scrollspy="{{item.key}}" ng-class="{\'expandible\': item.children.length}" class="toc-item" id="toc-{{ $ctrl.removeDots(item.key) }}">\n            <a href="#{{item.key}}" du-smooth-scroll class="toc-a" ng-click="$ctrl.expand(item.key)">\n                <div class="row">\n                    <div class="toc-icon">\n                        <span class="glyphicon glyphicon-chevron-right" ng-if="item.children.length"></span>\n                    </div>\n                    <div class="toc-title" ng-class="{\'no-children\': !item.children.length}">{{ item.title }}</div>\n                </div>\n            </a>\n            <div class="toc-level">\n                <toc ng-if="item.children.length" items="item.children" on-get-page="$ctrl.handleGetPage(heading)" current-page="$ctrl.currentPage"></toc>\n            </div>\n          </li>\n        </ul>\n    '
	};

	var toc = angular.module('toc', ['ngSanitize', 'duScroll']).component('toc', TocComponent).name;

	exports.default = toc;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NoteOverlayController = function NoteOverlayController() {
	    _classCallCheck(this, NoteOverlayController);
	};

	var NoteOverlayComponent = {
	    bindings: {
	        note: '<',
	        closeNote: '&'
	    },
	    controller: NoteOverlayController,
	    template: '\n       <div class="note-background" ng-click="$ctrl.closeNote()" ng-if="$ctrl.note">\n       </div>\n       <div class="note-overlay" ng-if="$ctrl.note"><div style="padding: 20px;" ng-bind-html="$ctrl.note"></div></div>\n    '
	};

	var noteOverlay = angular.module('noteOverlay', ['ngSanitize']).component('noteOverlay', NoteOverlayComponent).name;

	exports.default = noteOverlay;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SearchFormController = function () {
	    function SearchFormController() {
	        _classCallCheck(this, SearchFormController);

	        this.query = '';
	    }

	    _createClass(SearchFormController, [{
	        key: 'onSubmit',
	        value: function onSubmit() {
	            console.log('submitting');
	            this.onSearch({ query: this.query });
	        }
	    }]);

	    return SearchFormController;
	}();

	var SearchFormComponent = {
	    bindings: {
	        onSearch: '&'
	    },
	    controller: SearchFormController,
	    template: '\n\n        <form class="navbar-form navbar-right" role="search" ng-submit="$ctrl.onSubmit();">\n            <div class="input-group">\n                <input type="text" class="form-control" placeholder="Search" ng-model="$ctrl.query">\n                <span class="input-group-btn">\n                    <button class="btn btn-default" type="submit" style="height:34px">\n                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>\n                    </button>\n                </span>\n            </div>\n        </form>\n        '
	};

	var searchForm = angular.module('searchForm', []).component('searchForm', SearchFormComponent).name;

	exports.default = searchForm;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	//import * as ngSanitize from 'angular-sanitize';

	var SearchResultsController = function () {
	    function SearchResultsController($sce) {
	        _classCallCheck(this, SearchResultsController);

	        this.$sce = $sce;
	    }

	    _createClass(SearchResultsController, [{
	        key: 'handleGoToPage',
	        value: function handleGoToPage(pageId) {
	            this.goToPage({ pageId: pageId });
	        }
	    }, {
	        key: 'scrubLineNumbers',
	        value: function scrubLineNumbers(result) {
	            console.log(result);
	            var regExp = new RegExp('.*<em>.*');
	            var singleLineResult = result.match(regExp);
	            console.log(singleLineResult);
	            return singleLineResult.replace(/\d/gi, ' ');
	        }
	    }, {
	        key: 'noResults',
	        value: function noResults() {
	            return angular.equals(this.results, {});
	        }
	        /*
	            safe(string){
	                return this.$sce.trustAsHtml(string);
	            }
	        */

	    }]);

	    return SearchResultsController;
	}();

	var SearchResultsComponent = {
	    bindings: {
	        results: '<',
	        goToPage: '&',
	        closeSearchResults: '&',
	        query: '@'
	    },
	    controller: SearchResultsController,
	    template: '\n            <div class="no-results" ng-if="$ctrl.noResults()">\n                <h2>No results found for <em>{{ $ctrl.query }}</em></h2>\n            </div>\n            <div ng-repeat="(id,heading) in $ctrl.results track by $index" class="result-group">\n                <span class="result-heading">{{heading.heading.heading}}</span>\n                <ul class="list-unstyled" ng-repeat="result in heading.results track by $index">\n                    <li ng-repeat="preview in result.preview track by $index" style="margin-left: 20px; padding: 3px 0;">\n                        <span class="preview" ng-bind-html="$ctrl.scrubLineNumbers(preview)"></span>\n                        <a href="#{{ result.page_id }}" ng-click="$ctrl.closeSearchResults()">(...Page {{ result.page_id }})</a>\n                    </li>\n                </ul>\n            </div>\n        '
	};

	var searchResults = angular.module('searchResults', ['ngSanitize']).component('searchResults', SearchResultsComponent).name;

	exports.default = searchResults;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PageJumpController = function () {
	    function PageJumpController() {
	        _classCallCheck(this, PageJumpController);
	    }

	    _createClass(PageJumpController, [{
	        key: 'onSubmit',
	        value: function onSubmit() {
	            this.goToPage({ pageId: this.pageNum });
	        }
	    }]);

	    return PageJumpController;
	}();

	var PageJumpComponent = {
	    bindings: {
	        goToPage: '&'
	    },
	    controller: PageJumpController,
	    template: '\n        <form ng-submit="$ctrl.onSubmit();" class="form-inline page-jump" style="margin-bottom:20px;">\n            <div class="form-group">\n                <label for="pageNum">Go To Page:</label>\n                <div class="input-group">\n                    <input type="text" class="form-control" ng-model="$ctrl.pageNum">\n                    <span class="input-group-btn">\n                        <button class="btn btn-default" type="submit">\n                            <span class="glyphicon glyphicon-circle-arrow-right" aria-hidden="true"></span>\n                        </button>\n                    </span>\n                </div>\n            </div>\n        </form>\n        '
	};

	var pageJump = angular.module('pageJump', []).component('pageJump', PageJumpComponent).name;

	exports.default = pageJump;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:true});var titles=exports.titles={"a2":{"heading":"[Preliminaries]","page":"I"},"a2.1":{"heading":"[Cover]","page":"I"},"a2.2":{"heading":"[Half Title]","page":"II"},"a2.4":{"heading":"[Title Page]","page":"III"},"a2.5":{"heading":"[Verso of Title Page]","page":"IV"},"a3":{"heading":"Acknowledgments","page":"V"},"a3.1":{"heading":"1965","page":"V"},"a3.2":{"heading":"1982","page":"V"},"a3.3":{"heading":"[Modern Language Association]","page":"VI"},"a4":{"heading":"[Editors' Note]","page":"VI"},"a5":{"heading":"Preface","page":"XXIII"},"a5.1":{"heading":"SYMBOLS","page":"XXIV"},"a6":{"heading":"THE NATURE OF THIS COMPLETE EDITION","page":"XXV"},"b1":{"heading":"I. \n\t\t\t\n\t\t\t\n\t\t\tTHE WORKS IN ILLUMINATED PRINTING","page":"1"},"b1.1":{"heading":"ALL RELIGIONS are ONE","page":"1"},"b1.2":{"heading":"THERE is NO NATURAL RELIGION \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t[a]","page":"2"},"b1.3":{"heading":"THERE is NO NATURAL RELIGION \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t[b]","page":"2"},"b1.4":{"heading":"THE BOOK of THEL","page":"3"},"b1.4.1":{"heading":"THEL'S \n\t\t\t\t\tMotto,","page":"3"},"b1.4.2":{"heading":"THEL","page":"3"},"b1.4.2.1":{"heading":"I","page":"3"},"b1.4.2.2":{"heading":"II.","page":"4"},"b1.4.2.3":{"heading":"III","page":"5"},"b1.4.2.4":{"heading":"IV.","page":"6"},"b1.5":{"heading":"SONGS Of \n\t\t\t\tINNOCENCE\n\t\t\t\tand Of \n\t\t\t\tEXPERIENCE","page":"7"},"b1.5.1":{"heading":"SONGS of INNOCENCE","page":"7"},"b1.5.1.1":{"heading":"Introduction","page":"7"},"b1.5.1.2":{"heading":"The Shepherd.","page":"7"},"b1.5.1.3":{"heading":"The Ecchoing Green","page":"8"},"b1.5.1.4":{"heading":"The Lamb","page":"8"},"b1.5.1.5":{"heading":"The Little Black Boy.","page":"9"},"b1.5.1.6":{"heading":"The Blossom.","page":"10"},"b1.5.1.7":{"heading":"The Chimney Sweeper","page":"10"},"b1.5.1.8":{"heading":"The Little Boy lost","page":"11"},"b1.5.1.9":{"heading":"The Little Boy Found","page":"11"},"b1.5.1.10":{"heading":"Laughing Song,","page":"11"},"b1.5.1.11":{"heading":"A CRADLE SONG","page":"11"},"b1.5.1.12":{"heading":"The Divine Image.","page":"12"},"b1.5.1.13":{"heading":"HOLY THURSDAY","page":"13"},"b1.5.1.14":{"heading":"Night","page":"13"},"b1.5.1.15":{"heading":"Spring","page":"14"},"b1.5.1.16":{"heading":"Nurse's Song","page":"15"},"b1.5.1.17":{"heading":"Infant Joy","page":"16"},"b1.5.1.18":{"heading":"A Dream","page":"16"},"b1.5.1.19":{"heading":"On Anothers Sorrow","page":"17"},"b1.5.2":{"heading":"SONGS of EXPERIENCE","page":"18"},"b1.5.2.1":{"heading":"Introduction.","page":"18"},"b1.5.2.2":{"heading":"EARTH'S Answer.","page":"18"},"b1.5.2.3":{"heading":"The CLOD & the PEBBLE","page":"19"},"b1.5.2.4":{"heading":"HOLY THURSDAY","page":"19"},"b1.5.2.5":{"heading":"The Little Girl Lost","page":"20"},"b1.5.2.7":{"heading":"The Little Girl Found","page":"21"},"b1.5.2.8":{"heading":"THE Chimney Sweeper","page":"22"},"b1.5.2.9":{"heading":"NURSES Song","page":"23"},"b1.5.2.10":{"heading":"The SICK ROSE","page":"23"},"b1.5.2.11":{"heading":"THE FLY.","page":"23"},"b1.5.2.12":{"heading":"The Angel","page":"24"},"b1.5.2.13":{"heading":"The Tyger.","page":"24"},"b1.5.2.14":{"heading":"My Pretty ROSE TREE","page":"25"},"b1.5.2.15":{"heading":"AH! SUN-FLOWER","page":"25"},"b1.5.2.16":{"heading":"The LILLY","page":"25"},"b1.5.2.17":{"heading":"The GARDEN of LOVE","page":"26"},"b1.5.2.18":{"heading":"The Little Vagabond","page":"26"},"b1.5.2.19":{"heading":"LONDON","page":"26"},"b1.5.2.20":{"heading":"The Human Abstract.","page":"27"},"b1.5.2.21":{"heading":"INFANT SORROW","page":"28"},"b1.5.2.22":{"heading":"A POISON TREE.","page":"28"},"b1.5.2.23":{"heading":"A Little BOY Lost","page":"28"},"b1.5.2.24":{"heading":"A Little GIRL Lost","page":"29"},"b1.5.2.25":{"heading":"To Tirzah","page":"30"},"b1.5.2.26":{"heading":"The School Boy","page":"31"},"b1.5.2.27":{"heading":"The Voice of the Ancient Bard.","page":"31"},"b1.5.2.28":{"heading":"A DIVINE IMAGE","page":"32"},"b1.6":{"heading":"For Children\n\t\t\t\t\n\t\t\t\tThe GATES of PARADISE","page":"32"},"b1.7":{"heading":"THE \n\t\t\t\tMARRIAGE\n\t\t\t\tof HEAVEN and HELL","page":"33"},"b1.7.1":{"heading":"The Argument.","page":"33"},"b1.7.3":{"heading":"The voice of the Devil","page":"34"},"b1.7.5":{"heading":"A Memorable Fancy.","page":"35"},"b1.7.6":{"heading":"Proverbs of Hell.","page":"35"},"b1.7.8":{"heading":"A Memorable Fancy.","page":"38"},"b1.7.10":{"heading":"A Memorable Fancy","page":"40"},"b1.7.12":{"heading":"A Memorable Fancy","page":"41"},"b1.7.14":{"heading":"A Memorable Fancy","page":"43"},"b1.7.15":{"heading":"A Song of Liberty","page":"44"},"b1.7.16":{"heading":"Chorus","page":"45"},"b1.8":{"heading":"VISIONS of the Daughters of Albion","page":"45"},"b1.8.1":{"heading":"The Argument","page":"45"},"b1.8.2":{"heading":"Visions","page":"45"},"b1.9":{"heading":"AMERICA a PROPHECY","page":"51"},"b1.9.1":{"heading":"PRELUDIUM","page":"51"},"b1.9.2":{"heading":"A PROPHECY","page":"52"},"b1.9.3":{"heading":"[Canceled Plates]","page":"58"},"b1.9.4":{"heading":"[Fragment]","page":"59"},"b1.10":{"heading":"EUROPE a PROPHECY","page":"60"},"b1.10.2":{"heading":"PRELUDIUM","page":"60"},"b1.10.3":{"heading":"A PROPHECY","page":"61"},"b1.11":{"heading":"THE SONG of LOS","page":"67"},"b1.11.1":{"heading":"AFRICA","page":"67"},"b1.11.2":{"heading":"ASIA","page":"68"},"b1.12":{"heading":"THE \n\t\t\t\t\n\t\t\t\t\t[\n\t\t\t\t\tFIRST\n\t\t\t\t\t]BOOK of URIZEN","page":"70"},"b1.12.1":{"heading":"PRELUDIUM TO THE \n\t\t\t\t\t\n\t\t\t\t\t\t[\n\t\t\t\t\t\tFIRST\n\t\t\t\t\t\t]BOOK OF URIZEN","page":"70"},"b1.12.2":{"heading":"Chap: I","page":"70"},"b1.12.3":{"heading":"Chap: II.","page":"71"},"b1.12.4":{"heading":"Chap: III.","page":"72"},"b1.12.5":{"heading":"Chap: IV:[a]","page":"74"},"b1.12.6":{"heading":"Chap: IV.[b]","page":"74"},"b1.12.7":{"heading":"Chap: V.","page":"77"},"b1.12.8":{"heading":"Chap: VI.","page":"79"},"b1.12.9":{"heading":"Chap.  VII.","page":"80"},"b1.12.10":{"heading":"Chap.  VIII.","page":"81"},"b1.12.11":{"heading":"Chap: IX","page":"82"},"b1.13":{"heading":"THE BOOK of AHANIA","page":"84"},"b1.13.1":{"heading":"AHANIA \n\t\t\t\t\t\n\t\t\t\t\tChap: I\n\t\t\t\t\tst","page":"84"},"b1.13.2":{"heading":"Chap: II:\n\t\t\t\t\td","page":"85"},"b1.13.3":{"heading":"Chap:   III:","page":"86"},"b1.13.4":{"heading":"Chap: IV:","page":"87"},"b1.13.5":{"heading":"Chap: V","page":"88"},"b1.14":{"heading":"THE BOOK of LOS","page":"90"},"b1.14.1":{"heading":"LOS \n\t\t\t\t\t\n\t\t\t\t\tChap. I","page":"90"},"b1.14.2":{"heading":"Chap: II","page":"92"},"b1.14.3":{"heading":"Chap: III","page":"93"},"b1.14.4":{"heading":"Chap: IV:","page":"93"},"b1.15":{"heading":"MILTON\n\t\t\t\t\n\t\t\t\t\n\t\t\t\ta Poem in 2 Books","page":"95"},"b1.15.1":{"heading":"Preface.","page":"95"},"b1.15.2":{"heading":"MILTON \n\t\t\t\t\t\n\t\t\t\t\tBook the First","page":"96"},"b1.15.3":{"heading":"MILTON: BOOK THE  SECOND","page":"129"},"b1.16":{"heading":"JERUSALEM \n\t\t\t\t\n\t\t\t\tThe Emanation of The Giant Albion","page":"144"},"b1.16.1":{"heading":"[Frontispiece]","page":"144"},"b1.16.2":{"heading":"SHEEP\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\n\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0 GOATS","page":"145"},"b1.16.3":{"heading":"Jerusalem \n\t\t\t\t\t\n\t\t\t\t\tChap: I","page":"146"},"b1.16.4":{"heading":"To the Jews.","page":"171"},"b1.16.5":{"heading":"Jerusalem. \n\t\t\t\t\t\n\t\t\t\t\tChap: 2.","page":"174"},"b1.16.6":{"heading":"To the Deists.","page":"200"},"b1.16.7":{"heading":"Jerusalem \n\t\t\t\t\t\n\t\t\t\t\tChap 3.","page":"202"},"b1.16.8":{"heading":"To the Christians.","page":"231"},"b1.16.9":{"heading":"Jerusalem. C 4","page":"233"},"b1.17":{"heading":"For The Sexes \n\t\t\t\t\n\t\t\t\t\n\t\t\t\tTHE GATES of\nPARADISE","page":"259"},"b1.17.1":{"heading":"[Prologue]","page":"259"},"b1.17.2":{"heading":"Frontispiece","page":"259"},"b1.17.4":{"heading":"THE KEYS","page":"268"},"b1.17.5":{"heading":"of the GATES","page":"268"},"b1.17.6":{"heading":"[Epilogue]","page":"269"},"b1.18":{"heading":"ON HOMERS POETRY","page":"269"},"b1.19":{"heading":"ON VIRGIL","page":"270"},"b1.20":{"heading":"THE GHOST of ABEL","page":"270"},"b1.23":{"heading":"[The Laoco\xF6n]","page":"273"},"b2":{"heading":"II. \n\t\t\t\n\t\t\t\n\t\t\t[PROPHETIC WORKS, UNENGRAVED]","page":"276"},"b2.1":{"heading":"TIRIEL","page":"276"},"b2.1.1":{"heading":"1","page":"276"},"b2.1.2":{"heading":"2","page":"277"},"b2.1.3":{"heading":"3","page":"279"},"b2.1.4":{"heading":"4","page":"280"},"b2.1.5":{"heading":"5","page":"282"},"b2.1.6":{"heading":"6","page":"282"},"b2.1.7":{"heading":"7","page":"284"},"b2.1.8":{"heading":"8","page":"284"},"b2.2":{"heading":"THE \n\t\t\t\t\n\t\t\t\tFRENCH REVOLUTION.","page":"285"},"b2.2.1":{"heading":"ADVERTISEMENT.","page":"286"},"b2.2.2":{"heading":"THE FRENCH REVOLUTION. \n\t\t\t\t\t\n\t\t\t\t\tBook the First.","page":"286"},"b2.3":{"heading":"THE FOUR ZOAS","page":"300"},"b2.3.1":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the First","page":"300"},"b2.3.2":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the [Second]","page":"313"},"b2.3.3":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the Third","page":"326"},"b2.3.4":{"heading":"Vala \n\t\t\t\t\t\n\t\t\t\t\tNight The Fourth","page":"331"},"b2.3.5":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight The Fifth","page":"338"},"b2.3.6":{"heading":"VALA\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tNight the Sixth","page":"344"},"b2.3.7":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the Seventh","page":"352"},"b2.3.8":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the Eighth","page":"371"},"b2.3.9":{"heading":"VALA \n\t\t\t\t\t\n\t\t\t\t\tNight the Ninth \n\t\t\t\t\t\n\t\t\t\t\tBeing \n\t\t\t\t\t\n\t\t\t\t\tThe Last Judgment","page":"386"},"b3":{"heading":"III.\n\t\t\t\n\t\t\t\n\t\t\tPOETICAL SKETCHES.","page":"408"},"b3.1":{"heading":"MISCELLANEOUS POEMS.","page":"408"},"b3.1.1":{"heading":"TO SPRING.","page":"408"},"b3.1.2":{"heading":"TO SUMMER.","page":"409"},"b3.1.3":{"heading":"TO AUTUMN","page":"409"},"b3.1.4":{"heading":"TO WINTER.","page":"410"},"b3.1.5":{"heading":"TO THE \n\t\t\t\t\t\n\t\t\t\t\tEVENING STAR.","page":"410"},"b3.1.6":{"heading":"TO MORNING.","page":"410"},"b3.1.7":{"heading":"FAIR ELENOR.","page":"411"},"b3.1.8":{"heading":"SONG.","page":"412"},"b3.1.9":{"heading":"SONG.","page":"413"},"b3.1.10":{"heading":"SONG.","page":"413"},"b3.1.11":{"heading":"SONG.","page":"414"},"b3.1.12":{"heading":"SONG.","page":"415"},"b3.1.13":{"heading":"MAD SONG.","page":"415"},"b3.1.14":{"heading":"SONG.","page":"416"},"b3.1.15":{"heading":"SONG.","page":"416"},"b3.1.16":{"heading":"TO THE MUSES.","page":"417"},"b3.1.17":{"heading":"GWIN, KING OF NORWAY.","page":"417"},"b3.1.18":{"heading":"AN \n\t\t\t\t\t\n\t\t\t\t\tIMITATION OF SPEN\n\t\t\t\t\t[S]\n\t\t\t\t\tER.","page":"420"},"b3.1.19":{"heading":"BLIND-MAN'S BUFF.","page":"421"},"b3.2":{"heading":"KING EDWARD THE THIRD.","page":"423"},"b3.2.1":{"heading":"SCENE [1], \n\t\t\t\t\t\n\t\t\t\t\t\tThe Coast of France, King Edward\nand Nobles.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tThe Army.","page":"423"},"b3.2.2":{"heading":"SCENE [2], \n\t\t\t\t\t\n\t\t\t\t\t\tEnglish Court; Lionel, Duke of\nClarence; \n\t\t\t\t\t\t\n\t\t\t\t\t\tQueen Philippa, Lords, Bishop, &c.","page":"425"},"b3.2.3":{"heading":"SCENE [3], \n\t\t\t\t\t\n\t\t\t\t\t\tAt Cressey. Sir Thomas Dagworth\nand \n\t\t\t\t\t\t\n\t\t\t\t\t\tLord Audley, meeting.","page":"427"},"b3.2.4":{"heading":"SCENE [4] \n\t\t\t\t\t\n\t\t\t\t\t\tin Sir Thomas Dagworth's Tent,\nDagworth \n\t\t\t\t\t\t\n\t\t\t\t\t\tand William his Man.","page":"434"},"b3.2.5":{"heading":"SCENE [5], \n\t\t\t\t\t\n\t\t\t\t\t\tSir Thomas Dagworth's Tent. Sir\nThomas\n\t\t\t\t\t\t\n\t\t\t\t\t\tDagworth\u2014to him.","page":"435"},"b3.2.6":{"heading":"SCENE [6], \n\t\t\t\t\t\n\t\t\t\t\t\tin the Camp. Several of the Warriors \n\t\t\t\t\t\t\n\t\t\t\t\t\tmet\nat the King's Tent with a Minstrel, who sings \n\t\t\t\t\t\t\n\t\t\t\t\t\tthe following Song:","page":"437"},"b3.2.7":{"heading":"PROLOGUE, \n\t\t\t\t\t\n\t\t\t\t\tINTENDED FOR A DRAMATIC PIECE OF \n\t\t\t\t\t\n\t\t\t\t\tKING\nEDWARD THE FOURTH.","page":"439"},"b3.2.8":{"heading":"PROLOGUE TO KING JOHN.","page":"439"},"b3.2.9":{"heading":"A WAR SONG \n\t\t\t\t\t\n\t\t\t\t\tTO ENGLISHMEN.","page":"440"},"b3.2.10":{"heading":"THE \n\t\t\t\t\t\n\t\t\t\t\tCOUCH OF DEATH.","page":"441"},"b3.2.11":{"heading":"CONTEMPLATION.","page":"442"},"b3.2.12":{"heading":"SAMSON.","page":"443"},"b3.3":{"heading":"[Further Sketches]","page":"446"},"b3.3.1":{"heading":"\u201Cthen She bore Pale desire . . .\u201D","page":"446"},"b3.3.2":{"heading":"\u201CWoe cried the muse . . .\u201D","page":"448"},"b4":{"heading":"IV. \n\t\t\t\n\t\t\t\n\t\t\t[AN ISLAND IN THE MOON]","page":"449"},"b4.1":{"heading":"[Chapter 1]","page":"449"},"b4.2":{"heading":"Chap 2\n\t\t\t\td","page":"451"},"b4.3":{"heading":"Chap 3\n\t\t\t\td","page":"451"},"b4.4":{"heading":"Chap 4","page":"452"},"b4.5":{"heading":"Chap 5","page":"453"},"b4.6":{"heading":"Chap 6","page":"454"},"b4.7":{"heading":"Chap 7","page":"455"},"b4.8":{"heading":"Chap 8","page":"456"},"b4.9":{"heading":"Chap 9","page":"458"},"b4.10":{"heading":"Chap 10","page":"462"},"b4.11":{"heading":"Chap 11","page":"462"},"b5":{"heading":"V. \n\t\t\t\n\t\t\t\n\t\t\t[SONGS AND BALLADS]","page":"466"},"b5.1":{"heading":"Song 1st by a shepherd","page":"466"},"b5.2":{"heading":"Song 3\n\t\t\t\td\n\t\t\t\tby an old shepherd","page":"466"},"b5.3":{"heading":"\"Never pain to tell thy love\"","page":"467"},"b5.4":{"heading":"\"I feard the fury of my wind\"","page":"467"},"b5.5":{"heading":"\"I saw a chapel all of gold\"","page":"467"},"b5.6":{"heading":"\"I laid me down upon a bank\"","page":"468"},"b5.7":{"heading":"A cradle song","page":"468"},"b5.8":{"heading":"\"I asked a thief to steal me a peach\"","page":"468"},"b5.9":{"heading":"To my Mirtle","page":"469"},"b5.10":{"heading":"[To go] on I Plate","page":"469"},"b5.10.1":{"heading":"O lapwing thou fliest around the heath","page":"469"},"b5.10.2":{"heading":"An answer to the parson","page":"469"},"b5.10.3":{"heading":"[Experiment]\"Thou hast a lap full of seed\"","page":"469"},"b5.10.4":{"heading":"Riches","page":"470"},"b5.10.5":{"heading":"\"If you trap the moment before its ripe\"","page":"470"},"b5.11":{"heading":"Eternity","page":"470"},"b5.12":{"heading":"\"I heard an Angel singing\"","page":"470"},"b5.13":{"heading":"\"Silent Silent Night\"","page":"471"},"b5.14":{"heading":"To Nobodaddy","page":"471"},"b5.15":{"heading":"\"Are not the joys of morning sweeter\"","page":"471"},"b5.16":{"heading":"\"How came pride in Man\"","page":"472"},"b5.17":{"heading":"[\n\t\t\t\t\tHow to know Love from Deceit\n\t\t\t\t\t]","page":"472"},"b5.18":{"heading":"The wild flowers song","page":"472"},"b5.19":{"heading":"Soft Snow","page":"473"},"b5.20":{"heading":"Merlins prophecy","page":"473"},"b5.21":{"heading":"\"Why should I care for the men of thames\"","page":"473"},"b5.22":{"heading":"Day","page":"473"},"b5.23":{"heading":"\"The sword sung on the barren heath\"","page":"473"},"b5.24":{"heading":"\"Abstinence sows sand all over\"","page":"474"},"b5.25":{"heading":"\"In a wife I would desire\"","page":"474"},"b5.26":{"heading":"Lacedemonian Instruction","page":"474"},"b5.27":{"heading":"\"An old maid early eer I knew\"","page":"474"},"b5.28":{"heading":"Several Questions Answerd","page":"474"},"b5.28.1":{"heading":"\"He who binds to himself a joy\"","page":"474"},"b5.28.2":{"heading":"\"The look of love alarms\"","page":"474"},"b5.28.3":{"heading":"\"Soft deceit & Idleness\"","page":"474"},"b5.28.4":{"heading":"\"What is it men do in women require\"","page":"474"},"b5.28.5":{"heading":"An ancient Proverb","page":"475"},"b5.29":{"heading":"The Fairy","page":"475"},"b5.30":{"heading":"The Kid","page":"475"},"b5.31":{"heading":"\u201CMy Spectre around me night & day\u201D","page":"475"},"b5.32":{"heading":"[Postscript]\u201COer my Sins Thou sit & moan\u201D","page":"477"},"b5.33":{"heading":"\"Mock on Mock on Voltaire Rousseau\"","page":"477"},"b5.34":{"heading":"Morning","page":"478"},"b5.35":{"heading":"\"Terror in the house does roar\"","page":"478"},"b5.36":{"heading":"The Birds","page":"478"},"b5.37":{"heading":"\"Why was Cupid a Boy\"","page":"479"},"b5.38":{"heading":"\"Now Art has lost its mental Charms\"","page":"479"},"b5.39":{"heading":"To the Queen","page":"480"},"b5.40":{"heading":"\"The Caverns of the Grave Ive seen\"","page":"480"},"b5.41":{"heading":"\"I rose up at the dawn of day\"","page":"481"},"b5.42":{"heading":"\"A fairy skipd upon my knee\"","page":"481"},"b5.43":{"heading":"\"Around the Springs of Gray my wild root weaves\"","page":"482"},"b5.44":{"heading":"To M\n\t\t\t\trs\n\t\t\t\tAnn Flaxman","page":"482"},"b5.45":{"heading":"[The Pickering Manuscript]","page":"482"},"b5.45.1":{"heading":"The Smile","page":"482"},"b5.45.2":{"heading":"The Golden Net","page":"483"},"b5.45.3":{"heading":"The Mental Traveller","page":"483"},"b5.45.4":{"heading":"The Land of Dreams","page":"486"},"b5.45.5":{"heading":"Mary","page":"487"},"b5.45.6":{"heading":"The Crystal Cabinet","page":"488"},"b5.45.7":{"heading":"The Grey Monk","page":"489"},"b5.45.8":{"heading":"Auguries of Innocence","page":"490"},"b5.45.10":{"heading":"Long John Brown & Little Mary Bell","page":"496"},"b5.45.11":{"heading":"William Bond","page":"496"},"b5.45.12":{"heading":"Mr Blake's Nursery Rhyme","page":"498"},"b6":{"heading":"VI. \n\t\t\t\n\t\t\t\n\t\t\t[SATIRIC VERSES AND EPIGRAMS]","page":"499"},"b6.1":{"heading":"Motto to the Songs of Innocence & of Experience","page":"499"},"b6.5":{"heading":"On the Virginity of the Virgin \n\t\t\t\t\t\n\t\t\t\t\tMary & Johanna\nSouthcott","page":"501"},"b6.12":{"heading":"From Cratetos","page":"502"},"b6.15":{"heading":"An Epitaph","page":"503"},"b6.16":{"heading":"Another","page":"503"},"b6.17":{"heading":"Another","page":"503"},"b6.21":{"heading":"Blakes apology for his Catalogue","page":"505"},"b6.24":{"heading":"To H","page":"505"},"b6.28":{"heading":"On H\u2014\u2014ys Friendship","page":"506"},"b6.29":{"heading":"To H\u2014\u2014-","page":"506"},"b6.30":{"heading":"On H\u2014\u2014- the Pick thank","page":"506"},"b6.31":{"heading":"Imitation of Pope  A Compliment to the Ladies","page":"506"},"b6.32":{"heading":"William Cowper Esq\n\t\t\t\t\tre","page":"507"},"b6.35":{"heading":"To F\u2014\u2014\u2014","page":"507"},"b6.37":{"heading":"To Nancy F\u2014\u2014\u2014","page":"507"},"b6.38":{"heading":"To F\u2014\u2014\u2014","page":"508"},"b6.41":{"heading":"To S\u2014\u2014\u2014d","page":"508"},"b6.42":{"heading":"On S\u2014\u2014-","page":"508"},"b6.44":{"heading":"On F\u2014\u2014 & S\u2014\u2014","page":"508"},"b6.45":{"heading":"M\n\t\t\t\t\tr\n\t\t\t\t\tStothard to M\n\t\t\t\t\tr\n\t\t\t\t\tCromek","page":"509"},"b6.46":{"heading":"M\n\t\t\t\t\tr\n\t\t\t\t\tCromek to M\n\t\t\t\t\tr\n\t\t\t\t\tStothard","page":"509"},"b6.49":{"heading":"Cromek Speaks","page":"509"},"b6.50":{"heading":"English Encouragement of Art\n\t\t\t\t\t[First reading]","page":"509"},"b6.51":{"heading":"English Encouragement of Art\n\t\t\t\t\t[Final reading]","page":"510"},"b6.63":{"heading":"Florentine Ingratitude","page":"511"},"b6.64":{"heading":"A Pitiful Case","page":"512"},"b6.65":{"heading":"To the Royal Academy","page":"512"},"b6.68":{"heading":"To English Connoisseurs","page":"513"},"b6.70":{"heading":"A Pretty Epigram for the Entertainment of\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tthose\nwho have Paid Great Sums in the \n\t\t\t\t\t\n\t\t\t\t\tVenetian & Flemish Ooze","page":"513"},"b6.73":{"heading":"On the Great Encouragement","page":"514"},"b6.79":{"heading":"To Venetian Artists","page":"515"},"b6.86":{"heading":"To God","page":"516"},"b6.91":{"heading":"The Washer Womans Song","page":"517"},"b6.92":{"heading":"The Phoenix to Mrs Butts","page":"517"},"b7":{"heading":"VII. \n\t\t\t\n\t\t\t\n\t\t\tTHE EVERLASTING GOSPEL","page":"518"},"b7.1":{"heading":"[Preface]","page":"518"},"b7.2":{"heading":"The Everlasting Gospel","page":"518"},"b7.3":{"heading":"[Marginal Comments on this Poem]","page":"524"},"b7.3.1":{"heading":"[At k 102, on the whole Humility section]","page":"524"},"b7.3.2":{"heading":"[On an aborted attempt by Blake's Spectre to add a \n\t\t\t\t\t\n\t\t\t\t\tPhilosophy section,\nhalted after two couplets]","page":"525"},"b8":{"heading":"VIII. \n\t\t\t\n\t\t\t\n\t\t\t[BLAKE'S EXHIBITION \n\t\t\t\n\t\t\tAND CATALOGUE OF\n1809]","page":"526"},"b8.1":{"heading":"[Advertisement of the Exhibition]","page":"526"},"b8.1.5":{"heading":"The Invention of a portable Fresco.","page":"527"},"b8.2":{"heading":"[Advertisement of the Catalogue]","page":"528"},"b8.3":{"heading":"[The Catalogue]","page":"529"},"b8.3.1":{"heading":"CONDITIONS OF SALE.","page":"529"},"b8.3.2":{"heading":"PREFACE.","page":"529"},"b8.3.3":{"heading":"DESCRIPTIVE CATALOGUE, \n\t\t\t\t\t\n\t\t\t\t\t&C. &C.","page":"530"},"b8.3.3.1":{"heading":"NUMBER I.","page":"530"},"b8.3.3.2":{"heading":"NUMBER II, ITS COMPANION","page":"530"},"b8.3.3.3":{"heading":"NUMBER III.","page":"532"},"b8.3.3.4":{"heading":"NUMBER IV.","page":"541"},"b8.3.3.5":{"heading":"NUMBER V.","page":"542"},"b8.3.3.6":{"heading":"NUMBER VI.","page":"546"},"b8.3.3.7":{"heading":"NUMBER VII.","page":"546"},"b8.3.3.8":{"heading":"NUMBER VIII.","page":"546"},"b8.3.3.9":{"heading":"NUMBER IX.","page":"547"},"b8.3.3.10":{"heading":"NUMBER X.","page":"548"},"b8.3.3.11":{"heading":"NUMBER XI.","page":"548"},"b8.3.3.12":{"heading":"NUMBER XII.","page":"548"},"b8.3.3.13":{"heading":"NUMBER XIII.","page":"549"},"b8.3.3.14":{"heading":"NUMBER XIV.","page":"549"},"b8.3.3.15":{"heading":"NUMBER XV.","page":"549"},"b8.3.3.16":{"heading":"NUMBER XVI.","page":"550"},"b8.3.4":{"heading":"INDEX TO THE CATALOGUE.","page":"551"},"b9":{"heading":"IX. \n\t\t\t\n\t\t\t\n\t\t\t[DESCRIPTIONS OF THE LAST JUDGMENT]","page":"552"},"b9.1":{"heading":"[The Design of The Last Judgment]","page":"552"},"b9.2":{"heading":"[\n\t\t\t\t\tA Vision of The Last Judgment\n\t\t\t\t\t]","page":"554"},"b10":{"heading":"X. \n\t\t\t\n\t\t\t\n\t\t\t[BLAKE'S CHAUCER: PROSPECTUSES]","page":"567"},"b10.1":{"heading":"[First Prospectus]","page":"567"},"b10.2":{"heading":"[Second Prospectus, Composite Draft]","page":"568"},"b11":{"heading":"XI. \n\t\t\t\n\t\t\t\n\t\t\t[PUBLIC ADDRESS]","page":"571"},"b11.1":{"heading":"Chaucers Canterbury Pilgrims \n\t\t\t\t\n\t\t\t\tBeing a Complete Index\nof Human Characters \n\t\t\t\t\n\t\t\t\tas they appear Age after Age","page":"571"},"b12":{"heading":"XII. \n\t\t\t\n\t\t\t\n\t\t\t[THE MARGINALIA]","page":"583"},"b12.1":{"heading":"Annotations to Lavater's \n\t\t\t\tAphorisms on Man","page":"583"},"b12.2":{"heading":"Annotations to Swedenborg's \n\n\t\t\t\tHeaven and Hell","page":"601"},"b12.3":{"heading":"Annotations to Swedenborg's \n\t\t\t\t\n\t\t\t\tDivine Love\nand Divine Wisdom","page":"602"},"b12.4":{"heading":"Annotations to Swedenborg's \n\t\t\t\tDivine Providence","page":"609"},"b12.5":{"heading":"Annotations to \n\t\t\t\tAn Apology for the Bible\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tby R. Watson,  Bishop of Landaff.","page":"611"},"b12.6":{"heading":"Annotations to Bacon's \n\t\t\t\t\n\t\t\t\t\tEssays Moral,\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tEconomical and Political","page":"620"},"b12.7":{"heading":"Annotations to Boyd's \n\t\t\t\tHistorical Notes\n\t\t\t\ton Dante","page":"633"},"b12.8":{"heading":"Annotations to \n\t\t\t\tThe Works of Sir Joshua Reynolds\n\n\t\t\t\t,","page":"635"},"b12.8.1.2":{"heading":"","page":"635"},"b12.8.6.25":{"heading":"","page":"651"},"b12.9":{"heading":"Annotations to Spurzheim's \n\t\t\t\tObservations on\nInsanity","page":"662"},"b12.10":{"heading":"Annotations to Berkeley's \n\t\t\t\tSiris","page":"663"},"b12.11":{"heading":"Annotations to Wordsworth's \n\t\t\t\tPoems","page":"665"},"b12.12":{"heading":"Annotations to Wordsworth's Preface to \n\t\t\t\tThe\nExcursion, being a portion of The Recluse, A Poem","page":"666"},"b12.13":{"heading":"Annotations to Thornton's\n\t\t\t\t\n\t\t\t\tThe Lord's Prayer,\nNewly Translated","page":"667"},"b12.14":{"heading":"Annotation to Cellini(?)","page":"670"},"b12.15":{"heading":"Annotation to Young's \n\t\t\t\tNight Thoughts","page":"670"},"b13":{"heading":"XIII. \n\t\t\t\n\t\t\t\n\t\t\t[INSCRIPTIONS AND NOTES \n\t\t\t\n\t\t\tON OR FOR PICTURES]","page":"671"},"b13.2":{"heading":"JOSEPH of Arimathea among The Rocks of Albion","page":"671"},"b13.3":{"heading":"Albion rose from where he labourd at the Mill with Slaves","page":"671"},"b13.4.1":{"heading":"Our End is Come","page":"672"},"b13.5":{"heading":"[List of Subjects for The History of England]","page":"672"},"b13.6":{"heading":"Exodus \n\t\t\t\t[from]\n\t\t\t\tEgypt","page":"673"},"b13.7":{"heading":"[Inscriptions on Separate Illuminated Pages]","page":"673"},"b13.8":{"heading":"[On Sketches for Emblems (with Butlin catalogue numbers)]","page":"674"},"b13.10":{"heading":"[List of Apostles (557ii)]","page":"674"},"b13.11":{"heading":"[Lettering on Sketches for Title Pages]","page":"674"},"b13.17":{"heading":"[Miscellaneous Inscriptions on Designs (with\nButlin\n\t\t\t\t\t\n\t\t\t\t\tcatalogue numbers)]","page":"675"},"b13.18":{"heading":"[Inscriptions on Tombstones]","page":"675"},"b13.19":{"heading":"[List of Designs for \n\t\t\t\tPoems by Mr. Gray\n\t\t\t\t(1790)]","page":"676"},"b13.20":{"heading":"Chaining of Orc","page":"682"},"b13.21":{"heading":"[Descriptions of Illustrations to Milton's\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tL'Allegro\n\t\t\t\t\tand \n\t\t\t\t\tIl Penseroso\n\n\t\t\t\t\t]","page":"682"},"b13.22":{"heading":"[Engraving of Mirth and Her Companions,\n\t\t\t\t\n\t\t\t\tillustrating\n Milton's \n\t\t\t\tL'Allegro\n\t\t\t\t]","page":"686"},"b13.23":{"heading":"[Note on a Pencil Drawing of Nine Grotesque\nHeads]","page":"686"},"b13.24":{"heading":"[Notes in the Blake-Varley Sketchbook c 1819]","page":"686"},"b13.25":{"heading":"Chaucers Canterbury Pilgrims","page":"687"},"b13.26":{"heading":"[Inscriptions on Blake's \n\t\t\t\t\tIllustrations\nof the Book of Job\n\t\t\t\t\t, 1825]","page":"687"},"b13.27":{"heading":"[Blake's signature on the drawing for the job design XIV]","page":"688"},"b13.28":{"heading":"Genesis","page":"688"},"b13.29":{"heading":"[On Blake's Illustrations to Dante]","page":"688"},"b13.30":{"heading":"[On Blake's Epitome of Hervey's Meditations among the\nTombs]","page":"691"},"b14":{"heading":"XIV. \n\t\t\t\n\t\t\t\n\t\t\t[MISCELLANEOUS PROSE]","page":"692"},"b14.1":{"heading":"[Prospectus]\n\t\t\t\t\n\t\t\t\tTO\nTHE PUBLIC","page":"692"},"b14.2":{"heading":"[On the drawings of Thomas Williams Malkin]","page":"693"},"b14.3":{"heading":"[Memoranda from the Notebook]","page":"694"},"b14.3.1":{"heading":"Memorandum \u201CTo Engrave on Pewter\u201D","page":"694"},"b14.3.2":{"heading":"Memorandum \u201CTo Woodcut on Pewter\u201D","page":"694"},"b14.3.3":{"heading":"Memorandum \u201CTo Woodcut on Copper\u201D","page":"694"},"b14.3.4":{"heading":"\u201CIdeas of Good & Evil\u201D","page":"694"},"b14.3.5":{"heading":"From Bells Weekly Messenger Aug\n\t\t\t\t\tst\n\n\t\t\t\t\t4. 1811.","page":"694"},"b14.3.6":{"heading":"\u201CI always thought that Jesus Christ was a Snubby . . .\u201D","page":"695"},"b14.3.7":{"heading":"\u201C23 May 1810 found the Word Golden\u201D","page":"695"},"b14.3.8":{"heading":"\u201CJesus does not treat . . .\u201D","page":"695"},"b14.3.9":{"heading":"\u201CWho shall bind the Infinite\u201D","page":"695"},"b14.3.10":{"heading":"\u201CEvery thing which is in harmony . . .\u201D","page":"695"},"b14.3.11":{"heading":"\u201Con 1 Plate . . .\u201D","page":"695"},"b14.3.12":{"heading":"[Fortunes in Bysshe]","page":"696"},"b14.4":{"heading":"[Inscriptions in the ms of \n\t\t\t\tThe Four Zoas\n\n\t\t\t\t]","page":"697"},"b14.5":{"heading":"[Riddles Answered]","page":"697"},"b14.6":{"heading":"[Blake's Autograph in the Album of William Upcott]","page":"698"},"b15":{"heading":"XV. \n\t\t\t\n\t\t\t\n\t\t\t[THE LETTERS]","page":"699"},"b15.1":{"heading":"1 \n\t\t\t\t\n\t\t\t\t[To Willey Reveley]","page":"699"},"b15.2":{"heading":"2 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tG\n\t\t\t\t[eorge]\n\t\t\t\tCumberland Esq\n\t\t\t\tr\n\t\t\t\t, Bishopsgate \n\t\t\t\t\n\t\t\t\tnear Egham, Surrey","page":"699"},"b15.3":{"heading":"3 \n\t\t\t\t\n\t\t\t\t[To George Cumberland]","page":"700"},"b15.4":{"heading":"4 \n\t\t\t\t\n\t\t\t\tTo The Rev\n\t\t\t\td\n\t\t\t\tD\n\t\t\t\tr\n\t\t\t\tTrusler","page":"701"},"b15.5":{"heading":"5 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tRev\n\t\t\t\td\n\t\t\t\tDr Trusler, Englefield Green, Egham, Surrey","page":"702"},"b15.6":{"heading":"6 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\t[George]\n\t\t\t\tCumberland, Bishopsgate,\n\t\t\t\t\n\t\t\t\tWindsor Great Park","page":"703"},"b15.7":{"heading":"7 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"704"},"b15.8":{"heading":"8 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tWilliam Hayley Esq\n\t\t\t\tr\n\t\t\t\tEartham,\n\t\t\t\t\n\t\t\t\tnear Chichester, Sussex","page":"705"},"b15.9":{"heading":"9 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tWilliam Hayley Esq\n\t\t\t\tr\n\t\t\t\t, Eartham,\n\t\t\t\t\n\t\t\t\tnear Chichester, Sussex","page":"705"},"b15.10":{"heading":"10 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\t[George]\n\t\t\t\tCumberland, Bishopsgate,\n\t\t\t\t\n\t\t\t\tWindsor Great Park","page":"706"},"b15.11":{"heading":"11\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\t[John]\n\t\t\t\tFlaxman, Buckingham Street, \n\t\t\t\t\n\t\t\t\tFitzroy\nSquare","page":"707"},"b15.11.1":{"heading":"To My Dearest Friend John Flaxman\n\t\t\t\t\t\n\t\t\t\t\tthese lines","page":"707"},"b15.12":{"heading":"12\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t[Mrs Blake to Mrs\nFlaxman]","page":"708"},"b15.12.1":{"heading":"To my dear Friend Mrs Anna Flaxman","page":"708"},"b15.13":{"heading":"13 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tat\nMiss Pooles, Lavant\n\t\t\t\t\n\t\t\t\tnear Chichester, Sussex","page":"709"},"b15.14":{"heading":"14 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tMr \n\t\t\t\t[John]\n\t\t\t\tFlaxman, Buckingham Street,\n\t\t\t\t\n\t\t\t\tFitzroy Square, London","page":"710"},"b15.15":{"heading":"15 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\t[Thomas]\n\t\t\t\tButts, G\n\t\t\t\tt\n\t\t\t\tMarlborough Street\n\t\t\t\t\n\t\t\t\tnear\nOxford Street, London","page":"711"},"b15.16":{"heading":"16 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\t[Thomas]\n\t\t\t\tButts, Great Marlborough Street","page":"711"},"b15.16.3":{"heading":"To M\n\t\t\t\t\trs\n\t\t\t\t\tButts","page":"714"},"b15.17":{"heading":"17 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"714"},"b15.18":{"heading":"18 \n\t\t\t\t\n\t\t\t\t[To Thomas Butts]","page":"715"},"b15.19":{"heading":"19 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tButts, Great Marlborough Street, London","page":"716"},"b15.19.2":{"heading":"Felpham Cottage\n\t\t\t\t\t\n\t\t\t\t\tof Cottages the prettiest\n\t\t\t\t\t\n\t\t\t\t\tSeptember\n11. 1801","page":"717"},"b15.20":{"heading":"20 \n\t\t\t\t\n\t\t\t\t[To Thomas Butts?]","page":"717"},"b15.21":{"heading":"21 \n\t\t\t\t\n\t\t\t\tTo M\n\t\t\t\tr\n\t\t\t\tFlaxman, Sculptor, Buckingham\nStreet, \n\t\t\t\t\n\t\t\t\tFitzroy Square, London","page":"717"},"b15.21.2":{"heading":"[Postscript in Hayley's hand]","page":"718"},"b15.22":{"heading":"22 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tButts, G\n\t\t\t\tr\n\t\t\t\tMarlborough Street","page":"718"},"b15.23":{"heading":"23 \n\t\t\t\t\n\t\t\t\t[To Thomas Butts, 22 November 1802]","page":"720"},"b15.24":{"heading":"24 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tButts, Great Marlborough Street,\n\t\t\t\t\n\t\t\t\tOxford Street, London","page":"723"},"b15.25":{"heading":"25 \n\t\t\t\t\n\t\t\t\t[To James Blake]","page":"725"},"b15.26":{"heading":"26 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tButts, Grt Marlborough Street","page":"728"},"b15.27":{"heading":"27 \n\t\t\t\t\n\t\t\t\t[To Thomas Butts]","page":"729"},"b15.28":{"heading":"28 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tButts, Gr Marlborough St, London","page":"731"},"b15.29":{"heading":"29 \n\t\t\t\t\n\t\t\t\tBlake's Memorandum in Refutation of the Information \n\t\t\t\t\n\t\t\t\tand\nComplaint of John Scolfield, a private Soldier, &c.","page":"734"},"b15.30":{"heading":"30 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"736"},"b15.31":{"heading":"31 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\t, Felpham, \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"736"},"b15.32":{"heading":"32 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"737"},"b15.33":{"heading":"33 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tWilliam Hayley Esq\n\t\t\t\tr\n\t\t\t\te  Felpham,\n\t\t\t\t\n\t\t\t\tnear Bognor, Sussex","page":"738"},"b15.34":{"heading":"34 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tr\n\t\t\t\te Felpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"739"},"b15.35":{"heading":"35 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\t, Felpham, \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"740"},"b15.36":{"heading":"36 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre","page":"741"},"b15.37":{"heading":"37 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham, \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"743"},"b15.38":{"heading":"38 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre","page":"743"},"b15.39":{"heading":"39 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\t, Felpham","page":"744"},"b15.40":{"heading":"40\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\t, Felpham \n\t\t\t\t\n\t\t\t\tnear Chichester, Sussex","page":"745"},"b15.41":{"heading":"41 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"745"},"b15.42":{"heading":"42 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"746"},"b15.43":{"heading":"43 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tWilliam Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham, \n\t\t\t\t\n\t\t\t\tnear Chichester, Sussex","page":"747"},"b15.44":{"heading":"44 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"748"},"b15.45":{"heading":"45 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"749"},"b15.46":{"heading":"46 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham, \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"752"},"b15.47":{"heading":"47 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"753"},"b15.48":{"heading":"48 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"754"},"b15.49":{"heading":"49 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"754"},"b15.50":{"heading":"50 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham","page":"755"},"b15.51":{"heading":"51 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"756"},"b15.52":{"heading":"52 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"757"},"b15.53":{"heading":"53 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"758"},"b15.54":{"heading":"54 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"759"},"b15.55":{"heading":"55 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre","page":"761"},"b15.56":{"heading":"56 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"762"},"b15.57":{"heading":"57 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\tFelpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"763"},"b15.58":{"heading":"58 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"765"},"b15.59":{"heading":"59 \n\t\t\t\t\n\t\t\t\t[To William Hayley]","page":"765"},"b15.60":{"heading":"60 \n\t\t\t\t\n\t\t\t\tTo M\n\t\t\t\tr\n\t\t\t\tHayley","page":"766"},"b15.61":{"heading":"61 \n\t\t\t\t\n\t\t\t\tTo William Hayley Esq\n\t\t\t\tre\n\t\t\t\t, Felpham \n\t\t\t\t\n\t\t\t\tnear\nChichester, Sussex","page":"766"},"b15.62":{"heading":"62 \n\t\t\t\t\n\t\t\t\tTo the Editor of the Monthly Magazine.","page":"768"},"b15.63":{"heading":"63 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tRichard Phillips Esq\n\t\t\t\tr\n\t\t\t\tN 6 Bridge Street, \n\t\t\t\t\n\t\t\t\tBlack Friars","page":"769"},"b15.64":{"heading":"64 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tGeorge Cumberland","page":"769"},"b15.65":{"heading":"65 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tOzias Humphrey Esq\n\t\t\t\tre","page":"770"},"b15.66":{"heading":"66 \n\t\t\t\t\n\t\t\t\tTo Josiah Wedgwood Esq\n\t\t\t\tre","page":"770"},"b15.67":{"heading":"67 \n\t\t\t\t\n\t\t\t\tTo Dawson Turner Esq\n\t\t\t\tre\n\t\t\t\t, Yarmouth,\nNorfolk","page":"771"},"b15.68":{"heading":"68 \n\t\t\t\t\n\t\t\t\t[To Thomas Butts?]","page":"772"},"b15.69":{"heading":"69 \n\t\t\t\t\n\t\t\t\t[To John Linnell?]","page":"773"},"b15.70":{"heading":"70 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJ\n\t\t\t\t[ohn]\n\t\t\t\tLinnell Esq\n\t\t\t\tre\n\t\t\t\t, Cirencester Place, \n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"773"},"b15.71":{"heading":"71 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, 6 Cirencester Place, Fitzroy Square","page":"773"},"b15.72":{"heading":"72 \n\t\t\t\t\n\t\t\t\tTo M\n\t\t\t\trs\n\t\t\t\tLinnell, Collinss Farm\nNorth End, Hampstead","page":"774"},"b15.73":{"heading":"73 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJohn Linnell Esq\n\t\t\t\tre\n\t\t\t\t, Cirencester Place, Fitzroy Square","page":"774"},"b15.74":{"heading":"74\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tTo John Linnell Esq\n\t\t\t\tre\n\t\t\t\tN 6 Cirencester Place, \n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"775"},"b15.75":{"heading":"75 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t[To M\n\t\t\t\t\trs\n\t\t\t\t\tLinnell]","page":"776"},"b15.76":{"heading":"76 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJohn Linnell Esq\n\t\t\t\tre\n\t\t\t\t, Cirencester Place","page":"776"},"b15.77":{"heading":"77 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJohn Linnell Esq\n\t\t\t\tre\n\t\t\t\t, Cirencester Place,\n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"777"},"b15.78":{"heading":"78 \n\t\t\t\t\n\t\t\t\tTo John Linnell Esq\n\t\t\t\tre\n\t\t\t\tN 6 Cirencester\nPlace, \n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"777"},"b15.79":{"heading":"79 \n\t\t\t\t\n\t\t\t\tTo John Linnell Esq\n\t\t\t\tre\n\t\t\t\t, N 6\nCirencester Place, \n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"778"},"b15.80":{"heading":"80 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJohn Linnell Esq\n\t\t\t\tre\n\t\t\t\tCirencester Place","page":"778"},"b15.81":{"heading":"81 \n\t\t\t\t\n\t\t\t\tTo M\n\t\t\t\tr\n\t\t\t\tJohn Linnell, Cirencester\nPlace, \n\t\t\t\t\n\t\t\t\tFitzRoy. Square","page":"779"},"b15.81.2":{"heading":"To M\n\t\t\t\t\tr\n\t\t\t\t\tJohn Linnell\u2014July 14:\n1826","page":"779"},"b15.81.3":{"heading":"To M\n\t\t\t\t\tr\n\t\t\t\t\tJohn Linnell, London,/salute>","page":"779"},"b15.82":{"heading":"82 \n\t\t\t\t\n\t\t\t\tTo John Linnell Esq\n\t\t\t\tre\n\t\t\t\tCircencester\nPlace, \n\t\t\t\t\n\t\t\t\tFitzroy Square","page":"779"},"b15.83":{"heading":"83 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, 6. Cirencester Place, Fitzroy Square","page":"780"},"b15.84":{"heading":"84 \n\t\t\t\t\n\t\t\t\tTo M\n\t\t\t\tr\n\t\t\t\tLinnell, Cirencester\nPlace, Fitzroy Square","page":"780"},"b15.85":{"heading":"[To]M\n\t\t\t\trs\n\t\t\t\t[Charles]\n\t\t\t\tAde\n\t\t\t\t[r]\n\t\t\t\ts, Euston Square","page":"781"},"b15.86":{"heading":"86 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, 6 Cirencester Place, Fitzroy Square","page":"781"},"b15.87":{"heading":"87 \n\t\t\t\t\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, Cirencester Place,\nFitzroy Square","page":"781"},"b15.88":{"heading":"88 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tJ\n\t\t\t\t[ohn]\n\t\t\t\tLinnell Esq\n\t\t\t\tre","page":"782"},"b15.89":{"heading":"89 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, Cirencester Place, Fitzroy Square","page":"782"},"b15.90":{"heading":"90 \n\t\t\t\t\n\t\t\t\tTo Miss \n\t\t\t\t[Maria]\n\t\t\t\tDenman, Buckingham\nStreet, Fitzroy Square","page":"783"},"b15.91":{"heading":"91 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tGeorge Cumberland Esq\n\t\t\t\tre\n\t\t\t\t,  Culver Street, Bristol","page":"783"},"b15.92":{"heading":"92 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t[To]M\n\t\t\t\tr\n\t\t\t\tLinnell, 6 Cirencester Place, Fitzroy Square","page":"784"},"b15.93":{"heading":"93 \n\t\t\t\t\n\t\t\t\t[To]\n\t\t\t\tM\n\t\t\t\tr\n\t\t\t\tLinnell, 6 Cirencester Place, Fitzroy Square","page":"785"},"b16":{"heading":"[Recent Conjectural Attributions]","page":"785"}},pages=exports.pages=[{"headings":[["a2",[["a2.1",[]]]]],"page_id":"I"},{"headings":[["a2",[["a2.2",[]],["a2.3",[]]]]],"page_id":"II"},{"headings":[["a2",[["a2.4",[]]]]],"page_id":"III"},{"headings":[["a2",[["a2.5",[]]]]],"page_id":"IV"},{"headings":[["a3",[["a3.1",[]],["a3.2",[]]]]],"page_id":"V"},{"headings":[["a3",[["a3.2",[]],["a3.3",[]]]],["a4",[]]],"page_id":"VI"},{"headings":[["a5",[]]],"page_id":"XXIII"},{"headings":[["a5",[["a5.1",[]]]]],"page_id":"XXIV"},{"headings":[["a6",[]]],"page_id":"XXV"},{"headings":[["a6",[]],["a7",[]],["a8",[]]],"page_id":"XXVI"},{"headings":[],"page_id":"unid_2"},{"headings":[["b1",[["b1.1",[]]]]],"page_id":"1"},{"headings":[["b1",[["b1.1",[]],["b1.2",[]],["b1.3",[]]]]],"page_id":"2"},{"headings":[["b1",[["b1.3",[]],["b1.4",[["b1.4.1",[]],["b1.4.2",[["b1.4.2.1",[]]]]]]]]],"page_id":"3"},{"headings":[["b1",[["b1.4",[["b1.4.2",[["b1.4.2.1",[]],["b1.4.2.2",[]]]]]]]]],"page_id":"4"},{"headings":[["b1",[["b1.4",[["b1.4.2",[["b1.4.2.2",[]],["b1.4.2.3",[]]]]]]]]],"page_id":"5"},{"headings":[["b1",[["b1.4",[["b1.4.2",[["b1.4.2.3",[]],["b1.4.2.4",[]]]]]]]]],"page_id":"6"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.1",[]],["b1.5.1.2",[]]]]]]]]],"page_id":"7"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.3",[]],["b1.5.1.4",[]]]]]]]]],"page_id":"8"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.4",[]],["b1.5.1.5",[]]]]]]]]],"page_id":"9"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.6",[]],["b1.5.1.7",[]]]]]]]]],"page_id":"10"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.8",[]],["b1.5.1.9",[]],["b1.5.1.10",[]],["b1.5.1.11",[]]]]]]]]],"page_id":"11"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.11",[]],["b1.5.1.12",[]]]]]]]]],"page_id":"12"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.12",[]],["b1.5.1.13",[]],["b1.5.1.14",[]]]]]]]]],"page_id":"13"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.14",[]],["b1.5.1.15",[]]]]]]]]],"page_id":"14"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.15",[]],["b1.5.1.16",[]]]]]]]]],"page_id":"15"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.17",[]],["b1.5.1.18",[]]]]]]]]],"page_id":"16"},{"headings":[["b1",[["b1.5",[["b1.5.1",[["b1.5.1.19",[]]]]]]]]],"page_id":"17"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.1",[]],["b1.5.2.2",[]]]]]]]]],"page_id":"18"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.2",[]],["b1.5.2.3",[]],["b1.5.2.4",[]]]]]]]]],"page_id":"19"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.4",[]],["b1.5.2.5",[]]]]]]]]],"page_id":"20"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.5",[]],["b1.5.2.6",[]],["b1.5.2.7",[]]]]]]]]],"page_id":"21"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.7",[]],["b1.5.2.8",[]]]]]]]]],"page_id":"22"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.8",[]],["b1.5.2.9",[]],["b1.5.2.10",[]],["b1.5.2.11",[]]]]]]]]],"page_id":"23"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.11",[]],["b1.5.2.12",[]],["b1.5.2.13",[]]]]]]]]],"page_id":"24"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.13",[]],["b1.5.2.14",[]],["b1.5.2.15",[]],["b1.5.2.16",[]]]]]]]]],"page_id":"25"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.17",[]],["b1.5.2.18",[]],["b1.5.2.19",[]]]]]]]]],"page_id":"26"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.19",[]],["b1.5.2.20",[]]]]]]]]],"page_id":"27"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.21",[]],["b1.5.2.22",[]],["b1.5.2.23",[]]]]]]]]],"page_id":"28"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.23",[]],["b1.5.2.24",[]]]]]]]]],"page_id":"29"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.24",[]],["b1.5.2.25",[]]]]]]]]],"page_id":"30"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.26",[]],["b1.5.2.27",[]]]]]]]]],"page_id":"31"},{"headings":[["b1",[["b1.5",[["b1.5.2",[["b1.5.2.27",[]],["b1.5.2.28",[]]]]]],["b1.6",[]]]]],"page_id":"32"},{"headings":[["b1",[["b1.6",[]],["b1.7",[["b1.7.1",[]]]]]]],"page_id":"33"},{"headings":[["b1",[["b1.7",[["b1.7.2",[]],["b1.7.3",[]],["b1.7.4",[]]]]]]],"page_id":"34"},{"headings":[["b1",[["b1.7",[["b1.7.4",[]],["b1.7.5",[]],["b1.7.6",[]]]]]]],"page_id":"35"},{"headings":[["b1",[["b1.7",[["b1.7.6",[]]]]]]],"page_id":"36"},{"headings":[["b1",[["b1.7",[["b1.7.6",[]]]]]]],"page_id":"37"},{"headings":[["b1",[["b1.7",[["b1.7.6",[]],["b1.7.7",[]],["b1.7.8",[]]]]]]],"page_id":"38"},{"headings":[["b1",[["b1.7",[["b1.7.8",[]],["b1.7.9",[]]]]]]],"page_id":"39"},{"headings":[["b1",[["b1.7",[["b1.7.10",[]],["b1.7.11",[]]]]]]],"page_id":"40"},{"headings":[["b1",[["b1.7",[["b1.7.12",[]]]]]]],"page_id":"41"},{"headings":[["b1",[["b1.7",[["b1.7.12",[]],["b1.7.13",[]]]]]]],"page_id":"42"},{"headings":[["b1",[["b1.7",[["b1.7.13",[]],["b1.7.14",[]]]]]]],"page_id":"43"},{"headings":[["b1",[["b1.7",[["b1.7.14",[]],["b1.7.15",[]]]]]]],"page_id":"44"},{"headings":[["b1",[["b1.7",[["b1.7.15",[]],["b1.7.16",[]]]],["b1.8",[["b1.8.1",[]],["b1.8.2",[]]]]]]],"page_id":"45"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]]]]],"page_id":"46"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]]]]],"page_id":"47"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]]]]],"page_id":"48"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]]]]],"page_id":"49"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]]]]],"page_id":"50"},{"headings":[["b1",[["b1.8",[["b1.8.2",[]]]],["b1.9",[["b1.9.1",[]]]]]]],"page_id":"51"},{"headings":[["b1",[["b1.9",[["b1.9.1",[]],["b1.9.2",[]]]]]]],"page_id":"52"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]]]]]]],"page_id":"53"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]]]]]]],"page_id":"54"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]]]]]]],"page_id":"55"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]]]]]]],"page_id":"56"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]]]]]]],"page_id":"57"},{"headings":[["b1",[["b1.9",[["b1.9.2",[]],["b1.9.3",[]]]]]]],"page_id":"58"},{"headings":[["b1",[["b1.9",[["b1.9.3",[]],["b1.9.4",[]]]]]]],"page_id":"59"},{"headings":[["b1",[["b1.10",[["b1.10.1",[]],["b1.10.2",[]]]]]]],"page_id":"60"},{"headings":[["b1",[["b1.10",[["b1.10.2",[]],["b1.10.3",[]]]]]]],"page_id":"61"},{"headings":[["b1",[["b1.10",[["b1.10.3",[]]]]]]],"page_id":"62"},{"headings":[["b1",[["b1.10",[["b1.10.3",[]]]]]]],"page_id":"63"},{"headings":[["b1",[["b1.10",[["b1.10.3",[]]]]]]],"page_id":"64"},{"headings":[["b1",[["b1.10",[["b1.10.3",[]]]]]]],"page_id":"65"},{"headings":[["b1",[["b1.10",[["b1.10.3",[]]]]]]],"page_id":"66"},{"headings":[["b1",[["b1.11",[["b1.11.1",[]]]]]]],"page_id":"67"},{"headings":[["b1",[["b1.11",[["b1.11.1",[]],["b1.11.2",[]]]]]]],"page_id":"68"},{"headings":[["b1",[["b1.11",[["b1.11.2",[]]]]]]],"page_id":"69"},{"headings":[["b1",[["b1.11",[["b1.11.2",[]]]],["b1.12",[["b1.12.1",[]],["b1.12.2",[]]]]]]],"page_id":"70"},{"headings":[["b1",[["b1.12",[["b1.12.2",[]],["b1.12.3",[]]]]]]],"page_id":"71"},{"headings":[["b1",[["b1.12",[["b1.12.3",[]],["b1.12.4",[]]]]]]],"page_id":"72"},{"headings":[["b1",[["b1.12",[["b1.12.4",[]]]]]]],"page_id":"73"},{"headings":[["b1",[["b1.12",[["b1.12.4",[]],["b1.12.5",[]],["b1.12.6",[]]]]]]],"page_id":"74"},{"headings":[["b1",[["b1.12",[["b1.12.6",[]]]]]]],"page_id":"75"},{"headings":[["b1",[["b1.12",[["b1.12.6",[]]]]]]],"page_id":"76"},{"headings":[["b1",[["b1.12",[["b1.12.7",[]]]]]]],"page_id":"77"},{"headings":[["b1",[["b1.12",[["b1.12.7",[]]]]]]],"page_id":"78"},{"headings":[["b1",[["b1.12",[["b1.12.8",[]]]]]]],"page_id":"79"},{"headings":[["b1",[["b1.12",[["b1.12.8",[]],["b1.12.9",[]]]]]]],"page_id":"80"},{"headings":[["b1",[["b1.12",[["b1.12.9",[]],["b1.12.10",[]]]]]]],"page_id":"81"},{"headings":[["b1",[["b1.12",[["b1.12.10",[]],["b1.12.11",[]]]]]]],"page_id":"82"},{"headings":[["b1",[["b1.12",[["b1.12.11",[]]]]]]],"page_id":"83"},{"headings":[["b1",[["b1.12",[["b1.12.11",[]]]],["b1.13",[["b1.13.1",[]]]]]]],"page_id":"84"},{"headings":[["b1",[["b1.13",[["b1.13.1",[]],["b1.13.2",[]]]]]]],"page_id":"85"},{"headings":[["b1",[["b1.13",[["b1.13.2",[]],["b1.13.3",[]]]]]]],"page_id":"86"},{"headings":[["b1",[["b1.13",[["b1.13.3",[]],["b1.13.4",[]]]]]]],"page_id":"87"},{"headings":[["b1",[["b1.13",[["b1.13.4",[]],["b1.13.5",[]]]]]]],"page_id":"88"},{"headings":[["b1",[["b1.13",[["b1.13.5",[]]]]]]],"page_id":"89"},{"headings":[["b1",[["b1.13",[["b1.13.5",[]]]],["b1.14",[["b1.14.1",[]]]]]]],"page_id":"90"},{"headings":[["b1",[["b1.14",[["b1.14.1",[]]]]]]],"page_id":"91"},{"headings":[["b1",[["b1.14",[["b1.14.2",[]]]]]]],"page_id":"92"},{"headings":[["b1",[["b1.14",[["b1.14.2",[]],["b1.14.3",[]],["b1.14.4",[]]]]]]],"page_id":"93"},{"headings":[["b1",[["b1.14",[["b1.14.4",[]]]]]]],"page_id":"94"},{"headings":[["b1",[["b1.15",[["b1.15.1",[]]]]]]],"page_id":"95"},{"headings":[["b1",[["b1.15",[["b1.15.1",[]],["b1.15.2",[]]]]]]],"page_id":"96"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"97"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"98"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"99"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"100"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"101"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"102"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"103"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"104"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"105"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"106"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"107"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"108"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"109"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"110"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"111"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"112"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"113"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"114"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"115"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"116"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"117"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"118"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"119"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"120"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"121"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"122"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"123"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"124"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"125"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"126"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"127"},{"headings":[["b1",[["b1.15",[["b1.15.2",[]]]]]]],"page_id":"128"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"129"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"130"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"131"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"132"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"133"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"134"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"135"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"136"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"137"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"138"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"139"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"140"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"141"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"142"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]]]]],"page_id":"143"},{"headings":[["b1",[["b1.15",[["b1.15.3",[]]]],["b1.16",[["b1.16.1",[]]]]]]],"page_id":"144"},{"headings":[["b1",[["b1.16",[["b1.16.2",[]]]]]]],"page_id":"145"},{"headings":[["b1",[["b1.16",[["b1.16.2",[]],["b1.16.3",[]]]]]]],"page_id":"146"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"147"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"148"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"149"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"150"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"151"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"152"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"153"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"154"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"155"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"156"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"157"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"158"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"159"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"160"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"161"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"162"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"163"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"164"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"165"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"166"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"167"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"168"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"169"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]]]]]]],"page_id":"170"},{"headings":[["b1",[["b1.16",[["b1.16.3",[]],["b1.16.4",[]]]]]]],"page_id":"171"},{"headings":[["b1",[["b1.16",[["b1.16.4",[]]]]]]],"page_id":"172"},{"headings":[["b1",[["b1.16",[["b1.16.4",[]]]]]]],"page_id":"173"},{"headings":[["b1",[["b1.16",[["b1.16.4",[]],["b1.16.5",[]]]]]]],"page_id":"174"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"175"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"176"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"177"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"178"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"179"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"180"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"181"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"182"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"183"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"184"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"185"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"186"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"187"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"188"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"189"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"190"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"191"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"192"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"193"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"194"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"195"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"196"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"197"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"198"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]]]]]]],"page_id":"199"},{"headings":[["b1",[["b1.16",[["b1.16.5",[]],["b1.16.6",[]]]]]]],"page_id":"200"},{"headings":[["b1",[["b1.16",[["b1.16.6",[]]]]]]],"page_id":"201"},{"headings":[["b1",[["b1.16",[["b1.16.6",[]],["b1.16.7",[]]]]]]],"page_id":"202"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"203"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"204"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"205"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"206"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"207"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"208"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"209"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"210"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"211"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"212"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"213"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"214"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"215"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"216"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"217"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"218"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"219"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"220"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"221"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"222"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"223"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"224"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"225"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"226"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"227"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"228"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"229"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]]]]]]],"page_id":"230"},{"headings":[["b1",[["b1.16",[["b1.16.7",[]],["b1.16.8",[]]]]]]],"page_id":"231"},{"headings":[["b1",[["b1.16",[["b1.16.8",[]]]]]]],"page_id":"232"},{"headings":[["b1",[["b1.16",[["b1.16.8",[["b1.16.8.1",[]]]],["b1.16.9",[]]]]]]],"page_id":"233"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"234"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"235"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"236"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"237"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"238"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"239"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"240"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"241"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"242"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"243"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"244"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"245"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"246"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"247"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"248"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"249"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"250"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"251"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"252"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"253"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"254"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"255"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"256"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"257"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]]]]],"page_id":"258"},{"headings":[["b1",[["b1.16",[["b1.16.9",[]]]],["b1.17",[["b1.17.1",[]],["b1.17.2",[]]]]]]],"page_id":"259"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"260"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"261"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"262"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"263"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"264"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"265"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"266"},{"headings":[["b1",[["b1.17",[["b1.17.3",[]]]]]]],"page_id":"267"},{"headings":[["b1",[["b1.17",[["b1.17.4",[]],["b1.17.5",[]]]]]]],"page_id":"268"},{"headings":[["b1",[["b1.17",[["b1.17.5",[]],["b1.17.6",[]]]],["b1.18",[]]]]],"page_id":"269"},{"headings":[["b1",[["b1.18",[]],["b1.19",[]],["b1.20",[]]]]],"page_id":"270"},{"headings":[["b1",[["b1.20",[]]]]],"page_id":"271"},{"headings":[["b1",[["b1.20",[]]]]],"page_id":"272"},{"headings":[["b1",[["b1.21",[]]]]],"page_id":"272a"},{"headings":[["b1",[["b1.22",[]]]]],"page_id":"272b"},{"headings":[["b1",[["b1.23",[]]]]],"page_id":"273"},{"headings":[["b1",[["b1.23",[]]]]],"page_id":"274"},{"headings":[["b1",[["b1.23",[]]]]],"page_id":"275"},{"headings":[["b2",[["b2.1",[["b2.1.1",[]]]]]]],"page_id":"276"},{"headings":[["b2",[["b2.1",[["b2.1.1",[]],["b2.1.2",[]]]]]]],"page_id":"277"},{"headings":[["b2",[["b2.1",[["b2.1.2",[]]]]]]],"page_id":"278"},{"headings":[["b2",[["b2.1",[["b2.1.3",[]]]]]]],"page_id":"279"},{"headings":[["b2",[["b2.1",[["b2.1.4",[]]]]]]],"page_id":"280"},{"headings":[["b2",[["b2.1",[["b2.1.4",[]]]]]]],"page_id":"281"},{"headings":[["b2",[["b2.1",[["b2.1.5",[]],["b2.1.6",[]]]]]]],"page_id":"282"},{"headings":[["b2",[["b2.1",[["b2.1.6",[]]]]]]],"page_id":"283"},{"headings":[["b2",[["b2.1",[["b2.1.6",[]],["b2.1.7",[]],["b2.1.8",[]]]]]]],"page_id":"284"},{"headings":[["b2",[["b2.1",[["b2.1.8",[]]]],["b2.2",[]]]]],"page_id":"285"},{"headings":[["b2",[["b2.2",[["b2.2.1",[]],["b2.2.2",[]]]]]]],"page_id":"286"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"287"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"288"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"289"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"290"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"291"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"292"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"293"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"294"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"295"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"296"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"297"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"298"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]]]]],"page_id":"299"},{"headings":[["b2",[["b2.2",[["b2.2.2",[]]]],["b2.3",[["b2.3.1",[]]]]]]],"page_id":"300"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"301"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"3O2"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"3O3"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"3O4"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"3O5"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"306"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"307"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"308"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"309"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"310"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"311"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]]]]]]],"page_id":"312"},{"headings":[["b2",[["b2.3",[["b2.3.1",[]],["b2.3.2",[]]]]]]],"page_id":"313"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"314"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"315"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"316"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"317"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"318"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"319"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"320"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"321"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"322"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"323"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"324"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]]]]]]],"page_id":"325"},{"headings":[["b2",[["b2.3",[["b2.3.2",[]],["b2.3.3",[]]]]]]],"page_id":"326"},{"headings":[["b2",[["b2.3",[["b2.3.3",[]]]]]]],"page_id":"327"},{"headings":[["b2",[["b2.3",[["b2.3.3",[]]]]]]],"page_id":"328"},{"headings":[["b2",[["b2.3",[["b2.3.3",[]]]]]]],"page_id":"329"},{"headings":[["b2",[["b2.3",[["b2.3.3",[]]]]]]],"page_id":"330"},{"headings":[["b2",[["b2.3",[["b2.3.3",[]],["b2.3.4",[]]]]]]],"page_id":"331"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"332"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"333"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"334"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"335"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"336"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]]]]]]],"page_id":"337"},{"headings":[["b2",[["b2.3",[["b2.3.4",[]],["b2.3.5",[]]]]]]],"page_id":"338"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]]]]]]],"page_id":"339"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]]]]]]],"page_id":"340"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]]]]]]],"page_id":"341"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]]]]]]],"page_id":"342"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]]]]]]],"page_id":"343"},{"headings":[["b2",[["b2.3",[["b2.3.5",[]],["b2.3.6",[]]]]]]],"page_id":"344"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"345"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"346"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"347"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"348"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"349"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"350"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]]]]]]],"page_id":"351"},{"headings":[["b2",[["b2.3",[["b2.3.6",[]],["b2.3.7",[]]]]]]],"page_id":"352"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"353"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"354"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"355"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"356"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"357"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"358"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"359"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"360"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"361"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"362"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"363"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"364"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"365"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"366"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"367"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"368"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"369"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]]]]]]],"page_id":"370"},{"headings":[["b2",[["b2.3",[["b2.3.7",[]],["b2.3.8",[]]]]]]],"page_id":"371"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"372"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"373"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"374"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"375"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"376"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"377"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"378"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"379"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"380"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"381"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"382"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"383"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"384"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]]]]]]],"page_id":"385"},{"headings":[["b2",[["b2.3",[["b2.3.8",[]],["b2.3.9",[]]]]]]],"page_id":"386"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"387"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"388"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"389"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"390"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"391"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"392"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"393"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"394"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"395"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"396"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"397"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"398"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"399"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"400"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"401"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"402"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"403"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"404"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"405"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"406"},{"headings":[["b2",[["b2.3",[["b2.3.9",[]]]]]]],"page_id":"407"},{"headings":[["b3",[["b3.1",[["b3.1.1",[]]]]]]],"page_id":"408"},{"headings":[["b3",[["b3.1",[["b3.1.2",[]],["b3.1.3",[]]]]]]],"page_id":"409"},{"headings":[["b3",[["b3.1",[["b3.1.4",[]],["b3.1.5",[]],["b3.1.6",[]]]]]]],"page_id":"410"},{"headings":[["b3",[["b3.1",[["b3.1.6",[]],["b3.1.7",[]]]]]]],"page_id":"411"},{"headings":[["b3",[["b3.1",[["b3.1.7",[]],["b3.1.8",[]]]]]]],"page_id":"412"},{"headings":[["b3",[["b3.1",[["b3.1.8",[]],["b3.1.9",[]],["b3.1.10",[]]]]]]],"page_id":"413"},{"headings":[["b3",[["b3.1",[["b3.1.10",[]],["b3.1.11",[]]]]]]],"page_id":"414"},{"headings":[["b3",[["b3.1",[["b3.1.12",[]],["b3.1.13",[]]]]]]],"page_id":"415"},{"headings":[["b3",[["b3.1",[["b3.1.13",[]],["b3.1.14",[]],["b3.1.15",[]]]]]]],"page_id":"416"},{"headings":[["b3",[["b3.1",[["b3.1.15",[]],["b3.1.16",[]],["b3.1.17",[]]]]]]],"page_id":"417"},{"headings":[["b3",[["b3.1",[["b3.1.17",[]]]]]]],"page_id":"418"},{"headings":[["b3",[["b3.1",[["b3.1.17",[]]]]]]],"page_id":"419"},{"headings":[["b3",[["b3.1",[["b3.1.17",[]],["b3.1.18",[]]]]]]],"page_id":"420"},{"headings":[["b3",[["b3.1",[["b3.1.18",[]],["b3.1.19",[]]]]]]],"page_id":"421"},{"headings":[["b3",[["b3.1",[["b3.1.19",[]]]]]]],"page_id":"422"},{"headings":[["b3",[["b3.1",[["b3.1.19",[]]]],["b3.2",[["b3.2.1",[]]]]]]],"page_id":"423"},{"headings":[["b3",[["b3.2",[["b3.2.1",[]]]]]]],"page_id":"424"},{"headings":[["b3",[["b3.2",[["b3.2.1",[]],["b3.2.2",[]]]]]]],"page_id":"425"},{"headings":[["b3",[["b3.2",[["b3.2.2",[]]]]]]],"page_id":"426"},{"headings":[["b3",[["b3.2",[["b3.2.2",[]],["b3.2.3",[]]]]]]],"page_id":"427"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"428"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"429"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"430"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"431"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"432"},{"headings":[["b3",[["b3.2",[["b3.2.3",[]]]]]]],"page_id":"433"},{"headings":[["b3",[["b3.2",[["b3.2.4",[]]]]]]],"page_id":"434"},{"headings":[["b3",[["b3.2",[["b3.2.4",[]],["b3.2.5",[]]]]]]],"page_id":"435"},{"headings":[["b3",[["b3.2",[["b3.2.5",[]]]]]]],"page_id":"436"},{"headings":[["b3",[["b3.2",[["b3.2.5",[]],["b3.2.6",[]]]]]]],"page_id":"437"},{"headings":[["b3",[["b3.2",[["b3.2.6",[]]]]]]],"page_id":"438"},{"headings":[["b3",[["b3.2",[["b3.2.7",[]],["b3.2.8",[]]]]]]],"page_id":"439"},{"headings":[["b3",[["b3.2",[["b3.2.8",[]],["b3.2.9",[]]]]]]],"page_id":"440"},{"headings":[["b3",[["b3.2",[["b3.2.10",[]]]]]]],"page_id":"441"},{"headings":[["b3",[["b3.2",[["b3.2.10",[]],["b3.2.11",[]]]]]]],"page_id":"442"},{"headings":[["b3",[["b3.2",[["b3.2.12",[]]]]]]],"page_id":"443"},{"headings":[["b3",[["b3.2",[["b3.2.12",[]]]]]]],"page_id":"444"},{"headings":[["b3",[["b3.2",[["b3.2.12",[]]]]]]],"page_id":"445"},{"headings":[["b3",[["b3.3",[["b3.3.1",[]]]]]]],"page_id":"446"},{"headings":[["b3",[["b3.3",[["b3.3.1",[]]]]]]],"page_id":"447"},{"headings":[["b3",[["b3.3",[["b3.3.1",[]],["b3.3.2",[]]]]]]],"page_id":"448"},{"headings":[["b4",[["b4.1",[]]]]],"page_id":"449"},{"headings":[["b4",[["b4.1",[]]]]],"page_id":"450"},{"headings":[["b4",[["b4.1",[]],["b4.2",[]],["b4.3",[]]]]],"page_id":"451"},{"headings":[["b4",[["b4.3",[]],["b4.4",[]]]]],"page_id":"452"},{"headings":[["b4",[["b4.4",[]],["b4.5",[]]]]],"page_id":"453"},{"headings":[["b4",[["b4.6",[]]]]],"page_id":"454"},{"headings":[["b4",[["b4.6",[]],["b4.7",[]]]]],"page_id":"455"},{"headings":[["b4",[["b4.7",[]],["b4.8",[]]]]],"page_id":"456"},{"headings":[["b4",[["b4.8",[]]]]],"page_id":"457"},{"headings":[["b4",[["b4.8",[]],["b4.9",[]]]]],"page_id":"458"},{"headings":[["b4",[["b4.9",[]]]]],"page_id":"459"},{"headings":[["b4",[["b4.9",[]]]]],"page_id":"460"},{"headings":[["b4",[["b4.9",[]]]]],"page_id":"461"},{"headings":[["b4",[["b4.10",[]],["b4.11",[]]]]],"page_id":"462"},{"headings":[["b4",[["b4.11",[]]]]],"page_id":"463"},{"headings":[["b4",[["b4.11",[]]]]],"page_id":"464"},{"headings":[["b4",[["b4.11",[]]]]],"page_id":"465"},{"headings":[["b5",[["b5.1",[]],["b5.2",[]]]]],"page_id":"466"},{"headings":[["b5",[["b5.2",[]],["b5.3",[]],["b5.4",[]],["b5.5",[]]]]],"page_id":"467"},{"headings":[["b5",[["b5.5",[]],["b5.6",[]],["b5.7",[]],["b5.8",[]]]]],"page_id":"468"},{"headings":[["b5",[["b5.8",[]],["b5.9",[]],["b5.10",[["b5.10.1",[]],["b5.10.2",[]],["b5.10.3",[]]]]]]],"page_id":"469"},{"headings":[["b5",[["b5.10",[["b5.10.3",[]],["b5.10.4",[]],["b5.10.5",[]]]],["b5.11",[]],["b5.12",[]]]]],"page_id":"470"},{"headings":[["b5",[["b5.12",[]],["b5.13",[]],["b5.14",[]],["b5.15",[]]]]],"page_id":"471"},{"headings":[["b5",[["b5.15",[]],["b5.16",[]],["b5.17",[]],["b5.18",[]]]]],"page_id":"472"},{"headings":[["b5",[["b5.19",[]],["b5.20",[]],["b5.21",[]],["b5.22",[]],["b5.23",[]]]]],"page_id":"473"},{"headings":[["b5",[["b5.24",[]],["b5.25",[]],["b5.26",[]],["b5.27",[]],["b5.28",[["b5.28.1",[]],["b5.28.2",[]],["b5.28.3",[]],["b5.28.4",[]]]]]]],"page_id":"474"},{"headings":[["b5",[["b5.28",[["b5.28.4",[]],["b5.28.5",[]]]],["b5.29",[]],["b5.30",[]],["b5.31",[]]]]],"page_id":"475"},{"headings":[["b5",[["b5.31",[]]]]],"page_id":"476"},{"headings":[["b5",[["b5.31",[]],["b5.32",[]],["b5.33",[]]]]],"page_id":"477"},{"headings":[["b5",[["b5.33",[]],["b5.34",[]],["b5.35",[]],["b5.36",[]]]]],"page_id":"478"},{"headings":[["b5",[["b5.36",[]],["b5.37",[]],["b5.38",[]]]]],"page_id":"479"},{"headings":[["b5",[["b5.39",[]],["b5.40",[]]]]],"page_id":"480"},{"headings":[["b5",[["b5.40",[]],["b5.41",[]],["b5.42",[]]]]],"page_id":"481"},{"headings":[["b5",[["b5.42",[]],["b5.43",[]],["b5.44",[]],["b5.45",[["b5.45.1",[]]]]]]],"page_id":"482"},{"headings":[["b5",[["b5.45",[["b5.45.1",[]],["b5.45.2",[]],["b5.45.3",[]]]]]]],"page_id":"483"},{"headings":[["b5",[["b5.45",[["b5.45.3",[]]]]]]],"page_id":"484"},{"headings":[["b5",[["b5.45",[["b5.45.3",[]]]]]]],"page_id":"485"},{"headings":[["b5",[["b5.45",[["b5.45.3",[]],["b5.45.4",[]]]]]]],"page_id":"486"},{"headings":[["b5",[["b5.45",[["b5.45.4",[]],["b5.45.5",[]]]]]]],"page_id":"487"},{"headings":[["b5",[["b5.45",[["b5.45.5",[]],["b5.45.6",[]]]]]]],"page_id":"488"},{"headings":[["b5",[["b5.45",[["b5.45.6",[]],["b5.45.7",[]]]]]]],"page_id":"489"},{"headings":[["b5",[["b5.45",[["b5.45.7",[]],["b5.45.8",[]]]]]]],"page_id":"490"},{"headings":[["b5",[["b5.45",[["b5.45.8",[]]]]]]],"page_id":"491"},{"headings":[["b5",[["b5.45",[["b5.45.8",[]]]]]]],"page_id":"492"},{"headings":[["b5",[["b5.45",[["b5.45.8",[]],["b5.45.9",[]]]]]]],"page_id":"493"},{"headings":[["b5",[["b5.45",[["b5.45.9",[]]]]]]],"page_id":"494"},{"headings":[["b5",[["b5.45",[["b5.45.9",[]]]]]]],"page_id":"495"},{"headings":[["b5",[["b5.45",[["b5.45.9",[]],["b5.45.10",[]],["b5.45.11",[]]]]]]],"page_id":"496"},{"headings":[["b5",[["b5.45",[["b5.45.11",[]]]]]]],"page_id":"497"},{"headings":[["b5",[["b5.45",[["b5.45.11",[]],["b5.45.12",[]]]]]]],"page_id":"498"},{"headings":[["b6",[["b6.1",[]],["b6.2",[]]]]],"page_id":"499"},{"headings":[["b6",[["b6.2",[]],["b6.3",[]],["b6.4",[]]]]],"page_id":"500"},{"headings":[["b6",[["b6.4",[]],["b6.5",[]],["b6.6",[]],["b6.7",[]]]]],"page_id":"501"},{"headings":[["b6",[["b6.7",[]],["b6.8",[]],["b6.9",[]],["b6.10",[]],["b6.1.11",[]],["b6.12",[]],["b6.13",[]]]]],"page_id":"502"},{"headings":[["b6",[["b6.14",[]],["b6.15",[]],["b6.16",[]],["b6.17",[]],["b6.18",[]],["b6.19",[]]]]],"page_id":"503"},{"headings":[["b6",[["b6.19",[]],["b6.20",[]]]]],"page_id":"504"},{"headings":[["b6",[["b6.21",[]],["b6.22",[]],["b6.23",[]],["b6.24",[]],["b6.25",[]]]]],"page_id":"505"},{"headings":[["b6",[["b6.25",[]],["b6.26",[]],["b6.27",[]],["b6.28",[]],["b6.29",[]],["b6.30",[]],["b6.31",[]]]]],"page_id":"506"},{"headings":[["b6",[["b6.32",[]],["b6.33",[]],["b6.34",[]],["b6.35",[]],["b6.36",[]],["b6.37",[]]]]],"page_id":"507"},{"headings":[["b6",[["b6.38",[]],["b6.39",[]],["b6.40",[]],["b6.41",[]],["b6.42",[]],["b6.43",[]],["b6.44",[]]]]],"page_id":"508"},{"headings":[["b6",[["b6.44",[]],["b6.45",[]],["b6.46",[]],["b6.47",[]],["b6.48",[]],["b6.49",[]],["b6.50",[]]]]],"page_id":"509"},{"headings":[["b6",[["b6.51",[]],["b6.52",[]],["b6.53",[]],["b6.54",[]],["b6.55",[]],["b6.56",[]]]]],"page_id":"510"},{"headings":[["b6",[["b6.57",[]],["b6.58",[]],["b6.59",[]],["b6.60",[]],["b6.61",[]],["b6.62",[]],["b6.63",[]]]]],"page_id":"511"},{"headings":[["b6",[["b6.63",[]],["b6.64",[]],["b6.65",[]]]]],"page_id":"512"},{"headings":[["b6",[["b6.66",[]],["b6.67",[]],["b6.68",[]],["b6.69",[]],["b6.70",[]],["b6.71",[]]]]],"page_id":"513"},{"headings":[["b6",[["b6.71",[]],["b6.72",[]],["b6.73",[]],["b6.74",[]],["b6.75",[]],["b6.76",[]]]]],"page_id":"514"},{"headings":[["b6",[["b6.77",[]],["b6.78",[]],["b6.79",[]],["b6.80",[]]]]],"page_id":"515"},{"headings":[["b6",[["b6.81",[]],["b6.82",[]],["b6.83",[]],["b6.84",[]],["b6.85",[]],["b6.86",[]],["b6.87",[]],["b6.88",[]]]]],"page_id":"516"},{"headings":[["b6",[["b6.89",[]],["b6.90",[]],["b6.91",[]],["b6.92",[]]]]],"page_id":"517"},{"headings":[["b7",[["b7.1",[]],["b7.2",[]]]]],"page_id":"518"},{"headings":[["b7",[["b7.2",[]]]]],"page_id":"519"},{"headings":[["b7",[["b7.2",[]]]]],"page_id":"520"},{"headings":[["b7",[["b7.2",[]]]]],"page_id":"521"},{"headings":[["b7",[["b7.2",[]]]]],"page_id":"522"},{"headings":[["b7",[["b7.2",[]]]]],"page_id":"523"},{"headings":[["b7",[["b7.2",[]],["b7.3",[["b7.3.1",[]]]]]]],"page_id":"524"},{"headings":[["b7",[["b7.3",[["b7.3.2",[]]]]]]],"page_id":"525"},{"headings":[["b8",[["b8.1",[["b8.1.1",[]],["b8.1.2",[]]]]]]],"page_id":"526"},{"headings":[["b8",[["b8.1",[["b8.1.2",[]],["b8.1.3",[]],["b8.1.4",[]],["b8.1.5",[]]]]]]],"page_id":"527"},{"headings":[["b8",[["b8.1",[["b8.1.5",[]]]],["b8.2",[]]]]],"page_id":"528"},{"headings":[["b8",[["b8.3",[["b8.3.1",[]],["b8.3.2",[]]]]]]],"page_id":"529"},{"headings":[["b8",[["b8.3",[["b8.3.2",[]],["b8.3.3",[["b8.3.3.1",[]],["b8.3.3.2",[]]]]]]]]],"page_id":"530"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.2",[]]]]]]]]],"page_id":"531"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"532"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"533"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"534"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"535"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"536"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"537"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"538"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"539"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.3",[]]]]]]]]],"page_id":"540"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.4",[]]]]]]]]],"page_id":"541"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.4",[]],["b8.3.3.5",[]]]]]]]]],"page_id":"542"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.5",[]]]]]]]]],"page_id":"543"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.5",[]]]]]]]]],"page_id":"544"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.5",[]]]]]]]]],"page_id":"545"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.6",[]],["b8.3.3.7",[]],["b8.3.3.8",[]]]]]]]]],"page_id":"546"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.9",[]]]]]]]]],"page_id":"547"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.9",[]],["b8.3.3.10",[]],["b8.3.3.11",[]],["b8.3.3.12",[]]]]]]]]],"page_id":"548"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.13",[]],["b8.3.3.14",[]],["b8.3.3.15",[]]]]]]]]],"page_id":"549"},{"headings":[["b8",[["b8.3",[["b8.3.3",[["b8.3.3.15",[]],["b8.3.3.16",[]]]]]]]]],"page_id":"550"},{"headings":[["b8",[["b8.3",[["b8.3.4",[]]]]]]],"page_id":"551"},{"headings":[["b9",[["b9.1",[]]]]],"page_id":"552"},{"headings":[["b9",[["b9.1",[]]]]],"page_id":"553"},{"headings":[["b9",[["b9.1",[]],["b9.2",[]]]]],"page_id":"554"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"555"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"556"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"557"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"558"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"559"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"560"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"561"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"562"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"563"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"564"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"565"},{"headings":[["b9",[["b9.2",[]]]]],"page_id":"566"},{"headings":[["b10",[["b10.1",[]]]]],"page_id":"567"},{"headings":[["b10",[["b10.1",[]],["b10.2",[]]]]],"page_id":"568"},{"headings":[["b10",[["b10.2",[]]]]],"page_id":"569"},{"headings":[["b10",[["b10.2",[]]]]],"page_id":"570"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"571"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"572"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"573"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"574"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"575"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"576"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"577"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"578"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"579"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"580"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"581"},{"headings":[["b11",[["b11.1",[]]]]],"page_id":"582"},{"headings":[["b12",[["b12.1",[["b12.1.1",[]],["b12.1.2",[]]]]]]],"page_id":"583"},{"headings":[["b12",[["b12.1",[["b12.1.2",[]],["b12.1.3",[]],["b12.1.4",[]],["b12.1.5",[]],["b12.1.6",[]],["b12.1.7",[]],["b12.1.8",[]],["b12.1.9",[]],["b12.1.10",[]]]]]]],"page_id":"584"},{"headings":[["b12",[["b12.1",[["b12.1.11",[]],["b12.1.12",[]],["b12.1.13",[]],["b12.1.14",[]],["b12.1.15",[]],["b12.1.16",[]],["b12.1.17",[]],["b12.1.18",[]],["b12.1.19",[]],["b12.1.20",[]],["b12.1.21",[]],["b12.1.22",[]],["b12.1.23",[]],["b12.1.24",[]]]]]]],"page_id":"585"},{"headings":[["b12",[["b12.1",[["b12.1.25",[]],["b12.1.26",[]],["b12.1.27",[]],["b12.1.28",[]],["b12.1.29",[]],["b12.1.30",[]],["b12.1.31",[]],["b12.1.32",[]],["b12.1.33",[]],["b12.1.34",[]],["b12.1.35",[]],["b12.1.36",[]],["b12.1.37",[]],["b12.1.38",[]],["b12.1.39",[]],["b12.1.40",[]]]]]]],"page_id":"586"},{"headings":[["b12",[["b12.1",[["b12.1.41",[]],["b12.1.42",[]],["b12.1.43",[]],["b12.1.44",[]],["b12.1.45",[]],["b12.1.46",[]],["b12.1.47",[]],["b12.1.48",[]],["b12.1.49",[]],["b12.1.50",[]],["b12.1.51",[]],["b12.1.52",[]],["b12.1.53",[]],["b12.1.54",[]],["b12.1.55",[]],["b12.1.56",[]]]]]]],"page_id":"587"},{"headings":[["b12",[["b12.1",[["b12.1.57",[]],["b12.1.58",[]],["b12.1.59",[]],["b12.1.60",[]],["b12.1.61",[]],["b12.1.62",[]],["b12.1.63",[]],["b12.1.64",[]],["b12.1.65",[]],["b12.1.66",[]],["b12.1.67",[]],["b12.1.68",[]],["b12.1.69",[]],["b12.1.70",[]],["b12.1.71",[]]]]]]],"page_id":"588"},{"headings":[["b12",[["b12.1",[["b12.1.72",[]],["b12.1.73",[]],["b12.1.74",[]],["b12.1.75",[]],["b12.1.76",[]],["b12.1.77",[]],["b12.1.78",[]],["b12.1.79",[]],["b12.1.80",[]],["b12.1.81",[]],["b12.1.82",[]]]]]]],"page_id":"589"},{"headings":[["b12",[["b12.1",[["b12.1.83",[]],["b12.1.84",[]],["b12.1.85",[]],["b12.1.86",[]],["b12.1.87",[]],["b12.1.88",[]],["b12.1.89",[]],["b12.1.90",[]],["b12.1.91",[]],["b12.1.92",[]],["b12.1.93",[]],["b12.1.94",[]],["b12.1.95",[]],["b12.1.96",[]],["b12.1.97",[]]]]]]],"page_id":"590"},{"headings":[["b12",[["b12.1",[["b12.1.98",[]],["b12.1.99",[]],["b12.1.100",[]],["b12.1.101",[]],["b12.1.102",[]],["b12.1.103",[]],["b12.1.104",[]],["b12.1.105",[]],["b12.1.106",[]],["b12.1.107",[]],["b12.1.108",[]],["b12.1.109",[]],["b12.1.110",[]],["b12.1.111",[]]]]]]],"page_id":"591"},{"headings":[["b12",[["b12.1",[["b12.1.112",[]],["b12.1.113",[]],["b12.1.114",[]],["b12.1.115",[]],["b12.1.116",[]],["b12.1.117",[]],["b12.1.118",[]],["b12.1.119",[]],["b12.1.120",[]],["b12.1.121",[]],["b12.1.122",[]],["b12.1.123",[]],["b12.1.124",[]],["b12.1.125",[]],["b12.1.126",[]]]]]]],"page_id":"592"},{"headings":[["b12",[["b12.1",[["b12.1.127",[]],["b12.1.128",[]],["b12.1.129",[]],["b12.1.130",[]],["b12.1.131",[]],["b12.1.132",[]],["b12.1.133",[]],["b12.1.134",[]],["b12.1.135",[]],["b12.1.136",[]],["b12.1.137",[]],["b12.1.138",[]],["b12.1.139",[]],["b12.1.140",[]]]]]]],"page_id":"593"},{"headings":[["b12",[["b12.1",[["b12.1.141",[]],["b12.1.142",[]],["b12.1.143",[]],["b12.1.144",[]],["b12.1.145",[]],["b12.1.146",[]],["b12.1.147",[]],["b12.1.148",[]],["b12.1.149",[]],["b12.1.150",[]]]]]]],"page_id":"594"},{"headings":[["b12",[["b12.1",[["b12.1.151",[]],["b12.1.152",[]],["b12.1.153",[]],["b12.1.154",[]],["b12.1.155",[]],["b12.1.156",[]],["b12.1.157",[]],["b12.1.158",[]],["b12.1.159",[]]]]]]],"page_id":"595"},{"headings":[["b12",[["b12.1",[["b12.1.159",[]],["b12.1.160",[]],["b12.1.161",[]],["b12.1.162",[]],["b12.1.163",[]],["b12.1.164",[]],["b12.1.165",[]],["b12.1.166",[]]]]]]],"page_id":"596"},{"headings":[["b12",[["b12.1",[["b12.1.167",[]],["b12.1.168",[]],["b12.1.169",[]],["b12.1.170",[]],["b12.1.171",[]],["b12.1.172",[]],["b12.1.173",[]],["b12.1.174",[]],["b12.1.175",[]],["b12.1.176",[]],["b12.1.177",[]],["b12.1.178",[]],["b12.1.179",[]],["b12.1.180",[]],["b12.1.181",[]],["b12.1.182",[]],["b12.1.183",[]]]]]]],"page_id":"597"},{"headings":[["b12",[["b12.1",[["b12.1.184",[]],["b12.1.185",[]],["b12.1.186",[]],["b12.1.187",[]],["b12.1.188",[]],["b12.1.189",[]],["b12.1.190",[]],["b12.1.191",[]],["b12.1.192",[]],["b12.1.193",[]],["b12.1.194",[]],["b12.1.195",[]]]]]]],"page_id":"598"},{"headings":[["b12",[["b12.1",[["b12.1.196",[]],["b12.1.197",[]],["b12.1.198",[]],["b12.1.199",[]],["b12.1.200",[]],["b12.1.201",[]],["b12.1.202",[]],["b12.1.203",[]],["b12.1.204",[]],["b12.1.205",[]]]]]]],"page_id":"599"},{"headings":[["b12",[["b12.1",[["b12.1.205",[]],["b12.1.206",[]],["b12.1.207",[]],["b12.1.208",[]],["b12.1.209",[]],["b12.1.210",[]],["b12.1.211",[]],["b12.1.212",[]],["b12.1.213",[]]]]]]],"page_id":"600"},{"headings":[["b12",[["b12.1",[["b12.1.213",[]]]],["b12.2",[["b12.2.1",[]],["b12.2.2",[]],["b12.2.3",[]],["b12.2.4",[]],["b12.2.5",[]]]]]]],"page_id":"601"},{"headings":[["b12",[["b12.2",[["b12.2.5",[]],["b12.2.6",[]],["b12.2.7",[]]]],["b12.3",[["b12.3.1",[]],["b12.3.2",[["b12.3.2.1",[]],["b12.3.2.2",[]]]]]]]]],"page_id":"602"},{"headings":[["b12",[["b12.3",[["b12.3.2",[["b12.3.2.3",[]],["b12.3.2.4",[]],["b12.3.2.5",[]],["b12.3.2.6",[]],["b12.3.2.7",[]],["b12.3.2.8",[]],["b12.3.2.9",[]],["b12.3.2.10",[]],["b12.3.2.11",[]],["b12.3.2.12",[]],["b12.3.2.13",[]]]]]]]]],"page_id":"603"},{"headings":[["b12",[["b12.3",[["b12.3.2",[["b12.3.2.14",[]],["b12.3.2.15",[]],["b12.3.2.16",[]],["b12.3.2.17",[]],["b12.3.2.18",[]],["b12.3.2.19",[]],["b12.3.2.20",[]]]]]]]]],"page_id":"604"},{"headings":[["b12",[["b12.3",[["b12.3.3",[["b12.3.3.1",[]],["b12.3.3.2",[]],["b12.3.3.3",[]],["b12.3.3.4",[]]]],["b12.3.4",[["b12.3.4.1",[]],["b12.3.4.2",[]],["b12.3.4.3",[]],["b12.3.4.4",[]]]]]]]]],"page_id":"605"},{"headings":[["b12",[["b12.3",[["b12.3.4",[["b12.3.4.4",[]],["b12.3.4.5",[]],["b12.3.4.6",[]],["b12.3.4.7",[]],["b12.3.4.8",[]],["b12.3.4.9",[]],["b12.3.4.10",[]],["b12.3.4.11",[]],["b12.3.4.12",[]],["b12.3.4.13",[]]]],["b12.3.5",[["b12.3.5.1",[]]]]]]]]],"page_id":"606"},{"headings":[["b12",[["b12.3",[["b12.3.5",[["b12.3.5.2",[]],["b12.3.5.3",[]],["b12.3.5.4",[]],["b12.3.5.5",[]],["b12.3.5.6",[]],["b12.3.5.7",[]],["b12.3.5.8",[]],["b12.3.5.9",[]],["b12.3.5.10",[]]]],["b12.3.6",[["b12.3.6.1",[]]]]]]]]],"page_id":"607"},{"headings":[["b12",[["b12.3",[["b12.3.6",[["b12.3.6.2",[]],["b12.3.6.3",[]],["b12.3.6.4",[]],["b12.3.6.5",[]],["b12.3.6.6",[]],["b12.3.6.7",[]],["b12.3.6.8",[]],["b12.3.6.9",[]],["b12.3.6.10",[]],["b12.3.6.11",[]],["b12.3.6.12",[]]]]]]]]],"page_id":"608"},{"headings":[["b12",[["b12.3",[["b12.3.6",[["b12.3.6.13",[]],["b12.3.6.14",[]],["b12.3.6.15",[]],["b12.3.6.16",[]]]]]],["b12.4",[["b12.4.1",[]],["b12.4.2",[["b12.4.2.1",[]],["b12.4.2.2",[]],["b12.4.2.3",[]]]],["b12.4.3",[["b12.4.3.1",[]],["b12.4.3.2",[]]]]]]]]],"page_id":"609"},{"headings":[["b12",[["b12.4",[["b12.4.4",[["b12.4.4.1",[]]]],["b12.4.5",[["b12.4.5.1",[]],["b12.4.5.2",[]]]],["b12.4.6",[["b12.4.6.1",[]]]],["b12.4.7",[["b12.4.7.1",[]]]],["b12.4.8",[["b12.4.8.1",[]],["b12.4.8.2",[]]]],["b12.4.9",[["b12.4.9.1",[]]]]]]]]],"page_id":"610"},{"headings":[["b12",[["b12.4",[["b12.4.9",[["b12.4.9.1",[]]]],["b12.4.10",[["b12.4.10.1",[]]]]]],["b12.5",[["b12.5.1",[]]]]]]],"page_id":"611"},{"headings":[["b12",[["b12.5",[["b12.5.2",[["b12.5.2.1",[]],["b12.5.2.2",[]],["b12.5.2.3",[]]]],["b12.5.3",[["b12.5.3.1",[]],["b12.5.3.2",[]],["b12.5.3.3",[]],["b12.5.3.4",[]],["b12.5.3.5",[]],["b12.5.3.6",[]],["b12.5.3.7",[]]]]]]]]],"page_id":"612"},{"headings":[["b12",[["b12.5",[["b12.5.3",[["b12.5.3.7",[]],["b12.5.3.8",[]],["b12.5.3.9",[]],["b12.5.3.10",[]],["b12.5.3.11",[]],["b12.5.3.12",[]],["b12.5.3.13",[]],["b12.5.3.14",[]],["b12.5.3.15",[]]]]]]]]],"page_id":"613"},{"headings":[["b12",[["b12.5",[["b12.5.3",[["b12.5.3.15",[]],["b12.5.3.16",[]],["b12.5.3.17",[]],["b12.5.3.18",[]],["b12.5.3.19",[]]]]]]]]],"page_id":"614"},{"headings":[["b12",[["b12.5",[["b12.5.3",[["b12.5.3.19",[]],["b12.5.3.20",[]],["b12.5.3.21",[]],["b12.5.3.22",[]],["b12.5.3.23",[]],["b12.5.3.24",[]],["b12.5.3.25",[]],["b12.5.3.26",[]]]]]]]]],"page_id":"615"},{"headings":[["b12",[["b12.5",[["b12.5.3",[["b12.5.3.27",[]]]],["b12.5.4",[["b12.5.4.1",[]],["b12.5.4.2",[]],["b12.5.4.3",[]],["b12.5.4.4",[]]]]]]]]],"page_id":"616"},{"headings":[["b12",[["b12.5",[["b12.5.4",[["b12.5.4.4",[]],["b12.5.4.5",[]],["b12.5.4.6",[]]]]]]]]],"page_id":"617"},{"headings":[["b12",[["b12.5",[["b12.5.4",[["b12.5.4.7",[]]]],["b12.5.5",[["b12.5.5.1",[]],["b12.5.5.2",[]]]],["b12.5.6",[["b12.5.6.1",[]],["b12.5.6.2",[]],["b12.5.6.3",[]],["b12.5.6.4",[]],["b12.5.6.5",[]]]]]]]]],"page_id":"618"},{"headings":[["b12",[["b12.5",[["b12.5.6",[["b12.5.6.6",[]]]],["b12.5.7",[["b12.5.7.1",[]],["b12.5.7.2",[]]]],["b12.5.8",[["b12.5.8.1",[]],["b12.5.8.2",[]]]],["b12.5.9",[["b12.5.9.1",[]],["b12.5.9.2",[]],["b12.5.9.3",[]],["b12.5.9.4",[]],["b12.5.9.5",[]],["b12.5.9.6",[]],["b12.5.9.7",[]]]]]]]]],"page_id":"619"},{"headings":[["b12",[["b12.5",[["b12.5.9",[["b12.5.9.8",[]]]]]],["b12.6",[["b12.6.1",[["b12.6.1.1",[]]]],["b12.6.2",[["b12.6.2.1",[]],["b12.6.2.2",[]],["b12.6.2.3",[]],["b12.6.2.4",[]]]]]]]]],"page_id":"620"},{"headings":[["b12",[["b12.6",[["b12.6.3",[["b12.6.3.1",[]],["b12.6.3.2",[]],["b12.6.3.3",[]],["b12.6.3.4",[]],["b12.6.3.5",[]],["b12.6.3.6",[]]]],["b12.6.4",[["b12.6.4.1",[]]]]]]]]],"page_id":"621"},{"headings":[["b12",[["b12.6",[["b12.6.4",[["b12.6.4.2",[]]]],["b12.6.5",[["b12.6.5.1",[]],["b12.6.5.2",[]],["b12.6.5.3",[]],["b12.6.5.4",[]],["b12.6.5.5",[]]]],["b12.6.6",[["b12.6.6.1",[]]]]]]]]],"page_id":"622"},{"headings":[["b12",[["b12.6",[["b12.6.7",[["b12.6.7.1",[]]]],["b12.6.8",[["b12.6.8.1",[]],["b12.6.8.2",[]],["b12.6.8.3",[]],["b12.6.8.4",[]]]],["b12.6.9",[["b12.6.9.1",[]],["b12.6.9.2",[]],["b12.6.9.3",[]]]],["b12.6.10",[["b12.6.10.1",[]]]]]]]]],"page_id":"623"},{"headings":[["b12",[["b12.6",[["b12.6.10",[["b12.6.10.2",[]]]],["b12.6.11",[["b12.6.11.1",[]],["b12.6.11.2",[]],["b12.6.11.3",[]]]],["b12.6.12",[["b12.6.12.1",[]],["b12.6.12.2",[]],["b12.6.12.3",[]],["b12.6.12.4",[]]]],["b12.6.13",[["b12.6.13.1",[]],["b12.6.13.2",[]],["b12.6.13.3",[]],["b12.6.13.4",[]]]]]]]]],"page_id":"624"},{"headings":[["b12",[["b12.6",[["b12.6.13",[["b12.6.13.5",[]],["b12.6.13.6",[]],["b12.6.13.7",[]],["b12.6.13.8",[]],["b12.6.13.9",[]],["b12.6.13.10",[]],["b12.6.13.11",[]],["b12.6.13.12",[]],["b12.6.13.13",[]]]],["b12.6.14",[["b12.6.14.1",[]]]]]]]]],"page_id":"625"},{"headings":[["b12",[["b12.6",[["b12.6.14",[["b12.6.14.2",[]],["b12.6.14.3",[]],["b12.6.14.4",[]],["b12.6.14.5",[]],["b12.6.14.6",[]],["b12.6.14.7",[]],["b12.6.14.8",[]]]],["b12.6.15",[["b12.6.15.1",[]],["b12.6.15.2",[]],["b12.6.15.3",[]],["b12.6.15.4",[]]]]]]]]],"page_id":"626"},{"headings":[["b12",[["b12.6",[["b12.6.15",[["b12.6.15.5",[]]]],["b12.6.16",[["b12.6.16.1",[]],["b12.6.16.2",[]],["b12.6.16.3",[]],["b12.6.16.4",[]],["b12.6.16.5",[]]]],["b12.6.17",[["b12.6.17.1",[]],["b12.6.17.2",[]]]],["b12.6.18",[["b12.6.18.1",[]]]]]]]]],"page_id":"627"},{"headings":[["b12",[["b12.6",[["b12.6.18",[["b12.6.18.2",[]]]],["b12.6.19",[["b12.6.19.1",[]],["b12.6.19.2",[]],["b12.6.19.3",[]],["b12.6.19.4",[]],["b12.6.19.5",[]],["b12.6.19.6",[]]]],["b12.6.20",[["b12.6.20.1",[]]]],["b12.6.21",[["b12.6.21.1",[]]]]]]]]],"page_id":"628"},{"headings":[["b12",[["b12.6",[["b12.6.22",[["b12.6.22.1",[]],["b12.6.22.2",[]]]],["b12.6.23",[["b12.6.23.1",[]],["b12.6.23.2",[]],["b12.6.23.3",[]],["b12.6.23.4",[]],["b12.6.23.5",[]],["b12.6.23.6",[]]]]]]]]],"page_id":"629"},{"headings":[["b12",[["b12.6",[["b12.6.23",[["b12.6.23.7",[]],["b12.6.23.8",[]]]],["b12.6.24",[["b12.6.24.1",[]],["b12.6.24.2",[]],["b12.6.24.3",[]],["b12.6.24.4",[]],["b12.6.24.5",[]],["b12.6.24.6",[]],["b12.6.24.7",[]]]],["b12.6.25",[["b12.6.25.1",[]]]],["b12.6.26",[["b12.6.26.1",[]],["b12.6.26.2",[]]]]]]]]],"page_id":"630"},{"headings":[["b12",[["b12.6",[["b12.6.27",[["b12.6.27.1",[]]]],["b12.6.28",[["b12.6.28.1",[]]]],["b12.6.29",[["b12.6.29.1",[]]]],["b12.6.30",[["b12.6.30.1",[]],["b12.6.30.2",[]],["b12.6.30.3",[]],["b12.6.30.4",[]],["b12.6.30.5",[]]]],["b12.6.31",[["b12.6.31.1",[]],["b12.6.31.2",[]],["b12.6.31.3",[]]]]]]]]],"page_id":"631"},{"headings":[["b12",[["b12.6",[["b12.6.32",[["b12.6.32.1",[]],["b12.6.32.2",[]],["b12.6.32.3",[]]]],["b12.6.33",[["b12.6.33.1",[]]]],["b12.6.34",[["b12.6.34.1",[]],["b12.6.34.2",[]]]],["b12.6.35",[["b12.6.35.1",[]]]],["b12.6.36",[["b12.6.36.1",[]]]]]]]]],"page_id":"632"},{"headings":[["b12",[["b12.7",[["b12.7.1",[["b12.7.1.1",[]],["b12.7.1.2",[]],["b12.7.1.3",[]],["b12.7.1.4",[]],["b12.7.1.5",[]],["b12.7.1.6",[]],["b12.7.1.7",[]]]]]]]]],"page_id":"633"},{"headings":[["b12",[["b12.7",[["b12.7.1",[["b12.7.1.8",[]],["b12.7.1.9",[]],["b12.7.1.10",[]]]],["b12.7.2",[["b12.7.2.1",[]],["b12.7.2.2",[]],["b12.7.2.3",[]]]]]]]]],"page_id":"634"},{"headings":[["b12",[["b12.7",[["b12.7.2",[["b12.7.2.4",[]],["b12.7.2.5",[]],["b12.7.2.6",[]],["b12.7.2.7",[]]]]]],["b12.8",[["b12.8.1",[["b12.8.1.1",[]],["b12.8.1.2",[]]]]]]]]],"page_id":"635"},{"headings":[["b12",[["b12.8",[["b12.8.1",[["b12.8.1.2",[]],["b12.8.1.3",[]],["b12.8.1.4",[]],["b12.8.1.5",[]],["b12.8.1.6",[]],["b12.8.1.7",[]],["b12.8.1.8",[]]]]]]]]],"page_id":"636"},{"headings":[["b12",[["b12.8",[["b12.8.2",[["b12.8.2.1",[]],["b12.8.2.2",[]],["b12.8.2.3",[]],["b12.8.2.4",[]],["b12.8.2.5",[]],["b12.8.2.6",[]],["b12.8.2.7",[]],["b12.8.2.8",[]],["b12.8.2.9",[]]]]]]]]],"page_id":"637"},{"headings":[["b12",[["b12.8",[["b12.8.2",[["b12.8.2.9",[]],["b12.8.2.10",[]],["b12.8.2.11",[]],["b12.8.2.12",[]],["b12.8.2.13",[]],["b12.8.2.14",[]],["b12.8.2.15",[]],["b12.8.2.16",[]],["b12.8.2.17",[]],["b12.8.2.18",[]],["b12.8.2.19",[]],["b12.8.2.20",[]]]]]]]]],"page_id":"638"},{"headings":[["b12",[["b12.8",[["b12.8.2",[["b12.8.2.21",[]],["b12.8.2.22",[]],["b12.8.2.23",[]],["b12.8.2.24",[]],["b12.8.2.25",[]],["b12.8.2.26",[]],["b12.8.2.27",[]],["b12.8.2.28",[]],["b12.8.2.29",[]]]]]]]]],"page_id":"639"},{"headings":[["b12",[["b12.8",[["b12.8.2",[["b12.8.2.29",[]],["b12.8.2.30",[]],["b12.8.2.31",[]],["b12.8.2.32",[]],["b12.8.2.33",[]],["b12.8.2.34",[]],["b12.8.2.35",[]],["b12.8.2.36",[]],["b12.8.2.37",[]],["b12.8.2.38",[]],["b12.8.2.39",[]],["b12.8.2.40",[]]]]]]]]],"page_id":"640"},{"headings":[["b12",[["b12.8",[["b12.8.2",[["b12.8.2.41",[]],["b12.8.2.42",[]],["b12.8.2.43",[]],["b12.8.2.44",[]],["b12.8.2.45",[]],["b12.8.2.46",[]],["b12.8.2.47",[]],["b12.8.2.48",[]],["b12.8.2.49",[]]]]]]]]],"page_id":"641"},{"headings":[["b12",[["b12.8",[["b12.8.3",[["b12.8.3.1",[]],["b12.8.3.2",[]],["b12.8.3.3",[]],["b12.8.3.4",[]],["b12.8.3.5",[]]]]]]]]],"page_id":"642"},{"headings":[["b12",[["b12.8",[["b12.8.3",[["b12.8.3.6",[]],["b12.8.3.7",[]],["b12.8.3.8",[]],["b12.8.3.9",[]],["b12.8.3.10",[]],["b12.8.3.11",[]],["b12.8.3.12",[]],["b12.8.3.13",[]],["b12.8.3.14",[]],["b12.8.3.15",[]],["b12.8.3.16",[]]]]]]]]],"page_id":"643"},{"headings":[["b12",[["b12.8",[["b12.8.3",[["b12.8.3.16",[]],["b12.8.3.17",[]],["b12.8.3.18",[]],["b12.8.3.19",[]],["b12.8.3.20",[]]]],["b12.8.4",[["b12.8.4.1",[]],["b12.8.4.2",[]],["b12.8.4.3",[]],["b12.8.4.4",[]],["b12.8.4.5",[]],["b12.8.4.6",[]],["b12.8.4.7",[]]]]]]]]],"page_id":"644"},{"headings":[["b12",[["b12.8",[["b12.8.4",[["b12.8.4.8",[]],["b12.8.4.9",[]],["b12.8.4.10",[]],["b12.8.4.11",[]],["b12.8.4.12",[]],["b12.8.4.13",[]],["b12.8.4.14",[]],["b12.8.4.15",[]],["b12.8.4.16",[]],["b12.8.4.17",[]],["b12.8.4.18",[]],["b12.8.4.19",[]],["b12.8.4.20",[]]]]]]]]],"page_id":"645"},{"headings":[["b12",[["b12.8",[["b12.8.4",[["b12.8.4.21",[]],["b12.8.4.22",[]],["b12.8.4.23",[]],["b12.8.4.24",[]],["b12.8.4.25",[]],["b12.8.4.26",[]]]],["b12.8.5",[["b12.8.5.1",[]],["b12.8.5.2",[]],["b12.8.5.3",[]]]]]]]]],"page_id":"646"},{"headings":[["b12",[["b12.8",[["b12.8.5",[["b12.8.5.4",[]],["b12.8.5.5",[]],["b12.8.5.6",[]],["b12.8.5.7",[]],["b12.8.5.8",[]],["b12.8.5.9",[]],["b12.8.5.10",[]],["b12.8.5.11",[]],["b12.8.5.12",[]],["b12.8.5.13",[]],["b12.8.5.14",[]],["b12.8.5.15",[]],["b12.8.5.16",[]],["b12.8.5.17",[]]]]]]]]],"page_id":"647"},{"headings":[["b12",[["b12.8",[["b12.8.5",[["b12.8.5.18",[]],["b12.8.5.19",[]],["b12.8.5.20",[]],["b12.8.5.21",[]],["b12.8.5.22",[]],["b12.8.5.23",[]],["b12.8.5.24",[]],["b12.8.5.25",[]],["b12.8.5.26",[]]]]]]]]],"page_id":"648"},{"headings":[["b12",[["b12.8",[["b12.8.5",[["b12.8.5.27",[]],["b12.8.5.28",[]],["b12.8.5.29",[]],["b12.8.5.30",[]],["b12.8.5.31",[]],["b12.8.5.32",[]],["b12.8.5.33",[]],["b12.8.5.34",[]],["b12.8.5.35",[]]]],["b12.8.6",[["b12.8.6.1",[]],["b12.8.6.2",[]]]]]]]]],"page_id":"649"},{"headings":[["b12",[["b12.8",[["b12.8.6",[["b12.8.6.3",[]],["b12.8.6.4",[]],["b12.8.6.5",[]],["b12.8.6.6",[]],["b12.8.6.7",[]],["b12.8.6.8",[]],["b12.8.6.9",[]],["b12.8.6.10",[]],["b12.8.6.11",[]],["b12.8.6.12",[]],["b12.8.6.13",[]],["b12.8.6.14",[]],["b12.8.6.15",[]]]]]]]]],"page_id":"650"},{"headings":[["b12",[["b12.8",[["b12.8.6",[["b12.8.6.15",[]],["b12.8.6.16",[]],["b12.8.6.17",[]],["b12.8.6.18",[]],["b12.8.6.19",[]],["b12.8.6.20",[]],["b12.8.6.21",[]],["b12.8.6.22",[]],["b12.8.6.23",[]],["b12.8.6.24",[]],["b12.8.6.25",[]]]]]]]]],"page_id":"651"},{"headings":[["b12",[["b12.8",[["b12.8.6",[["b12.8.6.25",[]],["b12.8.6.26",[]],["b12.8.6.27",[]],["b12.8.6.28",[]],["b12.8.6.29",[]],["b12.8.6.30",[]],["b12.8.6.31",[]],["b12.8.6.32",[]],["b12.8.6.33",[]],["b12.8.6.34",[]]]],["b12.8.7",[["b12.8.7.1",[]],["b12.8.7.2",[]]]]]]]]],"page_id":"652"},{"headings":[["b12",[["b12.8",[["b12.8.7",[["b12.8.7.3",[]],["b12.8.7.4",[]],["b12.8.7.5",[]],["b12.8.7.6",[]],["b12.8.7.7",[]],["b12.8.7.8",[]],["b12.8.7.9",[]],["b12.8.7.10",[]],["b12.8.7.11",[]],["b12.8.7.12",[]],["b12.8.7.13",[]]]]]]]]],"page_id":"653"},{"headings":[["b12",[["b12.8",[["b12.8.7",[["b12.8.7.14",[]],["b12.8.7.15",[]],["b12.8.7.16",[]],["b12.8.7.17",[]],["b12.8.7.18",[]],["b12.8.7.19",[]],["b12.8.7.20",[]],["b12.8.7.21",[]],["b12.8.7.22",[]],["b12.8.7.23",[]],["b12.8.7.24",[]]]]]]]]],"page_id":"654"},{"headings":[["b12",[["b12.8",[["b12.8.7",[["b12.8.7.25",[]],["b12.8.7.26",[]],["b12.8.7.27",[]],["b12.8.7.28",[]],["b12.8.7.29",[]],["b12.8.7.30",[]],["b12.8.7.31",[]],["b12.8.7.32",[]],["b12.8.7.33",[]],["b12.8.7.34",[]]]],["b12.8.8",[["b12.8.8.1",[]]]]]]]]],"page_id":"655"},{"headings":[["b12",[["b12.8",[["b12.8.8",[["b12.8.8.2",[]],["b12.8.8.3",[]],["b12.8.8.4",[]],["b12.8.8.5",[]],["b12.8.8.6",[]],["b12.8.8.7",[]],["b12.8.8.8",[]],["b12.8.8.9",[]],["b12.8.8.10",[]],["b12.8.8.11",[]],["b12.8.8.12",[]]]]]]]]],"page_id":"656"},{"headings":[["b12",[["b12.8",[["b12.8.8",[["b12.8.8.13",[]],["b12.8.8.14",[]],["b12.8.8.15",[]],["b12.8.8.16",[]],["b12.8.8.17",[]],["b12.8.8.18",[]],["b12.8.8.19",[]],["b12.8.8.20",[]],["b12.8.8.21",[]],["b12.8.8.22",[]],["b12.8.8.23",[]],["b12.8.8.24",[]],["b12.8.8.25",[]]]]]]]]],"page_id":"657"},{"headings":[["b12",[["b12.8",[["b12.8.8",[["b12.8.8.26",[]],["b12.8.8.27",[]]]],["b12.8.9",[["b12.8.9.1",[]],["b12.8.9.2",[]],["b12.8.9.3",[]],["b12.8.9.4",[]],["b12.8.9.5",[]],["b12.8.9.6",[]],["b12.8.9.7",[]],["b12.8.9.8",[]]]]]]]]],"page_id":"658"},{"headings":[["b12",[["b12.8",[["b12.8.9",[["b12.8.9.9",[]],["b12.8.9.10",[]],["b12.8.9.11",[]],["b12.8.9.12",[]],["b12.8.9.13",[]],["b12.8.9.14",[]],["b12.8.9.15",[]],["b12.8.9.16",[]],["b12.8.9.17",[]],["b12.8.9.18",[]],["b12.8.9.19",[]],["b12.8.9.20",[]]]]]]]]],"page_id":"659"},{"headings":[["b12",[["b12.8",[["b12.8.9",[["b12.8.9.21",[]],["b12.8.9.22",[]],["b12.8.9.23",[]],["b12.8.9.24",[]],["b12.8.9.25",[]],["b12.8.9.26",[]],["b12.8.9.27",[]],["b12.8.9.28",[]],["b12.8.9.29",[]],["b12.8.9.30",[]]]],["b12.8.10",[["b12.8.10.1",[]]]]]]]]],"page_id":"660"},{"headings":[["b12",[["b12.8",[["b12.8.10",[["b12.8.10.1",[]],["b12.8.10.2",[]],["b12.8.10.3",[]],["b12.8.10.4",[]],["b12.8.10.5",[]],["b12.8.10.6",[]],["b12.8.10.7",[]],["b12.8.10.8",[]],["b12.8.10.9",[]],["b12.8.10.10",[]],["b12.8.10.11",[]],["b12.8.10.12",[]],["b12.8.10.13",[]],["b12.8.10.14",[]]]]]]]]],"page_id":"661"},{"headings":[["b12",[["b12.8",[["b12.8.10",[["b12.8.10.15",[]],["b12.8.10.16",[]],["b12.8.10.17",[]],["b12.8.10.18",[]],["b12.8.10.19",[]],["b12.8.10.20",[]],["b12.8.10.21",[]],["b12.8.10.22",[]]]]]],["b12.9",[["b12.9.1",[]],["b12.9.2",[]]]]]]],"page_id":"662"},{"headings":[["b12",[["b12.9",[["b12.9.3",[]]]],["b12.10",[["b12.10.1",[]],["b12.10.2",[]],["b12.10.3",[]],["b12.10.4",[]],["b12.10.5",[]]]]]]],"page_id":"663"},{"headings":[["b12",[["b12.10",[["b12.10.5",[]],["b12.10.6",[]],["b12.10.7",[]],["b12.10.8",[]],["b12.10.9",[]],["b12.10.10",[]],["b12.10.11",[]]]]]]],"page_id":"664"},{"headings":[["b12",[["b12.11",[["b12.11.1",[]],["b12.11.2",[]],["b12.11.3",[]],["b12.11.4",[]],["b12.11.5",[]],["b12.11.6",[]],["b12.11.7",[]],["b12.11.8",[]]]]]]],"page_id":"665"},{"headings":[["b12",[["b12.11",[["b12.11.9",[]],["b12.11.10",[]]]],["b12.12",[["b12.12.1",[]],["b12.12.2",[]],["b12.12.3",[]]]]]]],"page_id":"666"},{"headings":[["b12",[["b12.12",[["b12.12.3",[]],["b12.12.4",[]]]],["b12.13",[["b12.13.1",[]],["b12.13.2",[]],["b12.13.3",[]]]]]]],"page_id":"667"},{"headings":[["b12",[["b12.13",[["b12.13.4",[]],["b12.13.5",[]],["b12.13.6",[]],["b12.13.7",[]],["b12.13.8",[]],["b12.13.9",[]],["b12.13.10",[]],["b12.13.11",[]],["b12.13.12",[]]]]]]],"page_id":"668"},{"headings":[["b12",[["b12.13",[["b12.13.12",[]],["b12.13.13",[]],["b12.13.14",[]],["b12.13.15",[]],["b12.13.16",[]],["b12.13.17",[]]]]]]],"page_id":"669"},{"headings":[["b12",[["b12.13",[["b12.13.17",[]]]],["b12.14",[["b12.14.1",[]],["b12.14.2",[]]]],["b12.15",[["b12.15.1",[]]]]]]],"page_id":"670"},{"headings":[["b13",[["b13.1",[]],["b13.2",[]],["b13.3",[]]]]],"page_id":"671"},{"headings":[["b13",[["b13.4",[["b13.4.1",[]],["b13.4.2",[]],["b13.4.3",[]]]],["b13.5",[]]]]],"page_id":"672"},{"headings":[["b13",[["b13.6",[]],["b13.7",[["b13.7.1",[]],["b13.7.2",[]],["b13.7.3",[]],["b13.7.4",[]],["b13.7.5",[]],["b13.7.6",[]],["b13.7.7",[]]]]]]],"page_id":"673"},{"headings":[["b13",[["b13.7",[["b13.7.8",[]]]],["b13.8",[]],["b13.9",[]],["b13.10",[]],["b13.11",[]],["b13.12",[]],["b13.13",[]],["b13.14",[]],["b13.15",[]]]]],"page_id":"674"},{"headings":[["b13",[["b13.16",[]],["b13.17",[]],["b13.18",[]]]]],"page_id":"675"},{"headings":[["b13",[["b13.18",[]],["b13.19",[["b13.19.1",[]],["b13.19.2",[]]]]]]],"page_id":"676"},{"headings":[["b13",[["b13.19",[["b13.19.3",[]],["b13.19.4",[]]]]]]],"page_id":"677"},{"headings":[["b13",[["b13.19",[["b13.19.4",[]],["b13.19.5",[]],["b13.19.6",[]]]]]]],"page_id":"678"},{"headings":[["b13",[["b13.19",[["b13.19.7",[]],["b13.19.8",[]]]]]]],"page_id":"679"},{"headings":[["b13",[["b13.19",[["b13.19.9",[]],["b13.19.10",[]],["b13.19.11",[]]]]]]],"page_id":"680"},{"headings":[["b13",[["b13.19",[["b13.19.11",[]],["b13.19.12",[]],["b13.19.13",[]]]]]]],"page_id":"681"},{"headings":[["b13",[["b13.20",[]],["b13.21",[["b13.21.1",[]]]]]]],"page_id":"682"},{"headings":[["b13",[["b13.21",[["b13.21.1",[]]]]]]],"page_id":"683"},{"headings":[["b13",[["b13.21",[["b13.21.1",[]],["b13.21.2",[]]]]]]],"page_id":"684"},{"headings":[["b13",[["b13.21",[["b13.21.2",[]]]]]]],"page_id":"685"},{"headings":[["b13",[["b13.22",[]],["b13.23",[]],["b13.24",[]]]]],"page_id":"686"},{"headings":[["b13",[["b13.25",[["b13.25.1",[]]]],["b13.26",[]]]]],"page_id":"687"},{"headings":[["b13",[["b13.26",[]],["b13.27",[]],["b13.28",[]],["b13.29",[["b13.29.1",[]],["b13.29.2",[]],["b13.29.3",[]],["b13.29.4",[]]]]]]],"page_id":"688"},{"headings":[["b13",[["b13.29",[["b13.29.5",[]],["b13.29.6",[]],["b13.29.7",[]],["b13.29.8",[]],["b13.29.9",[]],["b13.29.10",[]],["b13.29.11",[]],["b13.29.12",[]],["b13.29.13",[]],["b13.29.14",[]],["b13.29.15",[]]]]]]],"page_id":"689"},{"headings":[["b13",[["b13.29",[["b13.29.16",[]],["b13.29.17",[]],["b13.29.18",[]],["b13.29.19",[]]]]]]],"page_id":"690"},{"headings":[["b13",[["b13.30",[]]]]],"page_id":"691"},{"headings":[["b14",[["b14.1",[]]]]],"page_id":"692"},{"headings":[["b14",[["b14.1",[]],["b14.2",[]]]]],"page_id":"693"},{"headings":[["b14",[["b14.3",[["b14.3.1",[]],["b14.3.2",[]],["b14.3.3",[]],["b14.3.4",[]],["b14.3.5",[]]]]]]],"page_id":"694"},{"headings":[["b14",[["b14.3",[["b14.3.5",[]],["b14.3.6",[]],["b14.3.7",[]],["b14.3.8",[]],["b14.3.9",[]],["b14.3.10",[]],["b14.3.11",[]]]]]]],"page_id":"695"},{"headings":[["b14",[["b14.3",[["b14.3.12",[]]]]]]],"page_id":"696"},{"headings":[["b14",[["b14.4",[]],["b14.5",[]]]]],"page_id":"697"},{"headings":[["b14",[["b14.6",[["b14.6.1",[]]]]]]],"page_id":"698"},{"headings":[["b15",[["b15.1",[]],["b15.2",[]]]]],"page_id":"699"},{"headings":[["b15",[["b15.2",[]],["b15.3",[]]]]],"page_id":"700"},{"headings":[["b15",[["b15.4",[]]]]],"page_id":"701"},{"headings":[["b15",[["b15.5",[]]]]],"page_id":"702"},{"headings":[["b15",[["b15.5",[]],["b15.6",[]]]]],"page_id":"703"},{"headings":[["b15",[["b15.6",[]],["b15.7",[]]]]],"page_id":"704"},{"headings":[["b15",[["b15.7",[]],["b15.8",[]],["b15.9",[]]]]],"page_id":"705"},{"headings":[["b15",[["b15.10",[]]]]],"page_id":"706"},{"headings":[["b15",[["b15.10",[]],["b15.11",[["b15.11.1",[]]]]]]],"page_id":"707"},{"headings":[["b15",[["b15.11",[["b15.11.1",[]]]],["b15.12",[["b15.12.1",[]]]]]]],"page_id":"708"},{"headings":[["b15",[["b15.12",[["b15.12.1",[]]]],["b15.13",[]]]]],"page_id":"709"},{"headings":[["b15",[["b15.14",[]]]]],"page_id":"710"},{"headings":[["b15",[["b15.15",[]],["b15.16",[]]]]],"page_id":"711"},{"headings":[["b15",[["b15.16",[["b15.16.1",[]]]]]]],"page_id":"712"},{"headings":[["b15",[["b15.16",[["b15.16.1",[]],["b15.16.2",[]]]]]]],"page_id":"713"},{"headings":[["b15",[["b15.16",[["b15.16.2",[]],["b15.16.3",[]]]],["b15.17",[]]]]],"page_id":"714"},{"headings":[["b15",[["b15.17",[]],["b15.18",[]]]]],"page_id":"715"},{"headings":[["b15",[["b15.19",[["b15.19.1",[]]]]]]],"page_id":"716"},{"headings":[["b15",[["b15.19",[["b15.19.1",[]],["b15.19.2",[]]]],["b15.20",[]],["b15.21",[["b15.21.1",[]]]]]]],"page_id":"717"},{"headings":[["b15",[["b15.21",[["b15.21.1",[]],["b15.21.2",[]]]],["b15.22",[]]]]],"page_id":"718"},{"headings":[["b15",[["b15.22",[]]]]],"page_id":"719"},{"headings":[["b15",[["b15.22",[]],["b15.23",[["b15.23.1",[]]]]]]],"page_id":"720"},{"headings":[["b15",[["b15.23",[["b15.23.1",[]]]]]]],"page_id":"721"},{"headings":[["b15",[["b15.23",[["b15.23.1",[]]]]]]],"page_id":"722"},{"headings":[["b15",[["b15.23",[["b15.23.2",[]]]],["b15.24",[]]]]],"page_id":"723"},{"headings":[["b15",[["b15.24",[]]]]],"page_id":"724"},{"headings":[["b15",[["b15.24",[["b15.24.1",[]],["b15.24.2",[]]]],["b15.25",[]]]]],"page_id":"725"},{"headings":[["b15",[["b15.25",[]]]]],"page_id":"726"},{"headings":[["b15",[["b15.25",[]]]]],"page_id":"727"},{"headings":[["b15",[["b15.26",[]]]]],"page_id":"728"},{"headings":[["b15",[["b15.26",[]],["b15.27",[]]]]],"page_id":"729"},{"headings":[["b15",[["b15.27",[]]]]],"page_id":"730"},{"headings":[["b15",[["b15.27",[]],["b15.28",[]]]]],"page_id":"731"},{"headings":[["b15",[["b15.28",[]]]]],"page_id":"732"},{"headings":[["b15",[["b15.28",[["b15.28.1",[]]]]]]],"page_id":"733"},{"headings":[["b15",[["b15.28",[["b15.28.2",[]]]],["b15.29",[]]]]],"page_id":"734"},{"headings":[["b15",[["b15.29",[]]]]],"page_id":"735"},{"headings":[["b15",[["b15.30",[]],["b15.31",[]]]]],"page_id":"736"},{"headings":[["b15",[["b15.31",[]],["b15.32",[]]]]],"page_id":"737"},{"headings":[["b15",[["b15.32",[]],["b15.33",[]]]]],"page_id":"738"},{"headings":[["b15",[["b15.33",[]],["b15.34",[]]]]],"page_id":"739"},{"headings":[["b15",[["b15.34",[]],["b15.35",[]]]]],"page_id":"740"},{"headings":[["b15",[["b15.35",[]],["b15.36",[]]]]],"page_id":"741"},{"headings":[["b15",[["b15.36",[["b15.36.1",[]],["b15.36.2",[]]]]]]],"page_id":"742"},{"headings":[["b15",[["b15.37",[]],["b15.38",[]]]]],"page_id":"743"},{"headings":[["b15",[["b15.38",[]],["b15.39",[]]]]],"page_id":"744"},{"headings":[["b15",[["b15.39",[]],["b15.40",[]],["b15.41",[]]]]],"page_id":"745"},{"headings":[["b15",[["b15.41",[]],["b15.42",[]]]]],"page_id":"746"},{"headings":[["b15",[["b15.42",[]],["b15.43",[]]]]],"page_id":"747"},{"headings":[["b15",[["b15.43",[]],["b15.44",[]]]]],"page_id":"748"},{"headings":[["b15",[["b15.44",[]],["b15.45",[]]]]],"page_id":"749"},{"headings":[["b15",[["b15.45",[]]]]],"page_id":"750"},{"headings":[["b15",[["b15.45",[]]]]],"page_id":"751"},{"headings":[["b15",[["b15.45",[]],["b15.46",[]]]]],"page_id":"752"},{"headings":[["b15",[["b15.46",[]],["b15.47",[]]]]],"page_id":"753"},{"headings":[["b15",[["b15.47",[]],["b15.48",[]],["b15.49",[]]]]],"page_id":"754"},{"headings":[["b15",[["b15.50",[]]]]],"page_id":"755"},{"headings":[["b15",[["b15.51",[]]]]],"page_id":"756"},{"headings":[["b15",[["b15.51",[]],["b15.52",[]]]]],"page_id":"757"},{"headings":[["b15",[["b15.52",[]],["b15.53",[]]]]],"page_id":"758"},{"headings":[["b15",[["b15.53",[]],["b15.54",[]]]]],"page_id":"759"},{"headings":[["b15",[["b15.54",[]]]]],"page_id":"760"},{"headings":[["b15",[["b15.55",[]]]]],"page_id":"761"},{"headings":[["b15",[["b15.55",[]],["b15.56",[]]]]],"page_id":"762"},{"headings":[["b15",[["b15.56",[]],["b15.57",[]]]]],"page_id":"763"},{"headings":[["b15",[["b15.57",[]]]]],"page_id":"764"},{"headings":[["b15",[["b15.57",[]],["b15.58",[]],["b15.59",[]]]]],"page_id":"765"},{"headings":[["b15",[["b15.60",[]],["b15.61",[]]]]],"page_id":"766"},{"headings":[["b15",[["b15.61",[]]]]],"page_id":"767"},{"headings":[["b15",[["b15.62",[]]]]],"page_id":"768"},{"headings":[["b15",[["b15.62",[]],["b15.63",[]],["b15.64",[]]]]],"page_id":"769"},{"headings":[["b15",[["b15.64",[]],["b15.65",[]],["b15.66",[]]]]],"page_id":"770"},{"headings":[["b15",[["b15.67",[]]]]],"page_id":"771"},{"headings":[["b15",[["b15.68",[]]]]],"page_id":"772"},{"headings":[["b15",[["b15.69",[]],["b15.70",[]],["b15.71",[]]]]],"page_id":"773"},{"headings":[["b15",[["b15.71",[]],["b15.72",[]],["b15.73",[]]]]],"page_id":"774"},{"headings":[["b15",[["b15.73",[]],["b15.74",[]]]]],"page_id":"775"},{"headings":[["b15",[["b15.75",[]],["b15.76",[]]]]],"page_id":"776"},{"headings":[["b15",[["b15.77",[]],["b15.78",[]]]]],"page_id":"777"},{"headings":[["b15",[["b15.79",[]],["b15.80",[]]]]],"page_id":"778"},{"headings":[["b15",[["b15.81",[["b15.81.1",[]],["b15.81.2",[]],["b15.81.3",[]]]],["b15.82",[]]]]],"page_id":"779"},{"headings":[["b15",[["b15.82",[]],["b15.83",[]],["b15.84",[]]]]],"page_id":"780"},{"headings":[["b15",[["b15.84",[]],["b15.85",[]],["b15.86",[]],["b15.87",[]]]]],"page_id":"781"},{"headings":[["b15",[["b15.87",[]],["b15.88",[]],["b15.89",[]]]]],"page_id":"782"},{"headings":[["b15",[["b15.89",[]],["b15.90",[]],["b15.91",[]]]]],"page_id":"783"},{"headings":[["b15",[["b15.91",[]],["b15.92",[]]]]],"page_id":"784"},{"headings":[["b15",[["b15.93",[]]]],["b16",[["b16.1",[]]]]],"page_id":"785"},{"headings":[["a1",[]]],"page_id":"unid_3"}],notes=exports.notes={"tn1.1":"b'<note id=\"tn1.1\"/>'","tn1.2":"b'<note id=\"tn1.2\"/>'","tn3.1":"b'<note id=\"tn3.1\"/>'","tn3.2":"b'<note id=\"tn3.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:1 Mne Seraphim] <span class=\"tei-hi-italic\">sic, without question</span>\\nAs Keynes says, <quote>&#8220;the apparently meaningless syllable was certainly\\nintentional, probably being a corruption of the mystical name, Bne Seraphim&#8221;</quote></p></note>'","tn3.3":"b'<note id=\"tn3.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:13 gentle hear] <span class=\"tei-hi-italic\">mended from</span> gently\\nhear (after the first two copies, K and R)</p></note>'","tn4.1":"b'<note id=\"tn4.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:4 oertired] <span class=\"tei-hi-italic\">can be read</span> oerfired (since\\nthe i-dot close to the tall <quote>&#8220;t&#8221;</quote> makes it resemble\\nan <quote>&#8220;f&#8221;</quote>)</p></note>'","tn6.1":"b'<note id=\"tn6.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:19-20 deleted in two copies, I and J.</p></note>'","tn7.1":"b'<note id=\"tn7.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Twenty-one copies of <title level=\"m\"><span class=\"tei-hi-italic\">\\nSongs of Innocence</span></title> and 28 of the combined grouping under the\\ngeneral title are known to exist. The <title level=\"m\"><span class=\"tei-hi-italic\">Songs\\nof Experience</span></title>, though advertised separately in Blake\\'s Prospectus\\nof 1793, appear not to have been issued except in combination or to complement\\nearlier copies of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence</span></title>.\\n The latter he continued to issue separately, feeling perhaps that they could\\nstand alone but that the songs of Experience required to be heard as counterpoint\\nin the progression of contraries.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Ms drafts of three Innocence\\nsongs (in <title level=\"m\"><span class=\"tei-hi-italic\">An Island in the Moon</span></title>)\\nand of 18 Experience songs (in the Notebook) are analyzed for all variants,\\nin the following notes.  All etched copies are identical in text, except for\\nBlake\\'s tampering with line 12 of <title level=\"a\">&#8220;The Tyger&#8221;\\n</title> in one copy, changing <quote>&#8220;sung&#8221;</quote> to <quote>&#8220;sang&#8221;</quote> in <title level=\"a\">&#8220;The Clod &amp; the Pebble&#8221;\\n</title> in another, and altering the <quote>&#8220;smiles&#8221;</quote>\\nin <title level=\"a\">&#8220;A Cradle Song&#8221;</title> in another.  In no\\ntwo copies of <title level=\"m\"><span class=\"tei-hi-italic\">Innocence</span></title>, however,\\nare the plates containing the songs arranged in exactly the same order.  In\\ncopies of the combined volume, Blake after 19 differing arrangements (in what\\norder we are not sure, since the dating of many copies is conjectural) settled\\ndown to that adopted in the present edition.  In seven of the last eight copies\\nprinted he followed this sequence; yet since two of these printings were made\\nnot before 1815 and five not before <pb n=\"791\"/>                         \\n         1825-26, i.e.e, in Blake\\'s closing years, this <quote>&#8220;final&#8221;</quote> order may represent only a final wearniness.  For when he took pains\\nto write out instructions as to <quote>&#8220;The Order in which the Songs\\n. . . ought to be paged &amp; placed&#8221;</quote>&#8212;an order followed\\nin one copy, on 1818 paper, though the list is checked over twice as if for\\ntwo bindings&#8212;Blake contrived yet one more unique arrangement.  (See\\nLetter 68.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">It is suggested that the reader experiment, as Blake\\ndid, to find what different tensions and resonances are produced by different\\njuxtapositions.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Dates</span>: 1784-1803, approximately.\\n Three songs appear in the ms of <title level=\"m\"><span class=\"tei-hi-italic\">An Island</span></title>\\n(1784-85).  The earliest copies of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of\\nInnocence</span></title> are complete and bear the etched date <quote>&#8220;1789&#8221;</quote> but may not have been issued that soon.  The lettering of the Innocence\\nsongs is an improvement upon the stiff roman style of the earlier tractates,\\nbut it continues the backward slant which was probably caused at first by\\nBlake\\'s using a mirror to guide his hand when writing directly on the copper.\\n An exception is <title level=\"a\">&#8220;The Voice of the Ancient Bard&#8221;\\n</title> (later moved to the <title level=\"m\"><span class=\"tei-hi-normal\">Songs of Experience\\n</span></title>), which is inscribed in a transitional cursive italic, with\\nforward slant, a style also found in plates 1-5 of <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Book of Thel</span></title>.  The lettering style that became Blake\\'s final\\nchoice appears first in plate 6 of <title level=\"m\"><span class=\"tei-hi-italic\">Thel</span></title>\\nand in all the Experience songs except those carried over from Innocence.\\n In its first form it employs a lower-case <quote>&#8220;g&#8221;</quote>\\nwith its topknot or serif switched to the left side.  Its second form employs\\na conventional <quote>&#8220;g&#8221;</quote> with serif on the right and\\nappears in <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title>, dated <quote>&#8220;1804&#8221;</quote> and all later etched works. (The hypothesis long\\naccepted that Blake applied the text of his Illuminated Works to the copper\\nby some method of transfer or counterproofing&#8212;a theory that, however,\\ncould not account for the text of the Books of <title level=\"m\"><span class=\"tei-hi-italic\">\\nAhania</span></title> and <title level=\"m\"><span class=\"tei-hi-italic\">Los</span></title> which\\nare in intaglio etching&#8212;has now been conclusively overthrown by Robert\\nN. Essick in <title level=\"m\"><span class=\"tei-hi-italic\">William Blake Printmaker</span></title>,\\nPrinceton, N.J.: Princeton University Press 1980, pp 89-91.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    Four\\nof the <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title> first\\nappeared among the <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence</span></title>: <title level=\"a\">&#8220;The Little Girl Lost&#8221;</title> and <title level=\"a\">\\n&#8220;The Little Girl Found&#8221;</title>, <title level=\"a\">&#8220;The School\\nBoy&#8221;</title>, and <title level=\"a\">&#8220;The Voice of the Ancient Bard&#8221;\\n</title>. Thus even while making his <quote>&#8220;1789&#8221;</quote> collection\\nBlake was accumulating contrary songs, including  perhaps some not fit even\\ntemporarily for Innocence.  Of the 18 songs of Experience in Blake\\'s Notebook\\n(in entries made between 1790 and late 1792) 12 seem fair copies of earlier\\ndrafts (though subsequently revised or expanded) and only six were unmistakably\\nbegun and composed in the Notebook, i.e., within these dates: <title level=\"a\">\\n&#8220;The Lilly&#8221;</title>, <title level=\"a\">&#8220;The Tyger&#8221;\\n</title>, <title level=\"a\">&#8220;The Human Abstract&#8221;</title>, <title level=\"a\">&#8220;A Little Boy Lost&#8221;</title>, <title level=\"a\">&#8220;The\\nChimney Sweeper&#8221;</title>, and <title level=\"a\">&#8220;The Fly&#8221;\\n</title> (in that order).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><title level=\"a\">&#8220;A Divine Image&#8221;\\n</title> (given here following the <title level=\"m\"><span class=\"tei-hi-italic\">Songs</span></title>\\nproper) was omitted by Blake from all but one known copy but must have been\\netched before (and been replaced by) <title level=\"a\">&#8220;The Human Abstract&#8221;\\n</title>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Before the end of 1792 Blake had written among the Notebook\\npoems a satiric <title level=\"a\">&#8220;Motto to the Songs of Innocence &amp;\\nof Experience&#8221;</title> (see above, p 499); yet be advertised the two\\ngroups as separate booklets on October 1O 1793, and his combined title page\\nis etched <quote>&#8220;1794&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Songs not in the Notebook\\ngroup and hence possibly of late composition are the <title level=\"a\">&#8220;Introduction&#8221;\\n</title>, <title level=\"a\">&#8220;Ah! Sun-flower&#8221;</title>, and <title level=\"a\">&#8220;A Little Girl Lost&#8221;</title>.  <title level=\"a\">&#8220;To\\nTirzah&#8221;</title> does not appear in five copies, and in style of lettering\\nand in content it seems to belong to 18O3 or later.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the notes\\nthat follow, second or third readings implied but not given are to be understood\\nas identical to the readings of the final text.</p></note>'","tn10.1":"b'<note id=\"tn10.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 my] falsely reported as <quote>&#8220;thy&#8221;</quote>\\nin posthumous copies, but see M. E. Reisner in <span class=\"tei-hi-italic\">Blake Newsletter\\n</span> 40:130.</p></note>'","tn10.2":"b'<note id=\"tn10.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 weep &amp;c] <span class=\"tei-hi-italic\">to be understood</span> as\\n\\'weep (for <quote>&#8220;sweep&#8221;</quote>)</p></note>'","tn11.1":"b'<note id=\"tn11.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in <title level=\"m\"><span class=\"tei-hi-italic\">An Island in\\nthe Moon</span></title>, Chap II (see p 463), is Presented as a song by Quid\\nthe  Cynic.  In revision for <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence\\n</span></title> the anapests were removed&#8212;and the mockery.</p></note>'","tn11.2":"b'<note id=\"tn11.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">An early ms version, not in Blake\\'s hand, was written\\nin a copy of <title rend=\"m\"><span class=\"tei-hi-italic\">Poetical Sketches</span></title> that\\nbelonged to Mrs Flaxman, now in the Alexander Turnbull Library in Wellington,\\nNew Zealand (see below, p 851). it varies from <title level=\"a\">&#8220;Laughing\\nSong&#8221;</title> in the following particulars:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title] Song 2nd\\nby a Yound[sic] Shepherd <span class=\"tei-hi-italic\">ms rdg</span><span class=\"tei-hi-italic\">Lines\\n</span> 1-2 were lines 5-6 in the ms; lines 3-6 were 1-4.</p></note>'","tn11.3":"b'<note id=\"tn11.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 green woods laugh] greenwood laughs <span class=\"tei-hi-italic\">ms\\nrdg</span></p></note>'","tn11.4":"b'<note id=\"tn11.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 air does] trees do <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn11.5":"b'<note id=\"tn11.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Mary and Susan and Emily] Edessa, &amp; Lyca, &amp;\\nEmilie <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn12.1":"b'<note id=\"tn12.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31-32 are . . . smiles . . . beguiles] <span class=\"tei-hi-italic\">\\naltered in copy J to</span>:like . . . smile . . . beguile (in a hand like Blake\\'s,\\naccording to G. E. Bentley)</p></note>'","tn12.2":"b'<note id=\"tn12.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">For an <title level=\"a\">&#8220;Experience&#8221;</title>\\nversion, see <quote>&#8220;A cradle song&#8221;</quote> (above, p 468) which\\nwas written among other <title level=\"a\">&#8220;Songs of Experience&#8221;\\n</title> in the Notebook (p 114) but not published.</p></note>'","tn12.3":"b'<note id=\"tn12.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 That] <span class=\"tei-hi-italic\">printed as</span> Who <span class=\"tei-hi-italic\">\\nin the</span> Swedenborgian journal <title level=\"s\"><span class=\"tei-hi-italic\">The Dawn of\\nLight</span></title> (April 1825), a change which Raymond H. Deck, Jr, thinks\\npossibly authorized by Blake, since he knew the editor, C. A. Tulk.  The possibility\\nseems remote, and theologically motivated.</p></note>'","tn13.1":"b'<note id=\"tn13.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The ms draft in <title level=\"m\"><span class=\"tei-hi-italic\">An Island\\nin the Moon</span></title>, Chap II (see text, p 462), is presented as a song\\nby Mr. Obtuse Angle, the Mathematician, which is meant to enliven a dull party\\nbut fails.</p></note>'","tn14.1":"b'<note id=\"tn14.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44 Graze] <span class=\"tei-hi-italic\">mended from</span> grase</p></note>'","tn14.2":"b'<note id=\"tn14.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">48 as] altered in copy Q of <title level=\"m\"><span class=\"tei-hi-italic\">\\nInnocence</span></title> to: and</p></note>'","tn15.1":"b'<note id=\"tn15.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in <title level=\"m\"><span class=\"tei-hi-italic\">An Island in\\nthe Moon</span></title>, Chap II (see text), shifts the song\\'s reciter from\\nMrs Sigtag atist\\'s Grandmother to Mrs Nannicantipot\\'s mother to, finally,\\na Nurse.</p></note>'","tn17.1":"b'<note id=\"tn17.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 seek] <span class=\"tei-hi-italic\">changed to</span> wish in <span class=\"tei-hi-italic\">\\nThe Dawn of Light</span> (see above)</p></note>'","tn17.2":"b'<note id=\"tn17.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 grief] <span class=\"tei-hi-italic\">changed to</span> griefs (<span class=\"tei-hi-italic\">\\nbut</span> grief <span class=\"tei-hi-italic\">kept in line</span> 35) in <span class=\"tei-hi-italic\">The Dawn\\n</span>.  Surely not with Blake\\'s approval.  In both poems <span class=\"tei-hi-italic\">The\\nDawn</span> supplied punctuation and capitalization hardly to Blake\\'s desire.\\n</p></note>'","tn18.1":"b'<note id=\"tn18.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">With the two exceptions indicated, all variant readings\\ngiven are from Blake\\'s ms Notebook.</p></note>'","tn18.2":"b'<note id=\"tn18.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Follows <title level=\"a\">&#8220;Introduction&#8221;</title>\\nimmediately in all copies.  The Notebook draft (p III reversed) shows Blake\\narriving at the final text through precise improvements in wording:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     Title] The Earths Answer 1<span class=\"tei-hi-italic\">st ms rdg</span></p></note>'","tn18.3":"b'<note id=\"tn18.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 light fled] eyes fled 1<span class=\"tei-hi-italic\">st ms rdg del</span>;\\norbs dead 2<span class=\"tei-hi-italic\">nd ms rdg del</span></p></note>'","tn18.4":"b'<note id=\"tn18.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Starry] 1<span class=\"tei-hi-italic\">st ms rdg</span>, del, then reinserted\\nabove the line</p></note>'","tn18.5":"b'<note id=\"tn18.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 I hear . . . men] 1<span class=\"tei-hi-italic\">st ms rdg, changed\\nto</span> I hear the ancient father of men; <span class=\"tei-hi-italic\">then</span> ancient father <span class=\"tei-hi-italic\">del</span></p></note>'","tn18.6":"b'<note id=\"tn18.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 Selfish] Cruel 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn18.7":"b'<note id=\"tn18.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 selfish] wintry 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn19.1":"b'<note id=\"tn19.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Chain\\'d] Closd 1<span class=\"tei-hi-italic\">st ms rdg del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     11-15 Stanza heavily del, then 16-20 written in adjacent column as replacement;\\nfinal restoration of 11-15 not indicated in the Notebook (a caution against\\nconsidering all Notebook deletions as final decisions: see <quote>&#8220;Never\\npain to tell thy love&#8221;</quote>)</p></note>'","tn19.2":"b'<note id=\"tn19.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 joy] delight 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn19.3":"b'<note id=\"tn19.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18-19 sower / Sow by night] sower sow / His seed by night\\n1<span class=\"tei-hi-italic\">st ms rdg</span> (revised to final rdg)</p></note>'","tn19.4":"b'<note id=\"tn19.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 freeze] close 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn19.5":"b'<note id=\"tn19.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24-25]</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Thou my bane</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Hast my love with bondage bound 1<span class=\"tei-hi-italic\">st ms rdg</span> (revised to\\nfinal rdg)</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn19.6":"b'<note id=\"tn19.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 115 reversed) is identical except\\nfor lack of punctuation, and mistake of <quote>&#8220;anothers&#8221;</quote>\\nfor <quote>&#8220;another&#8221;</quote> in line 10.</p></note>'","tn19.7":"b'<note id=\"tn19.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 sang] <span class=\"tei-hi-italic\">mended from</span> sung (in 1825 or\\nlater when Blake was retracing the text in color in copy Z&#8212;see Blake\\nTrust facsimile, 1955; a possibly accidental yet genuine correction by an\\nolder Blake)</p></note>'","tn19.8":"b'<note id=\"tn19.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 103 reversed) is almost identical\\nbut less limber.</p></note>'","tn19.9":"b'<note id=\"tn19.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 so many children] so great a number <span class=\"tei-hi-italic\">ms\\nrdg</span></p></note>'","tn19.10":"b'<note id=\"tn19.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 It is] Tis <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn19.11":"b'<note id=\"tn19.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 It is] Tis <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn20.1":"b'<note id=\"tn20.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13, 14 where-e\\'er] whereeer <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn20.3":"b'<note id=\"tn20.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This and the next poem first appeared among the <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence</span></title> (1789).</p></note>'","tn22.1":"b'<note id=\"tn22.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (pp 106 &amp; 103 reversed) is almost\\n     identical.</p></note>'","tn22.2":"b'<note id=\"tn22.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 weep weep] <span class=\"tei-hi-italic\">i.e.</span>, sweep sweep</p></note>'","tn22.3":"b'<note id=\"tn22.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 to the church] to Church <span class=\"tei-hi-italic\">ms p</span> 106\\n</p></note>'","tn22.4":"b'<note id=\"tn22.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 winters snow] winter wind 1<span class=\"tei-hi-italic\">st ms rdg</span></p></note>'","tn23.1":"b'<note id=\"tn23.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 make up a heaven of] wrap themselves up in 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span></p></note>'","tn23.2":"b'<note id=\"tn23.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 109 reversed) is identical except\\nfor:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title] <span class=\"tei-hi-italic\">not in ms</span></p></note>'","tn23.3":"b'<note id=\"tn23.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 days of my youth] desires of youth 1<span class=\"tei-hi-italic\">st\\nms rdg del</span>; days of youth 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn23.4":"b'<note id=\"tn23.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 107 reversed) is closely related\\nto <quote>&#8220;The wild flowers song&#8221;</quote> begun just above it\\non the page, in the same ink.</p></note>'","tn23.5":"b'<note id=\"tn23.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Has] Hath <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn23.6":"b'<note id=\"tn23.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 And his] O 1<span class=\"tei-hi-italic\">st ms rdg del</span>; And his\\n2<span class=\"tei-hi-italic\">nd ms rdg</span>; And her 3<span class=\"tei-hi-italic\">rd ms rdg</span></p></note>'","tn23.7":"b'<note id=\"tn23.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Does thy] Doth 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn23.8":"b'<note id=\"tn23.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 101 reversed) began with three\\ntetrameter lines and a half:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Woe alas my guilty hand</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Brushd across thy summer joy</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>All thy gilded painted pride</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Shatterd fled</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These were deleted and a new beginning was made in dimeter quatrains,\\nclose to the final version except for a deleted second stanza:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The cut worm</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Forgives the plow</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And dies in peace</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And so do thou</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(Compare Proverb 6 in the <title level=\"m\"><span class=\"tei-hi-italic\">Marriage</span></title>)\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title] <span class=\"tei-hi-italic\">not in ms</span></p></note>'","tn23.9":"b'<note id=\"tn23.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 summers] summer <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn23.10":"b'<note id=\"tn23.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 thoughtless] guilty 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn23.11":"b'<note id=\"tn23.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Has] Hath <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn24.1":"b'<note id=\"tn24.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Lines</span> 13-16 originally followed 17-20\\nand were more positive in mode:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     13 If thought] Thought 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span></p></note>'","tn24.2":"b'<note id=\"tn24.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 And] But 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn24.3":"b'<note id=\"tn24.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 103 reversed) does not capitalize <quote>&#8220;Dream&#8221;</quote>, <quote>&#8220;Queen&#8221;</quote>, or <quote>&#8220;Angel&#8221;</quote>.  Lines 15-16 appear also as concluding lines\\nin the ms <title level=\"a\">&#8220;Infant Sorrow&#8221;</title> (see p 797\\nand p 469.</p></note>'","tn24.4":"b'<note id=\"tn24.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 For] But 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn24.5":"b'<note id=\"tn24.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">There are two ms drafts in Notebook (pp 109-108 reversed),\\nthe first much revised, with title and stanza 5 added in revision; the second\\na fair copy (crossed out after transfer to copper) of stanzas 1, 3, 5, and\\n6&#8212;with stanza 2 written alongside though not marked for insertion.</p></note>'","tn24.6":"b'<note id=\"tn24.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 or] or 1<span class=\"tei-hi-italic\">st ms rdg del;</span> &amp; 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn24.7":"b'<note id=\"tn24.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Could] Could 1<span class=\"tei-hi-italic\">st ms rdg del;</span> Dare\\n2<span class=\"tei-hi-italic\">nd ms rdg del</span></p></note>'","tn24.8":"b'<note id=\"tn24.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 In what] In what 1<span class=\"tei-hi-italic\">st ms rdg del</span> (but\\ndeletion line erased); Burnt in 2<span class=\"tei-hi-italic\">nd ms rdg del</span></p></note>'","tn24.9":"b'<note id=\"tn24.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Burnt the] Burnt the 1<span class=\"tei-hi-italic\">st ms rdg del;</span>\\nThe Cruel 2<span class=\"tei-hi-italic\">nd ms rdg del</span></p></note>'","tn24.10":"b'<note id=\"tn24.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 On . . . aspire] Could heart descend or wings aspire\\n2<span class=\"tei-hi-italic\">nd ms rdg</span> (1st ms rdg, not del, is the final rdg)</p></note>'","tn24.11":"b'<note id=\"tn24.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 &amp; what] Altered in ink to <quote>&#8220;formd\\nthy&#8221;</quote> in a late copy (P); given as <quote>&#8220;forged thy&#8221;</quote> in B. H. Malkin, <title level=\"m\"><span class=\"tei-hi-italic\">A Father\\'s Memoirs\\nof his Child</span></title> (London 1806), perhaps on Blake\\'s authority, for\\nthe line seems to have troubled him&#8212;or his readers.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">After\\nline 12 several starts were made on a 4th stanza, first:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Could fetch it from the furnace deep</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And in<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">thy</span>]</span>&lt;the&gt; horrid\\nribs dare steep</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">then:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In the well of sanguine woe</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">then:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In what clay &amp; in what mould</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Were thy eyes of fury rolld</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Then all these were deleted and stanza 4 was written in almost its\\nfinal form, but it was experimented with thus:</p></note>'","tn25.1":"b'<note id=\"tn25.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 What . . . what] What. . . what 1<span class=\"tei-hi-italic\">st ms\\nrdg del;</span> Where . . .  where 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn25.3":"b'<note id=\"tn25.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Dare] Could 1<span class=\"tei-hi-italic\">st ms rdg del</span>  clasp]\\nclasp 1<span class=\"tei-hi-italic\">st ms rdg del;</span> grasp 2<span class=\"tei-hi-italic\">nd ms rdg del\\n</span></p></note>'","tn25.4":"b'<note id=\"tn25.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Lines</span> 17-20 were written as follows,\\nthen numbered for rearrangement of lines and for insertion as 5th stanza:\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">          3 And <span class=\"tei-del\">[<span class=\"tei-hi-italic\">is</span>]</span><span class=\"tei-del\">[&lt;<span class=\"tei-hi-italic\">did&gt;</span><span class=\"tei-hi-italic\">he laugh</span>]</span>&lt;dare he <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">smile</span>]</span><span class=\"tei-del\">[&lt;<span class=\"tei-hi-italic\">laugh</span>&gt;]\\n</span>&gt; his work to see</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  [<span class=\"tei-hi-italic\">What the<span class=\"tei-del\">[shoulder]</span>&lt;ankle&gt; what the knee</span>]</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">          4 <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Did</span>]</span>&lt;Dare&gt; he who made the lamb make thee\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 When the stars threw down their spears</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 And waterd\\nheaven with their tears</p></note>'","tn25.7":"b'<note id=\"tn25.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 In the] In thee 1<span class=\"tei-hi-italic\">st ms rdg</span></p></note>'","tn25.8":"b'<note id=\"tn25.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 or eye] &amp; eye 1<span class=\"tei-hi-italic\">st and 2nd ms rdgs\\n</span></p></note>'","tn25.9":"b'<note id=\"tn25.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 frame] form 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn25.10":"b'<note id=\"tn25.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 115 reversed) was the first\\nSong of Experience copied into it; a fair copy, but soon revised:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> \\n   Title] <span class=\"tei-hi-italic\">not in ms</span></p></note>'","tn25.11":"b'<note id=\"tn25.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 To . . . night] In the silent of the night 1<span class=\"tei-hi-italic\">\\nst ms rdg del;</span> To tend it by day &amp; by night 2<span class=\"tei-hi-italic\">nd ms rdg\\n</span></p></note>'","tn25.12":"b'<note id=\"tn25.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 turnd away with jealousy:] was turned from me 1<span class=\"tei-hi-italic\">st ms rdg del;</span> was filld with Jealousy 2<span class=\"tei-hi-italic\">nd ms rdg\\n</span> (revised to final rdg).</p></note>'","tn25.13":"b'<note id=\"tn25.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 109 reversed) lacks title and\\nindeed can hardly be subsumed under the later title:</p></note>'","tn25.14":"b'<note id=\"tn25.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The <span class=\"tei-del\">[<span class=\"tei-hi-italic\">rose puts envious</span>]</span>\\n&lt;[<span class=\"tei-hi-italic\">lustful</span>] &lt;modest&gt; rose&gt; puts forth\\na thorn</p></note>'","tn25.15":"b'<note id=\"tn25.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The <span class=\"tei-del\">[<span class=\"tei-hi-italic\">coward</span>]</span>&lt;humble&gt; sheep a threatning horn</p></note>'","tn25.16":"b'<note id=\"tn25.16\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">While the lilly white shall in love delight<br/><span class=\"tei-del\">\\n [<span class=\"tei-hi-italic\">And the lion increase freedom &amp; peace</span>]</span><br/><span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">The prist loves war &amp; the soldier peace</span>]</span><br/>\\nNor a thorn nor a threat stain her beauty bright</p></note>'","tn26.1":"b'<note id=\"tn26.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 115 reversed) is a hastily written\\ncopy, identical in final readings except that it lacks title and <quote>&#8220;chapel&#8221;</quote> is spelled <quote>&#8220;chapeld&#8221;</quote> and <quote>&#8220;gowns&#8221;</quote><quote>&#8220;gounds&#8221;</quote>.</p></note>'","tn26.2":"b'<note id=\"tn26.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 And saw] And <span class=\"tei-del\">[<span class=\"tei-hi-italic\">a</span>]</span>&lt;I&gt; saw <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn26.3":"b'<note id=\"tn26.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 built]  <span class=\"tei-hi-italic\">mended in ms from</span> build</p></note>'","tn26.4":"b'<note id=\"tn26.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 gates . . . were] gate . . . was 1<span class=\"tei-hi-italic\">st ms\\nrdg del</span></p></note>'","tn26.5":"b'<note id=\"tn26.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 So] And 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn26.6":"b'<note id=\"tn26.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 105 reversed) is in pencil, though\\nthe bowdlerizing revisions of lines 4 and 16 are in ink.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title]\\nA pretty Vagabond 1<span class=\"tei-hi-italic\">st ms rdg</span> (revised to final rdg)</p></note>'","tn26.7":"b'<note id=\"tn26.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Dear . . . dear] O . .  . Dear 1<span class=\"tei-hi-italic\">st ms\\nrdg</span></p></note>'","tn26.8":"b'<note id=\"tn26.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 where] when <span class=\"tei-hi-italic\">mended to</span> where <span class=\"tei-hi-italic\">\\nms rdg</span> us\\'d] usd <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn26.9":"b'<note id=\"tn26.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     4]  Such usage in heaven makes all go to hell 1<span class=\"tei-hi-italic\">st ms rdg del;</span> The poor parsons with wind like a blown bladder\\nswell 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn26.10":"b'<note id=\"tn26.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 And] Then <span class=\"tei-hi-italic\">ms rdg</span> rejoicing] that\\njoys for 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn26.11":"b'<note id=\"tn26.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16] But shake hands &amp; kiss him &amp; thered be no\\nmore hell 1<span class=\"tei-hi-italic\">st ms rdg del;</span> But kiss him &amp; give him both <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">food</span>]</span> drink &amp; apparel 2<span class=\"tei-hi-italic\">nd ms rdg\\n</span></p></note>'","tn26.12":"b'<note id=\"tn26.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 109 reversed) began as fair\\ncopy with title and three stanzas; later revised and given a 4th stanza, which\\nwas thrice revised.</p></note>'","tn26.13":"b'<note id=\"tn26.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1, 2 charter\\'d] dirty <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn26.15":"b'<note id=\"tn26.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 markd] see 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn27.1":"b'<note id=\"tn27.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     6 Infants cry of fear] voice of every child 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn27.2":"b'<note id=\"tn27.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 ban] meaning prohibition or curse (or both); compare <quote>&#8220;Bow- street\\'s ban&#8221;</quote> in <title level=\"m\"><span class=\"tei-hi-italic\">\\nDon Juan</span></title> XI 19</p></note>'","tn27.3":"b'<note id=\"tn27.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 mind-forg\\'d manacles] german forged links 1<span class=\"tei-hi-italic\">\\nst ms rdg</span> (revised to final rdg)</p></note>'","tn27.4":"b'<note id=\"tn27.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 How] But most 1<span class=\"tei-hi-italic\">st ms rdg</span> (del to\\ngive <quote>&#8220;most&#8221;</quote> to 4th stanza)</p></note>'","tn27.5":"b'<note id=\"tn27.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10] Blackens oer the churches walls 1<span class=\"tei-hi-italic\">st\\nms rdg del</span></p></note>'","tn27.6":"b'<note id=\"tn27.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13-16]:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But most the midnight harlots curse</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>From every dismal street I hear</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Weaves around the marriage hearse</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> And blasts the new born infants tear 1<span class=\"tei-hi-italic\">st ms rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          But most <span class=\"tei-del\">[<span class=\"tei-hi-italic\">from every</span>]</span>&lt;thro\\nwintry&gt; street&lt;s&gt; I hear</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>How the midnight harlots curse</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Blasts the new born infants tear</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And <span class=\"tei-del\">[<span class=\"tei-hi-italic\">hangs</span>]</span>&lt;smites&gt; with\\nplagues the marriage hearse 2<span class=\"tei-hi-italic\">nd ms rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          But most the shrieks of youth I hear 3<span class=\"tei-hi-italic\">rd ms rdg\\ndel</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But most thro midnight &amp;c</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    How the youthful 4<span class=\"tei-hi-italic\">th ms rdg</span></span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn27.7":"b'<note id=\"tn27.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The ms draft in Notebook (p 1O7 reversed) is related\\nto an earlier ms lyric, <quote>&#8220;I heard an Angel singing&#8221;</quote>\\n(P 114 reversed), given here under <title level=\"a\">&#8220;Songs and Ballads&#8221;\\n</title>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title] The human Image <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn27.8":"b'<note id=\"tn27.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Pity] Mercy 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn27.9":"b'<note id=\"tn27.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 we did not make somebody] there was nobody 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span></p></note>'","tn27.10":"b'<note id=\"tn27.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 baits] seeds 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn27.11":"b'<note id=\"tn27.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 There grows one] Till they sought 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span>      Here follow two lines derived from the Notebook draft\\nof <title level=\"a\">&#8220;The Lilly&#8221;</title> (see above):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They said this mystery never shall cease</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> The prest <span class=\"tei-del\">[<span class=\"tei-hi-italic\">loves</span>]</span>&lt;promotes&gt;\\nwar &amp; the soldier peace</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Also four lines in the adjacent column, though separated by another\\npoem, probably belong to this one, if <quote>&#8220;There&#8221;</quote> means <quote>&#8220;in the human brain&#8221;</quote>:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>There souls of men are bought &amp; sold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">There</span>]</span>&lt;And&gt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\ncradled</span>]</span>&lt;milk fed&gt;      infancy <span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\nis sold</span>]</span> for gold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> And youth<span class=\"tei-del\">[<span class=\"tei-hi-italic\">s</span>]</span> to slaughter houses led</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> And <span class=\"tei-del\">[<span class=\"tei-hi-italic\">maidens</span>]</span>&lt;beauty&gt; for\\na bit of bread</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn28.1":"b'<note id=\"tn28.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 113 reversed) is identical in\\nthese two stanzas, but it continues for seven more stanzas, heavily revised,\\nwith an alternative development on p 111 reversed.  On p 113 the original\\ndraft before revisions was probably a fair copy from some earlier ms (except\\nwhere lines 13-14 were canceled and replaced at once by extension of the stanza\\nat the other end, lines 27-18):</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(<span class=\"tei-hi-italic\">continuation</span>)</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And I grew day after day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till upon the ground I stray</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And I grew night after night</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Seeking only for delight</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">But upon the nettly ground</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">No delight was to be found</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And I saw before me shine</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Clusters of the wandring vine</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And beyond a mirtle tree</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Stretchd its blossoms out to me</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But a Priest with holy look</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In his hand a holy book</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Pronouncd curses on his head</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Who the fruit or blossoms shed</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>I beheld the Priest by night</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He embracd my mirtle bright</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>I beheld the Priest by day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Where beneath my vine he lay</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like a serpent in the night</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He embracd my mirtle bright</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like a serpent in the day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Underneath my vine he lay</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>So I smote him &amp; his gore</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Staind the roots my mirtle bore</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But the time of youth is fled</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And grey hairs are on my head 1<span class=\"tei-hi-italic\">st ms rdg</span></span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Extensive revisions, in a different ink, effected two major transformations.\\n First Blake changed the singular <quote>&#8220;Priest&#8221;</quote> and\\nassociated pronouns and <quote>&#8220;serpent&#8221;</quote> to plural, <quote>&#8220;many a Priest&#8221;</quote> and <quote>&#8220;Priests&#8221;</quote>\\nwith plural pronouns and <quote>&#8220;serpents&#8221;</quote>: the Priests\\nembraced the youth\\'s blossoms and he <quote>&#8220;smote them&#8221;</quote>;\\nduring this revision the sixth and seventh stanzas (lines 23-30) were consolidated.\\n Meanwhile on p 111 Blake had begun some stanzas of a youth bound beneath\\na mirtle&#8212;an impulse combining the mirtle and blossoms Of p 113 with\\nthe theme of love bound, in <title level=\"a\">&#8220;Earths Answer&#8221;</title>\\n(just above on p 111 written before this return to the mirtle theme):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To a lovely mirtle bound</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Blossoms showring all around</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>O how sick &amp; weary I</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Underneath my mirtle lie</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">He then canceled the first of these two couplets and added another\\nat the bottom for a stanza ending instead of beginning with <quote>&#8220;bound&#8221;</quote>:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like to dung upon the ground</span></span><span class=\"tei-line-number\"/></li></ol><pb n=\"798\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the next column on p 111 he wrote a stanza to precede\\nthis and two to follow it, numbering the first <quote>&#8220;1&#8221;</quote>,\\nthe <quote>&#8220;bound&#8221;</quote> stanza <quote>&#8220;2&#8221;</quote>,\\nand the first of the next two <quote>&#8220;3&#8221;</quote> to show the sequence:\\n</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>1 Why should I be bound to thee</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>O my lovely mirtle tree</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Love free love cannot be bound</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To any tree that grows on ground</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>2 O how sick &amp; weary I</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Underneath my mirtle lie</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like to dung upon the ground</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Underneath my mirtle bound</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>3 Oft my mirtle sighd in vain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To behold my heavy chain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Oft the priest beheld us sigh</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And laughd at our simplicity</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>So I smote him &amp; his gore</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Staind the roots my mirtle bore</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But the time of youth is fled</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And grey hairs are on my head</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The fourth stanza is not an afterthought but a return to the original\\nconcluding stanza (lines 31-34) Of p 113, demonstrating the four stanzas on\\np 111 to be an alternative route to the same finale&#8212;in effect replacing\\nthe priest and serpent stanzas (lines 23-30).  Before confirming this alternative,\\nhowever, Blake turned from the motifs of p 111&#8212;in which the priest laughs\\nat the simplicity of wedlock (youth bound to mirtle tree)&#8212;to pluralize\\nthe priest and serpent Of p 113.  Not content with the result, he then bypassed\\nthe priests and serpents of lines 27-34 (as numbered below), and, drawing\\nagain upon <title level=\"a\">&#8220;Earths Answer&#8221;</title>, from which\\nhe deleted the cruel <quote>&#8220;father of men&#8221;</quote>, he put <quote>&#8220;my father&#8221;</quote> in the priest\\'s place (on p 111 changing <quote>&#8220;the priest beheld&#8221;</quote> to <quote>&#8220;my father saw&#8221;</quote> and on p 113 changing <quote>&#8220;Priest&#8221;</quote> or <quote>&#8220;many a Priest&#8221;</quote> (line 23) to <quote>&#8220;My father then&#8221;</quote>.  He changed line 26 to introduce the bondage motif&#8212;<quote>&#8220;And bound me in a mirtle shade&#8221;</quote>&#8212;and he inserted\\nthe concluding phrase <quote>&#8220;in a mirtle shade&#8221;</quote> as a\\ncatch-phrase above stanza <quote>&#8220;1&#8221;</quote> on p 111, with the\\neffect of canceling the remainder of p 113 (lines 23-30).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The indicated\\nfusion was not carried further (<quote>&#8220;their hands&#8221;</quote> in\\nrevised line 24 should have been changed back to <quote>&#8220;his hands&#8221;</quote>). When selecting the first two stanzas to be etched in <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title> as <title level=\"a\">&#8220;Infant\\nSorrow&#8221;</title> (his inserted title), he struck through all the other\\nverses on pp 113 and 111.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    Editorial rescue work can salvage from\\nthe transitional drafts of pp 113 and 111 a compact cycle-poem (compare <title level=\"a\">&#8220;The Mental Traveller&#8221;</title>) from infancy to grey\\nhairs.  Keynes (pp 889-890) presents Max Plowman\\'s <quote>&#8220;fair copy&#8221;</quote> of the fusion of the two pages before removal of the <title level=\"a\">\\n&#8220;Infant Sorrow&#8221;</title> stanzas&#8212;though the resultant poem\\nshould probably not bear that title.  Plowman had noticed the catch-word function\\nof the phrase <quote>&#8220;in a mirtle shade&#8221;</quote>, but his reconstruction\\nof the sequence of the writing on page 111 was unsound, and, like Keynes,\\nI treated the phrase as a title, neglecting the possibility that the catch-word\\nidea might be in itself valid.  Donald K. Moore has helped me to arrive at\\nthe present interpretation of these Notebook pages (see <title level=\"m\"><span class=\"tei-hi-italic\">Notebook</span></title> pp 67-69).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     A variant of the Plowman <quote>&#8220;fair copy&#8221;</quote> would consist of the two unchanged <title level=\"a\">&#8220;Infant Sorrow&#8221;</title> stanzas, followed by the inserted\\nthird stanza as revised (lines 9-12 below), followed by the penultimate version\\nOf lines 23-26 and the final revisions of bypassed stanzas on p 113 (lines\\n31-35 ff).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The process of revision of p 113 (after the first two\\nstanzas) may be shown in composite form:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>When I saw that rage was vain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And to su<span class=\"tei-del\">[<span class=\"tei-hi-italic\">c</span>]</span>&lt;l&gt;k would nothing\\ngain</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">I began to so</span>]</span> [&lt;<span class=\"tei-hi-italic\">\\nSeeking many an artful wile</span>&gt;]&lt;Turning many a trick o<span class=\"tei-del\">[r]</span> wil<span class=\"tei-del\">[e]</span>&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  I began to soothe &amp; s<span class=\"tei-del\">[<span class=\"tei-hi-italic\">p</span>]</span>&lt;m&gt;ile</span></span><span class=\"tei-line-number\"/></li></ol><pb n=\"799\"/><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And I <span class=\"tei-del\">[<span class=\"tei-hi-italic\">grew</span>]</span> [&lt;<span class=\"tei-hi-italic\">smild\\n</span>&gt;] &lt;soothd&gt; day after day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till upon the ground I stray</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And I <span class=\"tei-del\">[<span class=\"tei-hi-italic\">grew</span>]</span>&lt;smild&gt; night\\nafter night</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Seeking only for delight</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">But upon the nettly ground</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">No delight was to be found</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And I saw before me shine</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Clusters of the wandring vine</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">And beyond a mirtle free</span>]</span>&lt;And\\nmany a lovely flower &amp; tree&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Stretchd <span class=\"tei-del\">[<span class=\"tei-hi-italic\">its</span>]</span>&lt;their&gt; blossoms\\nout to me</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">But a</span>]</span><span class=\"tei-del\">[&lt;<span class=\"tei-hi-italic\">But\\nmany a</span>&gt;]</span><span class=\"tei-del\">  [<span class=\"tei-hi-italic\">Priest</span>]</span>&lt;My father then&gt; with holy look</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  In <span class=\"tei-del\">[<span class=\"tei-hi-italic\">his</span>]</span> [&lt;their&gt;] hand &lt;s&gt; a holy book</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> Pronouncd curses on <span class=\"tei-del\">[<span class=\"tei-hi-italic\">his</span>]</span>&lt;my&gt;\\nhead</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Who the fruit or blossoms shed</span>]</span>&lt;And\\nbound me                in a mirtle shade&gt;</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">I beheld the Priest&lt;s&gt; by night\\n</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-del\">[<span class=\"tei-hi-italic\">He</span>]</span>&lt;<span class=\"tei-hi-italic\">They\\n</span>&gt; embracd <span class=\"tei-del\">[<span class=\"tei-hi-italic\">my mirtle</span>]</span>&lt;<span class=\"tei-hi-italic\">the blossoms</span>&gt;<span class=\"tei-hi-italic\">bright</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">I beheld the Priest</span>&lt;<span class=\"tei-hi-italic\">s\\n</span>&gt;<span class=\"tei-hi-italic\"> by day</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Where beneath my</span>]</span>&lt;Underneath the&gt; vine&lt;s&gt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">he</span>]</span>&lt;they&gt; lay</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          [3]<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Like [a] &lt;to&gt; serpent&lt;s&gt; in the night</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>      [4]<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">He</span>] &lt;<span class=\"tei-hi-italic\">They</span>&gt;\\n embracd my <span class=\"tei-del\">[<span class=\"tei-hi-italic\">mirtle</span>]</span>&lt;<span class=\"tei-hi-italic\">\\nblossom</span>&gt;<span class=\"tei-hi-italic\">bright</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    [1] Like <span class=\"tei-del\">[<span class=\"tei-hi-italic\">a</span>]</span>&lt;to&gt;<span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">serpent in the</span>]</span>&lt;holy m[<span class=\"tei-del\"><span class=\"tei-hi-italic\">\\na</span></span>]&lt;e&gt;n by&gt; day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> [2] Underneath<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">my</span>]</span>&gt;the&lt; vine&gt;s&lt;<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">he</span>]</span>&lt;they&gt; lay</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          So I smote <span class=\"tei-del\">[<span class=\"tei-hi-italic\">him</span>]</span>&lt;them&gt; &amp; <span class=\"tei-del\">[<span class=\"tei-hi-italic\">his</span>]</span>&lt;their&gt; gore\\n          <span class=\"tei-hi-italic\">etc</span></span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn28.2":"b'<note id=\"tn28.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 114 reversed)      <br/>Title]\\nChristian Forbearance <span class=\"tei-hi-italic\">ms rdg</span><br/><span class=\"tei-hi-italic\">Line\\n</span> 10 is followed by a deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And I gave it to my foe</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn28.3":"b'<note id=\"tn28.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ms draft in Notebook (p 106 reversed).       <br/>title] <span class=\"tei-hi-italic\">not in ms</span></p></note>'","tn28.4":"b'<note id=\"tn28.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 And. . . how can I] Then . . . I can not 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span></p></note>'","tn28.5":"b'<note id=\"tn28.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Or] Nor 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn28.6":"b'<note id=\"tn28.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 you like the little bird] myself so does the bird 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn28.7":"b'<note id=\"tn28.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 10 is followed in ms by two deleted lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The mother followd weeping loud</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>O that I such a fiend should bear</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn28.8":"b'<note id=\"tn28.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 He] Then 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn28.9":"b'<note id=\"tn28.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 And all admird the] To show his jealous 1<span class=\"tei-hi-italic\">\\nst Ms rdg del</span>; And all admird his 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn29.1":"b'<note id=\"tn29.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 13-16 were written in the adjacent column.</p></note>'","tn29.2":"b'<note id=\"tn29.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19-20]</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They bound his little ivory limbs</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>      In a cruel Iron chain 1<span class=\"tei-hi-italic\">st ms rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> 19 They] And 2<span class=\"tei-hi-italic\">nd ms rdg del</span></p></note>'","tn29.3":"b'<note id=\"tn29.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 and . . . place] They . . . fire 1<span class=\"tei-hi-italic\">st\\nms rdg del</span></p></note>'","tn29.4":"b'<note id=\"tn29.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Are such things] Such things are 1<span class=\"tei-hi-italic\">st\\nms rdg</span> (revised to final rdg)</p></note>'","tn30.1":"b'<note id=\"tn30.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A late addition to the <title level=\"m\"><span class=\"tei-hi-italic\">\\nSongs</span></title>, not found in copies A-D, F-H. The style of lettering points\\nto a date later than 18O3, though this upsets the traditional (but highly\\nconjectural) dating of copies E, I-0, which contain this poem yet are assigned\\ndates Of 1795, 1796-98, and 1799-1801 in the Keynes and Wolf <title level=\"m\"><span class=\"tei-hi-italic\">Census</span></title>. Keynes himself has steadily, in his editions,\\nassigned a date of <quote>&#8220;about 1801&#8221;</quote>.  The revised census\\nin <title level=\"m\"><span class=\"tei-hi-italic\">Blake Books</span></title> (pp 414-419) is\\nnot much help; in the distributed data for copies K, 0, and e there are contradictions\\nthat give the Tirzah plate (52) stab holes in 1797  but a date of first mention\\nin 1814.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Actually the first copy of <title level=\"m\"><span class=\"tei-hi-italic\">\\nSongs</span></title> that contains <title level=\"a\">&#8220;To Tirzah&#8221;\\n</title> and has any firm evidence of date is copy P (on paper watermarked\\nBUTTENSHAW 18O2), followed by Q (with watermark dates of 1802 and 1804) and\\nE (sold to Butts in 1806).</p></note>'","tn31.1":"b'<note id=\"tn31.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">First appeared among <title level=\"m\"><span class=\"tei-hi-italic\">Songs\\nof Innocence</span></title>; was not for some time transferred to <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title>.</p></note>'","tn31.2":"b'<note id=\"tn31.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Began among <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence\\n</span></title>; was shifted to <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience\\n</span></title> in some carly copies yet appears occasionally in <title level=\"m\"><span class=\"tei-hi-italic\">Innocence</span></title> in copies as late as 1815.</p></note>'","tn32.1":"b'<note id=\"tn32.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This poem, illustrated by a youthful blacksmith hammering\\na human-faced sun on his anvil, was etched by Blake but found in only one\\ncopy printed by him (BB, just located).  The few single prints seem to have\\nbeen made from the plate after his death. The poem is an <title level=\"a\">\\n&#8220;Experience&#8221;</title> reversal of the third stanza of <title level=\"a\">\\n&#8220;The Divine Image&#8221;</title> in <title level=\"m\"><span class=\"tei-hi-italic\">Songs\\nof Innocence</span></title>, It was evidently etched for <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title> (the plate size is right) but replaced\\nby <title level=\"a\">&#8220;The Human Abstract&#8221;</title>, a subtler contrary.\\n The style of lettering is transitional between that of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence</span></title> and that of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title> or between the styles of the early\\nand late portions of <title level=\"m\"><span class=\"tei-hi-italic\">Thel</span></title> and of<title level=\"m\"><span class=\"tei-hi-italic\">The Marriage of Heaven and Hell</span></title>. None\\nof the published <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title>\\nis quite so simply and symmetrically antithetical to its counterpart in <title level=\"m\"><span class=\"tei-hi-italic\">Innocence</span></title>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date\\n</span>: 1790-91 (hitherto misdated ca 1794).</p></note>'","tn32.2":"b'<note id=\"tn32.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Engraved on 18 plates, a first state with erased imprint;\\na second state with title reading <quote>&#8220;Published by W Blake No 13\\nHercules Buildings Lambeth and J. Johnson St. Pauls Church Yard&#8221;</quote>\\nand with some variant of <quote>&#8220;Published 17 May 1793 by W Blake Lambeth&#8221;</quote> on each plate except No 13.  The only textual variant is on Plate\\n13 (see note).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The 17 emblem drawings are a selection from 64 drawings\\nin Blake\\'s Notebook; the inscriptions are simplifications of inscriptions\\npenciled beneath the Notebook drawings (some recovered only by infrared photography).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     After drawing these emblems, Blake twice rearranged them (by numbering)\\nin the Notebook; the engraved sequence represents a fourth arrangement, maintained\\nin the reissue of 1818, <title level=\"a\">&#8220;For the Sexes&#8221;</title>.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The ms inscriptions are given here, identified by Notebook page;\\nfor later variants see <title level=\"a\">&#8220;For the Sexes&#8221;</title>.\\n</p></note>'","tn32.3":"b'<note id=\"tn32.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Frontispiece] What is Man that thou shouldst/magnify\\nhim &amp; that thou shouldst set/thine heart upon him/ Job N 68</p></note>'","tn32.4":"b'<note id=\"tn32.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1] I found him beneath/a tree in the Garden N 63</p></note>'","tn32.5":"b'<note id=\"tn32.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2] O that the Everlasting had not fixd/His canon gainst\\nSelf slaughter/Shakespeare N 95</p></note>'","tn32.6":"b'<note id=\"tn32.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3] Rest Rest perturbed Spirit/Shakespeare N 93</p></note>'","tn32.7":"b'<note id=\"tn32.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4] Thou hast set thy heart as the/heart of God-/Ezekiel\\nN 94</p></note>'","tn32.8":"b'<note id=\"tn32.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5] <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Forthwith upright</span>]</span> he\\nrears from off the pool/His mighty stature/Milton N 91</p></note>'","tn32.9":"b'<note id=\"tn32.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6] At length for hatching ripe he breaks/the shell/ Dryden\\nN 69</p></note>'","tn32.10":"b'<note id=\"tn32.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7]</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Ah luckless babe born under cruel star</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And in dead parents baleful ashes bred</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Full little weenest thou what sorrows are</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Left thee for portion of thy livelihed/Spenser N 19</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn32.11":"b'<note id=\"tn32.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8] My son My son N 34</p></note>'","tn32.12":"b'<note id=\"tn32.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9] N 40, <span class=\"tei-hi-italic\">without inscription</span></p></note>'","tn32.13":"b'<note id=\"tn32.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10] N 58, <span class=\"tei-hi-italic\">without inscription </span></p></note>'","tn32.14":"b'<note id=\"tn32.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11] Aged Ignorance N 52</p></note>'","tn33.1":"b'<note id=\"tn33.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12] N 59, <span class=\"tei-hi-italic\">without inscription</span></p></note>'","tn33.2":"b'<note id=\"tn33.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 &amp; Hope] or Hope 1<span class=\"tei-hi-italic\">st state;</span> What\\nwe hope we see N 61</p></note>'","tn33.3":"b'<note id=\"tn33.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14] Thus the traveller hasteth in/the Evening N 15</p></note>'","tn33.4":"b'<note id=\"tn33.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15] Deaths door N 71</p></note>'","tn33.5":"b'<note id=\"tn33.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16] I have said to corruption thou art/my father. to\\nthe worm thou art/my mother &amp; my sister/ Job N 45</p></note>'","tn33.6":"b'<note id=\"tn33.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On 27 Plates, including title page and <title level=\"a\">\\n&#8220;A Song of Liberty&#8221;</title>; known in nine complete copies; without\\ntextual variation except the deletions noted below.  Added as frontispiece\\nin copy B is the engraving inscribed <quote>&#8220;Our End is come / Publishd\\nJune 5: 1793 by W Blake Lambeth&#8221;</quote>.  All complete copies collated.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> Begun in 1790 (see Plate 3) and completed in\\n1792 (from evidence of historical allusions in the <title level=\"a\">\\n&#8220;Song of Liberty&#8221;</title>).  Plates 4, 7-10, 14-20, 25-27 have\\na later style of lettering than the rest.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Between the introductory\\npoem and the <title level=\"a\">&#8220;Song,&#8221;</title> the text falls into\\nsix <quote>&#8220;chapters&#8221;</quote> (Plates 3-4, 5-1O, 11-13, 14-15,\\n16-20, 2l-24) each consisting of an argument followed by an imaginative illustration,\\nas noted by Max Plowman in 1927.  The pictorial headings which mark these\\nsections are indicated in the present text by ornamental rules.</p></note>'","tn34.1":"b'<note id=\"tn34.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:1 thirty-three years] Blake wrote <quote>&#8220;1790&#8221;</quote> in dark blue ink, above the soaring figure above <quote>&#8220;a\\nnew&#8221;</quote>, in the Butts copy.  It was 33 years after 1757, the date\\nannounced by Swedenborg for the new dispensation (and the year of Blake\\'s\\nbirth).</p></note>'","tn35.1":"b'<note id=\"tn35.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6: he who dwells] <span class=\"tei-hi-italic\">mended</span> in the copper\\nfrom the Devil who dwells    A small space remains where <quote>&#8220;t&#8221;</quote> was deleted to leave <quote>&#8220;he&#8221;</quote> and a large\\nspace where a five-letter word beginning with a capital and ending in <quote>&#8220;I&#8221;</quote> was gouged out: <quote>&#8220;Devil&#8221;</quote>\\nor, improbably, <quote>&#8220;Angel&#8221;</quote>.</p></note>'","tn35.2":"b'<note id=\"tn35.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 7 uses the later style of lettering, and it may\\nbe more than mere coincidence that on this very plate Blake writes, metaphorically\\nand somewhat cryptically, of his etching process (his own reflection or shadow\\nbeing the Devil he sees in the mirror-like surface of his plate, which is\\nthe <quote>&#8220;flat sided steep&#8221;</quote> to be etched by his <quote>&#8220;corroding fires&#8221;</quote>).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The most easily distinguishable\\ncomponent of the new lettering is a leftward pointing serif on the <span class=\"tei-hi-italic\">\\ng</span>, maintained consistently until after Nov. 1802 and then as suddenly\\nand thoroughly abandoned in favor of the conventional rightward serif.  After\\n1802, in texts or inscriptions from the middle period being re-etched or retouched\\nby hand, Blake carefully adds the conventional serif, usually without effacing\\nthe leftward one, so that curious two-horned <span class=\"tei-hi-italic\">g</span>\\'s abound\\nin works reissued in his last two decades.</p></note>'","tn35.3":"b'<note id=\"tn35.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The <title level=\"a\">&#8220;Proverbs of Hell&#8221;</title>\\n(plates 7-10) are grouped in copy H by variations in the colors of ink used\\nin retracing the lettering.  Since the groupings are clearly meaningful, in\\nthe present edition I have indicated them by spacing, printing lines close\\ntogether that are all in one color&#8212;except that proverbs 4 &amp; 5 and\\n54 &amp; 55 are contraries paired by sharply <span class=\"tei-hi-italic\">contrasting</span>\\ncolors (blue and red). (The breaks caused by page ends in this edition all\\nfall right, after lines 9, 37, and 61.)    </p></note>'","tn38.1":"b'<note id=\"tn38.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     10:66 Improvement] <span class=\"tei-hi-italic\">Etched</span> Improvent <span class=\"tei-hi-italic\">but corrected</span> in copy H by a horizontal stroke above the letters\\n</p></note>'","tn39.1":"b'<note id=\"tn39.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     14:4. the tree] the <span class=\"tei-hi-italic\">omitted in etching\\n</span>, corrected in copy H by a horizontal stroke</p></note>'","tn42.1":"b'<note id=\"tn42.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20: Opposition is true Friendship] <span class=\"tei-hi-italic\">del by\\npigment</span> in all colored copies</p></note>'","tn44.2":"b'<note id=\"tn44.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25:6 And weep!]  And weep and bow thy reverend locks\\n1<span class=\"tei-hi-italic\">st rdg,</span> found in a separate issue of <title level=\"a\"><span class=\"tei-hi-italic\">A Song of Liberty</span></title> (so-called <quote>&#8220;Copy L&#8221;</quote>).  The exclamation point was added in copy H.</p></note>'","tn45.1":"b'<note id=\"tn45.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On 11 plates, including frontispiece and title page,\\nknown in 15 complete copies.  The text does not vary, but the frontispiece\\nis put at the end in an early copy (A).</p></note>'","tn48.1":"b'<note id=\"tn48.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:5 past] <span class=\"tei-hi-italic\">presumably an error for</span> be\\npast</p></note>'","tn51.1":"b'<note id=\"tn51.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On 18 plates, including title page and frontispiece;\\nknown in 13 copies plus 1 untraced (R) and three evidently posthumously printed\\n(N,P,Q).  Proofs exist of three canceled plates (a,b,c) of an earlier version\\nand a fragment (d) which may be a remnant of a still different version.  These\\nare in the Rosenwald Collection.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Dated</span><quote>&#8220;1793&#8221;</quote> on the title page and announced for sale in Blake\\'s\\nprospectus of that October; but perhaps the final version, except for the\\ntitle page, was completed a year or two later.  The final plates seem very\\ndifferent in spirit and quality of drawing from the canceled ones; yet the\\nlatter can hardly have been written earlier than the English political crisis\\nOf 1792.  There was no Preludium in the canceled version (for evidence see <title level=\"m\"><span class=\"tei-hi-italic\">The Illuminated Blake</span></title> p 392) but there\\nmay well have been 18 designs (as advertised) since the three surviving plates\\nare condensed into two in the final version. There is, to me, a striking closeness\\nin conception between the design on the second Preludium page and the text\\nof <title level=\"m\"><span class=\"tei-hi-italic\">The Song of Los</span></title> (<quote>&#8220;Printed\\nby W Blake 1795&#8221;</quote>) describing the Grave clasping <quote>&#8220;the\\nsolid stem&#8221;</quote> (7:35-40).  It is conceivable that the <quote>&#8220;harp-shattering&#8221;</quote> lines (2:18-21) of the Preludium were composed as late as 1795, expressing\\ndespair in the Prophecy&#8212;momentarily, for Blake removed these lines from\\nall but two of the copies he printed.</p></note>'","tn51.2":"b'<note id=\"tn51.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1: PRELUDIUM] Title added (by use of a separate\\nsmall plate; by hand in copy M); lacking in B,A,O.</p></note>'","tn52.1":"b'<note id=\"tn52.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     2:18-21] Lines omitted by erasure (G) or by masking\\nthe lower part of the plate before printing in all copies Blake printed but\\nA and O (dated <quote>&#8220;?1800&#8221;</quote> and <quote>&#8220;1821&#8221;</quote> by Bentley in <title level=\"m\"><span class=\"tei-hi-italic\">Blake Books</span></title>\\np 87).</p></note>'","tn52.2":"b'<note id=\"tn52.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:4 Franklin . . . Hancock] Hancock, Paine. &amp; Warren.\\nGates, Franklin <span class=\"tei-hi-italic\">Canceled Plate a</span></p></note>'","tn52.3":"b'<note id=\"tn52.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:7 is lifted in heaven] in heaven is lifted <span class=\"tei-hi-italic\">\\nCanceled Plate a</span></p></note>'","tn52.4":"b'<note id=\"tn52.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:10 work-bruis\\'d,] work bruised. <span class=\"tei-hi-italic\">Canceled\\nPlate a</span></p></note>'","tn52.5":"b'<note id=\"tn52.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:11 and] &amp; <span class=\"tei-hi-italic\">Canceled Plate a</span></p></note>'","tn52.6":"b'<note id=\"tn52.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:14 wrathful] fiery <span class=\"tei-hi-italic\">Canceled Plate </span></p></note>'","tn52.7":"b'<note id=\"tn52.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:16 red] fierce <span class=\"tei-hi-italic\">Canceled Plate a </span></p></note>'","tn56.1":"b'<note id=\"tn56.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:9 Followed by a line del in the copper.</p></note>'","tn58.1":"b'<note id=\"tn58.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16: FINIS] <span class=\"tei-hi-italic\">del</span> in copy M</p></note>'","tn58.2":"b'<note id=\"tn58.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate a is identical in text to Plate 3, with variants\\nnoted above.  Plate b is a variant of Plate 4 in the illustrations, but quite\\ndifferent in text.  Plate c must have come between Plates 8 and 9 (or earlier\\nversions of those plates); it describes the arming of the King whose <quote>&#8220;hollow voice&#8221;</quote> utters the lament and alarm of Plate 9\\n(described on Plate 10 as the weeping of <quote>&#8220;the Angel voice&#8221;</quote>).</p></note>'","tn58.3":"b'<note id=\"tn58.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:1 Then Albions Angel rose] Words marked for deletion,\\nto be replaced by words written in top margin (but now cut away).</p></note>'","tn58.4":"b'<note id=\"tn58.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:2-3 Lines numbered in pencil <quote>&#8220;6&#8221;</quote> and <quote>&amp;;ldquo;7&#8221;</quote>; a penciled arrow above line\\n2 was evidently meant to bring in four new lines written in the top margin\\n(now cut away).</p></note>'","tn58.5":"b'<note id=\"tn58.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:5 river:] Followed by guide line meant to bring in\\nwords written in side margin, now all cut away except: <quote>&#8220;all in\\n[     ] ?wild [      ] look [      ] and [       ] And L[      ]&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n c:5 damp mists] with flames 1<span class=\"tei-hi-italic\">st rdg del;</span> hoar frosts 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn58.6":"b'<note id=\"tn58.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     c:6 aged] shining 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.1":"b'<note id=\"tn59.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:7 cold] gleam 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.2":"b'<note id=\"tn59.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:8 on] to 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.3":"b'<note id=\"tn59.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:9 chill &amp; heavy] glow the fires 1<span class=\"tei-hi-italic\">\\nst rdg del;</span> till by the freeze 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn59.4":"b'<note id=\"tn59.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:11 ancie<supplied>[nt]</supplied>] eternal 1<span class=\"tei-hi-italic\">\\nst rdg del</span> (the <quote>&#8220;nt&#8221;</quote> of <quote>&#8220;ancient&#8221;</quote> has been cut away)</p></note>'","tn59.5":"b'<note id=\"tn59.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:12 massy] <span class=\"tei-hi-italic\">Hitherto misread</span> as mossy\\n</p></note>'","tn59.6":"b'<note id=\"tn59.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     c:13 clouds] flames 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.7":"b'<note id=\"tn59.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:15 clangors] ardors 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.8":"b'<note id=\"tn59.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:17 mustering] glowing 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.9":"b'<note id=\"tn59.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:19 holds] fires 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn59.10":"b'<note id=\"tn59.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:21-23 Bracketed matter deleted but not replaced.</p></note>'","tn59.11":"b'<note id=\"tn59.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:25 a frowning . . . King] Over the frowning shadow\\nlike a King 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn59.12":"b'<note id=\"tn59.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:27-28 A marginal insertion between these lines was\\nalmost entirely cut away.</p></note>'","tn59.13":"b'<note id=\"tn59.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">c:31 America] the red Demon 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn59.14":"b'<note id=\"tn59.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Plate d is found, the text covered over by pigment,\\nin two copies of the gathering of colored prints called <title level=\"a\">\\n&#8220;A Large Book of Designs&#8221;</title>, No 8, in the Rosenwald copy,\\nnumbered <quote>&#8220;9&#8221;</quote> by Blake.  It was printed from the\\nbottom half of a plate of the same width and style of lettering as <title level=\"m\"><span class=\"tei-hi-italic\">America.</span></title></p></note>'","tn60.1":"b'<note id=\"tn60.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On 18 plates, including title, frontispiece (also issued\\nseparately), and two full-page designs representing death by famine and death\\nby pestilence (the latter inscribed, upon a door in the picture, <quote>&#8220;LORD <supplied>[H]</supplied>AVE MERC<supplied>[Y]</supplied> ON US&#8221;</quote>).  Two\\ncomplete copies known; ten copies lacking prefatory poem; variant proofs of\\nPlates 14 and 15.  Copies and proof pages in the British Museum, the Paul\\nMellon Collection, and the Morgan Library were collated.</p></note>'","tn60.2":"b'<note id=\"tn60.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:6 travel] <span class=\"tei-hi-italic\">for</span> travail (perhaps&#8212;Blake\\nnever distinguished the two words)</p></note>'","tn61.1":"b'<note id=\"tn61.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 3:9 to 4:14 are all treated by Keynes as the\\nspeech of Los, but three speakers may be distinguished: Los (3:9-14), the\\nenvious sons of Urizen (4:3-9), and Enitharmon (4:10-14). (Bloom disagrees;\\nsee Commentary.)</p></note>'","tn63.1":"b'<note id=\"tn63.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9:6 Shadows] A large initial <quote>&#8220;S&#8221;</quote>\\n(distinctively colored in the Mellon copy) marks the beginning of the <quote>&#8220;dream&#8221;</quote> of history.</p></note>'","tn65.1":"b'<note id=\"tn65.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12:35-36 Blake had room to write these two short lines\\nas one if he had chosen to do so.</p></note>'","tn65.2":"b'<note id=\"tn65.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13:9 Then] Extra indention marks the end of the <quote>&#8220;dream&#8221;</quote>.</p></note>'","tn66.1":"b'<note id=\"tn66.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:32 for All were forth at sport] <span class=\"tei-hi-italic\">mended\\nin the copper from</span> and all went forth to sport (text of proof copies\\na,b,c).  On proof copy c an ink correction was made without the <quote>&#8220;for&#8221;</quote> and the rest of the paragraph was partially erased.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:32-37\\nLines deleted by erasure in one proof.</p></note>'","tn66.2":"b'<note id=\"tn66.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:35 gate.]   gate, and the angel trumpet blew! 1<span class=\"tei-hi-italic\">st rdg</span> (In an intermediate state of the plate the last five\\nwords of the first reading are deleted but line 32 is not changed&#8212;proof\\nin Morgan Library.)</p></note>'","tn67.1":"b'<note id=\"tn67.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On eight plates, including frontispiece, title page,\\nand two full-page designs; known in five copies, without textual variant.</p></note>'","tn70.1":"b'<note id=\"tn70.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On 28 plates, including title page and ten full-page\\ndesigns; known in seven copies, containing from 24 to 28 plates; plus some\\nscattered plates.  I have examined all but unlocated copy E.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    The\\nname <quote>&#8220;Urizen&#8221;</quote> was pronounced by Blake with primary\\nstress on the first syllable (not on the second).  For the clear metrical\\nevidence see Francis Wood Metcalf, <title level=\"a\">&#8220;The Pronunciation\\nof Blakean Names&#8221;</title>, <title level=\"s\"><span class=\"tei-hi-italic\">Blake Newsletter\\n</span></title> 21 (1972) 17-18.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake evidently committed this work\\nto copper in haste, then deleted and mended words and lines (mostly on the\\npaper, not the copper) and added and removed plates.  There is only one possible\\narrangement of the text, since it is organized into numbered chapters&#8212;except\\nthat Plate 8, duplicating the numbers of Plate 10, may have been meant to\\nreplace it (see below).  Yet Plate 2 is out of order in copy E, 15 follows\\n18 in A, and 8 follows rather than precedes 10 in copies B and F.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The ten pictorial plates are in different positions in each copy.  Most\\nof them more or less obviously relate to one or more passages in the text,\\nhowever, and if we assume that the further the pictures have shifted away\\nfrom their simplest textual referents the later the publication, we obtain\\nthe sequence of copies CB F D E A    G, with A the climactic exemplar of the\\noriginal series (it is not later than 1800 if the provenance is correct) and\\nG (watermark date 1818) following at a distance. For instance, the picture\\nof Urizen in manacles, appropriate to the text of Plate 13 (or 8 or 10), follow,\\n13 in C and precedes it in B; in the more sophisticated A it is moved to the\\nfront, as a portent of the end in the beginning.  Copy G imitates the majority\\nof the earlier copies, with a few slight movements further away from juxtaposition\\nof picture and text but without the expression of dramatic intensities found\\nin A.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Other evidence only partially supports this hypothetic sequence.\\n Copy C, lacking the added Plates 7-8, may be the earliest copy; A and G,\\nin which <quote>&#8220;First&#8221;</quote> is deleted in titles and colophon,\\nare probably (G certainly) the latest.  Retouched letters in D and A are in\\nthe style of Blake\\'s middle period (1791-1803).  Copy B may be the first to\\ncontain Plates 7-8, since it contains an attempt to cope with the intrusion\\nof two Fourth Chapters which is abandoned as futile.  Seven leaves of B and\\none of D have the only dated watermark (<quote>&#8220;1794&#8221;</quote>)\\nexcept G. Yet the fact that Plate 16 appears only in copies ABG seems to mark\\nit as a late insertion, hence to imply the sequence C FDE BA G.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">   \\n It should be noted that the page format and lettering of 7-8 differ markedly\\nfrom those of the other pages but are like those of <title level=\"m\"><span class=\"tei-hi-italic\">\\nAhania</span></title> and <title level=\"m\"><span class=\"tei-hi-italic\">Los</span></title>, the\\nsecond and third <quote>&#8220;BOOKS&#8221;</quote> of the series, dated <quote>&#8220;1795&#8221;</quote>.  Although Blake did not entitle these the second\\nand third books of Urizen, he must have considered them so for some time.\\n In Copy B the numeral in the heading <quote>&#8220;1 Urizen&#8221;</quote>\\nis emphasized by retouching; this numeral and <quote>&#8220;First&#8221;</quote>\\nare deleted only in copies A and G (and even in these not thoroughly). (The <title level=\"m\"><span class=\"tei-hi-italic\">Census</span></title> lettering of copies does not claim\\nto indicate their order of publication, except for G.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(N.B. Arrangement\\nof plates is confirmed by Blake\\'s folio numbering in B D G; erased numbers\\nin A give a less sophisticated order than that of the binding; no numbers\\nare visible in C F, [E not collated].)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> Title ] FIRST <span class=\"tei-hi-italic\">\\ndel</span> (in copy G, by erasure)</p></note>'","tn70.2":"b'<note id=\"tn70.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2: Preludium title] FIRST <span class=\"tei-hi-italic\">del</span> (in AG,\\nby erasure). The numeral <quote>&#8220;1&#8221;</quote> is also erased in\\n7 of the 9 running heads (<quote>&#8220;1 URIZEN&#8221;</quote>) in A and\\nin 6 of the 8 in G.</p></note>'","tn70.3":"b'<note id=\"tn70.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     3:11 In his] Like 1<span class=\"tei-hi-italic\">st rdg del</span>\\n(by erasure and inked replacement in G; an interesting sign of late attention\\nto the text, for in syntax and image an obvious flaw is thus removed)</p></note>'","tn71.1":"b'<note id=\"tn71.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Heading: Chap: II] erased in copy B</p></note>'","tn71.2":"b'<note id=\"tn71.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:44 Shrill . . . Eternity] Line del by scoring in ink,\\nin A&#8212;a logical step toward removal of Plate 4; yet Plate 4 is not lacking\\nin A, while in those copies that do lack it, this deletion is not indicated.\\n To erase 3:44 yet keep Plate 4 makes no sense.</p></note>'","tn71.3":"b'<note id=\"tn71.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 4 is lacking in copies D E F G; yet in these\\nthe deletions that would mend the breach, 3:44 and 5:1-2, are not indicated.\\n Retention of Plate 4 in A and B casts doubt on the deduction, above, that\\nA and B are later than F D E.</p></note>'","tn72.1":"b'<note id=\"tn72.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:30, 49 The first of these redundant lines is erased\\nin copy C, the second in A.</p></note>'","tn72.2":"b'<note id=\"tn72.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Heading: Chap: III.] <span class=\"tei-hi-italic\">erased,</span> to Chap:\\nII <span class=\"tei-hi-italic\">in</span> B (so that the first of the two <quote>&#8220;Chap:\\nIV&#8221;</quote> headings, i.e. the one brought in on the new Plate 8, could\\nbe changed to III; but the change was not made)</p></note>'","tn72.3":"b'<note id=\"tn72.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:1-2 Lilies del by scoring in ink, in copy A (logical,\\nif Plate 4 had been removed, since 3:44 is deleted in A).</p></note>'","tn73.1":"b'<note id=\"tn73.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:16 On Urizens self-begotten armies] Lines erased in\\nA, consistent with mending in 5:2022, 29 (obviously A was the most carefully\\nproofread copy)</p></note>'","tn73.2":"b'<note id=\"tn73.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:20, 21, 29 He] they 1<span class=\"tei-hi-italic\">st rdg del</span> (in\\nall copies changed to <quote>&#8220;he&#8221;</quote> by erasure of <quote>&#8220;t&#8221;</quote> and <quote>&#8220;y&#8221;</quote>; mended to capital <quote>&#8220;He&#8221;</quote> in copy A)</p></note>'","tn73.4":"b'<note id=\"tn73.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:22, 23 He] They 1<span class=\"tei-hi-italic\">st rdg del</span> (erased\\nand replaced in all copies, capitalized by Blake because beginning of line)\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Note: <quote>&#8220;armies&#8221;</quote> in line 16 was the antecedent\\nof <quote>&#8220;they&#8221;</quote> in these lines; perhaps the change from <quote>&#8220;they&#8221;</quote> to <quote>&#8220;he&#8221;</quote> implies an intent\\nto delete line 16 in all copies.  The <quote>&#8220;living creations&#8221;</quote> of 5:1 are perhaps equivalent to the <quote>&#8220;armies&#8221;</quote> (hence tentative deletion of 5:1-2?).  The change transfers the work\\nof creation from a crew of <quote>&#8220;sins&#8221;</quote> or <quote>&#8220;armies&#8221;</quote> to the single god, Urizen, and renders the word <quote>&#8220;combining&#8221;</quote> in 5:21 meaningless.  The capitalized pronoun in copy A may only\\naccidentally have theological implications.</p></note>'","tn74.1":"b'<note id=\"tn74.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:8 is followed by two lines deleted from the copper;\\nalmost legible in copy B.</p></note>'","tn74.2":"b'<note id=\"tn74.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plates 7 and 8 are lacking in copy C. In script and style\\nof etching these added plates differ from the others.  In the use of colons\\nfollowing section numbers, for instance, they resemble <title level=\"m\"><span class=\"tei-hi-italic\">Ahania</span></title> and the <title level=\"m\"><span class=\"tei-hi-italic\">Book of\\nLos,</span></title> Before their insertion the text ran smoothly from Plate\\n6 to 10.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Plate 8 may have been designed to allow removal of Plate\\n4. (not present in FDEG).  The verses of Plates 5-7 would then be in Chapter\\n11 and Plate 8 would begin Chapter III.  But 8 was evidently etched as <quote>&#8220;Chap: IV&#8221;</quote> before this conflict was noted. Or possibly\\n8 was meant to replace 10, though that would have removed all reference to <quote>&#8220;a first Age&#8221;</quote>.  Plate 10 remains in all copies, but in\\nF and B 8 follows 10, with lines 10:42-43 (<quote>&#8220;. . . a first Age\\npassed over . . .&#8221;</quote>) marked for erasure. Perhaps Blake wished\\nto remove the reference in Plate 10 and thereby allow the whole preceding\\naccount to be taken as a first Age, followed by the <quote>&#8220;second Age&#8221;</quote> of Plate 11.  But the present (and seemingly better) order of plates\\nis followed in DAG.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 9 is lacking in copy E. Plate 15 follows Plate\\n18 in copy A (probably a binder\\'s error, for the leaf has no folio number).\\n Plate 16 is lacking in CDEF.  Plate 25 is lacking in E.</p></note>'","tn82.1":"b'<note id=\"tn82.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25:18 And the Web is a Female in embrio] Line erased\\nin copy A and covered by tendril.</p></note>'","tn84.1":"b'<note id=\"tn84.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Frontispiece, title page, and four plates of text, in\\nordinary intaglio etching instead of Blake\\'s usual relief etching.  Extant\\nin only one copy in the Rosenwald Collection (lacking frontispiece [i]) and\\na few scattered prints of Plates i, 1, 3, 4.</p></note>'","tn90.1":"b'<note id=\"tn90.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Frontispiece, title page, and three plates of text, in\\nordinary intaglio etching, as <title level=\"m\"><span class=\"tei-hi-italic\">Ahania,</span></title>\\nExtant in one copy (in the British Museum) plus a separate print of Plate\\n4.</p></note>'","tn95.1":"b'<note id=\"tn95.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Title page, 42 plates of text, 8 full-page designs: total\\n51 plates; in four copies, no one of which contains all of these plates.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The page numbering established by Keynes (and followed here to avoid\\nconfusion of reference) is slightly inconsistent in including only one of\\nthe pictorial plates (No 16), but it represents the arrangement of copy D,\\nthe latest and most nearly, complete copy.  (In that copy, the other seven\\npictorial plates follow the plates here numbered 9, 14, 29, 33, 37, 39, and\\n40.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Bracketed numbers [i, 1-50] include the pictorial plates and\\nare given for reference to <title level=\"m\"><span class=\"tei-hi-italic\">The Illuminated Blake\\n</span></title>. Bentley, <title level=\"m\"><span class=\"tei-hi-italic\">Writings</span></title>,\\n725-26, bases his arrangement and numbering of <title level=\"m\"><span class=\"tei-hi-italic\">\\nMilton</span></title> plates on copies AB and treats the added pages of CD as\\nepicycles.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Copies A and B, on paper watermarked 1808, consist of\\n45 plates each; copy C, on the same paper, contains five additional pages\\nof text (here numbered 3, 4, 10, 18, 32); copy D, on paper of 1815, contains\\nthese and another addition (5).  But both C and D lack the Preface (i).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Dates of composition and etching:</span> The title page, dated <quote>&#8220;1804&#8221;</quote>, announces a work in <quote>&#8220;12 Books&#8221;</quote>; yet <quote>&#8220;Finis&#8221;</quote> is etclied at the conclusion\\nof Book Two. (Compare the deleted announcement of 28 chapters in the <quote>&#8220;1804&#8221;</quote> title page of <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem.\\n</span></title>) In letters of April and July 1803 Blake declares that he has\\nin the previous <quote>&#8220;three years composed an immense number of verses&#8221;</quote> descriptive of his <quote>&#8220;Spiritual Acts&#8221;</quote> during\\nthose years&#8212;an account that fits <title level=\"m\"><span class=\"tei-hi-italic\">Milton\\n</span></title> better than <title level=\"m\"><span class=\"tei-hi-italic\">Vala</span></title>\\nor <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>&#8212;and that these\\nverses, <quote>&#8220;perfectly completed into a Grand Poem&#8221;</quote>,\\nonly await divine assistance to <quote>&#8220;be progressively Printed &amp;\\nOrnamented with Prints &amp; given to the Public&#8221;</quote>.  Possibly\\nthe <quote>&#8220;1804&#8221;</quote> titles mark a division of the Grand\\nPoem into two, a large epic and a small. Yet probably only the title pages,\\nif even they, were etched at that time.  After his <quote>&#8220;1795&#8221;</quote> prophecies Blake may not have resumed his Illuminated Printing until\\nafter his 1809 Exhibition of paintings.  In a letter of December 1808 he explains\\nthat he has <quote>&#8220;long been turned out of&#8221;</quote> his <quote>&#8220;former pursuits of printing&#8221;</quote> (he has been asked what\\netched books he has for sale) and that he will be preoccupied with painting\\nand designing for some time to come.  In the <title level=\"m\"><span class=\"tei-hi-italic\">\\nDescriptive Catalogue</span></title> (section V) he repeats the hope for divine\\naid to <quote>&#8220;publish&#8221;</quote> what he has <quote>&#8220;written&#8221;</quote> and seems to refer to <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\nor <title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas</span></title> or both, a <quote>&#8220;voluminous&#8221;</quote> work.  The first epic be began to print and\\nornament, however, was the smaller and more economically designed <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> (on exact halves of the plates of <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> but inscribed so compactly as to contain nearly\\nas maily words per page).  Only <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title>\\nfits his description of <quote>&#8220;a Poem . . . which I will soon Publish&#8221;</quote> in the ms <title level=\"a\">&#8220;Public Address&#8221;</title> of\\n1810 or later (see p 561).  His confident wording implies that the work was\\nnearly finished, and the etching of all but three of the extant plates appears\\nto have been done over a fairly short period: I suggest the years 1809-10.\\n Although the paper of copies A and B is watermarked 1808, he cannot have\\nused it in that year (considering his December statement) nor until the Exhibition\\nwas launched in the following spring.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    When he etched <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> he was content to write <quote>&#8220;Finis&#8221;</quote> on the 45th plate and in his first two <quote>&#8220;2&#8221;</quote>.\\n Later, perhaps as he saw  copies to reduce the <quote>&#8220;12 Books&#8221;</quote> of his title page to <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\nshaping into 100 plates, he went on to make <title level=\"m\"><span class=\"tei-hi-italic\">\\nMilton</span></title> an even 50. Most of the plates added in copies C and D\\nappear to be filled with matter previously by-passed but to have been etched\\nin the same period as the rest of the work.  Two exceptions are extra pages\\n10 and 32, in a much lighter, freer style of lettering (with extra page 3\\nleaning toward italic).  These I suspect to have been etched later than the\\nrest, with copies C and D both completed near the time of printing of D (on\\n1815 paper).  And in these late copies Blake, though keeping to two Books,\\nwas proud to commemorate his original plan; not only did he let the numeral\\nprint clearly <quote>&#8220;12&#8221;</quote>, he used careful stipple work\\nto strengthen the shadow emphasizing each digit.  Students often suggest an\\nexplanation: that Blake is comparing his work to Milton\\'s 12 books of <title level=\"m\"><span class=\"tei-hi-italic\">Paradise Lost.</span></title></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     What relation\\nthe extant <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> bears to the\\npoem first described in 1803 we cannot tell.  Many passages appear to be of\\nrelatively late composition (Plates 6 and 4, for example); at least two, the\\nPreface and Plate 19 (see note) belong in allusions and tone to the 1807-9\\nperiod.  Yet the first added plate (3) is a refurbished passage from the <title level=\"m\"><span class=\"tei-hi-italic\">Book of Urizen</span></title> of 1794; the last added<pb n=\"807\"/> plate (5) reads like a remnant of a version in which <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> had some of the character of such historical\\nprophecies as <title level=\"m\"><span class=\"tei-hi-italic\">America;</span></title> and two\\nother added plates (10 and 16) seem early in relation to the main body of\\nthe poem.  For an exemplification of the accretive growth of the work, see\\nthe note on 2:26.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Title</span> 2 Books AB] 12 Books\\nCD</p></note>'","tn95.2":"b'<note id=\"tn95.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 1 (Preface) lacking in the consecutively paginated\\ncopies CD.</p></note>'","tn96.1":"b'<note id=\"tn96.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:21 What] <span class=\"tei-hi-italic\">mended from</span> That (the mending\\ntentative in A but complete in CD)</p></note>'","tn96.2":"b'<note id=\"tn96.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:26 Blake first intended Plate 7 to follow (syntactical\\nlink: Classes are created by hammer and woven by looms); then Plate 6 was\\ninserted (Classes are created and woven, from London to Dover, in immense\\nlabours), with a new link to 7 (regulated by hammers and woven by looms).\\n Thus stand copies AB.  Then Plate 3 was inserted, borrowing the original\\nlink, <quote>&#8220;woven by Enitharmons Looms&#8221;</quote>, which was then\\ndeleted from 6:35-7:1 (see below).  After Plate 3 Blake then inserted another\\nnew page, Plate 4 (syntactical link between 4 and 6: Blake\\'s neighborhood\\nresounded with engraving of animals [for the Hayley ballads], displaying naked\\nbeauty and song, from Golgonooza in immense labours, ever building ever falling).\\n Finally he brought in Plate 5&#8212;an earlier and perhaps rejected passage\\nalso dealing with the creation of the classes.  The links now are difficult\\nbut can be found.  If we recognize Palamabron with fiery harrow (5:1) as a\\nFelpham variant of Blake-Los busy etching, his <quote>&#8220;returning From\\nbreathing fields&#8221;</quote> can be taken as loosely in apposition to the <quote>&#8220;Mocking&#8221;</quote> and <quote>&#8220;Displaying&#8221;</quote>\\nin 4:27-28.  And near the end of Plate 5, if we make a long parenthesis of <quote>&#8220;Charles . . . Living Proportion&#8221;</quote>, we may read: <quote>&#8220;Creating the Three Classes . . . From Golgonooza . . .&#8221;</quote>.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     To recover the narrative sequence from these accretions, Northrop\\nFrye suggests reading the plates in the order 2, 7, 4, 6, 3, 8 (skipping 5).\\n This is a useful suggestion&#8212;but does not represent (as Frye supposes) <quote>&#8220;the order of the `C\\' copy&#8221;</quote>.  In that copy Blake\\'s numbering\\nof folios gives the present order: 2, 3, 4, 6, 7, 8. (Pages 2 and 3 are reversed\\nby a binder\\'s mistake, but the <title level=\"m\"><span class=\"tei-hi-italic\">Census</span></title>\\nis simply wrong in reporting an order of 2, 7, 3, 6, 4, 8.)</p></note>'","tn96.3":"b'<note id=\"tn96.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 3 added in copies CD.</p></note>'","tn97.1":"b'<note id=\"tn97.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 4 added in CD.</p></note>'","tn98.1":"b'<note id=\"tn98.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 5 added in D.</p></note>'","tn99.1":"b'<note id=\"tn99.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:12 Theotorm] Doubtless an error for <quote>&#8220;Theotormon&#8221;</quote></p></note>'","tn100.1":"b'<note id=\"tn100.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:35 Hammer. CD] Hammer and Woven AB</p></note>'","tn100.2":"b'<note id=\"tn100.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:1 is preceded in AB by a line deleted in CD:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>By Enitharmons Looms &amp; Spun beneath the Spindle of Tirzah</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn100.3":"b'<note id=\"tn100.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:3 womb: follow] Deleted between these two words are\\ntwo half lines, partly legible in copy D. <span class=\"tei-hi-italic\">Conjectural reading:\\n</span> the Reprobate are the first / ?Who by for the ?glorification [    ]\\n</p></note>'","tn101.1":"b'<note id=\"tn101.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:28 he he] Presumably an intentional repetition; yet\\nthe similar duplication of <quote>&#8220;with with&#8221;</quote> in 15:27\\nis plainly a scribal error.</p></note>'","tn104.1":"b'<note id=\"tn104.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 10 added in CD.</p></note>'","tn104.2":"b'<note id=\"tn104.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10:1 Enitharmon] Not misspelled <quote>&#8220;Enitharman&#8221;</quote> despite Bentley, following Keynes.</p></note>'","tn104.3":"b'<note id=\"tn104.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10:7 Infinite] Followed by one deleted word and line. <span class=\"tei-hi-italic\">Conjectural reading:</span> until / The Space becomes ? Serpent-formed\\n&amp; the Womb ?Englobes (Compare <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem\\n</span></title> 1:2)</p></note>'","tn110.1":"b'<note id=\"tn110.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 16 is a full-page design (Milton striving with\\nUrizen) <span class=\"tei-hi-italic\">inscribed:</span> To Annihilate the Selfhood of Deceit\\n&amp; False Forgiveness</p></note>'","tn111.1":"b'<note id=\"tn111.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 18 added in CD.</p></note>'","tn113.1":"b'<note id=\"tn113.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19:58-59 Hand . . . Hyle &amp; Coban: / Scofield] Allusions\\nto the <title level=\"m\"><span class=\"tei-hi-italic\">Examiner</span></title> (in which editorials\\nwere signed with a printer\\'s hand), Hayley, Cromek (perhaps), and Scolfield;\\nthe first requires a date of Aug. 1808 or later.</p></note>'","tn117.1":"b'<note id=\"tn117.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22:35 most dismal to our eyes] Referring either to the <quote>&#8220;left Foot black&#8221;</quote> or to the <quote>&#8220;Shadowy Female&#8221;</quote>; the punctuation, being rhetorical, does not dispel the ambiguity.\\n</p></note>'","tn118.1":"b'<note id=\"tn118.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22:56-62 A difficult passage.  There is a dot after <quote>&#8220;Witnesses&#8221;</quote> which I take to be intrusive.  It is <quote>&#8220;the two Witnesses\\' Faith&#8221;</quote> which appears to <quote>&#8220;the\\nChurches&#8221;</quote> as obedience to <quote>&#8220;the death of<pb n=\"808\"/>\\n         the Cross&#8221;</quote> (see Philippians 2:7-8).  The colon at the\\nend of line 57 introduces the Churches\\' cries, quoted as lines 58-62.</p></note>'","tn118.2":"b'<note id=\"tn118.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23:5 Awake] <span class=\"tei-hi-italic\">mended from</span> awake</p></note>'","tn118.3":"b'<note id=\"tn118.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23:30 Pitying] <span class=\"tei-hi-italic\">altered to</span> Saying <span class=\"tei-hi-italic\">in copy D,</span> by retracing,evidently in haste</p></note>'","tn120.1":"b'<note id=\"tn120.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24:57 Inserted in a stanza break, perhaps having been\\nomitted by an accident of transcription.</p></note>'","tn121.1":"b'<note id=\"tn121.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24:64. blare by the . . . clarion] <span class=\"tei-hi-italic\">i.e.\\n</span> blare [is lulld by] the . .  . clarion</p></note>'","tn121.2":"b'<note id=\"tn121.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24:66 raving] <span class=\"tei-hi-italic\">altered to</span> roaring <span class=\"tei-hi-italic\">in copy B</span></p></note>'","tn122.1":"b'<note id=\"tn122.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25:53 To] The <span class=\"tei-hi-italic\">in all copies</span> (a mistake\\nnoted by Margoliouth; among other signs of carelessness in the inscription\\nof this plate; note omitted word in line 38)</p></note>'","tn123.1":"b'<note id=\"tn123.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26:3 I have omitted an intrusive period after <quote>&#8220;dance&#8221;</quote>.</p></note>'","tn124.1":"b'<note id=\"tn124.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 27 precedes Plates 25-26 in copies A B.</p></note>'","tn124.2":"b'<note id=\"tn124.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27:3-41 Repeated with a few changes from <span class=\"tei-hi-italic\">\\nFour Zoas</span> IX 136:16-137:4, omitting nine lines.</p></note>'","tn125.1":"b'<note id=\"tn125.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27:60 Poetry . . . Surgery] Line del in copper in CD;\\ncompare similar deletions in <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\nPlates 3 and 73.</p></note>'","tn125.2":"b'<note id=\"tn125.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28:9 It is apparently the infant Spectre who is <quote>&#8220;wretched&#8221;</quote> and <quote>&#8220;unform\\'d&#8221;</quote> for\\ndoubts&#8212;not <quote>&#8220;Others&#8221;</quote> or <quote>&#8220;Cabinets&#8221;</quote>.</p></note>'","tn129.1":"b'<note id=\"tn129.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Plate 30 is preceded by a full-page design labeled <quote>&#8220;William&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     30: <span class=\"tei-hi-italic\">inscription in\\nreverse:</span> How wide the Gulf &amp; Unpassable! between Simplicity &amp;\\nInsipidity / Contraries are Positives / A Negation is not a Contrary</p></note>'","tn131.1":"b'<note id=\"tn131.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     31:56 eyes: listening the Rose] Keynes moves the\\ncolon to follow <quote>&#8220;listening&#8221;</quote> and it may belong there;\\nyet with the punctuation found on the plate the meaning is that the Rose,\\neven in her sleep, hears the call of spring and prepares her sudden majestic\\nentrance.</p></note>'","tn131.2":"b'<note id=\"tn131.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 32 added in C D; placed after 33 in C.</p></note>'","tn131.3":"b'<note id=\"tn131.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32:15 Blake wrote <figure entity=\"erdman.P808a.inline\"><p>[Hewbrew text]</p><figdesc>Hebrew text</figdesc></figure><span class=\"tei-hi-italic\">in error for</span><figure entity=\"erdman.P808b.inline\"><p>[Hebrew text</p><figdesc>Hebrew text</figdesc></figure> (i.e. Kerabim = as multitudes)</p></note>'","tn133.1":"b'<note id=\"tn133.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 34 is preceded by a full-page design labeled <quote>&#8220;Robert&#8221;</quote>.</p></note>'","tn137.1":"b'<note id=\"tn137.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36:32 Enter my Cottage] Ololon, Blake, and <quote>&#8220;Blakes\\nCottage at Felpham&#8221;</quote> are shown in the illustration.</p></note>'","tn137.2":"b'<note id=\"tn137.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37:9 Rahab] Rahah <span class=\"tei-hi-italic\">on the plate, but a mistake\\n</span></p></note>'","tn138.1":"b'<note id=\"tn138.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37:31 Assasinations] <span class=\"tei-hi-italic\">mended from</span> assasinations\\n</p></note>'","tn141.1":"b'<note id=\"tn141.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">39:55 Calling] <span class=\"tei-hi-italic\">mended from</span> calling\\n</p></note>'","tn142.1":"b'<note id=\"tn142.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">40:30 can be annihilated] can be ann be annihilated <span class=\"tei-hi-italic\">all      copies</span></p></note>'","tn144.1":"b'<note id=\"tn144.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Plate 43[50].  A small emblem drawing in the Rosenwald\\nCollection anticipates the design of this plate; in it the veil of the woman\\nsuggests a splitting sheath of vegetation and a cornucopia opens beside her.\\n(Reproduced as fig. 44 in the 1977 edition of the Erdman and Moore facsimile\\nof the <title level=\"m\"><span class=\"tei-hi-italic\">Notebook.</span></title>)</p></note>'","tn144.2":"b'<note id=\"tn144.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Frontispiece, title page, 94 plates of text, 4 full-page\\ndesigns: total 100 plates; known in five complete copies printed by Blake\\nand three posthumously printed.  As listed in the Keynes-Wolf <title level=\"m\"><span class=\"tei-hi-italic\">Census</span></title> (and in demonstrably chronological order) these\\nare: copy A (British Museum) with watermark dates of 1818-19-20; copy C (collection\\nof the late Frank Rinder&#8212;Blake Trust facsimile 1952) with the same dates\\nof paper; copy D (Harvard University Library) with watermark 1820; copy E\\n(Paul Mellon collection&#8212;Blake Trust color facsimile 1951) with watermark\\n1820; copy F (Pierpont Morgan Library) with watermark dates of 1824, 1826;\\ncopies H, I, J posthumously printed.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These copies and several single\\nplates have been newly collated for the present edition&#8212;with the result\\nthat many of the deleted passages have been recovered, partly with the aid\\nof photographic enlargement. (A 6th copy, G, not located since 1921, has never\\nbeen described.  Copy B, of 25 colored plates, i.e. the first chapter only,\\nis apparently contemporaneous with A and C, the watermark date being 1818.\\n Blake Trust color facsimile 1974.)</p><pb n=\"809\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  The arrangement of\\nplates does not vary except in Chapter 2, where the present text follows that\\nof copies A, C, and F, the text familiar in the Rinder facsimile.  The alternative\\npagination, of copies D and E, is given in square brackets; that arrangement\\nis familiar in the texts of Geoffrey Keynes.  After two copies in the same\\norder, Blake printed two in a variant order (Keynes\\'s <quote>&#8220;standard&#8221;</quote>) and then returned to the first. Evidently he found both sequences\\nattractive but considered neither definitive. (See comment above on the variety\\nof arrangements of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence and of\\nExperience.</span></title>)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> See textual note on <title level=\"m\"><span class=\"tei-hi-italic\">Milton,</span></title> above. <title level=\"m\"><span class=\"tei-hi-italic\">\\nJerusalem</span></title> was etched and in present form largely composed after <title level=\"m\"><span class=\"tei-hi-italic\">Milton,</span></title> though their <quote>&#8220;1804&#8221;</quote> title pages suggest some overlapping.  Some pages were written and\\nperhaps a few were etched, the Preface for instance, during the enthusiasm\\nof the post-Felpham years.  After his 1809 Exhibition, Blake may have turned\\nto his two epics simultaneously, but he first completed and etched <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> the final text of <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> can hardly have been completed before 1815.\\nMost of the etching was probably done in 1815-20, but the deletion-marked\\npages such as the Preface may survive from an earlier etching.  Proof copies\\nof Plates 28, 40[45], and 56 were made on paper dated 1802.  The fact that <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> shows much more variation from\\nplate to plate than <title level=\"m\"><span class=\"tei-hi-italic\">Milton,</span></title> however,\\nalmost certainly signifies a much longer span of composition and production.\\n True, it was Blake\\'s conscious aim to achieve breadth and variety of graphic\\nand verbal effects befitting an epic, but time as well as stylistic choice\\nseems to have caused some of the differences among the plates.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    \\nFor a detailed survey of these matters see my <title level=\"m\">&#8220;Suppressed\\nand Altered Passages in Blake\\'s Jerusalem&#8221;</title> in <title level=\"m\"><span class=\"tei-hi-italic\">Studies in Bibliography</span></title> 1964.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Blake\\'s scribal\\nerrors, here corrected without annotation, are: 5:3 <quote>&#8220;incohererent&#8221;</quote> for <quote>&#8220;incoherent&#8221;</quote>; 16:51 <quote>&#8220;the\\nthe&#8221;</quote> for <quote>&#8220;the&#8221;</quote>; 38:37 <quote>&#8220;Of\\nof&#8221;</quote>; for <quote>&#8220;Of&#8221;</quote>; 40:37 <quote>&#8220;conjoinining&#8221;</quote> for <quote>&#8220;conjoining&#8221;</quote>; 64:31 <quote>&#8220;frownining&#8221;</quote> for <quote>&#8220;frowning&#8221;</quote>; 65:62 <quote>&#8220;him\\nfrom him his&#8221;</quote> for <quote>&#8220;him from his&#8221;</quote>;\\n94:23 <quote>&#8220;Chastitity&#8221;</quote> for <quote>&#8220;Chastity&#8221;</quote>. </p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">In the present text all restored deletions\\nare printed in italics, within brackets.</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Title (Plate 2)]\\nIn XXVIII Chapters <span class=\"tei-hi-italic\">del while etching</span> (beneath the <quote>&#8220;on&#8221;</quote> of <quote>&#8220;Albion&#8221;</quote>)</p></note>'","tn144.3":"b'<note id=\"tn144.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1804 . . . Molton S<sup>t</sup>.] <span class=\"tei-hi-italic\">incised</span> (Hence possibly, added at any, time)</p></note>'","tn144.4":"b'<note id=\"tn144.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 1. Entire text deleted, both by incised lines\\nemphasizing the texture and mortar-lines of the stonework and by solid inking\\nof the plate.  Text incised and so not very legible even in posthumous copies.\\n But before the lines were cut across the text, Blake pulled a proof on which\\nhe outlined the lettering by pen and ink (see facsimile bound as frontispiece\\nto the Blake Trust edition of the Rinder copy).</p></note>'","tn144.5":"b'<note id=\"tn144.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:7 Albion behold Pitying] <span class=\"tei-hi-italic\">del by scratching\\nthe copper</span> (a somewhat conjectural reading)</p></note>'","tn145.1":"b'<note id=\"tn145.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3: SHEEP GOATS] <span class=\"tei-hi-italic\"> incised (hence possibly\\na late addition)</span></p></note>'","tn145.2":"b'<note id=\"tn145.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3: 2nd paragraph, 3rd line: Ancients acknowledge . .\\n. Deities] Ancients entrusted . . .  Writing <span class=\"tei-hi-italic\">rdg mistakenly supplied\\n</span> in earlier edition (I had simply not taken the proper care in deciphering\\nthe dots remaining after deletion). (Error noted by M. J. Tolley.)</p></note>'","tn148.1":"b'<note id=\"tn148.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:59 The parentheses were added in copy B but not later\\ncopies.</p></note>'","tn150.1":"b'<note id=\"tn150.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:65 Image   <span class=\"tei-hi-italic\">del</span> (but retouched into\\nlegibility in copies BD)</p></note>'","tn151.1":"b'<note id=\"tn151.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:40-41 Full stops seem required at each line end. \\nIt is the Spectre who must <quote>&#8220;labour obedient&#8221;</quote> for\\nLos <span class=\"tei-hi-italic\">because</span> Hand and Co <quote>&#8220;labour mightily&#8221;</quote> in negation.</p></note>'","tn152.1":"b'<note id=\"tn152.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 10 is an added plate, made to fit between 9 and\\n11.</p></note>'","tn153.1":"b'<note id=\"tn153.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10:47 Righteous] <span class=\"tei-hi-italic\">mended from</span> righteous\\n</p></note>'","tn154.1":"b'<note id=\"tn154.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11:3 anvils;] I insert semicolon in place of comma,\\nfor the <quote>&#8220;Los. compelled&#8221;</quote> clause must end here.\\n</p></note>'","tn158.1":"b'<note id=\"tn158.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:34] <span class=\"tei-hi-italic\">Followed by colophon:</span> End of\\nthe 1st Chap: <span class=\"tei-hi-italic\">del</span></p></note>'","tn161.1":"b'<note id=\"tn161.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17:21 labour] <span class=\"tei-hi-italic\">revised in copy B to</span>\\nlabours (inattentively?)</p></note>'","tn163.1":"b'<note id=\"tn163.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18:36 cry Hand] <span class=\"tei-hi-italic\">revised crudely copy B\\nto</span> criest ?Thou</p></note>'","tn166.1":"b'<note id=\"tn166.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21:37 Childrens] <span class=\"tei-hi-italic\">mended from</span>; childrens\\n</p></note>'","tn167.1":"b'<note id=\"tn167.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21:44 warshipped] <span class=\"tei-hi-italic\">possibly an error for\\n</span> worshipped <span class=\"tei-hi-italic\">yet quite possibly a punning coinage.</span> \\nAlbion\\'s children <quote>&#8220;Carried in Arks of Oak&#8221;</quote> are\\nsailors pressed into naval service (thus <quote>&#8220;warshipped&#8221;</quote>);\\nthe six months of <quote>&#8220;silent death&#8221;</quote> would be the fall-winter\\nquiescence before the spring campaigns, or the long sea voyage to Aboukir\\nBay.  To worship them in this whipped condition (line 42) is to warship them\\nin the oaken <quote>&#8220;arks&#8221;</quote> of the British navy; compare\\nthe sword-bearing<pb n=\"810\"/> half of a soldier pictured in <title level=\"m\"><span class=\"tei-hi-italic\">Marriage</span></title> 11 as worshipped by a kneeling congregation.\\n(Polysemous reading suggested by Nelson Hilton.) The <quote>&#8220;a&#8221;</quote> is made with the usual serif at top right, never given to an <quote>&#8220;o&#8221;</quote>, which is made in a circular sweep. The <quote>&#8220;a&#8221;</quote> is made with a curved stroke that begins at the top, comes up to\\nmake the serif and down again to connect with the next letter.  Of course\\nan <quote>&#8220;a&#8221;</quote> can look something like an <quote>&#8220;o&#8221;</quote>, but even the <quote>&#8220;a&#8221;</quote> in <quote>&#8220;massy&#8221;</quote> (misread in America c as <quote>&#8220;mossy&#8221;</quote>), which\\nlacks the protruding serif, has the more vertical right side produced by the\\nup-and-down motion described.</p></note>'","tn167.2":"b'<note id=\"tn167.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22:10 Hatred] <span class=\"tei-hi-italic\">mended from</span> Ratred</p></note>'","tn168.1":"b'<note id=\"tn168.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23:7 But thou! O wretched Father!]  Jerusalem now speaks.</p></note>'","tn170.1":"b'<note id=\"tn170.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24:58 Dead . . . Alive] <span class=\"tei-hi-italic\">mended from</span>\\ndead . . . alive</p></note>'","tn170.2":"b'<note id=\"tn170.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24:60 Followed by a line deleted almost without trace;\\ncompare 47:1.</p></note>'","tn171.1":"b'<note id=\"tn171.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 26, engraved in white line, portrays <quote>&#8220;HAND&#8221;</quote> in flames and with nails in his extended palms, turned toward <quote>&#8220;JERUSALEM&#8221;</quote>, who lifts her hands in amazement.  The rhymed\\nlines are incised in outline alongside the figures. </p></note>'","tn172.1":"b'<note id=\"tn172.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27:15 Willans] <span class=\"tei-hi-italic\">mended</span> (perhaps from <quote>&#8220;Williams&#8221;</quote>)</p></note>'","tn174.1":"b'<note id=\"tn174.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 28 exists in an early state (in a proof page in\\nthe Morgan Library); extensive changes were made in the picture, but not the\\ntext, before final printing.  Female and male figures embracing in the center\\nof a large flower were re-engraved from a position in which they could be\\nassumed to be copulating to one in which they could not.  Perhaps illustrating\\nJerusalem-Vala\\'s attempt <quote>&#8220;to melt his <supplied>[Albion\\'s]</supplied>\\nGiant beauty, on the moony river&#8221;</quote> (19:47). (In 1977 the Morgan\\nacquired another working proof, intermediate between the early and the final\\nstates.)</p></note>'","tn175.1":"b'<note id=\"tn175.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plates 29-46 are found in two arrangements.  The\\nsequence followed here is that of copies A C F; numbers within brackets indicate\\nthe sequence of copies D E.</p></note>'","tn176.1":"b'<note id=\"tn176.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29:47 involve] Possibly a mistake for <quote>&#8220;involves&#8221;</quote>; yet the construction <quote>&#8220;behold the cloud involve me&#8221;</quote> would not be unBlakean.</p></note>'","tn178.1":"b'<note id=\"tn178.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31:18 States . . . Systems] These two words, in an unevenly\\ndeleted line, are somewhat conjectural.</p></note>'","tn178.2":"b'<note id=\"tn178.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32:34 Conjectural restoration of deeply gouged deletion.</p></note>'","tn179.1":"b'<note id=\"tn179.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33:1 Line added (by engraving) after the etching of\\nthe plate.</p></note>'","tn179.2":"b'<note id=\"tn179.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33:10 blue] <span class=\"tei-hi-italic\">mended from</span> pale (in all\\ncopies, but restored to <quote>&#8220;pale&#8221;</quote> in A; a proof exists\\nof the unmended plate)</p></note>'","tn181.1":"b'<note id=\"tn181.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35:6 Line crowded into a paragraph break, before etching,\\nbut indented to go with second paragraph.</p></note>'","tn181.2":"b'<note id=\"tn181.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35:10 Line crowded into paragraph break, before etching.</p></note>'","tn183.1":"b'<note id=\"tn183.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37:32-35 (reverse writing, on scroll):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Each Man is in his Spectre\\'s power</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Untill the arrival of that hour,</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>When his Humanity awake</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And cast his Spectre into the Lake</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These lines are close to the final draft in the Notebook (p 8- misbound\\nas 12) except for an unfinished 2nd stanza.  A rearrangement of the 1st stanza\\nlines was tried by numbering them 4, 3, 1, 2, but the numbers were canceled.\\n Here is the Notebook text:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          [4] <span class=\"tei-del\">[<span class=\"tei-hi-italic\">This world</span>]</span>&lt;Each Man&gt; is in</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">the</span>]</span>&lt;his&gt; Spectres\\npower</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[3] Untill the arrival of that hour</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    [1]<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Untill</span>]</span>&lt;When&gt;<span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">the</span>]</span>&lt;his&gt; Humanity awake</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  [2] And cast<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">the</span>]</span>&lt;his own&gt;\\nSpectre into the Lake</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And there to Eternity aspire</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The selfhood in a flame of fire</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till then the Lamb of God</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn188.1":"b'<note id=\"tn188.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">40:40 Line lacking in proof (Morgan Library); added\\nto plate by engraving.</p></note>'","tn190.1":"b'<note id=\"tn190.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42:47 friend] <span class=\"tei-hi-italic\">sic,</span> probably a parody\\nof <quote>&#8220;aborred fiend&#8221;</quote>, though possibly a scribal error\\n</p></note>'","tn191.1":"b'<note id=\"tn191.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43:28 rocks] <span class=\"tei-hi-italic\">etched</span> locks, <span class=\"tei-hi-italic\">\\nbut see line</span> 2; emendation suggested by Joanne Witke</p></note>'","tn193.1":"b'<note id=\"tn193.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43:83 trembling] <span class=\"tei-hi-italic\">mended from</span> Albion\\nslept (though <quote>&#8220;slept&#8221;</quote> is conjectural)</p></note>'","tn196.1":"b'<note id=\"tn196.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">47:1 Blake probably did not delete this line because\\nof its redundancy with the plate\\'s concluding line (for a similar refrain\\nenclosing a plate, see <title level=\"m\"><span class=\"tei-hi-italic\">America</span></title>\\n9) but to accommodate some rearrangement of plates subsequently abandoned.\\n</p></note>'","tn198.1":"b'<note id=\"tn198.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">49:35 Void] ground <span class=\"tei-hi-italic\">rdg on plate,</span> error\\nin copying <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> 5:22</p></note>'","tn200.1":"b'<note id=\"tn200.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 51, a full-page illustration, was inscribed <quote>&#8220;Vala Hyle   Skofield&#8221;</quote> when issued as a separate print.\\n Monogram WB in lower left corner (for use with separate print) is visible\\nin copy A and posthumous copies.</p></note>'","tn200.2":"b'<note id=\"tn200.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 52.  The 7 stanzas beginning <quote>&#8220;I saw\\na Monk . . .&#8221;</quote>     are an almost exact transcription of stanzas\\nnumbered 1 to 7 in a much longer draft in Blake\\'s Notebook (p 8&#8212;misbound\\nas 12).  In order of composition these seven were originally stanzas 1,  2,\\n3, 4, 15, 16, and 14.  (For another poem, of nine stanzas,  drawn from the\\nsame Notebook draft, see <quote>&#8220;The Grey Monk&#8221;</quote> in the\\n Pickering Manuscript, below.)</p></note>'","tn201.1":"b'<note id=\"tn201.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 Charlemaine] Constantine 1<span class=\"tei-hi-italic\">st ms\\nrdg del</span></p></note>'","tn201.2":"b'<note id=\"tn201.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 as we] where he <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn202.1":"b'<note id=\"tn202.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5-8 A variant stanza was written beside this in the\\nms:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Gibbon plied his lash of steel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Voltaire turnd his wracking wheel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Charlemaine &amp; his barons bold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Stood by &amp; mockd in iron &amp; gold</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Another variant ms stanza was written in the margin:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Wheel of Voltaire whirld on high</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Gibbon aloud his lash does ply</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Charlemaine &amp; his Clouds of War</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Muster around the Polar Star</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(The final line 7 was composed after these variant stanzas were\\nrejected.)</p></note>'","tn202.2":"b'<note id=\"tn202.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 The Schools . . . rolld] Charlemaine &amp; his barons\\nbold 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn202.3":"b'<note id=\"tn202.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Thou . . . afar] Seditious Monk said Charlemaine 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn202.4":"b'<note id=\"tn202.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 In vain . . . War] The Glory of War thou condemnst\\nin vain 1<span class=\"tei-hi-italic\">st ms rdg del</span></p></note>'","tn202.5":"b'<note id=\"tn202.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 your . . . you] thy . . . thou <span class=\"tei-hi-italic\">ms rdg\\n</span></p></note>'","tn202.6":"b'<note id=\"tn202.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17-20 When Satan .  .  . mercys Lord] <span class=\"tei-hi-italic\">\\nms stanza</span><quote>&#8220;5&#8221;</quote> (<span class=\"tei-hi-italic\">variant:</span>\\nMercys), <span class=\"tei-hi-italic\">replacing:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Untill the Tyrant himself relent</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Tyrant who first the black bow bent</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Slaughter shall heap the bloody plain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Resistance &amp; war is the Tyrants gain</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn202.7":"b'<note id=\"tn202.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 Titus!  Constantine!]  O Charlemaine O 1<span class=\"tei-hi-italic\">\\nst ms rdg del</span></p></note>'","tn202.8":"b'<note id=\"tn202.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Grecian Mocks] mocks &amp; scorn 1<span class=\"tei-hi-italic\">st\\nms rdg del</span></p></note>'","tn202.9":"b'<note id=\"tn202.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 For a Tear] For the tear 1<span class=\"tei-hi-italic\">st ms rdg\\ndel;</span> A tear 2<span class=\"tei-hi-italic\">nd ms rdg</span></p></note>'","tn202.10":"b'<note id=\"tn202.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25-28 Variant ms stanza, abandoned but not deleted:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But The Tear of Love &amp; forgiveness sweet</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And submission to death beneath his feet</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Tear shall melt the sword of steel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And every wound it has made shall heal</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(The <quote>&#8220;feet&#8221;</quote> in the second line are the\\nTyrant\\'s.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The following stanza, numbered <quote>&#8220;8&#8221;</quote>, was begun, alongside stanza 7:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>a Grecian Scoff is a wracking wheel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">The</span>]</span> Roman pride is a sword of steel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Vict</span>]</span> Glory &amp; Victory a <span class=\"tei-del\">[?<span class=\"tei-hi-italic\">Ron</span>]</span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">&lt;plaited&gt;</span>]\\n</span><span class=\"tei-del\">[?<span class=\"tei-hi-italic\">Trojan</span>]</span> phallic                Whip\\n</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(<quote>&#8220;Ron&#8221;</quote> a start on <quote>&#8220;Roman&#8221;</quote>? These lines first a variant of stanza 2?)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 of a Martyrs]\\nfor anothers 1<span class=\"tei-hi-italic\">st ms rdg del;</span> of the Martyrs 2<span class=\"tei-hi-italic\">\\nnd ms rdg</span></p></note>'","tn202.11":"b'<note id=\"tn202.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">53:8, Line added within a paragraph break, before etching</p></note>'","tn203.1":"b'<note id=\"tn203.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">53:24 Line added within a paragraph break, before etching</p></note>'","tn204.1":"b'<note id=\"tn204.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">55:20 Conclave] <span class=\"tei-hi-italic\">etched</span> Concave, clearly\\nwrong for the context</p></note>'","tn206.1":"b'<note id=\"tn206.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">56:37 earth-Worm] <span class=\"tei-hi-italic\">mended by pen</span> to\\nearth-Worms in copy F, perhaps not by Blake</p></note>'","tn207.1":"b'<note id=\"tn207.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 57.  In the illustration are the names <quote>&#8220;York   London Jerusalem&#8221;</quote>.</p></note>'","tn207.2":"b'<note id=\"tn207.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">58:3 Street] <span class=\"tei-hi-italic\">possibly a mistake for</span>\\nStreets</p></note>'","tn211.1":"b'<note id=\"tn211.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">60:55 Not: but] <span class=\"tei-hi-italic\">Keynes emends to</span> Nought\\nbut (yet compare 93:20 and 96:16; perhaps the intended opposition is <quote>&#8220;Art thou alive! or art thou Not:&#8221;</quote>)</p></note>'","tn214.1":"b'<note id=\"tn214.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">63:5-6 Albion\\'s bringing Luvah <quote>&#8220;To justice\\nin his own City of Paris&#8221;</quote> (here and in pl 66) points to a date\\nof composition after one or more probably both the Treaties of Paris of 1814\\nand 1815.  See Erdman 430[466].</p></note>'","tn217.1":"b'<note id=\"tn217.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">65:62 him from his] <span class=\"tei-hi-italic\">etched</span> him from\\nhim his</p></note>'","tn223.1":"b'<note id=\"tn223.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">69:1 combined] <span class=\"tei-hi-italic\">mended in copper to</span>\\nconjoined (restored in the Mellon copy by pen)</p></note>'","tn228.1":"b'<note id=\"tn228.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">72:53 <span class=\"tei-hi-italic\">Mirror writing:</span> Women the comforters\\nof Men become the Tormenters &amp; Punishers</p></note>'","tn228.2":"b'<note id=\"tn228.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">73:37,Deletion covered by vines in most copies; legible\\nin posthumous copies, under magnification.</p></note>'","tn229.1":"b'<note id=\"tn229.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">73:43 Deletion covered by vines in most copies; legible\\nin posthumous copies, under magnification</p></note>'","tn231.1":"b'<note id=\"tn231.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 76 is a full-page illustration, with the names <quote>&#8220;Albion&#8221;</quote> and <quote>&#8220;Jesus&#8221;</quote> incised\\nbeneath its two figures. <quote>&#8220;Albion&#8221;</quote> is deleted in\\ncopies D E; <quote>&#8220;Jesus&#8221;</quote> in copies C D E  F.</p></note>'","tn231.2":"b'<note id=\"tn231.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">77:1-4 I give you . . . wall] Four lines from Blake\\'s\\nNotebook (p 46 reversed)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     77:1 give] have given 1<span class=\"tei-hi-italic\">st\\nms rdg del</span></p></note>'","tn233.1":"b'<note id=\"tn233.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">77 The Real [<span class=\"tei-hi-italic\">Selfhood</span>] . . . Man]\\nincised in the bottom corners of the plate, partly legible in copy F and in\\nposthumous copies. (The fourth segment is G. E. Bentley\\'s deciphering.)  Blake\\nfirst deleted <quote>&#8220;hood&#8221;</quote> and later the whole passage.\\n</p></note>'","tn238.1":"b'<note id=\"tn238.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 81.  The mirror writing in the inscription reads:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In Heaven the only Art of Living</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Is Forgetting &amp; Forgiving</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Especially to the Female</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But if you on Earth Forgive</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>You shall not find where to Live</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn239.1":"b'<note id=\"tn239.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">81:15-16 Since these two lines appear below the illustration,\\nthey  may be considered as its caption; but they also serve as part of the\\n text.  (Keynes prints them as such but in a note says they are not part \\nof teh text.)</p></note>'","tn239.2":"b'<note id=\"tn239.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 82 shows many signs of haste.  The deletion\\nin lines 47-48 should perhaps be respected as a successful revision, but that\\nin lines 67-68 leaves an awkward gap.</p></note>'","tn240.1":"b'<note id=\"tn240.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">82:43 his hands . . . &amp; his feet] <span class=\"tei-hi-italic\">\\nwritten</span> his hands .  . . &amp; his hands</p></note>'","tn241.1":"b'<note id=\"tn241.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">83:1 Corruptibility] <span class=\"tei-hi-italic\">etched</span> Corrupability <span class=\"tei-hi-italic\">mended in copy E</span></p></note>'","tn241.2":"b'<note id=\"tn241.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">83:30 Affection] <span class=\"tei-hi-italic\">mended from</span> affection\\n</p></note>'","tn243.1":"b'<note id=\"tn243.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">83:87 Awake] Whether given an exclamation point\\nor not, this word seems to hang in midair.  Plate 84 (different in technique,\\nlettering, content) obviously did not originally follow.  Part of the Daughters\\'\\nsong of building appears to be lost.</p></note>'","tn244.1":"b'<note id=\"tn244.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">85:11 Myriads] <span class=\"tei-hi-italic\">mended from</span> myriads\\n</p></note>'","tn247.1":"b'<note id=\"tn247.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">88:30 sending] <span class=\"tei-hi-italic\">etched</span> sendinding</p></note>'","tn248.1":"b'<note id=\"tn248.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">89:2 endure] The plural subject of this verb must be\\nthe <quote>&#8220;double&#8221;</quote> nay <quote>&#8220;Twelvefold&#8221;</quote> Hermaphroditic form.</p></note>'","tn248.2":"b'<note id=\"tn248.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">89:26 flocks] Rocks <span class=\"tei-hi-italic\">in previous transcription,\\n</span> corrected by Bentley</p></note>'","tn250.1":"b'<note id=\"tn250.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">90:58 And] <span class=\"tei-hi-italic\">mended from</span> and</p></note>'","tn251.1":"b'<note id=\"tn251.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">90:67 thunder\\'s] I have inserted the apostrophe called\\nfor by the syntax and context; it is the thunder of Los that utters Plate\\n91.</p></note>'","tn251.2":"b'<note id=\"tn251.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">91:1 Preceded by a deleted line which I can partly decipher\\nas <quote>&#8220;Forgiveness of Enemies ?can [ ] only [ ] God [       ]&#8221;</quote></p></note>'","tn252.1":"b'<note id=\"tn252.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 92 includes an illustration inscribed <quote>&#8220;Jerusalem&#8221;</quote>.  A deleted line follows 93:1.</p></note>'","tn254.1":"b'<note id=\"tn254.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">94:27 Line probably added during a rewriting of\\nthe page. (Examination of Plate 95 reveals that the text of Plate 94 was first\\netched in the top half of 95 and was probably identical to the re-etched version\\nexcept for this line.)</p></note>'","tn255.1":"b'<note id=\"tn255.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 96 is etched on what was once the lower left quarter\\nof a large plate on which Blake had etched a commercial manifesto for <quote>&#8220;MOORE &amp; Co\\'s Manufactory &amp; Warehouse, of Carpeting and Hosiery\\nChiswell Street.  MOOR-FIELDS&#8221;</quote> in 1797 or I798.</p></note>'","tn257.1":"b'<note id=\"tn257.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">98:11 Sexual Threefold] <span class=\"tei-hi-italic\">mended from</span>\\nSexual Twofold (The plate bears other signs of hasty writing.)</p></note>'","tn258.1":"b'<note id=\"tn258.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">98:34 regenerations] <span class=\"tei-hi-italic\">mended from</span> regenations\\n</p></note>'","tn258.2":"b'<note id=\"tn258.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">98:45 the Covenant of] <span class=\"tei-hi-italic\">mended from</span>\\nthy Covenant (thy Covenant restored in the Morgan copy by pen)</p></note>'","tn258.3":"b'<note id=\"tn258.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">98:48 Sacrifices] The terminal <quote>&#8220;s&#8221;</quote> almost hidden by the decorative border&#8212;but not a true deletion.\\n</p></note>'","tn258.4":"b'<note id=\"tn258.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plate 99 bears traces of an earlier use of the copper\\nfor some architectural and vaguely scenic design, not identified.</p></note>'","tn259.1":"b'<note id=\"tn259.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A reissue of <title level=\"a\">&#8220;For Children&#8221;\\n</title> of 1793, with altered title, amplified inscriptions, and four new\\npages of text (including the Prologue on the title page); 21 plates, extant\\nin five Complete and seven incomplete copies.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     These plates, in\\nline engraving rather than the relief etching of most of Blake\\'s Illuminated\\n Printing, were easily retouched from issue to issue, the later copies being\\nmore and more highly finished.  The revision of text was fairly easy also,\\nand variant earlier and later versions of some lines in the Prologue and <quote>&#8220;Keys&#8221;</quote> are noted.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> The\\nnew title page is undated, though Blake leaves the <quote>&#8220;1793&#8221;</quote> imprint at the foot of the frontispiece and 16 plates of emblems.\\n As late as <quote>&#8220;Novr 22nd 1806&#8221;</quote> when  <quote>&#8220;Henry\\nFuseli&#8221;</quote> was inscribing a gift copy <quote>&#8220;To Harriet\\nJane Moore&#8221;</quote>, it was still the version <title level=\"a\">&#8220;For\\nChildren&#8221;</title> (copy now in the Mellon Collection).  The only known\\ncopy (now lost) with the earliest version <title level=\"a\">&#8220;For the\\nSexes&#8221;</title> was on undated paper; the single copy in a second state\\n(with the later wording only in line 5 of the Prologue) is on 1818 paper;\\nthe third state occurs on paper of 1825; a final state is darker.  It might\\nbe unwise to date the earliest <title level=\"a\">&#8220;Sexes&#8221;</title>\\nversion as late as 1818, though it was certainly a good deal later than 1806.\\n(The script of the captions, though modified to the post-1802 style, shows\\nremnants of the 1793 style; that of the new verses does not.)</p></note>'","tn259.2":"b'<note id=\"tn259.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Finger] fingers 1<span class=\"tei-hi-italic\">st state</span></p></note>'","tn259.3":"b'<note id=\"tn259.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 And the Dead Corpse from] And in the midst of 1<span class=\"tei-hi-italic\">st &amp; 2nd states</span></p></note>'","tn259.4":"b'<note id=\"tn259.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Buried] Hid it 1<span class=\"tei-hi-italic\">st &amp;<span class=\"tei-hi-italic\">\\n 2</span>nd states</span></p></note>'","tn268.1":"b'<note id=\"tn268.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 We stood] I stood 1<span class=\"tei-hi-italic\">st &amp;</span> 2<span class=\"tei-hi-italic\">nd states</span></p></note>'","tn269.1":"b'<note id=\"tn269.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Etched on a single plate; known in six copies, on unwatermarked\\npaper.  The date of about 1820 is conjectural.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The four concluding\\nlines appear in two columns in the etched plate but have previously been transcribed\\nline for line.</p></note>'","tn270.1":"b'<note id=\"tn270.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Two plates of Illuminated Printing; known in four copies,\\ntwo on paper dated 1820 and 1821: but the colophon date is 1822.</p></note>'","tn271.1":"b'<note id=\"tn271.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:14 Life for Life! Life for Life!] The design puts\\ndelete signs on three of the f\\'s <span class=\"tei-hi-italic\">to read</span> Life for Lie! Lie\\nor Life! <span class=\"tei-hi-italic\">in self exposure.</span></p></note>'","tn272.1":"b'<note id=\"tn272.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:28 The Voice of Abels Blood] A picture caption, but\\nalso a stage direction: we hear the Voice as <quote>&#8220;The Curtain falls&#8221;</quote>.</p></note>'","tn272.2":"b'<note id=\"tn272.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:29 Stereotype] Single plate or <quote>&#8220;type&#8221;</quote> of metal, etched or engraved, from which Blake printed.  Blake\\'s\\noriginal examples appear to be the plates of <title level=\"a\">&#8220;All Religions\\nare One&#8221;</title>; this colophon gives them the date of 1788.</p></note>'","tn273.1":"b'<note id=\"tn273.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">There are two known copies of this print, in the Keynes\\nand the Rosenbloom collections; the latter seems to represent a variant state\\nof the plate but is only an offprinting from a wet impression laid face-down\\nupon it.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The inscriptions are engraved in lettering of varying\\nshape and size and angle.  There is no right way to read them&#8212;except\\nall at once and as the frame of the picture.  The present transcript attempts\\na roughly thematic sequence.</p></note>'","tn274.1":"b'<note id=\"tn274.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Goddess, Nature.] <span class=\"tei-hi-italic\">i.e.</span><quote>&#8220;whose\\ngoddess is Nature&#8221;</quote></p></note>'","tn276.1":"b'<note id=\"tn276.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">From the unique ms in the British Museum, in Blake\\'s\\nhand, on 8 foolscap leaves (8v blank), in a cover inscribed by Blake <quote>&#8220;Tiriel / MS. by Mr Blake&#8221;</quote>.  Written about 1789, the ms\\nis a fair copy, with a few false starts or mended words, up through section\\n8, line 4.  The remaining lines are a heavily revised first draft, perhaps\\nof later date; deletions of whole lines in the earlier part may have been\\nmade when the conclusion was being drafted.  Never etched or printed by Blake,\\nhis twelve drawings for the work have been dispersed; nine are reproduced,\\nwith a facsimile of the manuscript, in Bentley\\'s <title level=\"m\"><span class=\"tei-hi-italic\">\\nTiriel</span></title> (Oxford 1967).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The following notes do not include\\nall minor deletions.</p></note>'","tn276.2":"b'<note id=\"tn276.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:1 <span class=\"tei-hi-italic\">A following half-line, del:</span> But\\ndark were his once piercing eyes</p></note>'","tn276.3":"b'<note id=\"tn276.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:6 father] aged father 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn276.4":"b'<note id=\"tn276.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:8 arms] aged arms 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn276.5":"b'<note id=\"tn276.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:19 shrinking] living 1<span class=\"tei-hi-italic\">st rdg del;</span>\\n? shriecking 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn277.1":"b'<note id=\"tn277.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:28 serpents] serpents <span class=\"tei-del\">[?all]</span> 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn277.2":"b'<note id=\"tn277.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:10 <span class=\"tei-hi-italic\">Next line del:</span> The aged father\\n&amp; mother saw him as they sat at play</p></note>'","tn278.1":"b'<note id=\"tn278.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:25 <span class=\"tei-hi-italic\">Next line del, after stanza break:\\n</span> O venerable O most piteous O most woeful day</p></note>'","tn278.2":"b'<note id=\"tn278.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:26 <span class=\"tei-hi-italic\">Next line del:</span> But I can kneel\\ndown at your door.  I am a harmless man</p></note>'","tn278.3":"b'<note id=\"tn278.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:40 Next, a two-line stanza, del:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The aged Tiriel could not speak his heart was full of               \\ngrief</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He strove against his rising passions. but still he                could\\nnot speak</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn278.4":"b'<note id=\"tn278.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:43 <span class=\"tei-hi-italic\">Next line del:</span> Fearing to tell\\nthem who he was. because of the weakness of Har</p></note>'","tn279.1":"b'<note id=\"tn279.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:6 Next, a two-line stanza, del:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Tiriel could scarce dissemble more &amp; his tongue could           \\n    scarce refrain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But still he feard that Har &amp; Heva would die of joy &amp;        \\n       grief.</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn279.2":"b'<note id=\"tn279.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:24 <span class=\"tei-hi-italic\">Next line del:</span> God bless my benefactors.\\nfor I cannot tarry longer</p></note>'","tn279.3":"b'<note id=\"tn279.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:26 Next a three-line stanza, del:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then Mnetha led him to the door &amp; gave to him his               \\nstaff</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Har &amp; Heva stood &amp; watchd him till he enterd the\\n               wood</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And then they went &amp; wept to Mnetha but they soon       \\n        forgot their tears</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn279.4":"b'<note id=\"tn279.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:32 seeks] runs 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn280.1":"b'<note id=\"tn280.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:15 <span class=\"tei-hi-italic\">Written in margin, with a del half-line:\\n</span> Seven years of sorrow then the curse of Zazel</p></note>'","tn280.2":"b'<note id=\"tn280.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:38 running] <span class=\"tei-hi-italic\">inserted above the line</span></p></note>'","tn281.1":"b'<note id=\"tn281.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:48 mean to] must 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn281.2":"b'<note id=\"tn281.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:50 rent] <span class=\"tei-hi-italic\">mended from</span> rend</p></note>'","tn281.3":"b'<note id=\"tn281.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:63 why . . . Tiriel] you see and know your father\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn281.4":"b'<note id=\"tn281.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:71 flesh] limbs 1<span class=\"tei-hi-italic\">st rdg del.</span>  Then\\nfollowed ten lines del:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then Ijim said Lotho.  Clithyma.  Makuth fetch your                father</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Why do you stand confounded thus.  Heuxos why art thou             \\n  silent</span></span><span class=\"tei-line-number\"/></li><pb n=\"815\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          O noble Ijim thou hast brought our father to<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">\\nthe                gates</span>]</span>&lt;our eyes&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That we may tremble &amp; repent before thy mighty knees</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>O we are but the slaves of Fortune. &amp; that most cruel          \\n     man</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Desires our deaths. O Ijim <span class=\"tei-del\">[<span class=\"tei-hi-italic\">tis one whose aged   \\n            tongue</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Decieve the noble &amp; xxxx</span>]</span> if the eloquent\\n               voice of Tiriel</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Hath workd our ruin we submit nor strive against stern             \\n  fate</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He spoke &amp; kneeld upon his knee.  Then Ijim on the             \\n  pavement</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Set aged Tiriel. in deep thought whether these things              \\n were so</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn281.5":"b'<note id=\"tn281.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:74 like] torn like 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn281.6":"b'<note id=\"tn281.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:76 false as] false &amp; <supplied>[as]</supplied><span class=\"tei-hi-italic\">ms</span></p></note>'","tn281.7":"b'<note id=\"tn281.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:79 secret] <span class=\"tei-hi-italic\">preceded by</span> gloom <span class=\"tei-hi-italic\">del</span></p></note>'","tn282.1":"b'<note id=\"tn282.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:5 To raise his] Display thy 1<span class=\"tei-hi-italic\">st rdg del\\n</span> ground] earth 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn282.2":"b'<note id=\"tn282.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:22 sun] slee[p] 1<span class=\"tei-hi-italic\">st rdg, del before completion\\nof word</span></p></note>'","tn282.3":"b'<note id=\"tn282.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:24 Hela] <span class=\"tei-hi-italic\">mended from</span> Hili (as also\\nin 5:26, 6:1, 3, 6).  The first vowel is conjectural but is not &#8220;e&#8221;.\\n The name becomes firmly &#8220;Hela&#8221; by 6:16.</p></note>'","tn282.4":"b'<note id=\"tn282.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:30 stretchd . . . all] &amp; all the children in their\\nsilent beds 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn282.5":"b'<note id=\"tn282.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:31 guilty] ghastly 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn283.1":"b'<note id=\"tn283.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:14 slave] child 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn283.3":"b'<note id=\"tn283.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:41 heavens] (<span class=\"tei-hi-italic\">a late revision</span>) air\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn284.1":"b'<note id=\"tn284.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:49 fail] <span class=\"tei-hi-italic\">mended from</span> fall</p></note>'","tn284.2":"b'<note id=\"tn284.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:7 Some . . . began] They fled away &amp; hid themselves\\nbut some stood still &amp; thus scoffing begun 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn284.3":"b'<note id=\"tn284.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:8 cunning] cunning wretch 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn284.4":"b'<note id=\"tn284.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7:17 woes] life 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn284.5":"b'<note id=\"tn284.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:4 The rest of the ms is written with a different pen\\nand in more hurried script; some time may have elapsed before Blake returned\\nto finish the work.</p></note>'","tn285.1":"b'<note id=\"tn285.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:8 <span class=\"tei-hi-italic\">A following half-line del:</span> Thy\\nGod of love thy heaven of joy</p></note>'","tn285.2":"b'<note id=\"tn285.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:9 Here 12 lines were deleted, the 8th of which reappear\\nin <title level=\"a\">&#8220;Thel\\'s Motto&#8221;</title> in the illuminated <title level=\"m\"><span class=\"tei-hi-italic\">Book of Thel.</span></title></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Dost thou not see that men cannot be formed all alike</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Some nostrild wide breathing out blood. Some close shut up</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In silent deceit. poisons inhaling from the morning rose</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>With daggers hid beneath their lips &amp; poison in their tongue</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Or eyed with little sparks of Hell or with infernal brands</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Flinging flames of discontent &amp; plagues of dark despair</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Or those whose mouths are graves whose teeth the gates of           eternal\\ndeath</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Can wisdom be put in a silver rod or love in a golden bowl</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Is the son of a king warmed without wool or does he cry with         \\n a voice</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of thunder does he look upon the sun &amp; laugh or stretch</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>His little hands into the depths of the sea, to bring forth</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The deadly cunning of the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">sealy tribe</span>]</span>&lt;flatterer&gt; &amp; spread it to the morning</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn285.3":"b'<note id=\"tn285.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:10-11 Lines inserted to replace the 12-line cancel.</p></note>'","tn285.4":"b'<note id=\"tn285.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:19-20 Marginal insertion; &#8220;&amp;c&#8221; must\\nrefer to a passage written elsewhere, not now located.</p></note>'","tn285.5":"b'<note id=\"tn285.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:21 drone] foolish crawling drone 1<span class=\"tei-hi-italic\">st\\nrdg</span></p></note>'","tn285.6":"b'<note id=\"tn285.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8:22 Such was Tiriel] Such is Hypocrisy the idiots wisdom\\n&amp; the wise mans folly 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn285.7":"b'<note id=\"tn285.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Extant only in one set of page proofs ([A]<sup>\\n2</sup>, B-C<sup>4</sup>), now in the Huntington Library.  The work\\nwas never published, and probably never extended beyond the first Book.  Blake\\nmay have corrected earlier proofs: there are relatively few printer\\'s errors,\\nand the punctuation seems Blakean.  For example, in lines 10-11, 29-30, 35-36\\nwe find his use of commas to compel enjambement.  The colon after <quote>&#8220;hopes&#8221;</quote> in line 49 is probably the printer\\'s misreading\\nof Blake\\'s exclamation mark.  The absence of any quotation marks (which were\\nheavily supplied in the previous edition, from a mistaken reliance on a <quote>&#8220;modernized&#8221;</quote> transcript) is characteristic of Blake\\'s\\ntexts.</p><pb n=\"816\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     I have removed an obtrusive hyphen from between <quote>&#8220;Forty&#8221;</quote> and <quote>&#8220;men&#8221;</quote> in line 13.\\n I have emended the obvious printer\\'s errors of <quote>&#8220;Eeternally&#8221;</quote> (line 46), <quote>&#8220;were&#8221;</quote> for <quote>&#8220;wear&#8221;</quote> (76), <quote>&#8220;antientest&#8221;</quote> (83), and <quote>&#8220;Neckar&#8221;</quote> (109 and 125), but have left the consistently dissyllabic <quote>&#8220;Seyes&#8221;</quote> for trisyllabic <quote>&#8220;Sieves&#8221;</quote>,\\nconsidering Blake responsible--as he certainly was for <quote>&#8220;beastial&#8221;</quote> (216).  Correct catchwords appear at the foot of each page through\\n15.</p></note>'","tn289.1":"b'<note id=\"tn289.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">74 bonds] perhaps an error for <quote>&#8220;bands&#8221;</quote> (see lines 253-54).</p></note>'","tn290.1":"b'<note id=\"tn290.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">101 cloud breathing] I emended this to <quote>&#8220;loud\\nbreathing&#8221;</quote> in earlier editions, and it may perhaps be a misprint;\\nyet the idea that war breathes clouds is consistent with the symbolism.  See\\nnote on 15:283.</p></note>'","tn290.2":"b'<note id=\"tn290.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">104.  Lines 116-120 immediately follow in the printed\\nsource.  But a copying error seems to have been made, since the printed sequence\\nskews the interaction among Burgundy, the King, and Necker.  An argument for\\nthe present arrangement (which seems <quote>&#8220;plausible&#8221;</quote>\\nto Bentley [<title level=\"m\"><span class=\"tei-hi-italic\">Writings</span></title> II 807n] and\\ncompelling to me) was presented by William F. Halloran in the January 1968 <title level=\"s\"><span class=\"tei-hi-italic\">Bulletin</span></title> of The New York Public Library. \\n</p></note>'","tn291.1":"b'<note id=\"tn291.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">111 rushing of muskets] Bentley suggests <quote>&#8220;rattling&#8221;</quote> (and Blake does have <quote>&#8220;rattling guns&#8221;</quote> in <title level=\"m\"><span class=\"tei-hi-italic\">Edward the Third</span></title>), but all sorts of things\\nare <quote>&#8220;rushing&#8221;</quote> in this poem, from <quote>&#8220;scales&#8221;</quote> (127) to <quote>&#8220;iron ranks&#8221;</quote> (87).</p></note>'","tn299.1":"b'<note id=\"tn299.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">283 war-living terrors] It has hitherto seemed right\\nto emend this, replacing the hyphen with a comma (Bentley) or a dash--but <quote>&#8220;souls of war&#8221;</quote> may make less sense than souls of warriors,\\ndefined as war-habituated.  I take the sense of the passage thus: Over Fayette\\'s\\nhead shines the fiery soul of Voltaire; over the army Rousseau unfurls his\\nwhite cloud, like a banner, rendering <quote>&#8220;silent&#8221;</quote>\\nthe war-engendered terror in the warriors\\' souls, who are thus able to <quote>&#8220;listen toward Fayette&#8221;</quote> and receive his command of <span class=\"tei-hi-italic\">peace.</span></p></note>'","tn300.1":"b'<note id=\"tn300.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The manuscript, in the British Library, consists of\\n133 pages of titles and text written on 70 large sheets (about 16 1/2 X 12\\n1/2 inches) plus some draft material on two small leaves and a fragment. \\nOf the large sheets, 47 consist of engraved proofs of designs Blake had made\\nfor Young\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Night Thoughts</span></title> in 1795-96\\nand two were made by cutting in half a print of Blake\\'s early engraving, <title level=\"m\"><span class=\"tei-hi-italic\">Edward and Elenor.</span></title> Blake wrote on both\\nsides of most leaves&#8212;including the engraved proofs, which had open spaces\\nwhere Young\\'s text was to be printed.  Drawings intended as illumination were\\nmade on 84 pages (including the backs of proofs), and the engraved designs\\non the proofs seem to have been chosen as reminders of drawings he would include\\nin the perfected manuscript. (The draft material, pages 141-145, is dealt\\nwith in the notes to pp 7, 105, and 106 and at the end of the notes to this\\npoem.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     For a detailed if sometimes confusing account of the ms\\nwith a reproduction of all the pages in half-tone plates, see <title level=\"m\"><span class=\"tei-hi-italic\">Vala or the Four Zoas,</span></title> edited by G. E. Bentley, Jr (Clarendon\\nPress 1963).  In 1981 a facsimile made from infra-red photographs is being\\nprepared, with commentary on the pictures by Cettina Magno and myself.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In pages 1, 3-18, 23-42, begun on clean sheets of paper, we can see that\\nBlake\\'s initial aim was a manuscript in fine copperplate script.  Revisions\\nat first made neatly over erasures or in the wide paragraph breaks maintain\\nthis objective with a modified yet still elegant engraver\\'s hand.  Further\\nrevisions and additions, however, squeezed between lines and spilling into\\nmargins, are in Blake\\'s usual plain hand, as is all the text inscribed on\\nthe blank spaces of the proof pages.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Possibly a complete <title level=\"m\"><span class=\"tei-hi-italic\">Vala</span></title> in copperplate hand was produced\\nbut lay unsold and open to revision which gradually reduced it to a working\\nms.  On the other hand, it may be that the aim to keep each page in copperplate\\nperfection was sustained through a decade or more of labor over the text and\\ndrawings, a descent to ordinary hand on any given page occurring only when\\nthat page<pb n=\"817\"/>                                  became too cluttered\\nwith revisions to be saved as perfect. (By this definition, pages 14-18, 26,\\n33, 40 are unspoiled, and pages 24, 29, 38, 41 have changes suggested in pencil\\nthat could still be perfected by careful erasure and inking: contrariwise,\\nthe minor but effacing revisions on pages 19, 27, 29, 31, 37, 39 may mean\\nthat Blake was giving up.) (See note on p 40, below.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">After Blake\\'s\\ndeath the ms was in loose sheets, but stitch- marks show he had once sewed\\ntogether into one group all the sheets with elegant script and into another\\ngroup those sheets containing pages 43-84 and 111-112, all in his usual hand.\\nPossibly he thought of one group as finished, the other as preliminary, and\\nany existing sheets not stitched as rejects (for example, Night VIIb, when\\nhe thought of replacing it with VIIa).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">At various stages of revision\\nBlake counted his lines in each Night, sometimes by 100s, sometimes by 50s\\nor 10s, and only pages 19-22, 87-90, and 111-116 lack numbering of any sort.\\n But all Nights contain additions made after the latest counting.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> ca 1796-18O7? The <quote>&#8220;1797&#8221;</quote>\\nin the title may mark the beginning of a first fair copy, while pages 141-142\\nrepresent a fragment of a preliminary draft.  The work is named <title level=\"a\">\\n&#8220;the Book of Vala&#8221;</title> in an early, erased stratum of page\\n3; Bentley (p 177) suggests that it may have been <quote>&#8220;originally\\norganized in `Books\\' as a continuation of&#8221;</quote><title level=\"m\"><span class=\"tei-hi-italic\">The First Book of Urizen,</span></title> noting that borrowings from <title level=\"m\"><span class=\"tei-hi-italic\">Urizen</span></title> occur in Nights IV and V and that\\nthese Nights are called <quote>&#8220;the Fourth Book&#8221;</quote> and <quote>&#8220;Book the Fifth&#8221;</quote> on pp 56 and 57.  Also to be noted is\\nthe use of <quote>&#8220;Book&#8221;</quote> for <quote>&#8220;Night&#8221;</quote> in VIIb, p 95.  (But Margoliouth, p 121, argues that the use of <quote>&#8220;Book&#8221;</quote> is a sign of <quote>&#8220;very late&#8221;</quote>\\nindifference&#8212;or <quote>&#8220;a deliberate, but abandoned, idea of giving\\nup the `Nights\\'&#8221;</quote>.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     It has been tempting to suppose\\nthat successive layers of copperplate, modified copperplate, and usual hand\\nrepresent successive and datable stages in the growth of the ms.  On this\\nsupposition all the pages in usual hand should be later than those in copperplate&#8212;and\\nall the latter should have fairly finished drawings.  But the drawings vary\\nin finish throughout. And on certain copperplate pages a distinctly late style\\nappears in the script, marked by the g which Blake adopted after Nov. 1802.\\n On pages 8 and 10 this style appears in modified copperplate hand in revisions\\nmade before clutter had set in; on page 12 the basic layer of text itself\\nis in fine copperplate hand of this late character&#8212;and so is the chapter\\nheading of <quote>&#8220;Night the Sixth&#8221;</quote> on page 67. (It should\\nbe added that I have found no distinguishing marks of a pre-1803 script in\\nany part of the ms, all the other g\\'s being of the dateless, sans-serif variety:\\nThe rule of <span class=\"tei-hi-italic\">g</span> may of course be less invariable than I have\\nsupposed.  At any rate it is safer to conclude that the copperplate pages\\nrange in inception from 1797 to 18O3 than to put them all in the later period.)\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Bentley has found that the sheet on which pages 48-49 were written\\n(at the beginning of Night IV) bears evidence of prior use as a backing-sheet\\nwhen Blake printed Hayley\\'s first Ballad in May 18O2, but his argument (p\\n195) that sheets marred or defective in some such way as this were the last\\nones Blake would use should upset his assumption that none of the pages following\\n49 were inscribed before that date.  As for the date of stitching of either\\nof the groups described above, the second group includes the sheet with the\\nMay 1802 impressions and so cannot have been stitched earlier than that; that\\nneither group can have been stitched earlier than 1803 should be the deduction\\nfrom the graphic evidence of late <span class=\"tei-hi-italic\">g</span>\\'s in the first strata\\nof pages in both groups (12 and 67).  To suppose the other, unpierced pages\\nnot to have been <span class=\"tei-hi-italic\">written</span> before 18O3 would shake all present\\nassumptions.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    Even if an 18O3 date for the copying out of <quote>&#8220;Night the Sixth&#8221;</quote> is accepted, its composition may have\\nbeen much earlier. On the other hand the date of 1804 or later which has been\\naccepted for Night VIII on the basis of allusions to the renewal of war and\\nof strikingly different symbolism or idiom from the main body of the poem\\n(see Margoliouth, p 174) may need correction to <quote>&#8220;much later&#8221;</quote>.  The writing of VIII, at least, and the very late change of the\\npoem\\'s title to <title level=\"a\">&#8220;The Four Zoas&#8221;</title> (a pencil\\nrevision on the main title page not extended to the chapter headings) as well\\nas a good deal of mending and revising, especially in Night I, must have occurred\\nafter Blake had begun if not completed <title level=\"m\"><span class=\"tei-hi-italic\">Milton\\n</span></title> and <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem.</span></title> Bentley\\'s\\ncontention (p 165) that several passages were borrowed from <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem,</span></title> rather than the other way round, is not convincing\\nin respect to passages in <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\n22 and 67-68, but the connections of <title level=\"m\"><span class=\"tei-hi-italic\">Vala,</span></title>\\n1, 21, 99 and <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> 34[38]\\nmay go in both directions.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     It should be recognized, however, that\\nmany apparently late additions to <title level=\"m\"><span class=\"tei-hi-italic\">Vala</span></title>\\nturn out to have been salvaged from the erasure of early layers on the same\\nor other pages.  Since few of these erased early strata have been deciphered,\\nwe cannot be certain how much of the late material is actually new. (See the\\ntextual notes on pages 4, 6, 7, 72, 99.)</p><pb n=\"818\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Readers should\\nbe cautioned against failing back on the all too hypothetical chronological\\ngroupings of Nights and parts of Nights presented in Erdman, 1st edition pp\\n270-271 (on the basis of secondhand evidence and an ignorance of the complexities\\nof the ms).  Nevertheless certain salient historical allusions or sources\\nremain, despite uncertainty as to how long after the event Blake wrote: negotiations\\nconducted between Britain and France, in 1796 and 1797 (but again in 1800\\nand 1801); the Netherlands expedition of 1799; Napoleon\\'s coup d\\'&#233;tat\\na few weeks later; the Peace of Amiens; its rupture.  Readers should also\\nbe cautioned against inaccuracies and special pleading in Bentley\\'s criticism\\nof these groupings (pp 168-170)&#8212;and of course also against exaggerations\\nin my subsequent critique of the Bentley volume (in an article in <title level=\"s\"><span class=\"tei-hi-italic\">The Library</span></title> for 1964).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Bentley\\'s warning\\nthat a second or third addition on one page may have no chronological relation\\nwith a second or third addition on another is well taken&#8212;but frequently\\nignored by all of us.  His assumption that the original copperplate writing\\non all pages represents a single draft may or may not prove to be sound; yet\\nhis transcript obscures the evidence by treating the erased copperplate layer\\nas nonexistent (when he cannot read it) and the first added layer as original.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Margoliouth\\'s attempt to isolate a <title level=\"a\">&#8220;Vala&#8221;\\n</title> text by selecting Blake\\'s <quote>&#8220;fair copy of each Night before\\nerasures, deletions, additions, and changes of order&#8221;</quote> depends\\nheavily on the assumption that all these deduced fair copies (excluding VIII\\nand the first part of IX) somehow constitute a homogeneous text.  He is able\\nto sort out pretty successfully those lines which were in the ms when Blake\\ncounted and numbered his lines by fifties, but not to convince us that all\\nthe counting took place at one time. The result is useful, however, and only\\nmisleading if taken as a really early state of the text or as constituting\\na uniform layer, so to speak.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The complexities of the ms, in short,\\ncontinue to defy analysis and all assertions about meaningful physical groupings\\nor chronologically definable layers of composition or inscription must be\\nunderstood to rest on partial and ambiguous evidence.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The text\\ngiven here is simply that of the latest readings, with deletions occasionally\\nretained (in italics within square brackets) when their omission would leave\\ngaps; when Blake replaced a deleted reading and then deleted the replacement,\\nthe earlier reading has been restored.  The textual notes contain all the\\nerased or deleted readings thus far deciphered (sometimes differing from or\\ngoing beyond the Bentley transcript thanks largely to the use of infrared\\nphotography and strong magnification).  Nights editorially designated VII\\nand VIIb (or VIIa and VIIb) and treated as separate entities in previous editions\\nare here conflated into a single <quote>&#8220;Night the Seventh&#8221;</quote>.\\nBut the distinction between VII and VIIb is indicated in the bracketed note\\nat the head of each page.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Line numbers are given page for page,\\nbut to facilitate use of the Blake <title level=\"m\"><span class=\"tei-hi-italic\">Concordance\\n</span></title> of 1968, which gives line numbers Night for Night as in the\\nKeynes editions, the Keynes numbers are supplied in each page heading, thus\\nbracked: { }.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     A new facsimile edition of <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Four Zoas,</span></title> using improved photography and attempting a plate-by-plate\\ncommentary on the illuminations in the manuscript, is being prepared by Professor\\nCettina Magno of Messina, and myself, with the plates arranged in an order\\ncloser to Blake\\'s than that given the loose ms leaves by the twentieth-century\\nbinder.  The rearrangement involves twelve leaves (twenty-four pages) to produce\\nthe following sequence, giving the traditional arrangement in parentheses:\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><table><row><cell>19(21)</cell><cell>87(95)</cell><cell>95(87)</cell><cell>105(113)</cell><cell>109(105)</cell><cell>113(109)</cell></row><row><cell>20(22)</cell><cell>88(96)</cell><cell>96(88)</cell><cell>106(114)</cell><cell>110(1O6)</cell><cell>114(110)</cell></row><row><cell>21(19)</cell><cell>89(97)</cell><cell>97(89)</cell><cell>107(115)</cell><cell>111(1O7)</cell><cell>115(111)</cell><cell/></row><row><cell>22(20)</cell><cell>90(98)</cell><cell>98(90)</cell><cell>108(116)</cell><cell>112(108)</cell><cell>116(112)</cell></row></table></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This arrangement will put the pictures in a more meaningful\\nsequence, but to adopt it in the present text would be confusing, since Blake\\'s\\npoem moves about (because of his own revisions) in a sequence that does not\\ncorrespond exactly to any sequence of the manuscript leaves.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1: <span class=\"tei-hi-italic\">title</span>] VALA / OR / The Death and Judgement of the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Eternal</span>]</span>&lt;Ancient&gt; Man / a DREAM / of Nine\\nNights / by William Blake 1797 1<span class=\"tei-hi-italic\">st rdg</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The unlocated\\ninscription, <quote>&#8220;The Bible of Hell, in Nocturnal Visions collected.\\n Vol. 1. Lambeth&#8221;</quote>, reported by Ellis and Yeats as written <quote>&#8220;in title-page form&#8221;</quote> on the back of a drawing, may  have\\nbeen an early title for this work consisting of nine nocturnal visions.  (See\\nBentley, <title level=\"m\"><span class=\"tei-hi-italic\">Writings,</span></title> 1677,1735.)\\n</p></note>'","tn300.2":"b'<note id=\"tn300.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">After the quotation from Ephesians, the chapter number\\nis corrected from <quote>&#8220;5&#8221;</quote> to <quote>&#8220;VI&#8221;</quote>, not necessarily by Blake.</p></note>'","tn300.3":"b'<note id=\"tn300.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:1-3 The Song . . . Battle] Syntax and heavy inking\\nmark these lines as a subtitle.  Blake had first made several tries at a six-line\\nintroductory stanza, with erasure on erasure.  Words visible at the line ends\\nof the first version are: (1)<quote>&#8220; . . . <supplied>[wr]</supplied>ath\\nbo<supplied>[ok]</supplied> of Vala&#8221;</quote>; (3) <quote>&#8220;Round&#8221;</quote>; (6) <quote>&#8220;Dream&#8221;</quote>.  A second, partly erased,\\nversion reads, with revisions:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  This is the<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Dirge</span>]</span>&lt;Song&gt;\\nof <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Eno</span>]</span>&lt;Enitharmon&gt; which shook\\nthe heavens with wrath</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And thus beginneth the Book of Vala which Whosoever                reads</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>If with his Intellect be comprehend the terrible                Sentence</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> The heavens <span class=\"tei-del\">[<span class=\"tei-hi-italic\">shall</span>]</span> quake: the earth  <span class=\"tei-del\">\\n [<span class=\"tei-hi-italic\">shall move</span>]</span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">moves</span>]</span>&lt;was moved&gt; &amp; <span class=\"tei-del\">[<span class=\"tei-hi-italic\">shudder</span>]</span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">shudders</span>]</span>&lt;shudderd&gt; &amp; the mountains\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>With all their woods, the streams &amp; valleys: <span class=\"tei-del\">[<span class=\"tei-hi-italic\">wail\\n</span>]</span>&lt;waild&gt; in dismal fear</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">To hear</span>]</span>&lt; Hearing&gt; the <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">Sound</span>]</span>&lt;march&gt; of Long resounding strong\\nheroic verse</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Marshalld in order for the day of intellectual battle</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These lines were numbered 1 2 3 6 7 4 5; later the stanza was reduced\\nto its final 3 lines by another numbering; finally 2-3 (<quote>&#8220;Hearing\\n. . . Battle&#8221;</quote>) were crossed out and rewritten over the erased\\nlines below 1.</p></note>'","tn301.1":"b'<note id=\"tn301.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 4-11 are written over nine erased lines.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:8 no Individual Knoweth nor] Individual Man knoweth not 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn301.2":"b'<note id=\"tn301.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 1-16, 19-28 are written over erasures.  Traces\\nof 19 original lines (in copperplate hand) can be discerned and a few words\\ncan be read: (1) <quote>&#8220;. . . ?oft&#8221;</quote>; (2)<quote>&#8220;?Saying\\n. . . of . . . for . . . of Eternal Life&#8221;</quote>; (3) <quote>&#8220;?Song\\nof . . .&#8221;</quote>; (4) <quote>&#8220;?I ?see . . . of . . . ?Self .\\n. . about&#8221;</quote>; (6) <quote>&#8220;Rejoicing ?so ?amongst . . .&#8221;</quote>; (7) <quote>&#8220;The . . . ?faded ?slept . . .&#8221;</quote>;\\n(8) <quote>&#8220;Till ?far ?dismal . . .  ?four . . . all . . .&#8221;</quote>;\\n(9)<quote>&#8220; . . . a pleasing&#8221;</quote>; (10) <quote>&#8220;?Enion\\n. . .  of ?slavery&#8221;</quote>; (12) <quote>&#8220;. . . ?cloud&#8221;</quote>; (13) <quote>&#8220;?Where . . . the . . .&#8221;</quote>; (18)<quote>&#8220; . . . Enion&#8221;</quote>; (19) <quote>&#8220; . . . the light of\\nday&#8221;</quote>. (Bentley reads 18 and 19 but supposes them to belong to\\nthe second layer of palimpsest.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     This first stratum was erased\\nand covered by 21 lines in modified copperplate hand; finally a third state\\nwas created by the erasure and replacement of the last 12 of these lines by\\n13 new lines (in the same hand) and the revision of a few words in the first\\n9. Six of the erased second stratum lines were repeated elsewhere and can\\nbe verified completely: 10-13 (<quote>&#8220;Arise O Enion . .  . for Lo!\\nI have calmd my seas&#8221;</quote>) are identical to 129:24-27, there crowded\\ninto a stanza break.  Lines 20-21 (<quote>&#8220;All Love is lost . . . Duty\\ninstead of Liberty&#8221;</quote>) reappear as lines 20-21 of the third stratum.\\n Of erased lines 14-19 in the second stratum little can be made out: (14) <quote>&#8220;?The ?warfare . . . ?shy&#8221;</quote>; (16) <quote>&#8220;?He ?fell\\n. . . hid in ?horrible ?caverns of mountains&#8221;</quote>; (18) <quote>&#8220;. . . ?chariot&#8221;</quote>; (19) <quote>&#8220;To . . . of .  .\\n. ?come&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Revisions from second to third state are\\nindicated below:</p></note>'","tn301.3":"b'<note id=\"tn301.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 5 was inserted in ink over partly erased pencil\\nloops covering erased first stratum ink.  Two remnant loops I mistook for\\ndeleting strokes (see previous printings).  N.B.: This correction has involved\\na renumbering of the lines of page 4.</p></note>'","tn301.4":"b'<note id=\"tn301.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Enion O Enion] Enion <span class=\"tei-del\">[<span class=\"tei-hi-italic\">come forth\\n</span>]</span>&lt;O Enion&gt;<span class=\"tei-hi-italic\">latest revision;</span> this\\nchange and <quote>&#8220;O Pity Me&#8221;</quote> in line 9 are additions\\nin a different pen.</p></note>'","tn301.5":"b'<note id=\"tn301.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 We are . . . We] I am . . . I 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn301.6":"b'<note id=\"tn301.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Jerusalem in Silent Contrition O Pity Me] thee Enion\\nin jealous Despair 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn301.7":"b'<note id=\"tn301.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 also . . . Enion] where we may remain for ever alone\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn301.8":"b'<note id=\"tn301.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 hast] <span class=\"tei-hi-italic\">mended from ink</span> has <span class=\"tei-hi-italic\">\\nover pencil</span> hast      sweet Jerusalem] <span class=\"tei-hi-italic\">ink over pencil <supplied>[Enitharmon]</supplied></span></p></note>'","tn301.9":"b'<note id=\"tn301.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Jerusalem] Enitharmon <span class=\"tei-hi-italic\">ms rdg,</span> emended\\non the editorial assumption that Blake accidentally neglected making the same\\nchange here as in lines 9 and 11, and 5:7. (When Jerusalem and Enitharmon\\nare mentioned together in the same manuscript layer, in late additions to\\nthis Night&#8212;see 21:30 and 19:1,5 on pp 311-12&#8212;they have separate\\nroles.  Here, if the name <quote>&#8220;Enitharmon&#8221;</quote> be retained\\nin line 13, we must nevertheless take the pronouns <quote>&#8220;She&#8221;</quote>, and <quote>&#8220;her&#8221;</quote>, in line 14 to refer back to <quote>&#8220;Jerusalem&#8221;</quote> in line 11.)</p></note>'","tn301.10":"b'<note id=\"tn301.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Thy] His 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn302.1":"b'<note id=\"tn302.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">First stratum entirely erased and replaced, but the\\nlast two lines were probably identical to the two lines <quote>&#8220;Arise\\nO Enion . . . rejoice&#8221;</quote> found in the second stratum of page 4\\nand emerging as 129:24-25.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Eden] Beulah 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn302.2":"b'<note id=\"tn302.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 tabernacle for Jerusalem] tabernacle<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">\\nof delight</span>]</span>&lt;for Enitharmon&gt; 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn302.3":"b'<note id=\"tn302.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 then . . .  innocent] and . . . holy 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn302.4":"b'<note id=\"tn302.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 In torment] So saying 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn302.5":"b'<note id=\"tn302.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 gnawing] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn302.6":"b'<note id=\"tn302.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 trembling] ?bright 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.1":"b'<note id=\"tn303.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 dread] sweet 1<span class=\"tei-hi-italic\">st rdg del</span> Repentance\\n&amp; Contrition] false woven bliss 1<span class=\"tei-hi-italic\">st rdg;</span> self woven\\nsorrow 2d <span class=\"tei-hi-italic\">rdg del</span> (Bentley transcript confuses sequence\\nof changes.) Two inserted, then deleted, lines follow:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He spurnd Enion with his foot he sprang aloft in Clouds</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Alighting down from</span>]</span> Alighting in his\\ndrunken joy in a far distant Grove</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn303.2":"b'<note id=\"tn303.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 Dreams] wanderings 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.3":"b'<note id=\"tn303.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 pity &amp; help] help 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.4":"b'<note id=\"tn303.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43 Gate of the Tongue] Gate of Auricular [<span class=\"tei-hi-italic\">\\npower</span>] &lt;nerves&gt; 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn303.5":"b'<note id=\"tn303.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 44-53 were canceled by three diagonal strokes\\nbut later circled in ink.  The evidence that lines thus circled (here and\\non pages 6 and 7) were meant to be restored is convincingly presented by Andrew\\nLincoln in <quote>&#8220;<title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas</span></title>:\\nthe Text of Night I&#8221;</quote> in <title level=\"s\"><span class=\"tei-hi-italic\">Blake:\\nAn Illustrated Quarterly</span></title>, Summer 1978.</p></note>'","tn303.6":"b'<note id=\"tn303.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">46 Love is changed to . . . Hate] ?Alone ?possessed\\nby . . . Fears 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.7":"b'<note id=\"tn303.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">47 All] <span class=\"tei-del\">[<span class=\"tei-hi-italic\">All</span>]</span>&lt;A&gt;<span class=\"tei-hi-italic\">ms rdg;</span> the erasure of <quote>&#8220;All&#8221;</quote>\\nwas evidently a slip: Blake never used the phrase <quote>&#8220;A life&#8221;</quote> in the meaning it would have here.</p></note>'","tn303.8":"b'<note id=\"tn303.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">48 Shadow . . . Soul] remembrance . . . eyes 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn303.9":"b'<note id=\"tn303.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">49 Doubt . . . Repentance] Trouble . . . sorrow 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.10":"b'<note id=\"tn303.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">53 There follow a penciled insert and a deleted line\\nwhich it would replace:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span/></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">But standing on the Rocks her woven shadow glowing\\n          bright</span>]</span></span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">But both are replaced by 6:1-5, a double insertion on that page.</p></note>'","tn303.11":"b'<note id=\"tn303.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Of an erased first stratum of 12 copperplate lines,\\nthe first two can be recovered:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>When wilt thou smile on Tharmas O thou bringer of                golden\\nday</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Arise. O Enion arise! for Lo! I have Calmd my seas</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These continue from the original concluding lines of page 5 and are\\nidentical, except in punctuation, to 129:26-27, their intermediate occurrence\\nbeing in the second stratum of p 4 (see above).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Line 3 of the erased\\nstratum, <quote>&#8220;His woe f . . . the crystal sky&#8221;</quote>, concludes\\nlike 130:14 but begins differently.  Other fragmentary recoveries are: (4) <quote>&#8220;In . . . ?faded in ?his cave&#8221;</quote>; (7) <quote>&#8220;?Luvah\\n. . . Rock&#8221;</quote>; (8) <quote>&#8220;. . . Enion . . . the ?Oaks&#8221;</quote>; (9) <quote>&#8220;. . . ?Children&#8221;</quote>; (12) <quote>&#8220;\\n. . . lovely&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Variants between the second and final\\ntext of the page follow:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 her shining] her silken 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn303.12":"b'<note id=\"tn303.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 fury] joy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn303.13":"b'<note id=\"tn303.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">After line 8 follow 17 lines deleted by diagonal strokes\\nand a grey wash:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Searching for glory wishing that the heavens had                eyes\\nto See</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And courting that the Earth would ope her Eyelids                &amp;\\nbehold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Such wondrous beauty repining in the midst of all                his glory</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That nought but Enion could be found to praise                adore &amp;\\nlove</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Three days in self admiring raptures on the rocks                he flamd</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And three dark nights repind the solitude. but the                third\\nmorn</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Astonishd he found Enion hidden in the darksom Cave</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>She spoke What am I wherefore was I put forth on these              \\n rocks</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Among the Clouds to tremble in the wind in solitude</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Where is the voice that lately woke the desart Where                the\\nFace</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That wept among the clouds &amp; where the voice that shall         \\n      reply</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>No other living thing is here.  The Sea the Earth. the             \\n  Heaven</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Enion desolate where art thou Tharmas O return</span></span><span class=\"tei-line-number\"/></li><pb n=\"821\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Three days she waild &amp; three dark nights sitting among          \\n          the Rocks</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>While the bright spectre hid himself among the ?backing              \\n clouds</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then sleep fell on her eyelids in a Chasm of the                Valley</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Sixteenth morn the Spectre stood before her                manifest</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Erased pencil in left margin beside 14th line: The Jealous</p></note>'","tn303.14":"b'<note id=\"tn303.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9-18] deleted by diagonal strokes but then restored\\nby a circling ink line.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Who art thou . . . shell] An insertion,\\nwith this continuation (later deleted) up the right margin:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Broke\\nfrom thy bonds I scorn my prison I scorn &amp; yet I love The insertion before\\ndeletion was to replace this 1<span class=\"tei-hi-italic\">st rdg:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Art thou not my slave &amp; shalt thou dare</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To smite me with thy tongue beware lest I sting also               \\nthee</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn303.15":"b'<note id=\"tn303.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10-12 If thou . . . past deeds] inserted over erasure.</p></note>'","tn303.16":"b'<note id=\"tn303.16\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 So] conjectural reading of stroke or strokes imperfectly\\ninked</p></note>'","tn303.17":"b'<note id=\"tn303.17\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Thine] Mine 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn304.1":"b'<note id=\"tn304.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Mine] <span class=\"tei-hi-italic\">mended from</span> thine (the Spectre\\nis crowding Enion into the outer world while he invades the infinite within.)\\n</p></note>'","tn304.2":"b'<note id=\"tn304.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 whence I emerged] of death &amp; hell 1<span class=\"tei-hi-italic\">\\nst rdg del;</span> where 2<span class=\"tei-hi-italic\">d rdg del</span></p></note>'","tn304.3":"b'<note id=\"tn304.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17] A deleted line follows:      A sorrow &amp; a fear\\na living torment &amp; naked Victim</p></note>'","tn304.4":"b'<note id=\"tn304.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 for my] for his 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn304.5":"b'<note id=\"tn304.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Page 7 is a thicket of erased and deleted original and\\nadditional lines.  The top block of 9 added lines has been deleted, then restored\\nby an ink circle, then heavily revised; the last of these (line 7 in the present\\ntext) is so crossed out and mended that to restore it Blake has written <quote>&#8220;This line to come in&#8221;</quote> alongside.  The lower half of the\\npage consists of original copperplate writing, with some mending and some\\ndeletion of lines.  The undeleted original lines appear also on p 143 (a smaller\\nleaf but neatly written as if begun as fair copy, perhaps of a draft preceding\\nthe large copperplate pages) and are there revised.  Until recently it has\\nbeen assumed that the revisions of p 143 were later than the final text of\\np 7, but Andrew Lincoln argues convincingly that the final revisions on p\\n7 are later than those on p 143.  In line 10, for instance, the <quote>&#8220;Half\\nWoman &amp; half Spectre&#8221;</quote> was first half <quote>&#8220;Serpent&#8221;</quote> on p 7; On p 143 <quote>&#8220;Serpent&#8221;</quote> was first written\\nand then replaced by <quote>&#8220;beast&#8221;</quote> but not by <quote>&#8220;Spectre&#8221;</quote> (which in the whole context must be the final\\nterm); thus the final p 7 reading, <quote>&#8220;Spectre&#8221;</quote>, is\\nlater than the p 143 revision.  In the evolution of serpent to beast to spectre,\\nthe p 143 revisions constitute a middle or <quote>&#8220;beast&#8221;</quote>\\nstage.  The changes from <quote>&#8220;scaly armour&#8221;</quote> to <quote>&#8220;rocky features&#8221;</quote>, from <quote>&#8220;lovely changing colours&#8221;</quote> to <quote>&#8220;darkly waving colours&#8221;</quote>, and from <quote>&#8220;monster&#8221;</quote> to <quote>&#8220;wonder&#8221;</quote> were\\nthus temporary; in p 7 the Spectre reassumes the bright, scaly, monstrous\\nquality of the Serpent. (In the first edition of this book the revisions of\\np 143 were taken as final text, a mistake now corrected.) (The text of p 143\\nis given at the end of these textual notes on <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Four Zoas</span></title>.) </p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1] Preceded by two lines, mended and then\\nheavily cancelled after Blake\\'s encircling:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Examining the sins of Tharmas I <span class=\"tei-del\">[<span class=\"tei-hi-italic\">have</span>]</span>&lt;soon&gt;                found my own</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>O slay me not thou art his Wrath embodied in Deceit</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn304.6":"b'<note id=\"tn304.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2] an inserted line.</p></note>'","tn304.7":"b'<note id=\"tn304.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 For] But 1<span class=\"tei-hi-italic\">st rdg del,</span>      Under\\nlines 1-3 and the preceding cancelled lines are three erased lines in Blake\\'s\\nusual hand, the last word of the 1st line being <quote>&#8220;threatening&#8221;</quote>.  Partly under these but beginning in the top margin is a pencil\\npassage of six lines, the 1st three legible (but short, as if only beginnings\\nof lines):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>When Tharmas shook his billowy hair</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Two forms of horror howld beneath ?it</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>A male &amp; female witherd</span></span><span class=\"tei-line-number\"/></li></ol><pb n=\"822\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Perhaps of the same vintage is a block of six pencil\\nlines written sideways in the right margin beside the original ink text lines\\n4-10; the left ends of these lines are invisible:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Pourd from fibrous veiny pipes</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Enio Blood from torrent floods melting    \\n          <span class=\"tei-del\"> [<span class=\"tei-hi-italic\">away</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>. . . chalk white rocks</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>spread from heaven to heaven</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>. . . ?monsters howld ?with ?Urizen ?around</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>. . . living joy fills ?albion</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Earliest deletion on p 7 must have been erasure of the 1st six\\nlines in copperplate hand (under lines 7-18 in Bentley\\'s numbering).  All\\nsix were apparently moved to p 5 for the modified copperplate addition there\\nof lines 9-14. and 25.  At least the 4th line is identical to 5:12 except\\nfor punctuation:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And said Return O Wanderer when the day of clouds is o\\'er;</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">and the 5th is a variant of 5:13-14:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>So saying he . . . ?fell . . . into the restless  sea</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">and the 3rd is like 5:11 in beginning with a <span class=\"tei-hi-italic\">T,</span>\\nending with <quote>&#8220;sighs&#8221;</quote>, and having (perhaps) <quote>&#8220;Destiny&#8221;</quote> in its center.  The last word of the 1st could\\nbe <quote>&#8220;head&#8221;</quote>, that of 5:9; the 2nd is illegible but\\nits configuration does not jar with that of 5:10. The 6th erased line is identical\\nto 5:25, so far as can be made out:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Round rolld ?the . . . globe self balanc\\'d</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn304.8":"b'<note id=\"tn304.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4] An inserted line.</p></note>'","tn304.9":"b'<note id=\"tn304.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6] Among wild beasts to roam And thou the delusive tempter\\n1<span class=\"tei-hi-italic\">st rdg del,</span> followed by two cancelled lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">But where is</span>]</span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\nThou art not</span>]</span>&gt;&lt;And art thou&gt; Tharmas all thy\\nSoft delusive beauty cannot</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Tempt me to murder <span class=\"tei-del\">[<span class=\"tei-hi-italic\">honest love</span>]</span>&lt;my own soul&gt;           &amp; wipe my tears &amp; smile</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn304.10":"b'<note id=\"tn304.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 not mine tho] for ah! how 1<span class=\"tei-hi-italic\">st rdg del\\n</span>      Six cancelled lines follow, after a stanza break:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Spectre said Thou sinful Woman. was it thy Desire</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That I should hide thee with my power &amp; delight thee            \\n   with my beauty</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And now thou darknest in my presence. never from my                sight</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Shalt thou depart to weep in secret.  In my jealous                wings</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>I evermore will hold thee when thou goest out or comest             \\n  in</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Tis thou hast darkend all My World O Woman lovely                bane</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Partial text of lines 2 and 3 of this passage (<quote>&#8220;That\\n. . . power &amp; &#8221;</quote>; <quote>&#8220;And now . . . from my sight&#8221;</quote>) occurs on p 144, verso of p 143, and the only words on it.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">After another stanza break, we return to the original copperplate text,\\nbeginning with three deleted lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Thus they contended all the day among the Caves of                Tharmas</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          Twisting in fearful forms &amp; howling &lt;howling harsh\\n               shrieking&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;Howling&gt; harsh shrieking, mingling their bodies\\njoin                in burning anguish</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Page 143 begins with a variant of the last line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;Opening his rifted rocks&gt; mingling <span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\ntheir bodies</span>]</span>&lt;together they&gt; join in burning anguish\\n</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     (The rocks accord with the <quote>&#8220;rocky features&#8221;</quote> of the <quote>&#8220;beast&#8221;</quote> of the middle version;\\nsee below.)</p></note>'","tn304.11":"b'<note id=\"tn304.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 horrible] 1<span class=\"tei-hi-italic\">st and 3rd rdg, del but not\\nerased, p 7; only rdg p</span> 143; terrible 2<span class=\"tei-hi-italic\">d rdg p 7, erased\\n</span> brightness] <span class=\"tei-hi-italic\">p</span> 7; 1<span class=\"tei-hi-italic\">st rdg p</span> 143;\\ndarkness 2<span class=\"tei-hi-italic\">nd rdg p</span> 143 </p></note>'","tn304.12":"b'<note id=\"tn304.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Above the ocean;] <span class=\"tei-hi-italic\">p</span> 7 Shrieking\\nabove the ocean: <span class=\"tei-hi-italic\">p</span> 143; on p 7 <quote>&#8220;Shrieking&#8221;</quote> is inserted before the line but then deleted.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Nature]\\n1<span class=\"tei-hi-italic\">st rdg, erased. and 3rd rdg p</span> 7; Beulah 2<span class=\"tei-hi-italic\">\\nnd rdg del p</span> 7; <quote>&#8220;that&#8221;</quote> and <quote>&#8220;shudder\\'d\\nat&#8221;</quote> are cancelled but not replaced; p 143 reads <quote>&#8220;that\\nnature shudderd at&#8221;</quote>.</p></note>'","tn304.13":"b'<note id=\"tn304.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Spectre] 2<span class=\"tei-hi-italic\">nd rdg p.</span> 7; Serpent\\n1<span class=\"tei-hi-italic\">st rdg, erased, p</span> 7 1<span class=\"tei-hi-italic\">st rdg p</span> 143; beast\\n2<span class=\"tei-hi-italic\">nd rdg p</span>143 lovely changing] <span class=\"tei-hi-italic\">p</span> 7 <span class=\"tei-hi-italic\">and</span> 1<span class=\"tei-hi-italic\">st rdg del p</span> 143; darkly waving 2<span class=\"tei-hi-italic\">nd rdg p</span> 143</p></note>'","tn304.14":"b'<note id=\"tn304.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 poisons] <span class=\"tei-hi-italic\">p</span> 7<span class=\"tei-hi-italic\"> and\\n</span> 1<span class=\"tei-hi-italic\">st rdg del</span> p 143; metals 2<span class=\"tei-hi-italic\">nd rdg p</span>\\n143</p></note>'","tn304.15":"b'<note id=\"tn304.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 scaly armour] <span class=\"tei-hi-italic\">p</span> 7 <span class=\"tei-hi-italic\">\\nand</span> 1<span class=\"tei-hi-italic\">st rdg del</span> p 143; rocky features 2<span class=\"tei-hi-italic\">\\nnd rdg p</span> 143      softening] softning <span class=\"tei-hi-italic\">p</span> 143</p></note>'","tn304.16":"b'<note id=\"tn304.16\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 monster] <span class=\"tei-hi-italic\">p</span> 7<span class=\"tei-hi-italic\"> and\\n</span> 1<span class=\"tei-hi-italic\">st rdg del p</span> 143; wonder 2<span class=\"tei-hi-italic\">nd rdg p</span>\\n143 wandering] wandring <span class=\"tei-hi-italic\">p</span> 143</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 143 continues:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  With <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Serpent</span>]</span>&lt;female&gt; voice \\n&lt;warbling upon                the<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">hills</span>]</span>\\n&amp; hollow vales&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Beauty all blushing with desire a Self enjoying wonder</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(The insertions are written on top of almost illegible erasures, but\\nthe <span class=\"tei-hi-italic\">p</span> and <span class=\"tei-hi-italic\">t</span> of <quote>&#8220;Serpent&#8221;</quote> have left traces in the right places.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 7 continues\\nwith three deleted lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  With <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Serpent</span>]</span>&lt;Spectre&gt; voice\\nincessant                wailing; in incessant thirst</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Beauty all blushing with desire mocking her fell                despair</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Wandering desolate, a wonder abhorr\\'d by Gods &amp; Men</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The revision to <quote>&#8220;Spectre&#8221;</quote> suggests that\\np 143 was put aside before these lines in P 7 were deleted.  Page 143 originally\\ncontinued, after a stanza break:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And thus her voice; &lt;Glory, delight, &amp; sweet            \\n   enjoyment born&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;To mild Eternity shut in a threefold shape delightful&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  To wander in &lt;sweet&gt; solitude &lt;enrapturd&gt;\\nat every                wind</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the break before these three lines and in the bottom margin   below\\nthem are two versions of a passage to be adapted from the  deleted text of\\np 8 and to lead into line 143:11-13 (<quote>&#8220;And thus   her voice&#8221;</quote> et cetera).  In the deletions of p 8 (lines 5-13     following 8:7)\\nEnion broods, after bearing two infants, and     vegetation grows up from\\nthe rough rocks to shelter them. The    revision seems intended to have the\\nvegetation grow up to     shelter Enion before she gives birth to the children.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The version at the bottom of p 143 (possibly written     first)\\nis crowded in like prose, but it may be lined out with    the help of Blake\\'s\\nslashes and capitals.  The initial half     line may have been meant to replace\\nthe preceding terminal half line, <quote>&#8220;a Self enjoying wonder&#8221;</quote> (143:9).  Here is the     version, with instructions to copy everything\\nfrom <quote>&#8220;The b . .  .&#8221;</quote>  to <quote>&#8220;Infolding\\n. . .&#8221;</quote>:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Shining across the ocean /</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Enion brooded groaning the golden rocks vegetate</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The b . . . </span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>to</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Infolding the bright woman from the desolating winds/</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  &amp; thus her voice &amp;</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake is telling himself to follow, the <quote>&#8220;Enion brooded&#8221;</quote> line with the line that follows it (before an insertion) on p 8:\\n</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The barked Oak, the long limbd Beech; the Ches\\'nut                tree;\\nthe Pine.</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">and to copy the next five lines, filled with vegetation and animation,\\nconcluding with:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Infolding the bright Infants from the desolating winds</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;but with <quote>&#8220;the bright woman&#8221;</quote> replacing\\nthe Infants.  Blake subsequently deleted all this version except for the phrase <quote>&#8220;Infolding the bright woman&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    The alternative\\nversion, not deleted, consists of a double line crowded into the stanza break\\nbetween <quote>&#8220;a Self enjoying wonder&#8221;</quote> and <quote>&#8220;And\\nthus her voice&#8221;</quote>. Here the vegetating is more complex, involving\\nseas, rocks, and vortex:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For Enion brooded groaning loud the rough seas                vegetate.</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Golden rocks rise from the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">vorte . .</span>]</span>&lt;vast&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span/></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Possibly the plan was to have this triple vegetating proceed at once\\nto <quote>&#8220;Infolding the bright woman&#8221;</quote> (undeleted portion\\nof the first version): it would make up a full line; and perhaps to conclude\\nas before with <quote>&#8220;Thus her voice&#8221;</quote> et cetera.</p></note>'","tn304.17":"b'<note id=\"tn304.17\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 little Infants wept] <span class=\"tei-hi-italic\">del in pencil,\\n</span> with insertion below the line of three writings and erasings of <quote>&#8220;Then forms of horror howld&#8221;</quote>; deleting line then erased.\\n</p></note>'","tn304.18":"b'<note id=\"tn304.18\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 like richest summer shining] like summer shines 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn304.19":"b'<note id=\"tn304.19\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 bright] <span class=\"tei-hi-italic\">replaced by</span> fierce <span class=\"tei-hi-italic\">above the line;</span> then <quote>&#8220;fierce&#8221;</quote> and\\nthe line deleting <quote>&#8220;bright&#8221;</quote> were erased</p></note>'","tn304.20":"b'<note id=\"tn304.20\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7] Thirteen deleted lines follow:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But those in Great Eternity Met in the Council of God</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>As One Man hovering over Gilead &amp; Hermon</span></span><span class=\"tei-line-number\"/></li><pb n=\"824\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;He is the Good Shepherd He is the Lord &amp; Master&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;To Create Man Morning by Morning to Give gifts at Noon day&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Enion brooded, oer the rocks, the rough rocks                <span class=\"tei-del\">[<span class=\"tei-hi-italic\">?vegetating</span>]</span>&lt;groaning vegetate&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;Such power was given to the Solitary wanderer.&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The barked Oak, the long limbd Beech; the Ches\\'nut                tree;\\nthe Pine.</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Pear tree mild, the frowning Walnut, the sharp                Crab,\\n&amp; Apple sweet,</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The rough bark opens; twittering peep forth little                  \\n  beaks &amp; wings</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Nightingale, the Goldfinch, Robin, Lark, Linnet &amp;            \\n   Thrush</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The Goat leap\\'d from the craggy <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Rock</span>]</span>&lt;cliff&gt;, the Sheep awoke from the mould</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Upon its green stalk rose the Corn, waving innumerable</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Infolding the bright Infants from the desolating winds</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The inserted lines 3-4 derive from an erased passage in p 99,\\nwhich probably derives from <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\n34[38]:23-25; see also p 21.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The revision of line 5 would seem\\nto have been made after and because of the insertion of 6; a date after 1805\\nis suggested by the letter <span class=\"tei-hi-italic\">g</span> in <quote>&#8220;vegetate&#8221;</quote>, which is in Blake\\'s late style.</p></note>'","tn304.21":"b'<note id=\"tn304.21\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8-9 written over two erased copperplate lines.</p></note>'","tn304.22":"b'<note id=\"tn304.22\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-2 And . . . mountains] Lines inked over erasures,\\nbut first written in pencil in top margin, then erased and replaced by a drawing\\nOf Christ in an orb.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The first of three erased copperplate lines\\npreceding line 4 may read, at the end, <quote>&#8220;....embracd for&#8221;</quote> (compare line 25); the second ends <quote>&#8220;....love&#8221;</quote>.</p></note>'","tn304.24":"b'<note id=\"tn304.24\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 7 is penciled over an erased ink line,</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till they had ?drawn the Spectre quite away from             \\n       Enion</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;which reappears slightly varied in 1O9:25-26 in Night VIII,\\nsuggesting that the <quote>&#8220;Spectrous Life&#8221;</quote> revisions\\nof p 7 were made during the writing of VIII.</p></note>'","tn304.25":"b'<note id=\"tn304.25\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 8, first ending <quote>&#8220;her spectrous life\\nin dark despair&#8221;</quote>, may have been started as a replacement of\\n6; it was written after and above the marginal block 9-11, 14-18 which was\\nfirst marked to go after 6 but the, when 7 was inserted, marked to follow\\n7.</p></note>'","tn304.26":"b'<note id=\"tn304.26\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Eno] <span class=\"tei-hi-italic\">written in pencil over</span> Ona\\n</p></note>'","tn304.27":"b'<note id=\"tn304.27\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Seven thousand years] twenty years 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn304.28":"b'<note id=\"tn304.28\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 in every year] in the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">tenty</span>]\\n</span>&lt;Every&gt; years <span class=\"tei-hi-italic\">ms rdg</span>      made windows\\ninto Eden] gave visions ?toward heaven 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn305.1":"b'<note id=\"tn305.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 Eno] <span class=\"tei-hi-italic\">written in pencil over</span> Ona\\n</p></note>'","tn305.2":"b'<note id=\"tn305.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 they kiss\\'d not nor embrac\\'d for shame &amp; fear]\\nThey ?kissd ?not for ?shame &lt;they&gt; embracd not <span class=\"tei-hi-italic\">\\npenciled above the line</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Above 26 is a long pencil insertion\\nrunning into the margin, erased and consisting of three perhaps unconnected\\nfragments, in different strengths of pencil.  The first continues the revision\\nstarted in pencil above 25: <quote>&#8220;Nor kissd nor em<supplied>[braced]</supplied>&#8221;</quote>; the second reads <quote>&#8220;hand in hand <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">in a</span>]</span> Sultry paradise&#8221;</quote>; of the third\\nonly the last two words are certain: <quote>&#8220;?these ?Lovers ?swum the\\ndeep&#8221;</quote>.</p></note>'","tn305.3":"b'<note id=\"tn305.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Below 33, in the margin but guided in, is the heading <quote>&#8220;Night the Second&#8221;</quote>, but <quote>&#8220;End of The First\\nNight&#8221;</quote> comes on p 18 and, after additions, on p 19.  What we\\nnow treat as Night II was probably once headed <quote>&#8220;Night the Third&#8221;</quote>; both before and after that it was headed <quote>&#8220;First&#8221;</quote>, but <quote>&#8220;End of the Second Night&#8221;</quote> is clearly\\nmarked on p 36, and <quote>&#8220;Night the Third&#8221;</quote> begins properly\\non p 37.</p></note>'","tn305.4":"b'<note id=\"tn305.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 But . . . Tharmas) crowded in margin, after and perhaps\\nto replace an inserted but deleted line reading:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>       Nine years they view the turning spheres <span class=\"tei-del\">[<span class=\"tei-hi-italic\">of \\n                   ?Beulah</span>]</span>&lt;reading&gt; the Visions\\nof Beulah</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    (Keynes read <quote>&#8220;living&#8221;</quote> for <quote>&#8220;turning&#8221;</quote>; Bentley mistakes the long <span class=\"tei-hi-italic\">h</span> of <quote>&#8220;Enitharmon&#8221;</quote> from the line below as a <span class=\"tei-hi-italic\">g</span> beginning the 6th word\\nand reads <quote>&#8220;?gleaming&#8221;</quote> and misreads <quote>&#8220;reading&#8221;</quote> as <quote>&#8220;leading&#8221;</quote>, failing to see that the <span class=\"tei-hi-italic\">r</span> is written large to cover the word <quote>&#8220;of&#8221;</quote>; it is a lower case <span class=\"tei-hi-italic\">r</span> writ large.)</p></note>'","tn305.5":"b'<note id=\"tn305.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 fierce] bright 1<span class=\"tei-hi-italic\">st rdg del</span> (whole\\nline palimpsest)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Between 35 and 36 is an erased pencil line beginning <quote>&#8220;While they&#8221;</quote> and ending <quote>&#8220;Harmony&#8221;</quote>.\\n</p></note>'","tn305.6":"b'<note id=\"tn305.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37 our . . . mourn] thy . . . weep 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn305.7":"b'<note id=\"tn305.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 frowning] smiling 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn305.8":"b'<note id=\"tn305.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Dark] Bright 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn305.9":"b'<note id=\"tn305.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 let them] bow they 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn305.10":"b'<note id=\"tn305.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4-5 while . . . discontent] written over erasures</p></note>'","tn305.11":"b'<note id=\"tn305.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7-8 were added, first in pencil then ink, in space\\nafter line 2, then marked to precede line 9.</p></note>'","tn305.12":"b'<note id=\"tn305.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Song . . . Song] Dirge . . . Dirge 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn305.13":"b'<note id=\"tn305.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Fallen] Eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn305.14":"b'<note id=\"tn305.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 woke &amp; flew] wake &amp; fly 1<span class=\"tei-hi-italic\">st\\nrdg (ink) del;</span> woke &amp; flew <span class=\"tei-hi-italic\">erased pencil</span> above\\nline, preceding ink revision of line itself.</p></note>'","tn305.15":"b'<note id=\"tn305.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14-15 are additions within a stanza break, 14 later\\nthan 15. (And the <span class=\"tei-hi-italic\">g</span>\\'s in 14 are in Blake\\'s late serifed\\nstyle.)</p></note>'","tn305.16":"b'<note id=\"tn305.16\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The last seven words of 15 are over an erasure almost\\nlegible.</p></note>'","tn305.17":"b'<note id=\"tn305.17\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     In 16 <quote>&#8220;voice&#8221;</quote> is over\\na word ending in <span class=\"tei-hi-italic\">d.</span></p></note>'","tn306.1":"b'<note id=\"tn306.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Enitharmon darken\\'d in] Vala darkend in her 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn306.2":"b'<note id=\"tn306.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Enitharmon a terror] Enitharmon a Cloud 2<span class=\"tei-hi-italic\">\\nnd rdg;</span> Vala lightning 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn306.3":"b'<note id=\"tn306.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 as Vala] O Vala 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn306.4":"b'<note id=\"tn306.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 over a deleted line almost legible.</p></note>'","tn306.5":"b'<note id=\"tn306.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 followed by deleted passage (evidently replaced by\\n22):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>          If thou drivst all the<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Males</span>]</span>&lt;Females&gt; away  from<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Vala</span>]</span>&lt;Luvah&gt; I will drive all</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Males away from thee</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn306.6":"b'<note id=\"tn306.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 He answer\\'d, darkning more with] Los answer\\'d, darkning\\nwith foul 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn306.7":"b'<note id=\"tn306.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 5-6 are ink over erased ink; an erased pencil\\nversion of 5 is partly visible in the space above it.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 tho] thou 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn306.8":"b'<note id=\"tn306.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Fallen] Eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn306.9":"b'<note id=\"tn306.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Vala,] followed by erasure, perhaps <quote>&#8220;but&#8221;</quote></p></note>'","tn306.10":"b'<note id=\"tn306.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Fallen] Eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the margin are nine lines marked to follow 11 but then deleted:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Refusing to behold the Divine image which all behold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And live thereby. he is sunk down into a deadly sleep</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But we immortal in our own strength survive by stern               \\ndebate</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till we have drawn the Lamb of God into a mortal form</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And that he must be born is certain for One must be All</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And comprehend within himself all things both small &amp;   \\n            great</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>We therefore for whose sake all things aspire to be &amp;     \\n          live</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Will so recieve the Divine Image that amongst the                Reprobate</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He may be devoted to Destruction from his mothers womb</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn306.11":"b'<note id=\"tn306.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 is followed by this inserted and then deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Threaten not me O visionary thine the punishment!</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn306.12":"b'<note id=\"tn306.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 rebellious] free 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn306.13":"b'<note id=\"tn306.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A page requiring further study; some lines that seem\\nto be original copperplate may not be; oddly enough <quote>&#8220;muttering&#8221;</quote> in 7 and <quote>&#8220;golden&#8221;</quote> in 34 have late-style <span class=\"tei-hi-italic\">g</span>\\'s.  The erased line under 3 begins <quote>&#8220;Rejoicing\\nin&#8221;</quote> and ends <quote>&#8220;rejoicing in victory &amp; blood&#8221;</quote>. Inserted line 6, in pencil, has its first word inked over&#8212;in\\nthe same copperplate hand as <quote>&#8220;muttering&#8221;</quote> and <quote>&#8220;golden&#8221;</quote>. (See below.)</p></note>'","tn306.14":"b'<note id=\"tn306.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-3 derive from erased pencil drafts beneath 18-24;\\nin these, line 1 appears unchanged, but <quote>&#8220;the Spirits&#8221;</quote>\\nand <quote>&#8220;an orb of blood!&#8221;</quote> are found in the 2nd pencil\\ndraft, not the first&#8212;where the<pb n=\"826\"/> clarions are plainly Luvah\\'s: <quote>&#8220;A groan was xxxx xxxxly The warlike Clarions / Of Luvah ceasd xxxxx\\nxxxx ?shudderd xxxx ?Orb&#8221;</quote>.</p></note>'","tn306.15":"b'<note id=\"tn306.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 the other] Bentley reads <quote>&#8220;the Man&#8221;</quote>, misled by an uncrossed <span class=\"tei-hi-italic\">t.</span> Not only is <quote>&#8220;the one must have murderd the Man&#8221;</quote> unidiomatic, but it\\nis also a misconstruction of the text: the Eternal Man is weak but not under\\nthreat of murder; it is Los and Vala or Enitharmon, within him, who seek to\\nmurder each other: she sings a Dirge/Song of Death; he smites her and refuses\\nto die; she in turn cries for help from Urizen; <quote>&#8220;And the one\\nmust have murderd the other if he had not descended&#8221;</quote>.</p></note>'","tn307.1":"b'<note id=\"tn307.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 he eyed the Prince] he Urizen eyed 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn307.2":"b'<note id=\"tn307.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10-31 are marginal additions in two blocks, the first\\nconsisting of 10-17, 30-31, but with a guide line after 17 leading in the\\nblock 18-29.  Keynes and Bentley ignore the line, though Bentley notes it\\nyet keeps 30-31 as if 18-19.  Keynes copes with the bad transition this leaves\\nto 32 ff by arbitrarily moving 24 down to a position between 29 and 32.</p></note>'","tn307.4":"b'<note id=\"tn307.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27-28 are crowded in as a single line running into the\\nmargin, but scansion indicates the division required</p></note>'","tn307.5":"b'<note id=\"tn307.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 Rejoicing in the Victory . . . blood] Bentley (p\\n168) makes much of the fact that this is an <quote>&#8220;addition written\\nover an erased pencil line&#8221;</quote>, jumping to the conclusion that <quote>&#8220;it is clear that the original passage had nothing to do with either\\nvictory or war&#8221;</quote>: but the full context, at every stage of the\\nms, is of deadly strife between male and female, a Dirge or Song of Death,\\nand a Urizenic victory.  And note the original reading of line 3.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> \\n   Erasures in the gap after 9 include a two-line variant Of 23 (<quote>&#8220;.\\n. . I am God from Eternity to Eternity / Obey thy Lord . . .&#8221;</quote>).\\nIn the adjacent right margin are six erased line segments, <quote>&#8220;.\\n. . hands Pity not Vala / ?Pity ?not Luvah / ... / ... / &amp; these / ...&#8221;</quote>, apparently a draft for 14-16.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Below 34 is an erased pencil\\nline beginning <quote>&#8220;A&#8221;</quote> and ending <quote>&#8220;of\\nEnitharmon&#8221;</quote>; in the adjacent margin is a second line in four\\nsegments, the first, conjecturally, <quote>&#8220;Luvah said&#8221;</quote>.\\n</p></note>'","tn307.6":"b'<note id=\"tn307.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 40-43 were inserted&#8212;to stop the duel pictured\\non this page and to reverse the drift.</p></note>'","tn307.7":"b'<note id=\"tn307.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44 nervous] bloody <span class=\"tei-hi-italic\">inserted but erased\\nrdg</span> Both <quote>&#8220;fleshly&#8221;</quote> and <quote>&#8220;nervous&#8221;</quote> are written over erasures.</p></note>'","tn308.1":"b'<note id=\"tn308.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 But] The ?shades of 1<span class=\"tei-hi-italic\">st rdg del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     Lines 4-10 are inserted, partly in a stanza break and partly in the margin;\\nBentley treats 8-10 as a late addition to this addition&#8212;apparently on\\nthe basis of imagery (<quote>&#8220;Luvah robes of blood&#8221;</quote>).\\n</p></note>'","tn308.2":"b'<note id=\"tn308.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Luvahs] Luvah <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn308.3":"b'<note id=\"tn308.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-12 first read:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The purple night the crimson morning &amp; the golden day           \\n    ?descended</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>?While the clear changing atmosphere display\\'d green                fields\\namong</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(But <quote>&#8220;While&#8221;</quote> may be <quote>&#8220;Where&#8221;</quote>.)</p></note>'","tn308.4":"b'<note id=\"tn308.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Above 16 are two erased pencil segments with a blank\\nbetween:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But monstrous delusion ?invaded      wrath ?enterd his              \\n world of love</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn308.5":"b'<note id=\"tn308.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Above 19 is an erased pencil line running into the right\\nmargin:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In beauty love &amp; scorn ?the ?earthbound bride &amp;             \\n  bridegroom ?sulk</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn308.6":"b'<note id=\"tn308.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 thousand thousand spirits] orbits high <span class=\"tei-hi-italic\">\\nmarginal rdg erased;</span> demons by the thousands out of a golden cloud xxxx\\nxxx 2<span class=\"tei-hi-italic\">nd marginal rdg erased:</span> whole line del, then del erased\\n</p></note>'","tn308.7":"b'<note id=\"tn308.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Bright Souls] ?Elements <span class=\"tei-hi-italic\">penciled above\\nbut erased</span></p></note>'","tn308.8":"b'<note id=\"tn308.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Ephraim . . . to Zion] The Mountain . . . to the Mountain\\n1<span class=\"tei-hi-italic\">st rdg del,</span> but the revisions and lines of deletion are\\nin faint pencil and may have been erased</p></note>'","tn308.9":"b'<note id=\"tn308.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Men] <span class=\"tei-hi-italic\">mended from</span> men</p></note>'","tn308.10":"b'<note id=\"tn308.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Valleys] <span class=\"tei-hi-italic\">mended from</span> valleys</p></note>'","tn309.1":"b'<note id=\"tn309.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 dark] ?weak 1<span class=\"tei-hi-italic\">st rdg del</span> (whole\\nline palimpsest)</p></note>'","tn309.2":"b'<note id=\"tn309.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 Let us plat a] Let ?us light 1<span class=\"tei-hi-italic\">st rdg\\nerased,</span> as if Blake thought first to have the Cities call for fires (see <title level=\"m\"><span class=\"tei-hi-italic\">Song of Los</span></title> 6:20)</p></note>'","tn309.3":"b'<note id=\"tn309.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 Children] <span class=\"tei-hi-italic\">mended from</span> children\\n</p></note>'","tn309.4":"b'<note id=\"tn309.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Human] <span class=\"tei-hi-italic\">mended from</span> human</p></note>'","tn309.5":"b'<note id=\"tn309.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Siez\\'d] ?he ?was siezd 1<span class=\"tei-hi-italic\">st rdg erased\\n</span></p></note>'","tn309.6":"b'<note id=\"tn309.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 Horse] <span class=\"tei-hi-italic\">mended from</span> horse</p></note>'","tn309.7":"b'<note id=\"tn309.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Mighty] Eternal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn309.8":"b'<note id=\"tn309.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 By night nor] To ?light ?the 1<span class=\"tei-hi-italic\">st rdg\\nerased</span></p></note>'","tn309.9":"b'<note id=\"tn309.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 Thou] <span class=\"tei-hi-italic\">mended from</span> thou <span class=\"tei-hi-italic\">\\nor</span> then</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     (When Ellis and Yeats were sorting the leaves of the\\nmanuscript, in 1891, they could not find where to put the leaf bearing pages\\n15-16.  Blake, who had numbered p 14 <quote>&#8220;12&#8221;</quote> and p\\n17 <quote>&#8220;13&#8221;</quote>, must have created pp 15-16 as an insert\\nbut not added page numbers.  Ellis put this leaf at the end, numbering it\\n69 (having written <quote>&#8220;68&#8221;</quote> on p 139).  In the top\\nmargin of p is he wrote: <quote>&#8220;(a separate sheet: It cannot be placed\\nas its sequel is missing.) E.J.E. [Edward J. Ellis]&#8212;1891.&#8221;</quote>\\n Thirteen years later he wrote, beside this, <quote>&#8220;Perhaps it is all\\nan insertion designed to preceed `Enion blind &amp; age bent wept upon the\\ndesolate wind,&#8212;(373 in the 1st printed numbering [i.e. the 1893 text]&#8212;suggestion\\nof Mr F G Fleay 1904&#8221;</quote>.  He was right, and in the next numbering\\nof the ms folios it was marked <quote>&#8220;8&#8221;</quote>.)</p></note>'","tn310.1":"b'<note id=\"tn310.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Enion] And Enion 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn310.2":"b'<note id=\"tn310.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4] over erased line: <quote>&#8220;Why.........  &amp;\\n. .&#8221;</quote></p></note>'","tn310.3":"b'<note id=\"tn310.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 waving] the waving 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn310.4":"b'<note id=\"tn310.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 howl] howls 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn310.5":"b'<note id=\"tn310.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 summers] the summers 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn310.6":"b'<note id=\"tn310.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 but he know not that] he knows not that the 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn310.7":"b'<note id=\"tn310.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-12] <span class=\"tei-hi-italic\">over erased line</span> End of the\\nFirst Night</p></note>'","tn310.8":"b'<note id=\"tn310.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 <span class=\"tei-hi-italic\">followed by</span> End of The First Night\\n</p></note>'","tn310.9":"b'<note id=\"tn310.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Pages 19-22 are bound out of order; the conjectural\\narrangement 21-22, 19-20 made by Keynes and Bentley seems acceptable</p></note>'","tn311.1":"b'<note id=\"tn311.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 One] <span class=\"tei-hi-italic\">mended from</span> one (the second\\n\"one\" being overlooked)</p></note>'","tn311.2":"b'<note id=\"tn311.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 the Mountain of Snowdon] Mount Gilead 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn311.3":"b'<note id=\"tn311.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Albion He] Shiloh he 1<span class=\"tei-hi-italic\">st rdg mended</span></p></note>'","tn311.4":"b'<note id=\"tn311.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Beulah] <span class=\"tei-hi-italic\">mended from</span> beulah</p></note>'","tn311.5":"b'<note id=\"tn311.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Conways Vale] Beth Peor 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn311.6":"b'<note id=\"tn311.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 O] <span class=\"tei-hi-italic\">mended from</span> o</p></note>'","tn311.7":"b'<note id=\"tn311.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Atlantic] deep 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn312.1":"b'<note id=\"tn312.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 oer] round 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn312.2":"b'<note id=\"tn312.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 is] will soon 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn312.3":"b'<note id=\"tn312.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 are] will be 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn312.4":"b'<note id=\"tn312.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 led] let <span class=\"tei-hi-italic\">ms</span> the indefinite] all\\nnations 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn312.5":"b'<note id=\"tn312.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 High Snowdon] Mount Gilead 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn313.1":"b'<note id=\"tn313.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 followed by <quote>&#8220;End of The First Night&#8221;</quote>; the further addition on the verso, page 20, is in pencil and may\\nhave been finally rejected by Blake; serpentine spirals drawn in crayon, apparently\\nover the writing, may mean deletion.</p></note>'","tn313.2":"b'<note id=\"tn313.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;No satisfactory position in the text has\\nbeen devised for this page&#8221;</quote>, says Bentley (p 20).  See preceding\\nnote.</p></note>'","tn313.3":"b'<note id=\"tn313.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Beulah] Eternity 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn313.4":"b'<note id=\"tn313.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Gates] <span class=\"tei-hi-italic\">mended from</span> gates</p></note>'","tn313.5":"b'<note id=\"tn313.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 consuming] tending 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn313.6":"b'<note id=\"tn313.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     title] Night the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Third</span>]\\n</span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">First</span>]</span>&gt;&lt;<span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">First</span>]</span>&gt;<span class=\"tei-hi-italic\">ms,</span> never written <quote>&#8220;Second&#8221;</quote>, though the <title level=\"a\">&#8220;End of the\\nSecond Night&#8221;</title> is declared on p 36.  This would have been Third\\nwhen the Second began on p 9, q.v. It was evidently twice tried and rejected\\nas First.      </p></note>'","tn313.7":"b'<note id=\"tn313.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Albion] The Man 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn313.8":"b'<note id=\"tn313.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Porches] Ears 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn313.9":"b'<note id=\"tn313.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6] line crossed in pencil for deletion, and replacement\\nwritten in the right margin, then deleting lines and replacement thoroughly\\nerased, The line leaves traces: <quote>&#8220;?Remember ?O ?Urizen / Cxxxg\\nxxdxding / xxxvns&#8221;</quote></p></note>'","tn313.10":"b'<note id=\"tn313.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     7-8] ink over pencil, within a stanza break. \\nBlake first wrote and erased a different text for 8, ending <quote>&#8220;of\\nfallen man&#8221;</quote>; his next pencil text was followed verbatim in ink.\\n</p></note>'","tn313.11":"b'<note id=\"tn313.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Exulting at the voice that calld him from the Feast\\nof envy 1<span class=\"tei-hi-italic\">st &amp;final rdg</span>] Indignant at the voice that\\ncalld him from the Feast of love 2<span class=\"tei-hi-italic\">nd rdg</span><quote>&#8220;Exulting&#8221;</quote> and <quote>&#8220;envy&#8221;</quote> were lined through in pencil,\\nand <quote>&#8220;Indignant&#8221;</quote> and <quote>&#8220;love&#8221;</quote>\\nwritten in pencil in the left and right margins; then these words and the\\ndeleting lines were erased.</p></note>'","tn":"b'<note id=\"tn\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 followed by erased pencil:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Above him he xxx Jerusalem ?in ?the bloody ?Heaven as               \\nxxx xxx his eyes</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn314.1":"b'<note id=\"tn314.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     5 great Work master] lord of ?day 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn314.2":"b'<note id=\"tn314.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     9 Urizen] the lord 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn314.3":"b'<note id=\"tn314.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2] A pencil line, followed by erased pencil lines in\\nright margin.</p></note>'","tn314.4":"b'<note id=\"tn314.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6-33] An insertion beginning in a stanza break and continuing\\nin the right margin (obviously fair copy from a working draft).</p></note>'","tn314.5":"b'<note id=\"tn314.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11] Blake first wrote <quote>&#8220;Fled&#8221;</quote>\\nat the end of this line, then deleted it and began his new line with this\\nword.</p></note>'","tn317.1":"b'<note id=\"tn317.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 is not properly spliced back to the original passage;\\na linking line, with a verb for the <quote>&#8220;While&#8221;</quote> clause,\\nmust have been dropped in transcribing from working notes.</p></note>'","tn317.2":"b'<note id=\"tn317.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35] Antecedent of <quote>&#8220;they&#8221;</quote>\\nis the human leopards, tygers (and horses) of lines 1-5, line 34 having originally\\nfollowed 5.</p></note>'","tn317.3":"b'<note id=\"tn317.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Valas King] Luvahs Lord 1<span class=\"tei-hi-italic\">st rdg erased\\n</span></p></note>'","tn317.4":"b'<note id=\"tn317.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Till] But <span class=\"tei-hi-italic\">revision, erased while wet\\n</span>  Dragon] <span class=\"tei-hi-italic\">mended from</span> de<supplied>[<span class=\"tei-hi-italic\">for\\n</span>demon?]</supplied></p></note>'","tn318.1":"b'<note id=\"tn318.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 O Lamb] I ?die 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn318.2":"b'<note id=\"tn318.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10-12] written over two erased lilies, the first perhaps\\nbeginning <quote>&#8220;Albion&#8221;</quote></p></note>'","tn318.3":"b'<note id=\"tn318.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 was love but] am love &amp; 1<span class=\"tei-hi-italic\">st rdg\\n</span> (above this line is an erased insertion beginning <quote>&#8220;And\\nUrizen who&#8221;</quote>; it may have been identical to 15 in its first or\\nits revised form)</p></note>'","tn318.4":"b'<note id=\"tn318.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     17 delusion] terror 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn318.5":"b'<note id=\"tn318.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2] written over erased pencil, beginning under <quote>&#8220;from&#8221;</quote> with a word that may be <quote>&#8220;Los&#8221;</quote></p></note>'","tn318.6":"b'<note id=\"tn318.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-24] marginal insertion      11 Man] <span class=\"tei-hi-italic\">\\nmended from</span> Men</p></note>'","tn318.7":"b'<note id=\"tn318.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 darksom] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn318.8":"b'<note id=\"tn318.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 pyramid] globe <span class=\"tei-hi-italic\">mended</span> to Globe\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn318.9":"b'<note id=\"tn318.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 center] center 1<span class=\"tei-hi-italic\">st rdg del;</span> basement\\n2<span class=\"tei-hi-italic\">nd rdg del</span> (the deletion of <quote>&#8220;center&#8221;</quote> was a strong ink stroke not easily erased)</p></note>'","tn318.10":"b'<note id=\"tn318.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 Sons] <span class=\"tei-hi-italic\">mended from</span> sons</p></note>'","tn319.1":"b'<note id=\"tn319.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Fallen] Eternal 1<span class=\"tei-hi-italic\">st rdg erased;</span>\\nFallen 2<span class=\"tei-hi-italic\">nd rdg;</span> Ancient 3<span class=\"tei-hi-italic\">rd rdg pencil erased\\n</span></p></note>'","tn319.2":"b'<note id=\"tn319.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Cubes] Globes 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn319.3":"b'<note id=\"tn319.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 condensing] together 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn319.4":"b'<note id=\"tn319.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 wondrous] golden 1<span class=\"tei-hi-italic\">st del</span>  Central\\nDomes] centr f[orm] 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn319.5":"b'<note id=\"tn319.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 are] <span class=\"tei-hi-italic\">mended from</span> were (or perhaps\\nvice versa) Mountains] <span class=\"tei-hi-italic\">mended from</span> mountains</p></note>'","tn319.6":"b'<note id=\"tn319.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 White] bright 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn320.1":"b'<note id=\"tn320.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 Please] <span class=\"tei-hi-italic\">mended from</span> pleasd</p></note>'","tn320.2":"b'<note id=\"tn320.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 misty] cloudy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn320.3":"b'<note id=\"tn320.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43 returnd] descended 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn320.4":"b'<note id=\"tn320.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9-10 are written in margin at this place, though not\\nmarked to go in; put after 16 by Keynes and (formerly) Bentley</p></note>'","tn321.1":"b'<note id=\"tn321.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3-4 deleted but then marked <quote>&#8220;To come in&#8221;</quote></p></note>'","tn321.2":"b'<note id=\"tn321.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 But] For 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn321.3":"b'<note id=\"tn321.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 sorrow &amp; care] songs &amp; joy 1<span class=\"tei-hi-italic\">\\nst rdg erased</span></p></note>'","tn321.4":"b'<note id=\"tn321.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Cubed . . . window square] Circled . . . infinite\\norb 1<span class=\"tei-hi-italic\">st rdg del.</span>  The second reading is erased; yet it is\\nsupported by the reference back to <quote>&#8220;Cubes&#8221;</quote> and <quote>&#8220;window&#8221;</quote> in 33:4-5.  If ears are porches, mouth, nose,\\nand eyes had better be doors and windows; yet the concept of micromacrocosm\\nis better expressed in <quote>&#8220;infinite orb immoveable&#8221;</quote>,\\nwith its matching of the oxymoron in <quote>&#8220;primum mobile&#8221;</quote>.\\n If Blake hesitated to choose either reading, an editor hesitates to reject\\neither.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     12 walls &amp; cielings]   arches all 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn321.5":"b'<note id=\"tn321.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 is written over an erased line ending <quote>&#8220;?within&#8221;</quote></p></note>'","tn321.6":"b'<note id=\"tn321.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Sorrowing . . . to sow] Then . . . forth to sow 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn321.7":"b'<note id=\"tn321.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Cubes] <span class=\"tei-hi-italic\">mended from</span> cubes; orbs 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn321.8":"b'<note id=\"tn321.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 World] <span class=\"tei-hi-italic\">mended from</span> world</p></note>'","tn321.9":"b'<note id=\"tn321.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Heaven walled round] <span class=\"tei-hi-italic\">over erasure;</span>\\nintermediate draft, above the line reads:<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">the ?heavens &lt;?were&gt; walld</span>]</span></p></note>'","tn321.10":"b'<note id=\"tn321.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 comforted saw] <span class=\"tei-hi-italic\">over erasure;</span> draft\\nabove line is possibly identical.  The erased words may have been <quote>&#8220;in comfort saw&#8221;</quote>: an <span class=\"tei-hi-italic\">i</span> dot and an <span class=\"tei-hi-italic\">f</span> are in the right places.</p></note>'","tn321.11":"b'<note id=\"tn321.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-15 written over four revised and erased lines, traces\\nof which are: <quote>&#8220;And ?Luvah Iding fly / R      rejoicing &amp;\\ntriumph / S    falling / A     walkd     of the Mundane Egg&#8221;</quote>. \\n</p></note>'","tn322.1":"b'<note id=\"tn322.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Body] The <span class=\"tei-hi-italic\">B</span> curiously mended, perhaps\\nmerely from <span class=\"tei-hi-italic\">b</span>   Abyss] <span class=\"tei-hi-italic\">mended from</span> abyss\\n</p></note>'","tn322.2":"b'<note id=\"tn322.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 sorrow &amp; care] songs &amp; joy 1<span class=\"tei-hi-italic\">\\nst rdg erased;</span> eternal fear 2<span class=\"tei-hi-italic\">nd rdg,</span> written below\\nthe line and then erased</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Immediately below 18 Blake wrote lines\\n22-26 followed by 19-21; then, while 18 ended with <quote>&#8220;eternal fear&#8221;</quote>, he put an X after it and another X in front of what was to be line\\n19, to indicate insertion of 19-21 after 18.  Later he put <quote>&#8220;1&#8221;</quote> after the first X, <quote>&#8220;2&#8221;</quote> before the second\\nX, and <quote>&#8220;3&#8221;</quote> before line 22, to confirm the final\\nsequence. (Bentley\\'s <quote>&#8220;missing section&#8221;</quote> may be a\\nghost.)</p></note>'","tn322.5":"b'<note id=\"tn322.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 number weight] weight &amp; measure 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn322.6":"b'<note id=\"tn322.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 unornamented pillar] ornamented pillar square 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn322.7":"b'<note id=\"tn322.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 strength] pow<supplied>[er]</supplied> 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn322.8":"b'<note id=\"tn322.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 season] spring 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn322.9":"b'<note id=\"tn322.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 right angled] their 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn322.10":"b'<note id=\"tn322.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 Scalene] &amp; oblong 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn322.11":"b'<note id=\"tn322.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 hard subdued] fructifying 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn322.12":"b'<note id=\"tn322.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Erased pencil lines under 2-4 and in right margin (partly\\nobscured by an <quote>&#8220;Ellis&#8221;</quote> note):</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Laughing\\n&amp; mocking Luvah ?breaking <supplied>[word from an unrelated layer of ms?]</supplied> in the woes of Vala <supplied>[Bentley\\'s <quote>&#8220;womb of\\nVala&#8221;</quote>]</supplied></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     But soon <span class=\"tei-del\">[<span class=\"tei-hi-italic\">for\\nthem</span>]</span> ?he ?formd the lovely limbs of <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Enion</span>]\\n</span> Enitharmon     xxx &amp; to lamentation of Enion ?answer for fear</p></note>'","tn322.13":"b'<note id=\"tn322.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Below 3 are two layers of erased pencil, the first\\nending <quote>&#8220;for Vindication of Urizens world&#8221;</quote>, the\\nsecond beginning <quote>&#8220;Thy name is familiar&#8221;</quote>.</p></note>'","tn322.15":"b'<note id=\"tn322.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 For] Now 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn322.16":"b'<note id=\"tn322.16\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Elemental] <span class=\"tei-hi-italic\">mended from</span> elemental\\n</p></note>'","tn322.17":"b'<note id=\"tn322.17\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Beneath 16-17 are about 11 erased pencil lines, the\\nfirst beginning <quote>&#8220;X<span class=\"tei-del\">[<span class=\"tei-hi-italic\">And oft</span>]</span>&lt;thus&gt; she wails&#8221;</quote>, the next two like 16-17 (<quote>&#8220;And Los said.  Lo the Lilly . . . / Reproach thee &amp; the .....&#8221;</quote>), but the rest apparently different from final text.</p></note>'","tn323.1":"b'<note id=\"tn323.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23-24 Secure . . . fury] words inserted above the single\\nline beginning <quote>&#8220;Enitharmon&#8221;</quote> and ending <quote>&#8220;infolds&#8221;</quote>; spacing and meter suggest the proper distribution.\\n</p></note>'","tn323.2":"b'<note id=\"tn323.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 Howl . . . thine] <span class=\"tei-hi-italic\">over erased words\\n</span></p></note>'","tn323.3":"b'<note id=\"tn323.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 sleep] sleeps 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn323.4":"b'<note id=\"tn323.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 written over erased line</p></note>'","tn323.5":"b'<note id=\"tn323.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">49 written over erased line</p></note>'","tn323.6":"b'<note id=\"tn323.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">56-57 began as one line, <quote>&#8220;She sang Oer\\nLos.  I seize the sphery harp I strike the strings&#8221;</quote>; above the\\nsecond portion Blake then added <quote>&#8220;reviving . . . terrible&#8221;</quote> and below the first portion <quote>&#8220;But thus she sang&#8221;</quote>, making the present two lines.  He forgot to move the stop after <quote>&#8220;Los&#8221;</quote>, where it marked the beginning of the song to come,\\nto its proper new position after <quote>&#8220;sang&#8221;</quote>, but I\\nhave done so.</p></note>'","tn324.1":"b'<note id=\"tn324.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">94 reviving] delighted 2<span class=\"tei-hi-italic\">nd rdg erased</span></p></note>'","tn324.2":"b'<note id=\"tn324.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Erased pencil above 97 and in margin: <quote>&#8220;?From\\n?Ahanias woe all xxxx xxxx only wrath &amp; Envy follows in xxxx their fxxxds\\n/ Urizen saw and axxxxx&#8221;</quote>.</p></note>'","tn324.3":"b'<note id=\"tn324.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">99 Enion] <span class=\"tei-hi-italic\">written over</span> she</p></note>'","tn324.4":"b'<note id=\"tn324.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">100 Thus Enion] And oft she 1<span class=\"tei-hi-italic\">st rdg;</span>\\nAnd thus she 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn325.1":"b'<note id=\"tn325.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14-15 <span class=\"tei-hi-italic\">written over</span> End of the Second\\nNight <span class=\"tei-hi-italic\">erased</span></p></note>'","tn326.1":"b'<note id=\"tn326.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Spectrous]   terrible 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn326.2":"b'<note id=\"tn326.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">title] <quote>&#8220;Third&#8221;</quote> is written\\nover one or two erasures, possibly in the sequence.<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Third\\n</span>]</span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">Fourth</span>]</span>&gt;&lt;Third&gt;. Perhaps at one time Night 11 began on P 7, II was Third,\\nIII was Fourth.</p></note>'","tn326.3":"b'<note id=\"tn326.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Me]    thy Wife, that 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn326.4":"b'<note id=\"tn326.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 I Embrace . . . wet My . . . my] Embraces . . . wets\\nher . . . her 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn326.5":"b'<note id=\"tn326.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Thou sitst in harmony for God hath set thee over\\nall 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn326.6":"b'<note id=\"tn326.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Ahania] shadow <span class=\"tei-hi-italic\">penciled above; both rdgs\\ndel</span></p></note>'","tn326.7":"b'<note id=\"tn326.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 but . . . Decree) &amp; all my Kingly power 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn326.8":"b'<note id=\"tn326.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Vala shall] ?That Vala ?may 1<span class=\"tei-hi-italic\">st rdg;\\n</span> But Vala shall 2<span class=\"tei-hi-italic\">nd rdg</span> (the <quote>&#8220;But&#8221;</quote> now redundant)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">NB: Some penciled revisions in Ahania\\'s speech\\n(which runs from 38:15 through 42:17) adapt it for use in <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> 43:33-82 as a speech by two <quote>&#8220;fugitives&#8221;</quote>.  Changes (e.g. of pronouns to plural) that only disrupt the text\\ncannot have been intended for <title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas\\n</span></title> and are here noted but not adopted.  Insertion of the name <quote>&#8220;Albion&#8221;</quote>, however, does suit Blake\\'s latest intentions\\nfor this poem, as we know from its revised title.</p></note>'","tn326.9":"b'<note id=\"tn326.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Leave . . . Light]    replacing two deleted lines:\\n  Raise then thy radiant eyes to him raise thy obedient hands      And comforts\\nshall descend from heaven into thy darkning clouds</p></note>'","tn326.10":"b'<note id=\"tn326.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 To forge] over deletion</p></note>'","tn327.1":"b'<note id=\"tn327.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Ancient] Eternal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn327.2":"b'<note id=\"tn327.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Darkning] Eternal 1<span class=\"tei-hi-italic\">st rdg erased;</span>\\nFallen 2<span class=\"tei-hi-italic\">nd rdg erased</span></p></note>'","tn327.3":"b'<note id=\"tn327.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 thee . . . thy] the . . . with 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn327.4":"b'<note id=\"tn327.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 and 40:1 are lightly lined through in pencil; excluded\\nfrom <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> (see <span class=\"tei-hi-italic\">\\nJ</span> 43:35-36).</p></note>'","tn327.5":"b'<note id=\"tn327.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 In] Of 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn327.6":"b'<note id=\"tn327.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Man] <span class=\"tei-hi-italic\">mended from</span> man</p></note>'","tn327.7":"b'<note id=\"tn327.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Shadow] <span class=\"tei-hi-italic\">mended from</span> shadow</p></note>'","tn327.8":"b'<note id=\"tn327.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 I . . . my heart .  . . me] We . . . our hearts .\\n. . us <span class=\"tei-hi-italic\">pencil revision</span> for <span class=\"tei-hi-italic\">J</span></p></note>'","tn327.9":"b'<note id=\"tn327.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 I] We <span class=\"tei-hi-italic\">pencil revision</span> for <span class=\"tei-hi-italic\">\\nJ</span> Slumberous] Eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn327.10":"b'<note id=\"tn327.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 written in stanza break, over erased line identical\\nto unrevised 10</p></note>'","tn327.11":"b'<note id=\"tn327.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2-3 <span class=\"tei-hi-italic\">ms rdg:</span> that shadowy Spirit of\\nthe <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Eternal</span>]</span>&lt;Fallen&gt; One &lt;Albion&gt; / Luvah, decended . . . ; <span class=\"tei-del\">[<span class=\"tei-hi-italic\">the Eternal\\nMan</span>]</span> arose &lt;In terror&gt;&lt;Albion rose&gt;<span class=\"tei-hi-italic\">The wish</span> to change <quote>&#8220;the One&#8221;</quote>\\nto <quote>&#8220;Albion&#8221;</quote> carried out elsewhere on the page,\\nwas halted here by the awkward juxtaposition of <quote>&#8220;Albion/Luvah&#8221;</quote> that would result; the earlier reading (<quote>&#8220;One&#8221;</quote>) is not deleted, and Keynes is right to call <quote>&#8220;Albion&#8221;</quote> an alternate reading, but the insertion of <quote>&#8220;Albion&#8221;</quote> in the <span class=\"tei-hi-italic\">FZ</span> was a late development.</p></note>'","tn327.13":"b'<note id=\"tn327.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Awful] Eternal 1<span class=\"tei-hi-italic\">st rdg;</span> Fallen\\n2<span class=\"tei-hi-italic\">nd rdg erased</span></p></note>'","tn327.14":"b'<note id=\"tn327.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5-9] Ahania, speaking parenthetically to Urizen, as\\nin 18; pencil bracket in margin directs Blake to exclude these lines from <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> (J43[29]), as he did, running\\ndirectly from 4. to 10.  (Bentley, 1978, p 1134., gets the message confused\\nand mistakenly moves 10 to precede 5-9, thus giving these lines to the wrong\\nspeaker.)</p></note>'","tn327.15":"b'<note id=\"tn327.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Eyes] <span class=\"tei-hi-italic\">mended from</span> eyes</p></note>'","tn328.1":"b'<note id=\"tn328.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 I] We <span class=\"tei-hi-italic\">pencil rdg</span>   Albion] the\\nEternal 1<span class=\"tei-hi-italic\">st rdg;</span> the Falln One, 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn328.3":"b'<note id=\"tn328.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Love] <span class=\"tei-hi-italic\">mended from</span> love</p></note>'","tn328.4":"b'<note id=\"tn328.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 mighty Albion] Eternal Man 1<span class=\"tei-hi-italic\">st rdg;\\n</span> Ancient Man 2<span class=\"tei-hi-italic\">nd rdg, not del</span></p></note>'","tn328.5":"b'<note id=\"tn328.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Albion] Man 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn328.6":"b'<note id=\"tn328.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 the Fallen Man) the Eternal Man 1<span class=\"tei-hi-italic\">st\\nrdg;</span> Albion <span class=\"tei-hi-italic\">pencil, partly erased</span></p></note>'","tn328.7":"b'<note id=\"tn328.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The last of the pages in copperplate hand on new paper;\\nBentley notes that <quote>&#8220;The modified copperplate band strangely turns\\ninto the most beautiful copperplate hand at the end of the tenth line&#8221;</quote>; but the modified hand is over original copperplate, erased.</p></note>'","tn328.8":"b'<note id=\"tn328.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7-8 were first written in pencil in the margin, then\\nin ink in a stanza break.</p></note>'","tn328.9":"b'<note id=\"tn328.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 &amp;] they <span class=\"tei-hi-italic\">penciled above but erased\\n</span></p></note>'","tn328.10":"b'<note id=\"tn328.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 I saw that] the Spirits 1<span class=\"tei-hi-italic\">st rdg erased\\n</span>; I saw that <span class=\"tei-hi-italic\">penciled above and erased</span>, then inked\\nin line</p></note>'","tn328.11":"b'<note id=\"tn328.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Beside 11-12 in the margin is the material for two\\nlines that might have been meant to follow <quote>&#8220;now the Human Blood\\nfoamd high&#8221;</quote> but were never fitted in:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Albion closd the Western Gate &amp; / shut America out by           the\\nAtlantic / for a Curse and hidden horror / and an           altar of  victims\\nto Sin / &amp; Repentance</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn328.12":"b'<note id=\"tn328.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17] In the following stanza break and in the margin\\nis this pencil draft of lines the <quote>&#8220;fugitives&#8221;</quote> speak\\nin <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem:</span></title> Whether this is Jerusalem\\nor Babylon we know not   All is confusion   All is tumult &amp; we alone escaped <span class=\"tei-hi-italic\">Beneath this</span> is an erased pencil draft:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>?Then    labour ended     love for Vala</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Our hearts sick    we     on his Rock</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>We fled from ?Jerusalem ?after ?the Merciful Lord &amp;     \\n          Saviour</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn328.13":"b'<note id=\"tn328.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 From] for <span class=\"tei-hi-italic\">ms rdg, a slip</span></p></note>'","tn328.14":"b'<note id=\"tn328.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 hand] <span class=\"tei-hi-italic\">mended from</span> had</p></note>'","tn329.1":"b'<note id=\"tn329.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 shuddering] darkning 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn329.2":"b'<note id=\"tn329.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 roared] reared 1<span class=\"tei-hi-italic\">st rdg mended</span>  \\nsulphureous <span class=\"tei-hi-italic\">written</span> suphuireous <span class=\"tei-hi-italic\">in haste</span></p></note>'","tn330.1":"b'<note id=\"tn330.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Struggling to utter the voice]  To take the limbs\\nof Man 1<span class=\"tei-hi-italic\">st rdg erased,</span> a mistaken skipping of a line in\\ntranscription</p></note>'","tn330.2":"b'<note id=\"tn330.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 his voice of Thunder rolld]  the voice of Tharmas\\nrolld 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn331.1":"b'<note id=\"tn331.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     5 Hope] Joy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn331.2":"b'<note id=\"tn331.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 <span class=\"tei-hi-italic\">written over erased line:</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">H    d s Tharmas ?rolling ?his thundring seas Encompassd thee</p></note>'","tn331.3":"b'<note id=\"tn331.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 How . . . fled] And Tharmas said All my hope I thought &lt;Enion&gt; for ever gone 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn331.4":"b'<note id=\"tn331.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 beneath] upon 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn331.5":"b'<note id=\"tn331.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     22 over] <span class=\"tei-hi-italic\">for</span> over me?</p></note>'","tn332.1":"b'<note id=\"tn332.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This page bears, as Bentley discovered, <quote>&#8220;a\\nfaint impression of mirror-printing: `Ballad the First\\', &amp;c.&#8221;</quote>\\nfrom p 9 of <title level=\"m\"><span class=\"tei-hi-italic\">Ballads Relating to Animals</span></title>\\nby William Hayley, for which Blake made engravings dated 1 June 1802.  Bentley\\n(p 162) deduces that the sheet was used as backing when Blake printed the\\nBallad and only later used as ms paper.  His further deduction or assertion\\nthat <quote>&#8220;There is no evidence to suggest that any of the succeeding\\npages [of <title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas</span></title>] were transcribed <span class=\"tei-hi-italic\">before</span> page 48&#8221;</quote> is contradicted by his own argument\\n(on pp 194-195 on <quote>&#8220;Anomalous pages <supplied>[i.e.  leaves]</supplied>&#8221;\\n</quote>) to the effect that such imperfect leaves as this would have been\\navoided by Blake until he reached the end of his supply of perfect leaves.\\nThe discovery, in short, helps date pages 47-48, but it also seems to mark\\nthem as a late insertion. (Bentley does not count 47-48 among the anomalies.\\nHis categories consist of odd-sized leaves; <quote>&#8220;make-shift&#8221;</quote> leaves made of two overlapping pieces of paper but otherwise of good\\nsize and good enough to have been used for <title level=\"m\"><span class=\"tei-hi-italic\">\\nNight Thoughts</span></title> proofs&#8212;for all the leaves under discussion\\nare proofs made in 1796, with one possible exception, and available for ms\\nuse any time thereafter; three sheets that were once folded together horizontally;\\none with a small patch in the inner margin.  In another group Bentley counts\\nas <quote>&#8220;very late&#8221;</quote> a sheet cut into two leaves bearing\\nBlake\\'s 1793 engraving of <title level=\"m\"><span class=\"tei-hi-italic\">Edward &amp; Elenor\\n</span></title> on one side.  Yet leaf 47-48 is described (p 4-8 n) as having\\nvertical <quote>&#8220;creases . . . as if [from] a great weight&#8221;</quote><quote>\\n&#8220;made after the <title level=\"m\"><span class=\"tei-hi-italic\">Night Thoughts</span></title>\\nengraving was printed, but after <supplied>[sc. before?]</supplied> the <title level=\"m\"><span class=\"tei-hi-italic\">Vala</span></title> writing . . .&#8221;</quote>. Presumably\\nthe creases were made by the weight of the press and before ms use, or the\\nwhole argument collapses; elsewhere Bentley is fairly confident that the writing <quote>\\n&#8220;appears to be <span class=\"tei-hi-italic\">on top of</span> the printing&#8221;</quote>\\n(p 162 n 1); he apparently also means us to connect the <quote>&#8220;creases&#8221;</quote> with the process which made <quote>&#8220;a regular indentation .\\n. . where Blake\\'s copperplate repeatedly pressed the paper&#8221;</quote>.\\n These creases and indentation surely qualify the leaf for inclusion among\\nsuch <quote>&#8220;anomalous&#8221;</quote> leaves as the three once folded;\\nthe transferred printing would seem to put it rather further along the scale\\ntoward the very imperfect end.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Another kind of evidence that a\\nsucceeding page was transcribed <span class=\"tei-hi-italic\">before</span> pages 47-48 is the\\nstriking fact that p 57, the title of Night The Fifth, is so early it first\\nread <quote>&#8220;Book&#8221;</quote> (<span class=\"tei-hi-italic\">erased</span> and written <quote>&#8220;Night&#8221;</quote>), while no such early wording occurs on the title\\nof <quote>&#8220;Night The Fourth&#8221;</quote> on p 47.</p></note>'","tn332.2":"b'<note id=\"tn332.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     13 Eternal] Anci<supplied>[ent]</supplied> 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn332.3":"b'<note id=\"tn332.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 solemn] dismal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn332.4":"b'<note id=\"tn332.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 griding] dismal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn333.1":"b'<note id=\"tn333.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 seeing] answerd 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn333.2":"b'<note id=\"tn333.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 abhorrence] <span class=\"tei-hi-italic\">followed by</span> eternal <span class=\"tei-hi-italic\">del</span></p></note>'","tn333.3":"b'<note id=\"tn333.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 dread] great 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn333.4":"b'<note id=\"tn333.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11] written over an apparently nonvariant draft of 12</p></note>'","tn334.1":"b'<note id=\"tn334.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 dreary] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn334.2":"b'<note id=\"tn334.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 solid] <span class=\"tei-hi-italic\">mended from</span> sold</p></note>'","tn334.3":"b'<note id=\"tn334.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Vala] <span class=\"tei-hi-italic\">mended from</span> Valan   The six\\noccurrences of such mending are on pages of rapid fair-copying; the mending\\nis current and does not represent a change of name but a slip; perhaps from\\nthe influence of other names of emanations, Enion, Enitharmon.  See 59:5,\\n19; 63:13; 83:12.</p></note>'","tn334.4":"b'<note id=\"tn334.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Urizen] U <span class=\"tei-hi-italic\">mended from</span> L (for Luvah)\\n</p></note>'","tn335.1":"b'<note id=\"tn335.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Trumpets Horns &amp; Clarions] <span class=\"tei-hi-italic\">mended\\nfrom</span> trumpets horns &amp; clarions</p></note>'","tn336.1":"b'<note id=\"tn336.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Ladles huge] lables 1<span class=\"tei-hi-italic\">st rdg del</span>,\\nerror of rapid transcription</p></note>'","tn336.2":"b'<note id=\"tn336.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 heated] pourd 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn336.3":"b'<note id=\"tn336.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 brain] <span class=\"tei-hi-italic\">mended from</span> brains. <span class=\"tei-hi-italic\">Line followed by deletion:</span> Round the branches of his heart</p></note>'","tn337.1":"b'<note id=\"tn337.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 in] <span class=\"tei-hi-italic\">mended from</span> as</p></note>'","tn337.2":"b'<note id=\"tn337.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10-15] added at bottom of page, over erased closing <quote>&#8220;End of The Fourth Night&#8221;</quote>.  Text originally continued\\nwith <quote>&#8220;In terrors Los . . . Abyss&#8221;</quote> (16-31, moved\\nbelow); but this block was bracketed to go at the end of p 56 . After line\\n9 is inserted the instruction: <quote>&#8220;The Council of God &amp;c as\\nbelow. to immensity 31 lines&#8221;</quote>; at the end of p 56, before the\\nnew colophon, is written: <quote>&#8220;In terrors &amp;c &lt;to Abyss&gt; as 31 lines above&#8221;</quote>.</p></note>'","tn337.3":"b'<note id=\"tn337.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-16] over six erased lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>?And ?in ?five days of Great Eternity</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The                               Eternal Death</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then ?Jesus</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Then all                         ntrtion</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then all the Space of Empyrean ?playd in       Song</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Witherd with ?silent ?compassion after endless ?war</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn337.4":"b'<note id=\"tn337.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Albion] Man 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn337.5":"b'<note id=\"tn337.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18] inserted, over a  deleted earlier insertion.</p></note>'","tn338.1":"b'<note id=\"tn338.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Starry Wheels] Deep beneath 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn338.2":"b'<note id=\"tn338.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27] written over erased: <quote>&#8220;The End of the\\nFourth Book&#8221;</quote>; followed by instruction: <quote>&#8220;In terrors &lt;to Abyss&gt; as 31 lines above&#8221;</quote>.</p></note>'","tn338.3":"b'<note id=\"tn338.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 with noises] in noises 1<span class=\"tei-hi-italic\">st rdg</span>,\\nerror of copying from <span class=\"tei-hi-italic\">Book of Urizen</span></p></note>'","tn338.4":"b'<note id=\"tn338.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23] <span class=\"tei-hi-italic\">followed by instruction</span> Bring\\nin here the Globe of Blood as in the B of Urizen (a reference to <span class=\"tei-hi-italic\">\\nUrizen</span> 18; Blake in pp 54-55 has been adapting <span class=\"tei-hi-italic\">Urizen</span>\\nchapters IV-V).  Editors have shirked their duty heretofore, but Blake plainly\\nwanted the <span class=\"tei-hi-italic\">Urizen</span> lines inserted here; I have put them within\\neditorial brackets and treated two lines as one to suit the <span class=\"tei-hi-italic\">\\nFour Zoas</span> meter&#8212;and renumbered the lines that follow.</p></note>'","tn338.6":"b'<note id=\"tn338.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 fro] <span class=\"tei-hi-italic\">mended from</span> from</p></note>'","tn338.7":"b'<note id=\"tn338.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30 shriek] <span class=\"tei-hi-italic\">mended from</span> shrieks</p></note>'","tn338.8":"b'<note id=\"tn338.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 With] written over On</p></note>'","tn338.9":"b'<note id=\"tn338.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     colophon] End of the Fourth [<span class=\"tei-hi-italic\">Book\\n</span>] Night      At bottom of page is this erased pencil:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Christs Crucifix shall be made an excuse for Executing Criminals</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn338.10":"b'<note id=\"tn338.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">title]<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">Book</span>]</span>&lt;Night&gt; The Fifth (I argue above that the correction of <quote>&#8220;Book&#8221;</quote> to <quote>&#8220;Night&#8221;</quote> seems evidence of early draft;\\nit may, however, be only a careless slip in a relatively late stage of the\\nwork; Blake in these pages is writing rapid fair copy from presumably heavily\\nrevised sheets; if he had already begun to write <title level=\"m\"><span class=\"tei-hi-italic\">\\nMilton,</span></title> in Books, such a slip would be easy.) (Note that the\\ncolophon on p 56, written first of the several for Night IV, reads simply <quote>&#8220;Night&#8221;</quote>.) </p></note>'","tn339.1":"b'<note id=\"tn339.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 dreary] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn339.2":"b'<note id=\"tn339.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 shrunk] <span class=\"tei-hi-italic\">written</span> shrink (symptom\\nof rapid copying)</p></note>'","tn339.3":"b'<note id=\"tn339.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Nadir] <span class=\"tei-hi-italic\">written</span> Nader (or just an\\nundotted <span class=\"tei-hi-italic\">i</span>)</p></note>'","tn339.4":"b'<note id=\"tn339.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 &amp; fro &amp;] <span class=\"tei-hi-italic\">written</span> &amp; fro\\n&amp; &amp;</p></note>'","tn339.5":"b'<note id=\"tn339.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 new born] youthful 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn339.6":"b'<note id=\"tn339.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Urizen cast] When Urizen cast 2<span class=\"tei-hi-italic\">nd but\\ncanceled rdg</span></p></note>'","tn339.7":"b'<note id=\"tn339.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 Discord began then] Discord began &amp; 1<span class=\"tei-hi-italic\">\\nst rdg</span>; Then Discord began 2<span class=\"tei-hi-italic\">nd rdg</span> firmament is <span class=\"tei-hi-italic\">misspelled</span> firmaent</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">An erasure of 5 lines circled\\nin ink begins under 24-25:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The demons ?howld round his Chariot ?raging ?Luvah                Emp</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In clouds of     ?tent       Abyss</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Was Luvah      he stood ?glowing in the dark flame</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Around the Abyss efiantly &lt;?shout<supplied>[ing]</supplied>&gt; xxxxx                all his Demons</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of hope &amp; fear then sing the same song around the              \\n glowing bed</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the left margin of the 3rd and 4th lines Blake wrote <quote>&#8220;This\\nto be before&#8221;</quote>.</p></note>'","tn340.1":"b'<note id=\"tn340.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Vala] <span class=\"tei-hi-italic\">mended from</span> Valan; so also\\nin line 19</p></note>'","tn340.2":"b'<note id=\"tn340.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 round red Orc] of the deep &amp; 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn340.3":"b'<note id=\"tn340.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Extinction] <span class=\"tei-hi-italic\">mended from</span> extinction\\n</p></note>'","tn341.1":"b'<note id=\"tn341.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 griding] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn341.2":"b'<note id=\"tn341.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 Calld] <span class=\"tei-hi-italic\">subject omitted:</span> he <span class=\"tei-hi-italic\">or</span> they</p></note>'","tn341.3":"b'<note id=\"tn341.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 acursed] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn341.4":"b'<note id=\"tn341.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 lament] rejoice 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn341.5":"b'<note id=\"tn341.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 a fiery] with fiery 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn342.1":"b'<note id=\"tn342.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 strength in] strength rejoice 1<span class=\"tei-hi-italic\">st rdg\\n</span>, skipping by mistake</p></note>'","tn342.2":"b'<note id=\"tn342.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 it] <span class=\"tei-hi-italic\">mended from</span> its</p></note>'","tn343.1":"b'<note id=\"tn343.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Golgonooza] G <span class=\"tei-hi-italic\">mended from</span> g</p></note>'","tn343.2":"b'<note id=\"tn343.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 deadly] dismal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn343.3":"b'<note id=\"tn343.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Vala] <span class=\"tei-hi-italic\">mended from</span> Valan</p></note>'","tn343.4":"b'<note id=\"tn343.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 dreary] dismal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn343.5":"b'<note id=\"tn343.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Tho] <span class=\"tei-hi-italic\">mended from</span> Uri (for Urizen,\\nbeginning next line)</p></note>'","tn343.6":"b'<note id=\"tn343.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5] in the noon] with the noon 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn343.7":"b'<note id=\"tn343.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     9 to] <span class=\"tei-hi-italic\">mended from</span> into</p></note>'","tn344.1":"b'<note id=\"tn344.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 Saying O] Saying S 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn344.2":"b'<note id=\"tn344.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 &amp; said] Saying 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn344.3":"b'<note id=\"tn344.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">colophon: Night] Book 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn344.4":"b'<note id=\"tn344.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The <quote>&#8220;g&#8221;</quote> in the title has\\na rightward serif, dating it after 1802. </p></note>'","tn345.1":"b'<note id=\"tn345.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Woman] W <span class=\"tei-hi-italic\">mended from</span> w</p></note>'","tn345.2":"b'<note id=\"tn345.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 current] river 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn345.3":"b'<note id=\"tn345.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1] Then Urizen raisd his spear. but they reard up a\\nwall of rocks 1<span class=\"tei-hi-italic\">st rdg</span>; the two clauses were then numbered <quote>&#8220;2&#8221;</quote> and <quote>&#8220;1&#8221;</quote> to reverse their\\norder, and the conjunctions changed.</p></note>'","tn346.1":"b'<note id=\"tn346.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Live] mended</p></note>'","tn346.2":"b'<note id=\"tn346.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 End] Cease 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn346.3":"b'<note id=\"tn346.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30 dreary] dismal 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn347.1":"b'<note id=\"tn347.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10] In the margin is a rhymed couplet in crayon, not\\nmarked           for entry:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till thou dost injure / the distrest</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Thou shalt never have peace / within thy breast</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn347.2":"b'<note id=\"tn347.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17] Followed by 3  deleted lines, the first replacing\\nthe           second:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Not so closd up the Prince of Light now darkend                wandring\\namong</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;For&gt; Urizen beheld the terrors of the Abyss wandring  \\n             among</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Ruind Spirits once his Children &amp; the Children of           \\n    Luvah</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn347.3":"b'<note id=\"tn347.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37 Some ?as columns of fire &amp; of water . . . in\\nlength 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn347.4":"b'<note id=\"tn347.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">38 length] breadth 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn347.5":"b'<note id=\"tn347.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">45 ff] In the following rearrangement of lines on pages\\n70-71 I follow Keynes\\'s interpretation of the series of bracketings on those\\npages; the textual fit hardly allows an alternative.</p></note>'","tn348.1":"b'<note id=\"tn348.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 his] their 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn348.2":"b'<note id=\"tn348.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 iron . . . rain] eternal . . . snow 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn348.3":"b'<note id=\"tn348.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 clay] slime 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn348.4":"b'<note id=\"tn348.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 his] <span class=\"tei-hi-italic\">mended from</span> him</p></note>'","tn348.5":"b'<note id=\"tn348.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37 gloomy] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn349.1":"b'<note id=\"tn349.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2-9 are written over an erasure of 7 1/2 lines which\\nprove to be identical to the last lines on this page and the first on the\\nnext (72:34-39; 73:1-2), where they make a better textual fit.  The general\\npace of the writing, everywhere on these pages, is rapid fair copy.  The erased\\nlines would not have fitted where they were first written; the new lines were\\nnot freshly created; the best explanation is that Blake inadvertently began\\ncopying the wrong passage, noticed his error in the middle of the 8th line,\\nand rectified it at once.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     (The erased passage begins <quote>&#8220;O\\nwhat a world is here&#8221;</quote> and ends <quote>&#8220;Upon the green\\nplains&#8221;</quote>.</p></note>'","tn350.1":"b'<note id=\"tn350.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 destruction] confusion 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn350.2":"b'<note id=\"tn350.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 bosoms] bowels 1<span class=\"tei-hi-italic\">st rdg del</span> This\\nline is an insertion in a stanza break; its introduction of mountain riches\\nprepares for the change in the next line.</p></note>'","tn350.3":"b'<note id=\"tn350.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     16 So . . . iron] So Saying he began to form of\\ngold silver &amp; [<span class=\"tei-hi-italic\">brass</span>] iron 1<span class=\"tei-hi-italic\">st rdg</span>;\\nthen <quote>&#8220;Saying&#8221;</quote> was deleted and <quote>&#8220;dig&#8221;</quote> was inserted above <quote>&#8220;form&#8221;</quote> but without\\ndeletion of the latter word. The reason for removing <quote>&#8220;Saying&#8221;</quote> must have been to gain an extra metrical foot; the intention must\\ntherefore have been to retain both <quote>&#8220;dig&#8221;</quote> and <quote>&#8220;form&#8221;</quote>.  Of the possible alternative readings, <quote>&#8220;to dig &amp; form&#8221;</quote> or <quote>&#8220;to dig, forming&#8221;</quote>, I have adopted the latter as more characteristic.</p></note>'","tn350.4":"b'<note id=\"tn350.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 feet] <span class=\"tei-hi-italic\">mended from</span> foot</p></note>'","tn350.5":"b'<note id=\"tn350.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 bursts] <span class=\"tei-hi-italic\">mended from</span> burstings</p></note>'","tn351.1":"b'<note id=\"tn351.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 Snows] ?Enion 1<span class=\"tei-hi-italic\">st rdg del</span>, a slip\\n</p></note>'","tn351.2":"b'<note id=\"tn351.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 Urizen] U <span class=\"tei-hi-italic\">written over</span> O (a slip?)\\n</p></note>'","tn351.3":"b'<note id=\"tn351.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 by] with 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn352.1":"b'<note id=\"tn352.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Shadow] <span class=\"tei-hi-italic\">mended from</span> Shade</p></note>'","tn352.2":"b'<note id=\"tn352.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 him] his <span class=\"tei-hi-italic\">ms rdg</span> 6      11-12 are\\nwritten over erased lines which prove to be identical to 13-14; evidently\\na slip in copying</p></note>'","tn352.3":"b'<note id=\"tn352.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 shores] deeps 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn352.4":"b'<note id=\"tn352.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 gorg d] <span class=\"tei-hi-italic\">mended from</span> gord</p></note>'","tn352.5":"b'<note id=\"tn352.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">There are two sections in Blake\\'s ms each headed <quote>&#8220;Vala / Night the Seventh&#8221;</quote> and by editorial convention\\nidentified as VIIa (pp 77-90) and VIIb (91-98).  The text of VIIa, when first\\ninscribed as fair copy from drafts not extant, ended at 85:22, fitting fairly\\nwell the fair-copy opening of VIIb (91:1) but not smoothly.  From the nature\\nof the fit it is reasonable to conjecture that 91-98 (VIIb) already existed.\\nThese pages remain fair copy with minor revisions, but Blake achieved one\\ndrastic revision by writing instructions to himself on pages 91, 95, and 98\\nto begin <quote>&#8220;the Seventh Night&#8221;</quote> with 95:15 and move\\nthe preceding passages (91:1 to 95:14) around to follow the end of 98&#8212;a\\nchange which improved the fitting of VIIa to VIIb. (In either sequence VIIb\\ncould bring the Night to a cadence, ready for Night VIII.) But later Blake\\nerased the finish line after 85:22 and extended VIIa, first for a few lines,\\nwith a new finis line, then, erasing that, to the bottom of the page and on\\ninto the margins of picture page 86, originally a tailpiece for the Night;\\nthen on through pages 87 and 90 (there being no room for text on pages 88-89).\\n This new termination of the Night fitted VIIa very nicely to the beginning\\nof Night VIII, but it left VIIb dangling. Blake might have thought to discard\\nVIIb, but he did not do so; it contains passages needed in <title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas,</span></title> somewhere. But their disposition remains\\nan editorial problem, with no instructions from the author.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Recently\\nthree scholars, working independently, have come up with three proposed reading\\nsequences, each more elegant than simply taking VIIa and VIIb consecutively.\\n Andrew Lincoln, arguing from an impressive hypothetical reconstruction of\\nthe evolution of the ms, would insert VIIa between the two portions of VIIb\\n(as Blake rearranged them).  Mark Lefebvre and John Kilgore, arguing mainly\\nfrom fit, propose inserting all of VIIb between the two portions of VIIa (taking\\nthe first portion of VIIa as concluding with 85:22, originally followed by <quote>&#8220;End of the Seventh Night&#8221;</quote>).  Kilgore would return the\\ntransposed parts of VIIb to their original order; Lefebvre would keep them\\nin the order of Blake\\'s transposing.  In the present edition I have decided\\nto follow the latter course. (All these proposals are discussed in detail\\nin the Summer 1978 issue of <title level=\"s\"><span class=\"tei-hi-italic\">Blake: An Illustrated\\nQuarterly.</span></title>)</p></note>'","tn352.6":"b'<note id=\"tn352.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5-17 draw upon 98:18-20; 99:1-21 (or at least a reverse\\ndirection seems improbable).</p></note>'","tn353.1":"b'<note id=\"tn353.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">More narrowly, 8-16, dealing with beasts in the\\nplural (lions, tygers, bulls) seems to derive from 98:18-20, where they were\\nfirst Bull, Lion, Tyger, but revised to Lions, Tygers.</p></note>'","tn353.2":"b'<note id=\"tn353.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19] inserted in a stanza break</p></note>'","tn353.3":"b'<note id=\"tn353.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Upside down in the left margin are written <quote>&#8220;B\\nBlake / Catherine Blake / 76&#8221;</quote>, erased.  The combined ages of\\nWilliam (Bill) and Catherine would have been 76 in 1797-98.</p></note>'","tn353.4":"b'<note id=\"tn353.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 rangd his Books around] ranged his rocks a[round]\\nBook around 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn353.5":"b'<note id=\"tn353.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 an] his 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn354.1":"b'<note id=\"tn354.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 roll] <span class=\"tei-hi-italic\">mended from</span> rolls</p></note>'","tn355.1":"b'<note id=\"tn355.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 read . . . tones] written over erasure; 2-8 are evidently\\nan amplification, crowded between lines and continuing in the margin, yet\\npossibly only another accidental slip in copying.</p></note>'","tn355.2":"b'<note id=\"tn355.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Ye] be <span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn355.3":"b'<note id=\"tn355.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 the] <span class=\"tei-hi-italic\">mended from</span> them</p></note>'","tn356.1":"b'<note id=\"tn356.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 Then Orc cried] Orc answerd 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn356.2":"b'<note id=\"tn356.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44 And Orc began] So saying he began 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn356.3":"b'<note id=\"tn356.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">47 affection] wisdom 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn356.4":"b'<note id=\"tn356.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 watching cold) cold watching 1<span class=\"tei-hi-italic\">st rdg\\n</span>; \"Urizen\" ends in a wiggle that may include an S, perhaps for <quote>&#8220;Urizen\\'s cold&#8221;</quote></p></note>'","tn357.1":"b'<note id=\"tn357.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Men] M <span class=\"tei-hi-italic\">mended from</span> m</p></note>'","tn357.2":"b'<note id=\"tn357.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17] Two  deleted lines follow:</p><pb n=\"837\"/><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>She Secret joyd to see She fed herself on his Despair</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>She said I am avengd for all my sufferings of old</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn357.3":"b'<note id=\"tn357.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 root] <span class=\"tei-hi-italic\">mended from</span> roots</p></note>'","tn357.4":"b'<note id=\"tn357.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 the spring] early spring 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn358.1":"b'<note id=\"tn358.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Tree] T <span class=\"tei-hi-italic\">mended from</span> t</p></note>'","tn358.2":"b'<note id=\"tn358.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 in tears] in vain 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn358.3":"b'<note id=\"tn358.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     33 face lightnings] face <span class=\"tei-del\">[<span class=\"tei-hi-italic\">thy\\nSons</span>]</span> &amp; his lightnings 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn358.4":"b'<note id=\"tn358.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 Orc] O <span class=\"tei-hi-italic\">mended from</span> o</p></note>'","tn358.5":"b'<note id=\"tn358.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 Sweet] <span class=\"tei-hi-italic\">written over</span> woe</p></note>'","tn358.6":"b'<note id=\"tn358.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Vala] <span class=\"tei-hi-italic\">mended from</span> Valan</p></note>'","tn359.1":"b'<note id=\"tn359.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Livd] L written over j (for joys? see next line)</p></note>'","tn359.2":"b'<note id=\"tn359.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 manhood was divided for the] <span class=\"tei-hi-italic\">written\\nover erasure</span></p></note>'","tn359.3":"b'<note id=\"tn359.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 tubelike] <span class=\"tei-hi-italic\">mended from</span> tublike</p></note>'","tn359.4":"b'<note id=\"tn359.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 returning] <span class=\"tei-hi-italic\">mended from</span> returnd\\n</p></note>'","tn359.5":"b'<note id=\"tn359.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 wert] <span class=\"tei-hi-italic\">written</span> were <span class=\"tei-hi-italic\">\\nand revised to</span> wert <span class=\"tei-hi-italic\"> with uncrossed \"t\"</span></p></note>'","tn360.1":"b'<note id=\"tn360.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36-40] <span class=\"tei-hi-italic\">inserted</span> from margin, with\\nguide line. Blake\\'s line count on this page, <quote>&#8220;292 or 297&#8221;</quote>, indicates a moment when he was undecided whether to keep or drop\\nthe five lines of this inserted passage.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     36 brutish] <span class=\"tei-hi-italic\">\\nmoved here</span> from the head of the next line, where it was written but deleted\\nwhile wet</p></note>'","tn360.2":"b'<note id=\"tn360.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">39 thee not] <span class=\"tei-hi-italic\">between these words</span> is\\na  deleted passage:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&amp; till</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>I have thee in my arms &amp; am again united to Los</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To be one body &amp; One spirit with him</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;perhaps deleted to avoid interference with the more effective <quote>&#8220;till&#8221;</quote> clause of 41. (Keynes and Bentley put 41-42 before\\nthe marginal insertion, which is to miss the need for this deletion as well\\nas to overlook the guide.)</p></note>'","tn360.3":"b'<note id=\"tn360.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Embracing] E <span class=\"tei-hi-italic\">mended from</span> e</p></note>'","tn360.4":"b'<note id=\"tn360.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 broke] <span class=\"tei-hi-italic\">mended from</span> burst</p></note>'","tn360.5":"b'<note id=\"tn360.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19-20] guided in from margin; line 21 is written over\\na long erased line that may have been the original conclusion to this Night</p></note>'","tn360.6":"b'<note id=\"tn360.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 dark] sweet 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn360.7":"b'<note id=\"tn360.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 terrified] smild &amp; 1<span class=\"tei-hi-italic\">st rdg</span>,\\nthe <quote>&#8220;&amp;&#8221;</quote> not del. Before the addition of lines\\n23ff, this line was followed by <quote>&#8220;End of the Seventh Night&#8221;</quote> (see note on Second Portion of p 85).</p></note>'","tn360.8":"b'<note id=\"tn360.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The text of pp 91-97 was written down in that order,\\nafter the heading <quote>&#8220;Vala / Night the Seventh&#8221;</quote> on\\np 91, but then was rearranged by a note on p 91 stating that <quote>&#8220;This\\nNight begins at line 153 the following comes in at the End&#8221;</quote>\\nand a note on p 95 after its 14th line: <quote>&#8220;Beginning of the [Book] &lt;Seventh Night&gt;&#8221;</quote> plus a note at the end of p 98: <quote>&#8220;Then follows Thus in the Caverns of the Grave &amp;c as it stands now\\nin the beginning of Night the Seventh&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Roots] tree\\n1<span class=\"tei-hi-italic\">st rdg overwritten</span></p></note>'","tn360.9":"b'<note id=\"tn360.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 brooded] brooded dismal 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn360.10":"b'<note id=\"tn360.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 his warriors] the Shadowy female 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn360.11":"b'<note id=\"tn360.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24] followed by deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The shadowy voice answered O urizen Prince of Light</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(NB: Here and in line 32 <quote>&#8220;Urizen&#8221;</quote> is written\\nover a different name, possibly <quote>&#8220;Luvah&#8221;</quote> or <quote>&#8220;Satan&#8221;</quote> though no <span class=\"tei-hi-italic\">h</span> or <span class=\"tei-hi-italic\">\\nt</span> is visible.)</p></note>'","tn361.1":"b'<note id=\"tn361.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 temple] followed by the beginning of a line immediately\\ndeleted: <quote>&#8220;Urizen namd it Pande&#8221;</quote> (i.e. Pandemonium)\\n</p></note>'","tn361.2":"b'<note id=\"tn361.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 stature] forehead 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn361.3":"b'<note id=\"tn361.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 for] <span class=\"tei-hi-italic\">mended from</span> of</p></note>'","tn362.1":"b'<note id=\"tn362.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 sands] roads 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn362.2":"b'<note id=\"tn362.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 all] <span class=\"tei-del\">[<span class=\"tei-hi-italic\">till</span>]</span> all <span class=\"tei-hi-italic\">ms</span></p></note>'","tn362.3":"b'<note id=\"tn362.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 night or day] day by day 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn363.1":"b'<note id=\"tn363.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 Lion] Lions 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn363.2":"b'<note id=\"tn363.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 Tyger] Tygers 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn363.3":"b'<note id=\"tn363.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31] followed by pencil direction <quote>&#8220;Then\\nHeavd the Earthquake &amp;c&#8221;</quote> referring to a lost passage perhaps\\nsome revision of 91:6ff. Next follows the inked,and earlier, direction to\\nbring in <quote>&#8220;. . . Thus in the Caverns of the Grave &amp;c as it\\nstands now . . .&#8221;</quote>, i.e. pp 91ff.  But see also 104:21  <quote>&#8220;Heavd like an Earthquake....&#8221;</quote></p></note>'","tn363.4":"b'<note id=\"tn363.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Unerased title: <quote>&#8220;Vala / Night the Seventh&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Thus] Now <span class=\"tei-hi-italic\">in ms,</span> but revised when quoted\\non p 98</p></note>'","tn363.5":"b'<note id=\"tn363.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 affection] love 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn364.1":"b'<note id=\"tn364.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     21<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">triumphant</span>]</span> fury]\\nErasure not replaced.  One wonders at what date Blake decided that even the\\ntriumphant aspect of embattled Orc must be called in doubt.  The erasure is\\nevidently a political or moral one.</p></note>'","tn364.2":"b'<note id=\"tn364.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30 clouds] steeds 1<span class=\"tei-hi-italic\">st rdg del</span> (a clue\\nto Blake\\'s transpositions)</p></note>'","tn364.3":"b'<note id=\"tn364.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 clothe] Now clothe 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn364.4":"b'<note id=\"tn364.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 they . . . blood They . . .  helmet] <span class=\"tei-hi-italic\">\\nthe two</span> clauses written in reverse order, then numbered <quote>&#8220;2&#8221;</quote> and <quote>&#8220;1&#8221;</quote>; yet see <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title> 65:7</p></note>'","tn365.1":"b'<note id=\"tn365.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Marching] <span class=\"tei-hi-italic\">mended from</span> Marcing</p></note>'","tn365.2":"b'<note id=\"tn365.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 in hammerd steel] in darkness are 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn365.3":"b'<note id=\"tn365.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 Morn] <span class=\"tei-hi-italic\">mended, perhaps from</span> morn\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Two lines in the left margin, the first in pencil and the second in\\nink, read:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Unorganizd Innocence, An Impossibility</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Innocence dwells with Wisdom but never with Ignorance</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These seem not part of the text but aphoristic comment upon it&#8212;and\\nupon the design, borrowed from the engraved <title level=\"m\"><span class=\"tei-hi-italic\">\\nNight Thoughts,</span></title> of disgruntled warriors drinking and stupid.\\n(Yet a horizontal pencil line between lines 19 and 20 could imply a tentative\\ninsertion there.) </p></note>'","tn365.4":"b'<note id=\"tn365.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 Power] <span class=\"tei-hi-italic\">mended from</span> for (a jump\\nto \"form\" three words farther on)</p></note>'","tn366.1":"b'<note id=\"tn366.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 form of Orc which] form which 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn366.2":"b'<note id=\"tn366.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 Curse and] Curse in 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn366.3":"b'<note id=\"tn366.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 wrathful then] then furious 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn367.1":"b'<note id=\"tn367.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">55 rage against) anguish for 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn367.2":"b'<note id=\"tn367.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Patience for] Patience of 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn367.3":"b'<note id=\"tn367.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 boughs . . . fibre] branches . . . stem 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn367.4":"b'<note id=\"tn367.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26-27] <span class=\"tei-hi-italic\">written over erasure:</span> End of\\nthe Seventh Night</p></note>'","tn368.1":"b'<note id=\"tn368.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 Consummating] ?labouring 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn368.2":"b'<note id=\"tn368.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 That] Thy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn368.3":"b'<note id=\"tn368.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37-38] <span class=\"tei-hi-italic\">over erased</span>: The End of the\\nSeventh Night</p><pb n=\"839\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(The first <quote>&#8220;End&#8221;</quote>\\nwould have been after 22, the second after 31; lines 31ff are in a smaller\\nsharper pen.)</p></note>'","tn368.4":"b'<note id=\"tn368.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">41-42] <span class=\"tei-hi-italic\">written in margin</span> without guide\\nline</p></note>'","tn368.5":"b'<note id=\"tn368.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43 If we] If once we 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn368.6":"b'<note id=\"tn368.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 But] Then 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn368.7":"b'<note id=\"tn368.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Wondering . . . opend] over erasure, after addition\\nand erasure of words in left margin perhaps reading <quote>&#8220;Will live&#8221;</quote> or <quote>&#8220;With Love&#8221;</quote></p></note>'","tn368.8":"b'<note id=\"tn368.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     4-5] <span class=\"tei-hi-italic\">inserted</span> as one line, with\\nstrokes after <quote>&#8220;destroy&#8221;</quote> and <quote>&#8220;performd&#8221;</quote> implying division into three lines; but the second stroke was erased;\\nthe matter exactly fills two lines.</p></note>'","tn368.9":"b'<note id=\"tn368.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     6 They . . . high] Builded Golgonooza Los labouring\\ninspird builded pillars high 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn368.10":"b'<note id=\"tn368.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     10 Urthonas world] ?Urizens world 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn369.1":"b'<note id=\"tn369.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 beheld] gatherd 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn369.2":"b'<note id=\"tn369.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 of bitter Contrition] many Tears 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn369.3":"b'<note id=\"tn369.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 to] the to 1<span class=\"tei-hi-italic\">st rdg</span> (<span class=\"tei-hi-italic\">\\nfor</span> ?thee to)</p></note>'","tn369.4":"b'<note id=\"tn369.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35-38] in margin but guided in; Blake evidently was\\ngroping for some word preferable to <quote>&#8220;Counterpart&#8221;</quote>;\\nin the 2nd line he even left a gap to fill in after <quote>&#8220;Counter&#8221;</quote>; in the 1st, after deleting the whole word, he underlined <quote>&#8220;Coun&#8221;</quote> as if to try again. Meanwhile (apparently) he had\\nwritten and  deleted <quote>&#8220;Vegetative&#8221;</quote> or <quote>&#8220;Vegetating&#8221;</quote> above <quote>&#8220;Counterpart&#8221;</quote>; though he rejected\\nit, the only reading Blake left us with which to fill the gap, and make sense\\nin context, is <quote>&#8220;Vegetating Counterpart&#8221;</quote> or <quote>&#8220;Counterpart, Vegetating miraculous&#8221;</quote> or simply <quote>&#8220;Counterpart miraculous&#8221;</quote>: Spectres, without one, <quote>&#8220;ravin&#8221;</quote>.</p></note>'","tn369.5":"b'<note id=\"tn369.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">47 ancient injuries] former injuries <span class=\"tei-hi-italic\">1st\\nrdg del</span></p></note>'","tn369.6":"b'<note id=\"tn369.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">49 enough] <span class=\"tei-hi-italic\">mended from</span> enought</p></note>'","tn369.7":"b'<note id=\"tn369.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGES 88 and 89 are the engraved sides of leaves made\\nby cutting in half (and excluding the center) a print of Blake\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Edward &amp; Elenor</span></title> 1793.  The only writing on these\\nsides is the prose aphorism given above, under Miscellaneous Prose &#8212;\\nnot a part of <title level=\"m\"><span class=\"tei-hi-italic\">The Four Zoas</span></title> but\\nconceivably a comment on the subject of the engraving.</p></note>'","tn370.1":"b'<note id=\"tn370.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 sat] ?stood 1<span class=\"tei-hi-italic\">st rdg erased</span></p></note>'","tn370.2":"b'<note id=\"tn370.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 where . . . Tree] <span class=\"tei-hi-italic\">over deletion beginning\\n</span> which</p></note>'","tn370.3":"b'<note id=\"tn370.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 refuge] sweet 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn370.4":"b'<note id=\"tn370.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 labour] pleasure 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn370.5":"b'<note id=\"tn370.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Sacrifice] life &amp; love 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn370.6":"b'<note id=\"tn370.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Lovely terrible] Lovely 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn370.7":"b'<note id=\"tn370.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 forms sublime] sweet forms 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn370.8":"b'<note id=\"tn370.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25] followed by a deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To hew the cavernd rocks of Dranthon into forms of                beauty</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn370.9":"b'<note id=\"tn370.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     28 forth delighted upon] forth upon 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn371.1":"b'<note id=\"tn371.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     47 fathers] <span class=\"tei-hi-italic\">preceded by</span> second <span class=\"tei-hi-italic\">del</span></p></note>'","tn371.2":"b'<note id=\"tn371.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">58 Urizen[s] Shadow] Urizen <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Spectre\\n</span>]</span>&lt;Shadow&gt;<span class=\"tei-hi-italic\">ms</span></p></note>'","tn371.3":"b'<note id=\"tn371.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Met in] which is called 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn371.4":"b'<note id=\"tn371.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 as] Met as 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn371.5":"b'<note id=\"tn371.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Fallen] Eternal 1<span class=\"tei-hi-italic\">st rdg erased</span> \\n    4-9 written over five erased lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[a] He is</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[b] He is the Good Shepherd He is the Lord &amp; Master</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[c] He is the Shep[herd of] Albion he is all in all</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[d] In Eden in the Garden of God&amp; in heavenly Jerusalem</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[e] To create Man Morning by Morning to give gifts at             \\n  Noon Day</span></span><span class=\"tei-line-number\"/></li></ol><pb n=\"840\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Of these lines, and unerased lines 1-3, four were moved\\nto Night I p 8:8-11, i.e, 1, 2, <span class=\"tei-hi-italic\">b, e</span> (after the revision\\nof 1 &amp; 2); they were later erased on p 8, and a new page, 21, was added\\nto Night I beginning with seven lines using some of the material of 1, 2, <span class=\"tei-hi-italic\">d,</span> and possibly <span class=\"tei-hi-italic\">a</span> (if <span class=\"tei-hi-italic\">a</span>\\ncontains the definition of Jesus as <quote>&#8220;the Christ&#8221;</quote>);\\nthree lines appear also in <span class=\"tei-hi-italic\">Jerusalem</span> 34[38]:23-25, consisting\\nof <span class=\"tei-hi-italic\">b c d,</span> unchanged (unless my reading <quote>&#8220;Shepherd\\nof Albion&#8221;</quote> is mistaken), and these follow\\' after one unfamiliar\\nline, five lines which are almost identical to lines 2-6 of page 21 Night\\nI. We should expect line <span class=\"tei-hi-italic\">a</span> to contain in some form the material\\noccurring in the same position in p 21 and <span class=\"tei-hi-italic\">J</span> 34. (Here and\\nbelow, <span class=\"tei-hi-italic\">Jerusalem</span> is abbreviated <span class=\"tei-hi-italic\">J.</span>) </p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They Call Jesus the Christ &amp; they in him &amp; he in them</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Live in Perfect harmony in Eden the land of life</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;thus p 21:5-6, changed to the first person in <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem:</span></title></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>We call Jesus the Christ and he in us and we in him (with</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">the second line identical, and a third reading:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Giving recieving and forgiving each others trespasses</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;followed immediately by <span class=\"tei-hi-italic\">b c d.</span>)  The last\\nword in <span class=\"tei-hi-italic\">a</span> could be <quote>&#8220;recompense&#8221;</quote>\\n(see <span class=\"tei-hi-italic\">J</span> 4:20, a related passage), the penultimate word <quote>&#8220;seeketh&#8221;</quote> (not <quote>&#8220;seeking&#8221;</quote>),\\nand a largely conjectural reconstruction of the whole line that would not\\ndo violence to the graphic evidence is:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>.</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">   Evidence that the deletion and revision on p 99 (and hence the\\nchanges on p 8 and insertion of p 21) were not made before <span class=\"tei-hi-italic\">Jerusalem\\n</span> was in progress would be the appearance there of erased lines <span class=\"tei-hi-italic\">\\nc d</span> verbatim; but of course the passage may have been saved on a separate\\nsheet now lost.  Note that <span class=\"tei-hi-italic\">J</span> 34[38] inspires&#8212;or draws\\non&#8212;unique parts of all three pages in <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Four Zoas,</span></title> as well as on common parts.</p></note>'","tn372.1":"b'<note id=\"tn372.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 over head] followed by deleted passage including five\\nlines in margin:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>but other wings</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They had which clothd their bodies like a garment of soft down</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Silvery white shining upon the dark blue sky in silence</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Their wings touchd the heavens their fair feet hoverd above</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The swelling tides they bent over the dead corse like an arch</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Pointed at top in highest heavens of precious stones &amp; pearl</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn372.2":"b'<note id=\"tn372.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15-16 Then Los said I behold . . . thro the broken Gates\\n/ Of thy] Then Los beheld . . . thro the broken Gates / Of Enitharmons 1<span class=\"tei-hi-italic\">st rdg</span>; Then first Los beheld &amp;c 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn372.3":"b'<note id=\"tn372.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 I see] inserted above the line</p></note>'","tn372.4":"b'<note id=\"tn372.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Awe] <span class=\"tei-hi-italic\">mended from</span> al (a false start?)\\n</p></note>'","tn372.5":"b'<note id=\"tn372.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Enitharmon] <span class=\"tei-hi-italic\">followed by del</span>:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>which joins to Urizens temple</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Which is the Synagogue of Satan</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn372.6":"b'<note id=\"tn372.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 stood] stood at the Gate 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn372.7":"b'<note id=\"tn372.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Between lines 1 and 2 a marginal note, <quote>&#8220;Los\\nstood &amp;c&#8221;</quote>, with guide lines calling for an insertion from\\nanother page, may refer to the preceding words in 99:25 (though no insertion\\nhere could work); they more probably refer to 90:2 before revision: <quote>&#8220;Los stood in Golgonooza in the Gate of Luban&#8221;</quote>; insertion\\nof all but the first and last two lines of p 90 would work quite well at this\\npoint; one would need merely to change the phrase <quote>&#8220;Into his hands&#8221;</quote> that begins 100:2 into <quote>&#8220;In his hands&#8221;</quote>\\nin the antepenultimate line of p 90.  The thematic material of 90, amplified\\nwith marginal additions, seems all an amplification backward from the <quote>&#8220;Looms in Lubans Gate&#8221;</quote> in 100:2.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     In short,\\nBlake wrote the two pages 87 and 90 as a sequence, considered using the second\\npage as a second page for Night VIII (i.e. inserting it on p 100), but then\\nchose to tighten the sequence (with additions at bottom of 87 and top of 90)\\nand insert it (unquestionably a late addition) at the end of VII. This bit\\nof masonry (the fitting Of 87 to 90 and to 86) which cements VII(a) closely\\nto VIII seems to indicate a time when Blake considered VIIb as abandoned (or\\nmoved).  It should be noted that 90:1 is probably an addition, the text originally\\nstarting within the platemark, and that 99:26-27 are an addition, which must\\nbe treated parenthetically, made to round out the tale when the idea of bringing\\nin the <quote>&#8220;Los stood . . . in the Gate of Luban&#8221;</quote> passage\\nhad been abandoned; hence too the deletion of <quote>&#8220;at the Gate&#8221;</quote> in 99:25.</p><pb n=\"841\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 recieving them] Los receiving <quote>&#8220;the dead&#8221;</quote> of 99:19</p></note>'","tn372.8":"b'<note id=\"tn372.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-13 Astonishd . . .  saw] Astonishd Comforted delighted\\nthe daughters of Beulah saw 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn373.1":"b'<note id=\"tn373.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 single] One fold 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn373.2":"b'<note id=\"tn373.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25] followed by nine lines marked for transfer to p\\n101</p></note>'","tn373.3":"b'<note id=\"tn373.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Upon the mighty Fiend] On the immortal fiend 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn373.4":"b'<note id=\"tn373.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 brooding] <span class=\"tei-hi-italic\">mended from</span> broods</p></note>'","tn373.5":"b'<note id=\"tn373.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 among the Stars] his hurtling hand 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn373.6":"b'<note id=\"tn373.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 His hurtling hand] Among the Stars 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn373.7":"b'<note id=\"tn373.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29] followed by instructions to transfer lines from\\n100 and beginning of 101:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But Urizen his mighty rage comes in here: to quenchless rage</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn373.8":"b'<note id=\"tn373.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 But] But ?thus 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn373.9":"b'<note id=\"tn373.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 round] from 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn374.1":"b'<note id=\"tn374.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 Satan in dark Sanhedrim] probably suggested by Napoleon\\'s\\nsummoning in 1807 of the first Sanhedrin since the destruction of Jerusalem\\nin A.D.70; considered by Blake\\'s contemporaries as a millennial sign.</p></note>'","tn374.2":"b'<note id=\"tn374.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 repelld] Bentley still reads <quote>&#8220;expelld&#8221;</quote> (with query) but the <span class=\"tei-hi-italic\">r</span> is just like that in <quote>&#8220;rage&#8221;</quote> in the next line, and the <span class=\"tei-hi-italic\">e</span> cannot\\npossibly be an <span class=\"tei-hi-italic\">x,</span> a wide and double letter in Blake\\'s hand.\\n (Nor would <quote>&#8220;expelld&#8221;</quote> make sense or fit Blake\\'s\\nusage.)</p></note>'","tn374.3":"b'<note id=\"tn374.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33-37] written in margin without guide line; I follow\\nKeynes in reading them as an addition to the transferred passage, belonging\\nhere.  Bentley now concurs.</p></note>'","tn374.4":"b'<note id=\"tn374.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 hermaphrodite] male 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn374.5":"b'<note id=\"tn374.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 torment] <span class=\"tei-hi-italic\">mended from</span> torments</p></note>'","tn375.1":"b'<note id=\"tn375.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 avert] <span class=\"tei-hi-italic\">mended from</span> invert</p></note>'","tn375.2":"b'<note id=\"tn375.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 words] <span class=\"tei-hi-italic\">mended from</span> world</p></note>'","tn375.3":"b'<note id=\"tn375.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 these terrors] the human form 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn375.4":"b'<note id=\"tn375.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 in followed by deletion, perhaps <quote>&#8220;that\\nwe&#8221;</quote></p></note>'","tn375.5":"b'<note id=\"tn375.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 if] <span class=\"tei-hi-italic\">followed by</span> that <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn375.6":"b'<note id=\"tn375.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27] followed by traces of a line eliminated when\\nBlake cut in half and then repasted the leaf</p></note>'","tn376.1":"b'<note id=\"tn376.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10] followed by marginal direction <quote>&#8220;We\\nbehold with wonder &amp;c&#8221;</quote></p></note>'","tn376.2":"b'<note id=\"tn376.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 We . . . wonder] Daughter of Beulah describe 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn376.3":"b'<note id=\"tn376.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Beelzeboul) <span class=\"tei-hi-italic\">mended from</span> Baalzebole\\n</p></note>'","tn376.4":"b'<note id=\"tn376.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3] followed by two deleted lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The hard dentant hammers are lulld by the flute lula lula</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The bellowing furnaces blare by the long sounding Clarion</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn376.5":"b'<note id=\"tn376.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 into wedges] into bars 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn376.6":"b'<note id=\"tn376.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Arnon] the Moon 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn376.7":"b'<note id=\"tn376.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Satan] Satan recieves 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn377.1":"b'<note id=\"tn377.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Udan] <span class=\"tei-hi-italic\">mended from</span> Uaan</p></note>'","tn377.2":"b'<note id=\"tn377.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Benithon] <span class=\"tei-hi-italic\">followed by</span> it <span class=\"tei-hi-italic\">\\nis del</span></p></note>'","tn377.3":"b'<note id=\"tn377.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 its Islands &amp; its Margins] the Islands &amp;\\nthe Margins of this Lake 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn377.4":"b'<note id=\"tn377.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30 from] to 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn377.5":"b'<note id=\"tn377.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 thou O] All 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn377.6":"b'<note id=\"tn377.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Begun Already] Already 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn377.7":"b'<note id=\"tn377.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 Heavd like] Heaving li? 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn377.8":"b'<note id=\"tn377.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Son] <span class=\"tei-hi-italic\">mended from</span> Sons</p></note>'","tn378.1":"b'<note id=\"tn378.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37 Give his vegetated body] rend the Veil of Mystery\\n1<span class=\"tei-hi-italic\">st rdg del</span>, followed by a deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And then Call Urizen &amp; Luvah &amp; Tharmas &amp; Urthona</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn378.2":"b'<note id=\"tn378.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-30 The Lamb . . . victims] Identical on p 105 to earlier\\ndraft on p 145 (ms fragment), except as here noted</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 Satan] Urizen <span class=\"tei-hi-italic\">p</span> 145 (the whole line a pencil addition on p 145)</p></note>'","tn378.3":"b'<note id=\"tn378.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 shadows of torments] Shadows of torment <span class=\"tei-hi-italic\">\\np</span> 145 (the plural on p 105 perhaps a slip of the pen; not a firm <span class=\"tei-hi-italic\">s</span>)</p></note>'","tn378.4":"b'<note id=\"tn378.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Amalek] Entuthon that 1<span class=\"tei-hi-italic\">st rdg p</span>\\n145 <span class=\"tei-hi-italic\">del</span></p></note>'","tn378.5":"b'<note id=\"tn378.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 for] that 1<span class=\"tei-hi-italic\">st rdg p</span> 145 <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn378.6":"b'<note id=\"tn378.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Urizen . . . the . . . dire] He . . . all  the . .\\n. dark 1<span class=\"tei-hi-italic\">st rdg p</span> 145 <span class=\"tei-hi-italic\">del</span></p></note>'","tn378.7":"b'<note id=\"tn378.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 death] Death <span class=\"tei-hi-italic\">p</span> 145</p></note>'","tn378.8":"b'<note id=\"tn378.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 he] He <span class=\"tei-hi-italic\">p</span> 145</p></note>'","tn378.9":"b'<note id=\"tn378.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 amidst them beamd] around them stood <span class=\"tei-hi-italic\">\\np</span> 145, 1<span class=\"tei-hi-italic\">st rdg p</span> 105</p></note>'","tn378.10":"b'<note id=\"tn378.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-27] <span class=\"tei-hi-italic\">not in p</span> 145, <span class=\"tei-hi-italic\">\\nmarginal insertions p</span> 105</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     11 of] <span class=\"tei-hi-italic\">inserted between\\n</span> Counterpart <span class=\"tei-hi-italic\">and</span> Lovely <span class=\"tei-hi-italic\">but guided by\\na caret to come after</span> Lovely</p></note>'","tn378.11":"b'<note id=\"tn378.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 then was hidden within] therefore they were calld\\n/ The  daughters &amp; 1<span class=\"tei-hi-italic\">st rdg del</span>, to allow further addition\\n</p></note>'","tn378.12":"b'<note id=\"tn378.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 namd] called 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn378.13":"b'<note id=\"tn378.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 Amalek] <span class=\"tei-hi-italic\">inserted p</span>      105 Stones]\\nStones <span class=\"tei-hi-italic\">p</span> 105 &amp; 145; Stems 1<span class=\"tei-hi-italic\">st rdg</span>\\np 105 <span class=\"tei-hi-italic\">del</span></p></note>'","tn378.14":"b'<note id=\"tn378.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 knives] songs 1<span class=\"tei-hi-italic\">st rdg</span> p 145 <span class=\"tei-hi-italic\">del</span></p></note>'","tn379.1":"b'<note id=\"tn379.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 Away] I have 1<span class=\"tei-hi-italic\">st rdg del, a slip</span></p></note>'","tn379.2":"b'<note id=\"tn379.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43] followed by  deleted line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To see the boy spring into heaven sounding from my sight</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn379.3":"b'<note id=\"tn379.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44 heat] pre (<span class=\"tei-hi-italic\">for <quote>&#8220;prepare&#8221;</quote></span>) 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn379.4":"b'<note id=\"tn379.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">50 task] <span class=\"tei-hi-italic\">with uncrossed</span> t</p></note>'","tn379.5":"b'<note id=\"tn379.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-6 were transcribed verbatim from 145:13-17, 19</p></note>'","tn379.6":"b'<note id=\"tn379.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5] followed in 145 by a line deleted and not transferred;</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In which is Tirzah untranslucent an opake covering</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn379.7":"b'<note id=\"tn379.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6] followed in 145 by ten lines deleted and not transferred:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Rahab stripd off Luvahs robes from off the lamb of God</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Then first she saw his glory &amp; her harlot form appeard</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In all its turpitude beneath the divine light &amp; of Luvahs robes</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>She made herself a Mantle</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Also the Vegetated bodies which Enitharmon wove in her looms</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Opend within the heart &amp; in the loins &amp; in the brain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To Beulah &amp; the dead in Beulah descended thro their gates</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And some were woven one fold some two fold &amp; some threefold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In head or heart or reins according to the fittest order</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of most merciful pity &amp; compassion to the spectrous dead</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn379.8":"b'<note id=\"tn379.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Jerusalem] She 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn379.9":"b'<note id=\"tn379.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Urizen &amp;] <span class=\"tei-hi-italic\">followed by</span> build <span class=\"tei-hi-italic\">del</span></p></note>'","tn379.10":"b'<note id=\"tn379.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 of] in 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn379.11":"b'<note id=\"tn379.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16] <span class=\"tei-hi-italic\">followed by instruction:</span> But\\nwhen Rahab &amp;c turn back 3 leaves (<span class=\"tei-hi-italic\">i.e. to</span> 113:38)</p></note>'","tn379.12":"b'<note id=\"tn379.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">38-43] over six erased lines</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     38 But] And\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.1":"b'<note id=\"tn380.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 among] above 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.3":"b'<note id=\"tn380.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 are] were 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.4":"b'<note id=\"tn380.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 are our] were their 1<span class=\"tei-hi-italic\">st rdg del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\nElythiria] <span class=\"tei-hi-italic\">mended from</span> Elythyria</p></note>'","tn380.5":"b'<note id=\"tn380.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 our] their 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.6":"b'<note id=\"tn380.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 his brethren] Los 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.7":"b'<note id=\"tn380.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 Me] Los 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn380.8":"b'<note id=\"tn380.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Rahab] Mortals 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn381.1":"b'<note id=\"tn381.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 Palamabron] Rintrah &amp; Palamabron 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn381.2":"b'<note id=\"tn381.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">51] an added line to connect the new matter on P 113</p></note>'","tn381.3":"b'<note id=\"tn381.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6] followed by instructions: Darkness &amp; sorrow &amp;c\\nturn over leaf</p></note>'","tn381.4":"b'<note id=\"tn381.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Eternity] eternity <span class=\"tei-hi-italic\">p</span> 145</p></note>'","tn381.5":"b'<note id=\"tn381.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Religion] <span class=\"tei-hi-italic\">followed by del:</span> was <span class=\"tei-del\">\\n[?<span class=\"tei-hi-italic\">tormented</span>]</span>&lt;darkend&gt; (reading on p\\n145:32 is <quote>&#8220;tormented&#8221;</quote>)</p></note>'","tn381.6":"b'<note id=\"tn381.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 felt] <span class=\"tei-hi-italic\">preceded by</span> He <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn381.7":"b'<note id=\"tn381.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 eyes shot] eyes <span class=\"tei-del\">[<span class=\"tei-hi-italic\">his</span>]</span>&lt;then&gt; 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn382.1":"b'<note id=\"tn382.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 thro] over 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn382.2":"b'<note id=\"tn382.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">39 the Spectre] Urthona 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn382.3":"b'<note id=\"tn382.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 wild] <span class=\"tei-hi-italic\">mended from</span> wide</p></note>'","tn382.4":"b'<note id=\"tn382.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Satyr <span class=\"tei-hi-italic\">mended from</span> Satur</p></note>'","tn382.5":"b'<note id=\"tn382.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 his] <span class=\"tei-hi-italic\">written</span> hos</p></note>'","tn382.6":"b'<note id=\"tn382.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Covers] 1<span class=\"tei-hi-italic\">st written at end of 4 but del\\n</span></p></note>'","tn382.7":"b'<note id=\"tn382.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15] followed by 18 del (a slip in copying?)</p></note>'","tn382.8":"b'<note id=\"tn382.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 repentant forgets] 2/forgets 1/repentant <span class=\"tei-hi-italic\">\\nms</span></p></note>'","tn383.1":"b'<note id=\"tn383.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 on high] <span class=\"tei-hi-italic\">begun</span> above <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn385.1":"b'<note id=\"tn385.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 flaming] dismal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn385.2":"b'<note id=\"tn385.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29] written above 8 deleted lines:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  But Rahab <span class=\"tei-del\">[<span class=\"tei-hi-italic\">built</span>]</span>&lt;hewd&gt; a\\nSepulcher in the Rock of Eternity</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And placing in the Sepulcher the body which she had taken</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>From the divine Lamb wept over the Sepulcher weaving</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Her web of Religion around the Sepulcher times after times beside Jerusalems\\nGate</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But as she wove behold the bottom of the Sepulcher</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Rent &amp; a door was opend thro the bottom of the Sepulcher</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Into Eternity And as she wove she heard a Voice behind her calling her</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>She turnd &amp; saw the Divine Vision &amp; her</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     (Lines 2-3 are written over erased <quote>&#8220;The End of the\\nEighth Night&#8221;</quote>.)</p></note>'","tn385.3":"b'<note id=\"tn385.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 despair] fear 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn386.1":"b'<note id=\"tn386.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Enitharmon . . . the Heavens] Enion . . . Heaven <span class=\"tei-hi-italic\">pencil</span></p></note>'","tn386.2":"b'<note id=\"tn386.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 her Harlot Robes] <span class=\"tei-hi-italic\">pencil rdg:</span><span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">the heavens</span>]</span>&lt;her harlot robes&gt;</p></note>'","tn386.3":"b'<note id=\"tn386.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44] inserted in a paragraph break, as is line 48</p></note>'","tn386.4":"b'<note id=\"tn386.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-13] written over almost identical pencil, over erased\\nink lines (about 11); the endings of these can be somewhat made out: the 2nd\\nends <quote>&#8220;?curst the heavens&#8221;</quote>, the 11th <quote>&#8220;was\\nEnded;&#8221;</quote> these do not reappear elsewhere in the poem; apparently\\nthis passage was erased without being transferred.</p></note>'","tn387.1":"b'<note id=\"tn387.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 asterial 2<span class=\"tei-hi-italic\">nd rdg del</span>] eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn387.2":"b'<note id=\"tn387.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 sounds] <span class=\"tei-hi-italic\">followed by del:</span> Awake\\nye dead &amp; come / To judgment.</p></note>'","tn388.1":"b'<note id=\"tn388.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">39-40] written over two erased lines, a third visible\\nin part</p></note>'","tn388.2":"b'<note id=\"tn388.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-14] <span class=\"tei-hi-italic\">written over erased title:</span> Vala\\n/ Night the Ninth / Being / The Last judgment</p></note>'","tn388.3":"b'<note id=\"tn388.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Began to Enter the Holy City] Began to draw near\\nto the Earth 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn388.4":"b'<note id=\"tn388.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 licking] <span class=\"tei-hi-italic\">ms</span> liking</p></note>'","tn388.5":"b'<note id=\"tn388.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Beyond] Without 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn389.2":"b'<note id=\"tn389.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">41 witherd] narrow 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn389.3":"b'<note id=\"tn389.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30-31] added in pencil 31</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Person] <span class=\"tei-hi-italic\">\\nfollowed by</span> is <span class=\"tei-hi-italic\">del</span></p></note>'","tn390.1":"b'<note id=\"tn390.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 energy Enslavd] honest energy 1<span class=\"tei-hi-italic\">st rdg;\\n</span> an honest energy Enslaved 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn390.2":"b'<note id=\"tn390.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 futurity] the past 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn390.3":"b'<note id=\"tn390.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 towers] high towers 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn390.4":"b'<note id=\"tn390.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 gardens] mended from garden</p></note>'","tn390.5":"b'<note id=\"tn390.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 sword] <span class=\"tei-hi-italic\">preceded by</span> plow <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn390.6":"b'<note id=\"tn390.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 unto] <span class=\"tei-hi-italic\">ms perhaps reads</span> into, <span class=\"tei-hi-italic\">but without</span> dot and with pen-scratch</p></note>'","tn390.7":"b'<note id=\"tn390.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19, futurity] remembrance 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn390.8":"b'<note id=\"tn390.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20, 21, 22 futurity] remembrance 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn391.1":"b'<note id=\"tn391.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43 words] voice 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn391.2":"b'<note id=\"tn391.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 to] of 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn391.3":"b'<note id=\"tn391.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 where are] <span class=\"tei-hi-italic\">perhaps error for</span> where\\nare our <span class=\"tei-hi-italic\">or</span> where rest our</p></note>'","tn392.1":"b'<note id=\"tn392.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 To bones] written first at end of line 27, then moved</p></note>'","tn392.2":"b'<note id=\"tn392.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 Eyes] <span class=\"tei-hi-italic\">mended from</span> eyes</p></note>'","tn392.3":"b'<note id=\"tn392.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 howlings began] repeated in pencil above the line,\\nin a hand not Blake\\'s but probably Ellis\\'s</p></note>'","tn392.4":"b'<note id=\"tn392.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 dark] black 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn392.5":"b'<note id=\"tn392.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 calls] cries 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn392.6":"b'<note id=\"tn392.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 the prisoners] a prisoners 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn393.1":"b'<note id=\"tn393.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 a throne &amp; a] as a throne &amp; as a 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn393.2":"b'<note id=\"tn393.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 twenty four] over a <quote>&#8220;twenty four&#8221;</quote> that may have been mended</p></note>'","tn393.3":"b'<note id=\"tn393.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 by] of 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn393.4":"b'<note id=\"tn393.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Redeemd Man] Fallen man 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn393.5":"b'<note id=\"tn393.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 lions from] lions of 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn393.6":"b'<note id=\"tn393.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 mortar] <span class=\"tei-hi-italic\">mended from</span> mortal</p></note>'","tn393.7":"b'<note id=\"tn393.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 ardor.] followed by deletion:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>he rose up from the Rock</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Fallen Man wondring beheld.</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn394.1":"b'<note id=\"tn394.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 forth] out 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn395.1":"b'<note id=\"tn395.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Regenerate Man] Ancient Man 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn395.2":"b'<note id=\"tn395.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 O] &amp; 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn395.3":"b'<note id=\"tn395.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 Imagination] Thought 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn396.1":"b'<note id=\"tn396.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 thine he] thine when he 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn398.1":"b'<note id=\"tn398.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24-27 transferred from p 4 and crowded into a stanza\\nbreak</p></note>'","tn399.1":"b'<note id=\"tn399.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 wet] with 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn400.1":"b'<note id=\"tn400.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 a whirlwind] Then a whirlwind 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn401.1":"b'<note id=\"tn401.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 By] With 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn401.2":"b'<note id=\"tn401.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 down] of 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn401.3":"b'<note id=\"tn401.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 They] And 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn401.4":"b'<note id=\"tn401.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 Generative] Vegetative 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn401.5":"b'<note id=\"tn401.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 Science] Nature 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn403.1":"b'<note id=\"tn403.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 Aha Aha] It seems probable that this African song\\nwas suggested by those in a volume of <span class=\"tei-hi-italic\">Chansons mad&#233;casses\\n</span>, first published in London and Paris in 1787, republished in 1797, and\\nreviewed in British journals. (Suggestion of Paul Miner.)</p></note>'","tn404.1":"b'<note id=\"tn404.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">39 Odors] <span class=\"tei-hi-italic\">mended from</span> odors</p></note>'","tn404.2":"b'<note id=\"tn404.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 gaping] silent 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn404.3":"b'<note id=\"tn404.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 Birth] death 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn404.4":"b'<note id=\"tn404.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 and Racks &amp; Saws] the nets and racks &amp; ?Pins\\n1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn404.5":"b'<note id=\"tn404.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">27 whips) whipt <span class=\"tei-hi-italic\">ms</span> (cf <title level=\"m\">\\nMilton</title> 27:36)   sports] <span class=\"tei-hi-italic\">mended from</span> sport</p></note>'","tn404.6":"b'<note id=\"tn404.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">35 Nettle] <span class=\"tei-hi-italic\">mended from</span> nettle</p></note>'","tn406.1":"b'<note id=\"tn406.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 And] Then 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn406.2":"b'<note id=\"tn406.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 behold] <span class=\"tei-hi-italic\">written</span> beholds</p></note>'","tn407.1":"b'<note id=\"tn407.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 141 (Fragments on a slip of note paper, not used\\nanywhere in the final text.  Lines were drawn to separate the fragments, but\\nfragments 1 and 2 were then revised into one.)</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Beneath the veil of <span class=\"tei-del\">[<span class=\"tei-hi-italic\">?Enion</span>]</span>&lt;Vala&gt; rose Tharmas from dewy tears</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The <span class=\"tei-del\">[<span class=\"tei-hi-italic\">ancient</span>]</span>&lt;eternal&gt; man\\nbowd his bright head &amp; Urizen prince of light</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Astonish lookd from his bright Portals calling thus\\nto Luvah</span></span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"><span class=\"tei-hi-italic\"> O Luvah, in the</span>------------------------------------------]\\n</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Astonishd lookd from his bright portals. Luvah king of Love</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Awakend Vala.  Ariston ran forth with bright ?Onana</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And dark Urthona rouzd his shady bride from her deep den</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">Awaking from his stony slumber</span>]</span>&gt;\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Pitying they viewd the new born demon. for they could not love</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">After their sin</span>]</span>-----------------------\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Male formd the demon mild athletic force his shoulders spread</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And his bright feet firm as a brazen altar. but. the parts</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To love devoted. female, all astonishd stood the hosts</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Of heaven, while Tharmas with wingd speed flew to the sandy shore \\n&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">ocean</span>]</span>&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He rested on the desart wild &amp; on the raging sea</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He stood &amp; stretchd his wings &amp;c-----------------</span></span><span class=\"tei-line-number\"/></li><br xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>With printless feet scorning the concave of the joyful sky</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Female her form bright as the summer but the parts of love</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Male &amp; her brow radiant as day. darted a lovely scorn</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Tharmas beheld from his high rocks &amp;\"&gt;--------------</span></span><span class=\"tei-line-number\"/></li></ol><div xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"plate\">\\n            [\\n            <span class=\"plate-unit-name\">page</span><span class=\"plate-unit-number\">142</span>\\n            ]\\n            </div><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The ocean calm the clouds fold round &amp; fiery flames of love</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Inwrap the immortal limbs struggling in terrific joy</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Not long thunders lightnings swift rendings &amp; blasting winds</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Sweep oer. the struggling copulation. in fell writhing pangs</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They lie in twisting agonies beneath the covring heavens</span></span><span class=\"tei-line-number\"/></li><br xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The womb impressd Enion fled &amp; hid in verdant mountains</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Yet here his heavenly orbs &amp;c</span></span><span class=\"tei-line-number\"/></li><br xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Trembling he lay swelld with the deluge stifling in the anguish</span></span><span class=\"tei-line-number\"/></li></ol><div xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"plate\">\\n            [\\n            <span class=\"plate-unit-name\">page</span><span class=\"plate-unit-number\">143 (A variant of the text of ms p 7; see above.  Pencil additions are preceded by *):</span>\\n            ]\\n            </div><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;*Opening his rifted rocks&gt; mingling [<span class=\"tei-hi-italic\">their\\nbodies</span>]      &lt;*together they&gt; join in burning anguish</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Mingling his horrible<span class=\"tei-del\"> [<span class=\"tei-hi-italic\">brightness</span>]</span>&lt;*darkness&gt; with           her tender limbs then high she soard</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Shrieking above the ocean: a bright wonder that nature shudderd at</span></span><span class=\"tei-line-number\"/></li><pb n=\"846\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>From Enion pours the seed of life &amp; death in all her limbs</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Frozen in the womb of Tharmas rush the rivers of Enions pain</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Trembling he lay swelld with the deluge stifling in the anguish</span></span><span class=\"tei-line-number\"/></li></ol><div xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"plate\">\\n            [\\n            <span class=\"plate-unit-name\">page</span><span class=\"plate-unit-number\">143 (A variant of the text of ms p 7; see above.  Pencil additions are preceded by *):</span>\\n            ]\\n            </div><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;*Opening his rifted rocks&gt; mingling <span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\ntheir bodies</span>]</span>&lt;*together they&gt; join in burning anguish\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Mingling his horrible <span class=\"tei-del\">[<span class=\"tei-hi-italic\">brightness</span>]</span>&lt;*darkness&gt; with her tender limbs then high she soared</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Shrieking above the ocean: a bright wonder that nature shudderd at</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> Half Woman &amp; half <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Serpent</span>]</span>&lt;*beast&gt; all his <span class=\"tei-del\">[<span class=\"tei-hi-italic\">lovely changing</span>]</span>&lt;*darkly\\nwaving&gt; colours mix</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  With her fair crystal clearness in her lips &amp; cheeks his <span class=\"tei-del\">[<span class=\"tei-hi-italic\">poisons</span>]</span>&lt;metals&gt; rose</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  In blushes like the morning &amp; his <span class=\"tei-del\">[<span class=\"tei-hi-italic\">scaly armour\\n</span>]</span>&lt;*rocky features&gt; softning</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   A <span class=\"tei-del\">[<span class=\"tei-hi-italic\">monster</span>]</span>&lt;*wonder&gt; lovely\\nin the heavens or wandring on the earth</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  With <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Serpent</span>]</span>&lt;female&gt; voice \\n&lt;warbling upon the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">hills</span>]</span> &amp; hollow vales&gt;\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span> Beauty all blushing with desire &lt;a Self enjoying wonder&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;For Enion brooded groaning loud the rough seas vegetate. Golden\\nrocks rise from the <span class=\"tei-del\">[<span class=\"tei-hi-italic\">vorte</span>]</span>&lt;vast&gt;&gt;\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  And thus her voice; &lt;Glory, delight, &amp; sweet enjoyment born&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;To mild Eternity shut in a threefold shape delightful&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    To wander in &lt;sweet&gt; solitude &lt;enrapturd&gt;\\nat every wind</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">Shining across the ocean / Enion brooded\\ngroaning the golden rocks vegetate The b</span>]</span>&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">to</span>]</span> Infolding the bright woman <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">from the desolating winds / &amp; thus her voice &amp;</span>]\\n</span>&gt;</span></span><span class=\"tei-line-number\"/></li></ol><div xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"plate\">\\n            [\\n            <span class=\"plate-unit-name\">page</span><span class=\"plate-unit-number\">144 (The verso of 143. The first line is cut short where the page is torn):</span>\\n            ]\\n            </div><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That I should hide thee with my power &amp;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And now thou darknest in my presence, never from my sight;</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">For page 145 see textual notes on pages 105 and 106.</p></note>'","tn408.1":"b'<note id=\"tn408.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Source:</span> 72-page octavo pamphlet printed\\nfor Blake in 1783, with a few corrections and revisions made by Blake in some\\nof the 22 extant copies reported.  No ms is known.  The corrections found\\nin 8 copies are reported by Michael Phillips in <title level=\"s\"><span class=\"tei-hi-italic\">\\nBlake Newsletter</span></title> IV (1970) 40-47; a survey extended by Bentley\\nto 11 copies.  A prefatory <quote>&#8220;Advertisement&#8221;</quote> (p ii)\\nreads: <quote>&#8220;The following Sketches were the production of untutored\\nyouth, commenced in his twelfth, and occasionally resumed by the author till\\nhis twentieth year; since which time, his talents having been wholly directed\\nto the attainment of excellence in his profession, he has been deprived of\\nthe leisure requisite to such a revisal of these sheets, as might have rendered\\nthem less unfit to meet the public eye.</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;Conscious\\nof the irregularities and defects to be found in almost every page, his friends\\nhave still believed that they possessed a poetic originality, which merited\\nsome respite from oblivion.  These their opinions remain, however, to be now\\nreproved or confirmed by a less partial public.&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake\\'s corrections have been adopted, as noted; other corrections are made\\nwithin square brackets.  The original punctuation has been retained, though\\nit may be less Blake\\'s than the printer\\'s.</p></note>'","tn410.1":"b'<note id=\"tn410.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 and his hand] <span class=\"tei-hi-italic\">printed</span> and in his\\nhand (corrected by Blake in eight copies)</p></note>'","tn410.2":"b'<note id=\"tn410.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 while] <span class=\"tei-hi-italic\">printed</span> whilst (revised by\\nBlake in one copy)</p></note>'","tn411.2":"b'<note id=\"tn411.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 cheek] <span class=\"tei-hi-italic\">printed</span> cheeks (corrected\\nby Blake in four copies)</p></note>'","tn412.1":"b'<note id=\"tn412.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">61 behold] I am 1<span class=\"tei-hi-italic\">st rdg</span> (revised by\\nBlake in six copies)</p></note>'","tn414.1":"b'<note id=\"tn414.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 his] <span class=\"tei-hi-italic\">printed</span> her (corrected by\\nBlake in two copies)</p></note>'","tn415.1":"b'<note id=\"tn415.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 infold] <span class=\"tei-hi-italic\">printed</span> unfold (altered\\nby Blake in six copies)</p></note>'","tn415.2":"b'<note id=\"tn415.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 birds) <span class=\"tei-hi-italic\">printed</span> beds (corrected by\\nBlake in seven copies)</p></note>'","tn417.1":"b'<note id=\"tn417.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9-12; Lack of quotation marks enclosing these lines\\nmay indicate that the printer had no help from ms.  Blake almost never used\\nquotation marks.</p></note>'","tn419.1":"b'<note id=\"tn419.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">63-64 Lack of quotation marks enclosing these lines\\nmay indicate that the printer had no help from ms.  Blake almost never used\\nquotation marks.</p></note>'","tn420.1":"b'<note id=\"tn420.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">title] <span class=\"tei-hi-italic\">printed</span> SPENCER (uncorrected\\nby Blake)</p></note>'","tn420.2":"b'<note id=\"tn420.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 yields] <span class=\"tei-hi-italic\">printer\\'s or Blake\\'s error for\\n</span> yieldst</p></note>'","tn420.3":"b'<note id=\"tn420.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 lessing] Adjective based on Spenser\\'s substantive\\nleasing or lesing, a falsehood</p></note>'","tn420.4":"b'<note id=\"tn420.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 other] <span class=\"tei-hi-italic\">printed</span> others (revised\\nby Blake in one copy)</p></note>'","tn420.5":"b'<note id=\"tn420.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 eares] <span class=\"tei-hi-italic\">printed</span> cares (corrected\\nby Blake in two copies)</p></note>'","tn421.1":"b'<note id=\"tn421.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">41 see] <span class=\"tei-hi-italic\">Sic</span> in parallel construction\\nwith \"hear\" in line 40</p></note>'","tn421.2":"b'<note id=\"tn421.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">44 warrior maid,] <span class=\"tei-hi-italic\">printed</span> warrior,\\nmaid <span class=\"tei-hi-italic\">but corrected by Blake in one copy</span></p></note>'","tn423.1":"b'<note id=\"tn423.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">64 impose,] <span class=\"tei-hi-italic\">printed</span> impose. <span class=\"tei-hi-italic\">\\nbut corrected in one copy by Blake,</span> who also inserted the <quote>&#8220;;&#8221;</quote> in line 65.  I insert a colon in line 63 to indicate the meaning; <quote>&#8220;laws such as that all who impose shall stand etc.&#8221;</quote></p></note>'","tn423.2":"b'<note id=\"tn423.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1: Scene . . . Nobles] <span class=\"tei-hi-italic\">printed</span> . .\\n. Nobles before it <span class=\"tei-hi-italic\">but revised by Blake</span></p></note>'","tn427.1":"b'<note id=\"tn427.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:83 awful] <span class=\"tei-hi-italic\">perhaps a mistake for</span>\\nlawful</p></note>'","tn427.2":"b'<note id=\"tn427.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:10 eer] <span class=\"tei-hi-italic\">printed</span> ere</p></note>'","tn432.1":"b'<note id=\"tn432.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:218 Exit] <span class=\"tei-hi-italic\">printed</span> Exeunt</p></note>'","tn432.2":"b'<note id=\"tn432.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:236 his] <span class=\"tei-hi-italic\">printed</span> her (corrected\\nby Blake in one copy; compare 291-93)</p></note>'","tn433.1":"b'<note id=\"tn433.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:292 him] <span class=\"tei-hi-italic\">printed</span> them (corrected\\nby Blake in the same copy)</p></note>'","tn435.1":"b'<note id=\"tn435.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:45 a new song] <span class=\"tei-hi-italic\">i.e.</span> the song of\\nScene [6]</p></note>'","tn435.2":"b'<note id=\"tn435.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:48 another about all us that are to die] <span class=\"tei-hi-italic\">\\ni.e.</span> the <quote>&#8220;War Song&#8221;</quote> printed as a separate\\nSketch further on</p></note>'","tn436.1":"b'<note id=\"tn436.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:29] palms] <span class=\"tei-hi-italic\">perhaps a misprint for</span>\\npsalms</p></note>'","tn440.1":"b'<note id=\"tn440.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Intended for the second War Song of the Chandos minstrel\\nin <quote>&#8220;King Edward the Third&#8221;</quote> (see preceding note).\\n</p></note>'","tn443.1":"b'<note id=\"tn443.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">she] he <span class=\"tei-hi-italic\">printer\\'s rdg</span> (context requires\\n\"she\")</p></note>'","tn444.1":"b'<note id=\"tn444.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">withs] variant spelling of withes</p></note>'","tn445.1":"b'<note id=\"tn445.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">?warfare] <span class=\"tei-hi-italic\"><quote>&#8220;probably a misprint\\nfor wayfare&#8221;</quote></span>&#8212;Keynes</p></note>'","tn446.1":"b'<note id=\"tn446.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;then She bore Pale desire . . .&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This and the following fragment are on seven pages of an unsigned\\nms of 4 leaves (19.2 x 12.2 cm) in Blake\\'s hand, probably of the early 1780s.\\n (For description and line-for-line transcription, see <quote>&#8220;A Blake\\nManuscript in the Berg Collection&#8221;</quote>, <title level=\"s\"><span class=\"tei-hi-italic\">\\nBulletin of The New York Public Library</span></title> LXII 191-201.) The present\\ntranscription contains improvements suggested by Robert F. Gleckner.  The\\nfirst word is not indented or capitalized and was obviously not originally\\nthe beginning of the ms.</p></note>'","tn446.2":"b'<note id=\"tn446.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:6 weak arm.] <span class=\"tei-hi-italic\">followed by deletion:</span>\\nNow day arose. the Golden Sun his mighty Race began Refreshing. the Cold earth.\\nwith beaming.  Joy.</p></note>'","tn446.3":"b'<note id=\"tn446.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:14 observing] <span class=\"tei-hi-italic\">mended from</span> observd\\nand</p></note>'","tn446.4":"b'<note id=\"tn446.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1:15 as well as this.] <span class=\"tei-hi-italic\">followed by almost\\nillegible deletion:</span> for all who saw and ?admired feared the ?utmost</p></note>'","tn446.5":"b'<note id=\"tn446.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2:26 Adoration] <span class=\"tei-hi-italic\">followed by deletion:</span>\\nNor Could Refrain but Cry\\'d O this is the bles\\'t time when Pride shall hold\\nthe Sway. N (<span class=\"tei-hi-italic\">for</span><quote>&#8220;Now&#8221;</quote>?)</p></note>'","tn446.6":"b'<note id=\"tn446.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3:37 Rankest Draught] <span class=\"tei-hi-italic\">followed by deleted\\nclause:</span> and Death is in the Pot</p></note>'","tn447.1":"b'<note id=\"tn447.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:54 She brings . . . how to know.]  She teacheth knowledge\\nhow to know 1<span class=\"tei-hi-italic\">st rdg del and replaced by insert from p 7, linked\\nby</span><quote>&#8220;&amp;<sup>c</sup> &amp;<sup>c</sup>&#8221;\\n</quote></p></note>'","tn447.2":"b'<note id=\"tn447.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4:56 lord of all.] <span class=\"tei-hi-italic\">followed by deletion:\\n</span> Humility. her Daughter,</p></note>'","tn447.3":"b'<note id=\"tn447.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> 4:75 Rage.] <span class=\"tei-hi-italic\">followed by a superscript\\n</span><sup>A</sup><span class=\"tei-hi-italic\"> to bring in from p 7 the similarly\\nmarked line:</span><sup>A</sup> then Shame bore honour &amp; made\\nleague with Pride. (The passage was later incorporated into the revision of\\n5:92, with <quote>&#8220;And&#8221;</quote> replacing <quote>&#8220;then&#8221;</quote>.)</p></note>'","tn447.4":"b'<note id=\"tn447.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:81 bore] brought forth 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn448.1":"b'<note id=\"tn448.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5:92 &amp; Policy doth . . . the World] &amp; Emulation\\n[<span class=\"tei-hi-italic\">Suspition Mist</span> (for Mistrust)] 1<span class=\"tei-hi-italic\">st rdg</span>;\\n&amp; Policy doth dwell with her. by Whom She had a Son Called Suspition 2<span class=\"tei-hi-italic\">nd rdg</span> (both rdgs were evidently to be replaced by the final\\nrdg inserted from p 7); <span class=\"tei-hi-italic\">p 7 before revision to final rdg:</span>\\nConceit &amp; Mistrust &amp; Suspition by Shame She had a Son calld Honour.\\nwho bore Revenge.  Then Self love.  bore a Daughter &amp;c</p></note>'","tn448.2":"b'<note id=\"tn448.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;Woe cried the muse . . .&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A complete unit in the ms, though possibly intended as part of a larger work.</p></note>'","tn448.3":"b'<note id=\"tn448.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:3 her Notes] her ?Chauntant Notes 1<span class=\"tei-hi-italic\">st\\nrdg</span>(the deleted word hardly legible)</p></note>'","tn448.4":"b'<note id=\"tn448.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:6 string] note 1<span class=\"tei-hi-italic\">st rdg del</span> awful]\\nShadowy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn448.5":"b'<note id=\"tn448.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:8 how soon] hark how 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn448.6":"b'<note id=\"tn448.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">ith] <span class=\"tei-hi-italic\">archaic form of</span> in the</p></note>'","tn448.7":"b'<note id=\"tn448.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:15 listning] trembling 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn448.8":"b'<note id=\"tn448.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6:17 lake swift as . . . Bud] ruffling lake while ?living\\nclay cold corpse Corse 1<span class=\"tei-hi-italic\">st rdg</span> (apparently a series of false\\nstarts).  The line <quote>&#8220;swift as the Nightly Blast that Blights the\\nInfant Bud&#8221;</quote> is not marked for insert here&#8212;but is written\\nexactly opposite the deleted passage, on p 7.</p></note>'","tn449.1":"b'<note id=\"tn449.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Original ms in Fitzwilliam Museum, Cambridge, England,\\nobviously copied from an earlier draft, the most frequent revision being a\\nsecond thought replacing a word just writen down; later changes are <quote>&#8220;Human&#8221;</quote> to <quote>&#8220;Huming&#8221;</quote> (i.e. humming; <quote>&#8220;Arse&#8221;</quote> to <quote>&#8220;ass&#8221;</quote> and <quote>&#8220;turd&#8221;</quote> to <quote>&#8220;tansey&#8221;</quote>; but finally <quote>&#8220;Arse&#8221;</quote> was restored by being marked by an asterisk.  The\\nname <quote>&#8220;Sigtagatist&#8221;</quote> was first written <quote>&#8220;Sistagatist&#8221;</quote> in most places, but mended.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> 1784\\n(December or a bit earlier) from topical allusions. See Erdman, pp 84-100\\n[90-110].  R. J. Shroyer, in an article in <title level=\"s\"><span class=\"tei-hi-italic\">\\nBlake Quarterly</span></title> 12(1979) 250-58, finds <quote>&#8220;Jacko&#8221;</quote> a more probable allusion to 1785 and argues that most of the topics\\nwere still news in that year; but Everett Frost, in a forthcoming article,\\nemphasizes that the strongest evidence for an early date is the freshness\\nof the topics. </p></note>'","tn449.2":"b'<note id=\"tn449.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">P 1 endeavouring to conceal his] endeavoured to conceal\\nthe 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn450.1":"b'<note id=\"tn450.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Elder] <span class=\"tei-hi-italic\">mended from</span> Older This suggests\\nthat two of the &#8220;philosophers&#8221; are brothers.  If Quid, the older,\\nis William Blake, as is generally supposed, then Suction may be his younger\\nbrother, Robert.</p></note>'","tn451.1":"b'<note id=\"tn451.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     P 3 M<sup>rs</sup> Sigtagatist] &amp;\\nthe three Philosophers com[in]g Quid the Cynic, Sipsop the Pythagorean &amp;\\nSuction the Epicurean enterd the room 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn451.2":"b'<note id=\"tn451.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Arse] 2<span class=\"tei-hi-italic\">nd rdg del; presumably restored\\nby the asterisk;</span> ass 1<span class=\"tei-hi-italic\">st and</span> 3<span class=\"tei-hi-italic\">rd rdg</span></p></note>'","tn451.3":"b'<note id=\"tn451.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  Hay] <span class=\"tei-hi-italic\">preceded by deletion:</span> Obtuse\\nAngle ?exclaimd     Epicurean] followed by short illegible word ending in <quote>&#8220;f&#8221;</quote></p></note>'","tn453.1":"b'<note id=\"tn453.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">P 5 why I know that] <span class=\"tei-hi-italic\">replacing deletion:\\n</span> ?obj Obtuse ?Angle     how it is] followed by thorough erasure and deletion\\nof several words</p></note>'","tn456.1":"b'<note id=\"tn456.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     8:1-4] paraphrase of the opening lines of <span class=\"tei-hi-italic\">\\nUrania</span> (1630) by John Taylor, the Water Poet (see Everett Frost in <span class=\"tei-hi-italic\">Notes &amp; Queries</span> Feb 1979 pp 48-49)</p></note>'","tn456.2":"b'<note id=\"tn456.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">P 8 John Lookye Gent] Gent <span class=\"tei-hi-italic\">written over\\ndeleted</span> Gentleman</p></note>'","tn457.1":"b'<note id=\"tn457.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9:4. lambkins] <span class=\"tei-hi-italic\">mended from</span>lambs do\\n</p></note>'","tn457.2":"b'<note id=\"tn457.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9:9-10] compare <quote>&#8220;Happy Insect! What can\\nbe / In Happiness compar\\'d to thee?&#8221;</quote>&#8212;a couplet from Cowley\\nquoted in the 1702 edn of Edward Bysshe\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Art\\nof Poetry</span></title> (see p 696 above and, earlier, the <quote>&#8220;happy\\nfly&#8221;</quote> of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title>).\\n</p></note>'","tn459.1":"b'<note id=\"tn459.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11:5 Sing cock] This frog 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn460.1":"b'<note id=\"tn460.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12:18 panteth] <span class=\"tei-hi-italic\">mended from</span> panted\\n</p></note>'","tn461.1":"b'<note id=\"tn461.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12:19, 20 chimneys . . . windows] windows . . . chi\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn461.3":"b'<note id=\"tn461.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13:6 jet] <span class=\"tei-hi-italic\">mended from</span> git</p></note>'","tn462.1":"b'<note id=\"tn462.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:8 And all in order sit waiting the chief chanters\\ncommands 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn463.1":"b'<note id=\"tn463.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:9-10 Then like a mighty wind . . . / . . . seats\\nof heavn among] <span class=\"tei-hi-italic\">This couplet was first followed (probably as\\nan alternative) by:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>When the whole multitude of innocents their voices raise</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like angels on the throne of heavn raising the voice of praise</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&#8212;though possibly Blake considered keeping the two couplets,\\ndespite their redundancy, as his third stanza.  Following, after a stanza\\nspace, he wrote a line with no rhyming partner:</p></note>'","tn463.2":"b'<note id=\"tn463.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">He then deleted, perhaps in one swoop, the fourth line\\nof stanza 2 (line 8; see above) writing its replacement in the stanza break;\\nboth couplets of stanza 3 (if he had not deleted the first earlier); and the <quote>&#8220;Cherubim&#8221;</quote> line, below which, leaving some space, he wrote\\nout his final stanza 3, restoring the first couplet unchanged and adding the\\nnew lines 11-12. (For the final draft, slightly modified, see <quote>&#8220;Holy\\nThursday&#8221;</quote> in <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence.\\n</span></title>)</p></note>'","tn463.3":"b'<note id=\"tn463.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:1 When the tongues] The voice 1<span class=\"tei-hi-italic\">st rdg\\ndel</span>; The tongues 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn463.4":"b'<note id=\"tn463.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:2 laughing is heard on] laughing upon 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn463.5":"b'<note id=\"tn463.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14:5 home . . . down] borne children the sun is down\\n1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn463.6":"b'<note id=\"tn463.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:10 go to sleep] 1<span class=\"tei-hi-italic\">st and</span> 3<span class=\"tei-hi-italic\">\\nrd rdg;</span> sleep till its dark 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn463.7":"b'<note id=\"tn463.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:11 The flocks are at play &amp; we cant go away 1<span class=\"tei-hi-italic\">st rdg del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(For the final draft see <quote>&#8220;Nurse\\'s\\nSong&#8221;</quote> in <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence.</span></title>)\\n</p></note>'","tn463.8":"b'<note id=\"tn463.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">(For the final draft see <quote>&#8220;The Little Boy\\nlost&#8221;</quote> in <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence.</span></title>)\\n</p></note>'","tn464.1":"b'<note id=\"tn464.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:6 tansey] turd 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn464.2":"b'<note id=\"tn464.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:10 He has given me a black eye] To hit me with the\\nbat 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn464.3":"b'<note id=\"tn464.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:12 Any more than a<span class=\"tei-del\">[<span class=\"tei-hi-italic\">ny bird the\\n</span>]</span>&lt;dog or a&gt; cat</p></note>'","tn464.4":"b'<note id=\"tn464.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15:1 No space is left in the ms for <quote>&#8220;me&#8221;</quote>.  Everett Frost deduces that Miss Gittipin has already faded away;\\nbut scribal haste is probably the explanation.  Blake was writing rapidly;\\nhe almost left out the <quote>&#8220;O&#8221;</quote> (first writing an <span class=\"tei-hi-italic\">l</span> for <quote>&#8220;leave&#8221;</quote> in its place).</p></note>'","tn464.5":"b'<note id=\"tn464.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16:3 in] into 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn464.6":"b'<note id=\"tn464.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16:5] two deleted lines follow:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">If</span>]</span>&lt;How&gt; many Blackamoors\\n</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Coud sing with their thick lips</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn466.1":"b'<note id=\"tn466.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Three poems written in an unknown hand on the fly leaves\\nof a copy of <title level=\"m\"><span class=\"tei-hi-italic\">Poetical Sketches</span></title>\\n(1783) which was presented to someone with the inscription <quote>&#8220;from\\nMr. Flaxman May 15 1784&#8221;</quote> and is now in the Alexander Turnbull\\nLibrary, Wellington, New Zealand.  One of the poems, <quote>&#8220;Song 2nd\\nby A Young Shepherd&#8221;</quote>, is a variant of the <quote>&#8220;Laughing\\nSong&#8221;</quote> of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence</span></title>\\n(and is cited above in the notes to that poem).  Now collated with photographs\\npublished by D. F. McKenzie in <title level=\"s\"><span class=\"tei-hi-italic\">Turnbull Library\\nRecord,</span></title> 1, no 3 (1968) 4-8.</p></note>'","tn467.1":"b'<note id=\"tn467.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Most of the lyrics in Blake\\'s Notebook (the <quote>&#8220;Rossetti Manuscript&#8221;</quote>, now in the British Library, used\\nfrom before 1787 until as late as 1818 for drawings, verses, prose) were published\\nin <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience.</span></title>  The ms\\nvariants of these are given above in the textual notes to the <title level=\"m\"><span class=\"tei-hi-italic\">Songs.</span></title>  The present section begins with contemporaneous\\nlyrics (up through <title level=\"a\">&#8220;The Fairy&#8221;</title>) which\\nwere in effect rejected from that publication. These are arranged not as they\\nhappen to occur in the Notebook but by closeness of theme or imagery, so that\\nclusters of poems that seem to have suggested each other or to have derived\\nfrom a common inspiration may be read together.  Following these are a scattering\\nof later lyrics, given in approximate order of composition, dating from perhaps\\n1800 to 1808.  For other Notebook poems, see <title level=\"a\">&#8220;Satiric\\nVerses and Epigrams&#8221;</title>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Location in the Notebook is\\nindicated by page number following the abbreviation <span class=\"tei-hi-italic\">N.</span> Pages\\nused upside down and in reverse order are indicated by the abbreviation <quote>&#8220;rev&#8221;</quote>.  As now bound and numbered, pages 1-14 are out\\nof order; their original order (when used by Blake) was 5, 6, 9, 10, 13, 14,\\n11, 12, 7, 8, 1, 2, 3, 4, in the Library\\'s numbering.  But the present edition\\nemploys the original sequence, as restored in the Erdman-Moore facsimile edition\\nof the <title level=\"m\"><span class=\"tei-hi-italic\">Notebook</span></title> (1973, rev. 1977).\\n</p></note>'","tn467.2":"b'<note id=\"tn467.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The poem developed out of the first four lines, and\\nthese were then deleted line by line.  Editors are in agreement that the poem\\ncannot stand without its first stanza&#8212;as Blake would surely have discovered\\nif he had chosen to transfer it to copper. (Lines deleted in ms were restored\\nin such poems as <title level=\"a\">&#8220;Earth\\'s Answer&#8221;</title> [third\\nstanza].)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 pain] seek 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn467.3":"b'<note id=\"tn467.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 O was no deny] He took her with a sigh 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn467.4":"b'<note id=\"tn467.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 fury] roughness 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn467.5":"b'<note id=\"tn467.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 And] But 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn467.6":"b'<note id=\"tn467.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Down . .  .  tore) Till he broke the pearly door 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn468.1":"b'<note id=\"tn468.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 3 was written first, followed by 4, 1, and 2; after\\nmuch revision these were rearranged by numbering in the present order.</p></note>'","tn468.2":"b'<note id=\"tn468.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Dreaming oer] Thou shalt taste 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn468.3":"b'<note id=\"tn468.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Little sorrows sit &amp; weep] Thou wilt every secret\\nkeep 1<span class=\"tei-hi-italic\">st rdg del;</span> Canst thou any secret keep 2<span class=\"tei-hi-italic\">\\nnd rdg changed to</span> Thou canst any Secret keep, <span class=\"tei-hi-italic\">then del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     An abortive 2nd stanza was begun but deleted: <quote>&#8220;Yet a little\\nwhile the moon / Silent&#8221;</quote></p></note>'","tn468.4":"b'<note id=\"tn468.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 5-8 were written as the 4th stanza, then\\nnumbered \"2\" when all stanzas were numbered in the final sequence.</p></note>'","tn468.5":"b'<note id=\"tn468.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Little pretty infant wiles] Such as burning youth\\nbeguiles 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn468.6":"b'<note id=\"tn468.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 feel] touch 1<span class=\"tei-hi-italic\">st rdg del</span>; stroke\\n2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn468.7":"b'<note id=\"tn468.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 steal] broke 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn468.8":"b'<note id=\"tn468.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 From . . . eye] O the cunning wiles that creep 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn468.9":"b'<note id=\"tn468.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 Infant . . . infant] Female . . . female 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn468.10":"b'<note id=\"tn468.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Punctuation and line and stanza divisions follow the\\nfair copy in Princeton University Library inscribed <quote>&#8220;W Blake\\n/ Lambeth / 1796&#8221;</quote>, the text of which is identical to final rdg\\nin the Notebook (in which lines 5-6 were written as one and line 9 did not\\nbegin a new stanza).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 to steal] if he\\'d steal 1<span class=\"tei-hi-italic\">st\\nrdg</span></p></note>'","tn468.11":"b'<note id=\"tn468.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 He turned] And he turnd 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn468.12":"b'<note id=\"tn468.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Holy] And holy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.1":"b'<note id=\"tn469.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 He] And he 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.2":"b'<note id=\"tn469.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 And] And he 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.3":"b'<note id=\"tn469.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 said] spoke 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.4":"b'<note id=\"tn469.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 And twixt earnest &amp; game 1<span class=\"tei-hi-italic\">st rdg\\n</span>; . . . joke 2<span class=\"tei-hi-italic\">nd rdg, del</span></p></note>'","tn469.5":"b'<note id=\"tn469.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 He enjoyd the da[me] 1<span class=\"tei-hi-italic\">st rdg</span>; .\\n. . lady 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn469.6":"b'<note id=\"tn469.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Salvaging unused lines from the <title level=\"a\">&#8220;Infant\\nSorrow&#8221;</title> stanzas of p 111 (see above, p 798), Blake first wrote\\ndown the <quote>&#8220;O how sick&#8221;</quote> couplet but then erased it\\nbefore the ink was dry.  He then copied the stanza numbered <quote>&#8220;1&#8221;</quote> and then canceled its second couplet, perhaps not before continuing\\nwith two more couplets from p 111 on the <quote>&#8220;bound-ground&#8221;</quote> rhyme:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>To a lovely mirtle bound</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Blossoms showring all around</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like to dung upon the ground</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Underneath my mirtle bound</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">He then canceled, selected, and rearranged lines to make the present\\npoem, all that remains not lined through in the Notebook, and he gave it a\\ntitle. (A similar process of reduction takes place with the <quote>&#8220;Fayette&#8221;</quote> lines.  See below.)</p></note>'","tn469.7":"b'<note id=\"tn469.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Five poems are grouped here in accordance with Blake\\'s\\npenciled memorandum, on p 101 reversed (see text p 695).  <quote>&#8220;Thou\\nhast a lap full of seed&#8221;</quote> is included conjecturally: it seems\\nto be the only current poem that would fit the title <quote>&#8220;Experiment&#8221;</quote>. No plate is extant containing these five poems; indeed none of these\\npoems is lined through vertically to indicate transfer to a plate, except\\nthe <quote>&#8220;lap full&#8221;</quote> poem.</p></note>'","tn469.8":"b'<note id=\"tn469.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Shall I] Oft Ive 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.9":"b'<note id=\"tn469.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 turn] turnd 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn469.10":"b'<note id=\"tn469.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 For] But 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.1":"b'<note id=\"tn470.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 tearing] pulling 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.2":"b'<note id=\"tn470.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 countless we 1<span class=\"tei-hi-italic\">st rdg del;</span> count\\n2<span class=\"tei-hi-italic\">nd rdg del</span> (the poet wavering between <quote>&#8220;wealth&#8221;</quote> and <quote>&#8220;countless&#8221;</quote>)</p></note>'","tn470.3":"b'<note id=\"tn470.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 indolent] idle man 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.4":"b'<note id=\"tn470.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 secret] cunning 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.5":"b'<note id=\"tn470.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 trap] catch 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.6":"b'<note id=\"tn470.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 You can] Youll 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn470.7":"b'<note id=\"tn470.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 binds] Previous editors have wavered between <quote>&#8220;bends&#8221;</quote> and <quote>&#8220;binds&#8221;</quote>, but the\\ndot on the <span class=\"tei-hi-italic\">i</span> is visible in strong light (the whole poem\\nis in pencil)      to himself] himself to 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn470.8":"b'<note id=\"tn470.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 who kisses] who just kisses 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn470.9":"b'<note id=\"tn470.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 eternity\\'s] an eternal 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn470.10":"b'<note id=\"tn470.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Second attempt at an <title level=\"a\">&#8220;Experience&#8221;\\n</title> counterpart to <title level=\"a\">&#8220;The Divine Image&#8221;</title>;\\nwritten after <title level=\"a\"><span class=\"tei-hi-italic\">A Divine Image</span></title> (which\\nsee); very faintly lined through vertically and abandoned for a quite different\\nversion, <title level=\"a\">&#8220;The Human Abstract&#8221;</title>, which\\nbecame a Song of Experience.</p></note>'","tn470.11":"b'<note id=\"tn470.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Pity Peace] Pity &amp; Peace 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn470.12":"b'<note id=\"tn470.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 At his curse] Thus he sang &amp; 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn471.1":"b'<note id=\"tn471.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 Down] And down 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn471.2":"b'<note id=\"tn471.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19-20 And . . . Peace]</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Mercy &amp; Pity &amp; Peace descended</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  The Farmers were ruind &amp; harvest was ended 1<span class=\"tei-hi-italic\">st rdg \\n              del</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Mercy Pity &amp; Peace</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Joyd at their increase</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>With Povertys Increase</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    Are                      2<span class=\"tei-hi-italic\">nd rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And by distress increase</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>    Mercy Pity Peace         3<span class=\"tei-hi-italic\">rd rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>By Misery to increase</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Mercy Pity Peace         4<span class=\"tei-hi-italic\">th rdg del</span></span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn471.3":"b'<note id=\"tn471.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lined through vertically, as if after copying, but not\\nextant elsewhere.  Title crowded in after composition; first written without\\nthe<quote>&#8220;To&#8221;.</quote></p></note>'","tn471.4":"b'<note id=\"tn471.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Father] Man 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn471.5":"b'<note id=\"tn471.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 9-10 were an afterthought, crowded in as one line.</p></note>'","tn471.6":"b'<note id=\"tn471.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 females loud] feminine 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn471.7":"b'<note id=\"tn471.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lined through vertically, but not extant elsewhere.</p></note>'","tn472.1":"b'<note id=\"tn472.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Heavily deleted, and unfinished.  Visually, the poem\\nthat immediately follows, <title level=\"a\">&#8220;The Human Abstract&#8221;\\n</title> (see  <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Experience</span></title>),\\nlooks like a continuation of the same poem, the title being inserted later.\\n</p></note>'","tn472.2":"b'<note id=\"tn472.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake may only tentatively have considered these two\\nstanzas, written on separate pages, as one poem; he added the title after\\ncomposition and later deleted it.</p></note>'","tn472.3":"b'<note id=\"tn472.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Lawless] Always 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn472.4":"b'<note id=\"tn472.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 confind] inclind 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn472.5":"b'<note id=\"tn472.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Lawful . . . refind] Modest prudish &amp; confind\\n1<span class=\"tei-hi-italic\">st rdg del</span>     &amp; refind] 2nd rdg del</p></note>'","tn472.6":"b'<note id=\"tn472.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 To every thing but] Never is to 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn472.7":"b'<note id=\"tn472.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 And . . . mind] And chains &amp; fetters every mind\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn472.8":"b'<note id=\"tn472.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The 2nd and 3rd stanzas were written first; the introductory\\nstanza and explanatory title were written two pages later. Previous misreading\\nof <quote>&#8220;fond&#8221;</quote> as <quote>&#8220;found&#8221;</quote>\\nin line 5, 1<span class=\"tei-hi-italic\">st rdg</span>, has obscured the original Innocence\\ntheme.</p></note>'","tn472.9":"b'<note id=\"tn472.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 flower] thistle 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn472.10":"b'<note id=\"tn472.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 slept] was fond 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn473.1":"b'<note id=\"tn473.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lined through vertically, but not extant elsewhere.</p></note>'","tn473.2":"b'<note id=\"tn473.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 And . . . crime] Ah that sweet love should be thought\\na crime 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn473.3":"b'<note id=\"tn473.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Trace of an erased title, beginning with <quote>&#8220;T&#8221;</quote>&#8212;perhaps <quote>&#8220;Thames&#8221;</quote>; text is lined\\nthrough vertically&#8212;perhaps when <quote>&#8220;chartered&#8221;</quote>\\nwas taken over to the <quote>&#8220;London&#8221;</quote> poem.</p></note>'","tn473.4":"b'<note id=\"tn473.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 The Ohio shall . . . me] 8 go] long 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn473.5":"b'<note id=\"tn473.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 go] long 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn473.6":"b'<note id=\"tn473.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Crossed out with a heavy vertical line, but not found\\nelsewhere.</p></note>'","tn473.7":"b'<note id=\"tn473.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Sun] day 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn473.8":"b'<note id=\"tn473.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 bosom] ancles 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn474.1":"b'<note id=\"tn474.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 flaming hair <span class=\"tei-hi-italic\">mended</span> (over what was\\nprobably only a bad scribble for the same two words)</p></note>'","tn474.2":"b'<note id=\"tn474.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The two stanzas were written in reverse order but then\\nnumbered 2, 1.</p></note>'","tn474.3":"b'<note id=\"tn474.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Five Poems, which Blake grouped first in the order 4,\\n2, 3, 1, 5, then numbered to go in the present order&#8212;though the fourth\\nwas intermediately numbered 3.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The first poem is repeated from <span class=\"tei-hi-italic\">N</span> 105, where it was titled <quote>&#8220;Eternity&#8221;</quote>;\\nthe second and third from <span class=\"tei-hi-italic\">N</span> 1O3, untitled; the fourth from <span class=\"tei-hi-italic\">N</span> 103, titled <quote>&#8220;The Question answerd&#8221;</quote>;\\nthe fifth from <span class=\"tei-hi-italic\">N</span> 107, with the title repeated here.  The\\nvariants are given below:</p></note>'","tn474.4":"b'<note id=\"tn474.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 These are Beautys sweetest dress] Line added, on\\np 103, after cancellation of an introductory question: <quote>&#8220;Which\\nare beauties sweetest dress&#8221;</quote>.  The poem began as question and\\nanswer, was changed to pure answer.</p></note>'","tn474.5":"b'<note id=\"tn474.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 in women] of women 1<span class=\"tei-hi-italic\">st rdg p</span> 103\\n</p></note>'","tn475.1":"b'<note id=\"tn475.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 in men] of men 1<span class=\"tei-hi-italic\">st rdg p</span> 103</p></note>'","tn475.2":"b'<note id=\"tn475.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 that-------------] that place 1<span class=\"tei-hi-italic\">st rdg\\np</span> 107; that man 2<span class=\"tei-hi-italic\">nd rdg p</span> 1O7. (Was the long dash put\\nin to avoid writing <quote>&#8220;palace&#8221;</quote>? See <quote>&#8220;London&#8221;</quote> line 12.)</p></note>'","tn475.3":"b'<note id=\"tn475.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 Youll] Twill 1<span class=\"tei-hi-italic\">st rdg del</span>, p 99\\n</p></note>'","tn475.4":"b'<note id=\"tn475.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Title] The Marriage Ring 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn475.5":"b'<note id=\"tn475.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 step] tread 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn475.6":"b'<note id=\"tn475.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 But] And 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn475.7":"b'<note id=\"tn475.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18-20</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Hes my butterfly</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And a marriage ring</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Is a foolish thing 1<span class=\"tei-hi-italic\">st rdg</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Hes my butterfly</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&amp; Ive pulld out the Sting</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And a marriage ring</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Is a childs play thing 2<span class=\"tei-hi-italic\">nd rdg</span></span></span><span class=\"tei-line-number\"/></li></ol><pb n=\"856\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The sequence can be made out because the first changes\\nwere made in pale ink, the later in dark ink.  The title change was made in\\npale ink and indicates the striking change of emphasis in the revisions of\\n18-20.  In the first draft the tenor is that the fairy\\'s belief in the power\\nof the ring is shown by my act of catching him: the fact that he\\'s my fly\\nproves the ring foolish. The second reading is ambiguous, with emphasis swinging\\ntoward the speaker: I have pulled out the sting of the superstition and rendered\\nthe ring powerless.  In the final version (given in the text, above) the change\\nfrom <quote>&#8220;&amp;&#8221;</quote> to <quote>&#8220;For&#8221;</quote>\\nrenders the act undated, or predated: <span class=\"tei-hi-italic\">Because</span> I have (already)\\ndestroyed the beguiling power of marriage, I can capture the fairy, without\\nbinding him.  He can remain a winged joy, my butterfly.</p></note>'","tn475.8":"b'<note id=\"tn475.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">&amp;c] <span class=\"tei-hi-italic\">written over a capital</span> D \\n    No further trace of the poem is found.</p></note>'","tn475.9":"b'<note id=\"tn475.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 1-32 on p 13, the rest on p 12</p></note>'","tn475.10":"b'<note id=\"tn475.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 My] I 1<span class=\"tei-hi-italic\">st rdg del</span>      Nine drafts\\ncan be distinguished in Blake\\'s revision and expansion of the ms on these\\npages.  He began with a fair copy (draft A) of seven stanzas, of which stanzas\\na, d, e, f, g survive almost unaltered as the first, third, fifth, sixth,\\nand eighth of the text here printed.  Canceled stanzas b and c, with revisions\\nand numbering, read:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Her</span>]</span>&lt;/del&gt;&lt;Thy&gt; weeping <span class=\"tei-del\">[<span class=\"tei-hi-italic\">She</span>]</span>&lt;thou&gt; shall\\nneer give oer</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   I sin against <span class=\"tei-del\">[<span class=\"tei-hi-italic\">her</span>]</span>&lt;thee&gt;\\nmore&#8212;&amp; more</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">El</span>]</span>&lt;And&gt; never will from\\nsin be free</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Till she forgives &amp; comes to me</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>               [4] <span class=\"tei-del\">[&lt;5&gt;]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Thou hast parted from my side</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Once thou wast a virgin bride</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   Never shalt thou a <span class=\"tei-del\">[<span class=\"tei-hi-italic\">lover</span>]</span>&lt;true\\nlove&gt; find</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>My Spectre follows thee Behind</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">One and then another replacement was written for stanza b, thus (as\\nnumbered for various arrangements):</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>       [3] &lt;4&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>1 When my Love did first begin</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>2 Thou didst call that Love a Sin</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>3 Secret trembling night &amp; day</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>4 Driving all my Loves away</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>2</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-del\">[<span class=\"tei-hi-italic\">To</span>]</span>&lt;<span class=\"tei-hi-italic\">In</span>&gt;\\n<span class=\"tei-hi-italic\">a dark cold winter night</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   A deep winter <span class=\"tei-del\">[<span class=\"tei-hi-italic\">night</span>]</span> dark &lt;&amp;&gt; cold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Within my <span class=\"tei-del\">[loves]</span> Heart</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Within my heart thou didst unfold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>A Fathomless &amp; boundless deep</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>There we wander there we weep</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The numbering of lines was made to indicate their taking the place\\nof a trial stanza made of lines 2 and 3 and the first two lines of canceled\\nstanza b. Later these stanzas were lined through and levied upon for the final\\nsecond stanza, written last on p 12 but at once numbered <quote>&#8220;2&#8221;</quote>.</p></note>'","tn476.1":"b'<note id=\"tn476.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13-16 Dost . . . tears] This stanza was written alongside\\nstanza 3 and inscribed <quote>&#8220;To come in&#8221;</quote>; in various\\nrevisions it was numbered <quote>&#8220;6&#8221;</quote> then <quote>&#8220;3&#8221;</quote> then <quote>&#8220;4&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     13 Dost] Didst 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn476.2":"b'<note id=\"tn476.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19, 22 tombs] <span class=\"tei-hi-italic\">mended from</span> tomb (The <quote>&#8220;Loves&#8221;</quote> first lay in a single <quote>&#8220;tomb&#8221;</quote>,)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These and the remaining stanzas went through several\\nrenumberings but without change of relative position.</p></note>'","tn476.4":"b'<note id=\"tn476.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 Crown . . . head] <span class=\"tei-hi-italic\">written over a long\\nline</span> (the first word of which was <quote>&#8220;Pity&#8221;</quote> or <quote>&#8220;Pitying&#8221;</quote>)</p></note>'","tn476.5":"b'<note id=\"tn476.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 as I forgive] &amp; I forgive 1st rdg 33-56 These\\nstanzas on p 12 were numbered (and perhaps written) only after those on p\\n13 had been reduced to the final eight given in our text.</p></note>'","tn476.6":"b'<note id=\"tn476.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In stanza 11 a reversal of person from second to first\\nis made during or immediately after composition (in the same ink and pen):</p></note>'","tn476.7":"b'<note id=\"tn476.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">41 Till I] Till thou 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn476.8":"b'<note id=\"tn476.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 root] dig 1<span class=\"tei-hi-italic\">st rdg del</span>      Infernal] <span class=\"tei-hi-italic\">mended from</span> infernal</p></note>'","tn476.9":"b'<note id=\"tn476.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43 I shall] Thou shalt 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn477.1":"b'<note id=\"tn477.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">45 And] <span class=\"tei-hi-italic\">written over</span> I</p></note>'","tn477.2":"b'<note id=\"tn477.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">46 thee] <span class=\"tei-hi-italic\">mended from</span> thou</p></note>'","tn477.3":"b'<note id=\"tn477.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">53-56 This stanza, numbered 14, is in pencil; so are\\nthe following four, the first two of which are numbered 1 and 2 as if to begin\\na new poem.  I have treated them as such here (i.e. as a Postscript); yet\\nit is possible that Blake meant 1 and 2 (dropping the third and fourth, which\\nhe left unnumbered) to replace the first two stanzas of the Spectre poem.\\n Such a final draft can be made to work perfectly <span class=\"tei-hi-italic\">if</span> the\\nthird stanza is skipped (i.e. if Postscript stanzas 1 and 2 are followed by\\nline 13).  The resulting poem of 13 stanzas (quite possibly intended by Blake)\\nwould be a direct dialogue of a male and female without reference to Spectre\\nor Emanation and without differentiation (not sustained anyway) between the <quote>&#8220;I&#8221;</quote> speaking and <quote>&#8220;My Spectre&#8221;</quote>.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     For a full discussion, see the 1973, 1977 facsimile edition of\\nBlake\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Notebook.</span></title></p></note>'","tn477.4":"b'<note id=\"tn477.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Here too there is a shift of pronouns, with the accusation\\nnow directed back to <quote>&#8220;Thou&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 my Sins\\nThou] thy Sins I 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn477.5":"b'<note id=\"tn477.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Hast . . . own] Have I no Sins of my own 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn477.6":"b'<note id=\"tn477.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 my Sins thou] thy Sins I 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn477.7":"b'<note id=\"tn477.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 thy] my 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn477.8":"b'<note id=\"tn477.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 And] <span class=\"tei-hi-italic\">written over</span> The</p></note>'","tn477.9":"b'<note id=\"tn477.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 blind] <span class=\"tei-hi-italic\">written over</span> mo (for \"mock\")\\n     mocking] <span class=\"tei-hi-italic\">mended from</span> mockers</p></note>'","tn479.1":"b'<note id=\"tn479.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 And] Then 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.2":"b'<note id=\"tn479.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 the Cupid Girls] surely a Womans 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn479.3":"b'<note id=\"tn479.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 cant interpret the thing] never learns so m uch 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.4":"b'<note id=\"tn479.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Now] When 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.5":"b'<note id=\"tn479.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 War] Armies 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.6":"b'<note id=\"tn479.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 thee . . . the Ungrateful] thy works . . . B ritains\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.7":"b'<note id=\"tn479.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Isle] Shore 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn479.8":"b'<note id=\"tn479.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 smile] roar 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.1":"b'<note id=\"tn480.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Dedication of the edition of Blair\\'s <span class=\"tei-hi-italic\">Grave\\n</span> illustrated by Blake\\'s drawings (engraved by Louis Schiavonetti) and\\npublished by R. H. Cromek in 1808.  Written between April 17 and 20, 1807.\\nSee G. E. Bentley, Jr., <title level=\"m\"><span class=\"tei-hi-italic\">Modern Philology,</span></title>\\nMay 1974., p 375.</p></note>'","tn480.2":"b'<note id=\"tn480.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Dedication of the painting <title level=\"m\"><span class=\"tei-hi-italic\">\\nSatan Calling up his Legions</span></title> (about 1808) said in Descriptive\\nCatalogue (item 9) to be dedicated to <quote>&#8220;a Lady&#8221;</quote>,\\ni.e. Egremont\\'s Countess. </p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 Caverns] Visions 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn480.3":"b'<note id=\"tn480.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 But] Shed 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.4":"b'<note id=\"tn480.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 What] Egr (for Egremonts) 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn480.5":"b'<note id=\"tn480.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 dauntless] dare to 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.6":"b'<note id=\"tn480.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 Can]dare 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.7":"b'<note id=\"tn480.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 flames]waves 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.8":"b'<note id=\"tn480.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 Noble]worthy 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn480.9":"b'<note id=\"tn480.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 unchangd] shall still 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn481.1":"b'<note id=\"tn481.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Friends &amp;] Friendship 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn481.2":"b'<note id=\"tn481.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13-20 <span class=\"tei-hi-italic\">marginal insertion</span></p></note>'","tn481.3":"b'<note id=\"tn481.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 For my] For all that my 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn481.4":"b'<note id=\"tn481.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 So as] So as sure as 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn481.5":"b'<note id=\"tn481.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 for] of 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn481.6":"b'<note id=\"tn481.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A leaf in the Rosenwald Collection; on the back is a\\ndrawing of  <title level=\"m\">The Infant Hercules.</title></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 skipd] <span class=\"tei-hi-italic\">written above and partly on top of</span> leapt 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn482.2":"b'<note id=\"tn482.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     These two poems are inscribed in Blake\\'s volume\\nof watercolor illustrations to Gray\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Poems,\\n</span></title> commissioned by John Flaxman in 1797 for his wife\\'s library.\\n</p></note>'","tn482.3":"b'<note id=\"tn482.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A collection made for some friend or patron : fair copies\\nof 10 poems inscribed by Blake on 11 leaves, paginated by him 1-22; owned\\nby B. M. Pickering in 1866; now in the Pierpont Morgan Library.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> The poems appear to belong to the late Felpham period;\\nSampson (p 267) argues a date of about 1803 (<span class=\"tei-hi-italic\">Mary</span> was obviously\\nwritten before that August) and observes that they <quote>&#8220;have a certain\\nunity of their own&#8221;</quote>&#8212;but this might be due to selection\\nrather than to composition within a brief period.  They are all ballads&#8212;-or\\nin ballad measure&#8212; ranging from the lyrical to the gnomic.  Bentley\\n(<title level=\"m\"><span class=\"tei-hi-italic\">Blake Books</span></title> 341-342) gives 1800-4.\\nas probable dates of original composition.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The earliest date of\\ninscription is June or July 1802, for he notes that the ms is on leaves from\\nHayley\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Ballad</span></title> of that time. \\nBentley thinks Blake would not have used this paper until after 1805, probably\\nafter 1807.</p></note>'","tn483.1":"b'<note id=\"tn483.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The draft in <span class=\"tei-hi-italic\">N</span> 6 obviously precedes\\nthis version, and I treat its variants as abandoned (though not lined through).\\nYet the change to <quote>&#8220;iron wire&#8221;</quote> may have been made\\nfirst in the Pickering fair copy.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Preceded in <span class=\"tei-hi-italic\">N</span>\\nby the line:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Beneath the white thorn lovely May</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn483.2":"b'<note id=\"tn483.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3-4 Lines added during revision of <span class=\"tei-hi-italic\">N.</span></p></note>'","tn483.3":"b'<note id=\"tn483.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5-13 In their original sequence; but at one time Blake\\nnumbered these lines 3, 4, 5, 6, 1, 2, 7, 8, 9; at one time he canceled lines\\n11-14.</p></note>'","tn483.4":"b'<note id=\"tn483.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 iron wire] sweet desire 1<span class=\"tei-hi-italic\">st rdg del</span>\\nN; Iron wire <span class=\"tei-hi-italic\">final rdg N</span></p></note>'","tn483.5":"b'<note id=\"tn483.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 tears &amp; sighs] sighs &amp; tears 1<span class=\"tei-hi-italic\">\\nst rdg del N</span></p></note>'","tn483.6":"b'<note id=\"tn483.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-14 Lines canceled in <span class=\"tei-hi-italic\">N;</span> replaced\\nin adjacent column by:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Wings they had [<span class=\"tei-hi-italic\">&amp; when they chose</span>] &lt;that\\nsoft                inclose&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>&lt;Round their body when they chose&gt;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>They would let them down at will</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>  Or make translucent <span class=\"tei-hi-italic\">also canceled</span></span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn483.7":"b'<note id=\"tn483.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 on] by <span class=\"tei-hi-italic\">N</span></p></note>'","tn483.8":"b'<note id=\"tn483.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 Over] Oer <span class=\"tei-hi-italic\">N</span></p></note>'","tn483.9":"b'<note id=\"tn483.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 Burning] flame 1<span class=\"tei-hi-italic\">st rdg del N</span>; flaming <span class=\"tei-hi-italic\">final rdg N</span></p></note>'","tn483.10":"b'<note id=\"tn483.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 Iron Wire] sweet desire 1<span class=\"tei-hi-italic\">st rdg del\\nN</span>; iron wire <span class=\"tei-hi-italic\">final rdg N</span></p></note>'","tn483.11":"b'<note id=\"tn483.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 O when will the] When O when will 1<span class=\"tei-hi-italic\">\\nst rdg N</span></p></note>'","tn483.12":"b'<note id=\"tn483.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A neat copy but not exactly <quote>&#8220;fair copy&#8221;</quote>; parts or all of the following lines are written over extensive erasures:\\n57, 84-90.</p></note>'","tn485.1":"b'<note id=\"tn485.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">84 roams the Lion Wolf &amp; Boar] Keynes silently emends\\nto <quote>&#8220;roam&#8221;</quote>, but the singular verb may not be a mistake:\\nthe female flees <quote>&#8220;like the . . . Stag&#8221;</quote>, the male <quote>&#8220;pursues her&#8221;</quote> as Lion Wolf &amp; Boar <quote>&#8220;Till\\nhe becomes a . . . Babe&#8221;</quote>, all metamorphoses of one person.</p></note>'","tn485.2":"b'<note id=\"tn485.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">85 wayward] ?weeping 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn485.3":"b'<note id=\"tn485.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">86 And she] And she becomes a 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn486.2":"b'<note id=\"tn486.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">96 Every] <span class=\"tei-hi-italic\">mended from</span> every</p></note>'","tn487.1":"b'<note id=\"tn487.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Compare verses in the letter of 16 August 18O3 (below),\\nwhere Blake <span class=\"tei-hi-italic\">applies</span> the sixth stanza to \"my Present state\"\\nand hence must be writing after its composition.</p></note>'","tn487.2":"b'<note id=\"tn487.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Golden] <span class=\"tei-hi-italic\">mended from</span> golden</p></note>'","tn487.3":"b'<note id=\"tn487.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 Envious] <span class=\"tei-hi-italic\">mended from</span> envious</p></note>'","tn487.4":"b'<note id=\"tn487.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">32 Envy be free] Envy is free 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn488.1":"b'<note id=\"tn488.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 lovely] <span class=\"tei-hi-italic\">written over erasure</span></p></note>'","tn489.1":"b'<note id=\"tn489.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Derived from a much longer draft in the Notebook (p\\n8) from which the 7 stanzas in <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>\\n52 were later taken. In the following tally of variants (excluding differences\\nof capitalization) <span class=\"tei-hi-italic\">N</span> represents the Notebook draft. Stanzas\\n2 and 8 are variants of stanzas 3 and 7 of <title level=\"m\"><span class=\"tei-hi-italic\">\\nJerusalem</span></title>.  In the Notebook this poem immediately precedes <quote>&#8220;Mock on ...&#8221;</quote>.</p></note>'","tn489.2":"b'<note id=\"tn489.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 die] will die <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.3":"b'<note id=\"tn489.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 the Stony Bed) her stony bed <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.4":"b'<note id=\"tn489.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-12 Identical to final rdg <span class=\"tei-hi-italic\">N</span>, developed\\nfrom a deleted line: <quote>&#8220;From his dry tongue these accents flow&#8221;</quote> (<span class=\"tei-hi-italic\">N</span>)</p></note>'","tn489.5":"b'<note id=\"tn489.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 this] thy 1<span class=\"tei-hi-italic\">st rdg del N</span></p></note>'","tn489.6":"b'<note id=\"tn489.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 the writing I wrote] that All I wrote <span class=\"tei-hi-italic\">\\nN</span></p></note>'","tn489.7":"b'<note id=\"tn489.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 lovd] love <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.8":"b'<note id=\"tn489.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">19 I mockd] [<span class=\"tei-hi-italic\">But</span>] I mockd <span class=\"tei-hi-italic\">\\nN</span></p></note>'","tn489.9":"b'<note id=\"tn489.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 mocks) mocks at <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.10":"b'<note id=\"tn489.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">22 marched] is marched <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.11":"b'<note id=\"tn489.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23 armd] armed <span class=\"tei-hi-italic\">N</span></p></note>'","tn489.12":"b'<note id=\"tn489.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">24 avenge] revenge <span class=\"tei-hi-italic\">N</span>; thy] they <span class=\"tei-hi-italic\">erroneous rdg N</span></p></note>'","tn489.13":"b'<note id=\"tn489.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 a Tear] the tear <span class=\"tei-hi-italic\">N</span></p></note>'","tn490.1":"b'<note id=\"tn490.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 of the Martyrs] for anothers 1<span class=\"tei-hi-italic\">st rdg\\ndel N</span></p></note>'","tn490.2":"b'<note id=\"tn490.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">33 found the Bed] sought the bed <span class=\"tei-hi-italic\">N</span></p></note>'","tn490.3":"b'<note id=\"tn490.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36] And usurpd the tyrants throne &amp; bed 1<span class=\"tei-hi-italic\">\\nst rdg del N</span></p></note>'","tn490.4":"b'<note id=\"tn490.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A fair copy but a hasty one, with much mending of letters,\\nespecially initial capitals in lines 119-124.  It is conceivable that Blake,\\nat greater leisure, might have rearranged the lines (as was his wont) in a\\nless desultory sequence.  Following the lead of John Sampson (p 287), who\\nprinted the text in ms order followed by a <quote>&#8220;revised version for\\nthose who may prefer to read the poem as a whole, instead of as a number of\\ndisconnected proverb-couplets&#8221;</quote>, and assisted by the specific\\nsuggestions of John Grant (in correspondence), I have presented a thematically\\ngrouped rearrangement, after the ms transcript.  I concede that Blake may\\nhave wished each reader to cope with this <quote>&#8220;Riddle&#8221;</quote>\\nby himself.  The <quote>&#8220;editorial arrangement&#8221;</quote> is not\\npresented as in any sense an improvement upon the text but as a thematic analysis\\nof it. <supplied>[not included in online text]</supplied></p></note>'","tn491.1":"b'<note id=\"tn491.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">52 on the Misers bags] <span class=\"tei-hi-italic\">mended from</span>\\nin</p></note>'","tn492.1":"b'<note id=\"tn492.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">126 see not Thro] see With 1<span class=\"tei-hi-italic\">st ms rdg</span></p></note>'","tn496.1":"b'<note id=\"tn496.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The words <quote>&#8220;Long&#8221;</quote> and <quote>&#8220;Little&#8221;</quote> were added to the title as an afterthought. \\nThese words were also added in the first stanza, depriving Mary of the adjective <quote>&#8220;Pretty&#8221;</quote> and John of <quote>&#8220;Young&#8221;</quote>\\n(though not&#8212;an oversight perhaps&#8212;in lines 8 and 9).</p></note>'","tn497.1":"b'<note id=\"tn497.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 O William] William 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn498.1":"b'<note id=\"tn498.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Mrs Blake\\'s record of Blake\\'s version of a traditional\\nrhyme.  Text from the Keynes and Wolf <title level=\"m\"><span class=\"tei-hi-italic\">Census\\n</span></title> (1953) p 64.  The manuscript, now lost, was once with W (ca\\n1825) of <title level=\"m\"><span class=\"tei-hi-italic\">Songs of Innocence and Experience.\\n</span></title>  The title suggests that it was written down by Mrs Blake.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     This is basically the text given in the <title level=\"m\"><span class=\"tei-hi-italic\">\\nOxford Dictionary of Nursery Rhymes</span></title> (1951) by Iona and Peter\\nOpie, pp 395-396.  The Opies quote several variant versions, none exactly\\nlike this&#8212;i.e. none having <quote>&#8220;o\\' top&#8221;</quote> for <quote>&#8220;up on&#8221;</quote> (line 3) or <quote>&#8220;kettle&#8221;</quote>\\nfor the usual <quote>&#8220;spit&#8221;</quote> in line 6. The name being <quote>&#8220;called&#8221;</quote> in line 6 varies widely; <quote>&#8220;blackamoor&#8221;</quote> is not listed in Opie.  The likelihood is that Blake made no changes\\nin the version he had learned.  Why, then, include this Rhyme in a collection\\nof his poetry? Because it is so often quoted as <quote>&#8220;his&#8221;</quote>\\nin a mistaken sense.</p></note>'","tn499.1":"b'<note id=\"tn499.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The abbreviation <span class=\"tei-hi-italic\">N</span> (Notebook) indicates\\npages written in right-side up; <quote>&#8220;<span class=\"tei-hi-italic\">N</span> rev&#8221;\\n</quote> indicates pages written in when reversed.</p></note>'","tn499.2":"b'<note id=\"tn499.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date.</span>  Some time after Oct 25, 1792,\\nwhen the London <title rend=\"s\"><span class=\"tei-hi-italic\">Times</span></title> reported Lafayette\\na prisoner in Wezel, Austria.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     These four stanzas and the three <quote>&#8220;Fayette&#8221;</quote> stanzas that follow are generically related\\nbut constitute in effect separate poems, the first canceled in favor of the\\nsecond, but the second also abandoned in the sense that it was left in the\\nNotebook and given no title.</p></note>'","tn499.3":"b'<note id=\"tn499.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Physicians] Pestilence 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn499.4":"b'<note id=\"tn499.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 <span class=\"tei-del\">[<span class=\"tei-hi-italic\">So</span>]</span> Every . . . slaughtering]\\nfollowed by another quatrain written as three lines and immediately deleted:\\n</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Damn praying &amp; singing</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Unless they will bring in</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The blood of ten thousand by fighting or swinging</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn499.5":"b'<note id=\"tn499.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     9 a great &amp; solemn Oath] a great Oath 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn500.1":"b'<note id=\"tn500.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 Famine] <span class=\"tei-hi-italic\">word del but not replaced</span></p></note>'","tn500.2":"b'<note id=\"tn500.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">18 And . . . robe] followed by a deleted couplet:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But the bloodthirsty people across the water</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Will not submit to the gibbet &amp; halter</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn500.3":"b'<note id=\"tn500.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 And . . . suckers . . . around] replacing a canceled\\nline:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>There is just such a tree at Java found</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Stanza 4 (<quote>&#8220;The King awoke&#8221;</quote>.) was written\\nas the 2nd stanza, followed by stanza 2 and the first couplet of 3 (the Oath\\nbusiness).  Blake then numbered twelve of these lines to make the <quote>&#8220;King&#8221;</quote> stanza the 3rd and the <quote>&#8220;Oath&#8221;</quote> couplet followed by the <quote>&#8220;quartering/slaughtering&#8221;</quote> couplet the 2nd, thus temporarily abandoning the <quote>&#8220;Nobodaddy&#8221;</quote> couplet.  But then he added lines 11-12 (the <quote>&#8220;hell/bell&#8221;</quote> couplet) and numbered his four stanzas in the order printed above,\\nthen or later adding the fifth stanza. Finally he canceled stanzas 2 and 3\\nwith vertical lines and also drew lines through his stanza and line numbers,\\napparently meaning to cancel this whole portion of the work in favor of the\\nFayette stanzas that were added below.</p></note>'","tn500.4":"b'<note id=\"tn500.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Below the last stanza of the preceding poem, and perhaps\\noriginally as a continuation of it although now separated by a horizontal\\nline, Blake wrote and then deleted the following:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Fayette Fayette thourt bought &amp; sold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For well I see thy tears</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of Pity are exchangd for those</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of selfish slavish fears</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Perhaps before deleting this stanza (just possibly before writing\\nit) he wrote three stanzas in the adjacent column, guided by a line to precede\\nit&#8212;or replace it:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Fayette beside King Lewis stood</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He saw him sign his hand</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And soon he saw the famine rage</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>About the fruitful land</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Fayette beheld the Queen to smile</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And wink her lovely eye</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And soon he saw the pestilence</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>From street to street to fly</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[1]  Fayette beheld the King &amp; Queen</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In tears &amp; iron bound</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But mute Fayette wept tear for tear</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And guarded them around</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">At some point the first two of these stanzas were firmly crossed out\\nand the third numbered <quote>&#8220;1&#8221;</quote>; later that number was\\nlined through, perhaps when the stanza was recopied on p 98:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">At\\nthe top of p 98 Blake began afresh, abandoning everything on p 99 that he\\ndid not repeat here:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Fayette beside his banner stood</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">His captains false around</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Thourt bought &amp; sold</span>]</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[3]  Who will exchange his own fire side</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For the steps of anothers door</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Who will exchange his wheaten loaf</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For the links of a dungeon floor</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Though only the numeral <quote>&#8220;3&#8221;</quote> of this stanza\\nis deleted, the whole stanza is rewritten farther down the page.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  \\n  But first Blake tried two lines of a variant, immediately canceled, and\\nthen four lines, later numbered <quote>&#8220;2&#8221;</quote> and later still\\ncrossed out:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Who will exchange his own hearts blood</span>]</span></span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\"> [<span class=\"tei-hi-italic\">For the drops of a harlots eye</span>]</span></span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>[2]  Will the mother exchange her new born babe</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For the dog at the wintry door</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Yet thou dost exchange thy pitying tears</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>For the links of a dungeon floor</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Before this stanza was deleted and before deletion of the numbers <quote>&#8220;1&#8221;</quote> and <quote>&#8220;3&#8221;</quote> alongside earlier\\nstanzas, Blake had his first version of a three-stanza poem of Fayette and\\nKing and Queen. But he went on to write a new first stanza:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>1</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Fayette Fayette thourt bought &amp; sold</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And sold is thy happy morrow</span></span><span class=\"tei-line-number\"/></li><pb n=\"863\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Thou gavest the tears of Pity away</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>In exchange for the tears of sorrow</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Before crossing this out Blake wrote <quote>&#8220;2&#8221;</quote>\\nbeside the first line, then <quote>&#8220;1&#8221;</quote> on top of that.\\n But then leaving a 3/4 inch space he began afresh, inscribing the three stanzas\\nprinted in our text&#8212;first the Fayette stanza, then the <quote>&#8220;fire\\nside&#8221;</quote> stanza, then the <quote>&#8220;wintry seas&#8221;</quote>\\nstanza.  He then renumbered them <quote>&#8220;2&#8221;</quote>, <quote>&#8220;3&#8221;</quote>, <quote>&#8220;1&#8221;</quote>; then changed the <quote>&#8220;3&#8221;</quote> to <quote>&#8220;1&#8221;</quote> and vice versa, producing the sequence\\nwe have used.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     While superficially the ms gives the appearance of\\na great many stanzas, sufficient to compose another Chattertonian ballad like <title level=\"a\"><quote>&#8220;Gwin, King of Norway&#8221;</quote></title>, it can\\nbe seen that with the Fayette stanzas Blake almost at once was aiming at a\\nthree-stanza triptych, a tableau poem of three mute figures like the three\\nin the frontispiece of<title level=\"m\"><span class=\"tei-hi-italic\">Visions of the Daughters\\nof Albion</span></title>&#8212; or the three <span class=\"tei-hi-italic\">Accusers</span> (see\\nInscriptions).  Most of his energy on these two manuscript pages, once the\\nFayette-King-Queen idea has grown out of the <quote>&#8220;Brothels&#8221;</quote> poem, is expended on arranging and rearranging a few simple rhetorical\\nquestions around the central frozen image of a moment of betrayal located\\nat the storm center of the French Revolution.</p></note>'","tn500.5":"b'<note id=\"tn500.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 stone] steps 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn500.6":"b'<note id=\"tn500.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 curses] tears 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn500.7":"b'<note id=\"tn500.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 &amp; Pity] Or Pity 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn500.8":"b'<note id=\"tn500.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date:</span> ca 1797-99, for Blake would\\nleave Lambeth in 1800. Klopstock had been declaring to English visitors that\\ntheir language was incapable of the epic grandeur of hexameters, and be had\\nspoken with scorn of English writers\\' coarseness of tone traceable to Swift.\\n Blake defiantly glories in his English tone in the present satire.  When\\nhe <quote>&#8220;sat down to write&#8221;</quote> it was evidently the <quote>&#8220;strong heroic verse&#8221;</quote> of  <title level=\"m\"><span class=\"tei-hi-italic\">\\nVala:</span></title> compare <quote>&#8220;terrible Blake&#8221;</quote> and\\nthe <quote>&#8220;oath that made heavn quake&#8221;</quote> (lines 2 and 5)\\nwith the <quote>&#8220;terrible Sentence&#8221;</quote> and heaven quaking\\nof the opening lines of <title level=\"m\"><span class=\"tei-hi-italic\">Vala.</span></title></p></note>'","tn500.9":"b'<note id=\"tn500.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 himself] self <span class=\"tei-hi-italic\">is an insertion above\\nthe line</span></p></note>'","tn500.10":"b'<note id=\"tn500.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13-14 <span class=\"tei-hi-italic\">added in margin</span></p></note>'","tn500.11":"b'<note id=\"tn500.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15 intripled] ninefold 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn500.12":"b'<note id=\"tn500.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 churn] burn 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn500.13":"b'<note id=\"tn500.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 And his bowels] They 1<span class=\"tei-hi-italic\">st rdg del</span>;\\n And 2<span class=\"tei-hi-italic\">d rdg del</span>    round] <span class=\"tei-hi-italic\">mended from</span>\\naround</p></note>'","tn501.1":"b'<note id=\"tn501.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">29 From pity then] Then after 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn501.2":"b'<note id=\"tn501.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">30 <span class=\"tei-hi-italic\">ninefold inserted above the line</span></p></note>'","tn501.3":"b'<note id=\"tn501.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">31 rose up from] sat down to 1<span class=\"tei-hi-italic\">st rdg del\\n</span>     31-32 written in margin to replace the following two lines, canceled\\nwith two slanting strokes:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>If thus Blake could Shite</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>What Klopstock did write</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn501.4":"b'<note id=\"tn501.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 swear it so] tell you so 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn501.5":"b'<note id=\"tn501.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 wont] <span class=\"tei-hi-italic\">mended from</span> would</p></note>'","tn501.6":"b'<note id=\"tn501.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Nature] <span class=\"tei-hi-italic\">first written with lower-case\\n</span> n</p></note>'","tn501.7":"b'<note id=\"tn501.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 After <quote>&#8220;said&#8221;</quote> Blake\\nfirst wrote <quote>&#8220;Beli&#8221;</quote>, a start for <quote>&#8220;Believe&#8221;</quote>; my previous reading <quote>&#8220;Rich&#8221;</quote> has been corrected\\nby G. E. Bentley, Jr.</p></note>'","tn501.8":"b'<note id=\"tn501.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 that they might make] to make 1<span class=\"tei-hi-italic\">st rdg\\n</span> (Blake evidently preferred to avoid a hexameter.  Two extra feet in\\nthe line seemed better than one.)</p></note>'","tn502.1":"b'<note id=\"tn502.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 formd of Joy &amp; Mirth] thou art formd for Mirth\\n1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn502.2":"b'<note id=\"tn502.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 King] <span class=\"tei-hi-italic\">mended from</span> Thing (but not\\nvery clear)</p></note>'","tn502.3":"b'<note id=\"tn502.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Be they as Vile . . . can] Friend Caiaphas is one\\ndo what he can 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn502.4":"b'<note id=\"tn502.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Theyll] He\\'ll 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn502.5":"b'<note id=\"tn502.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 fie fie] O no 1<span class=\"tei-hi-italic\">st rdg del</span> you shant]\\nneer shall 1 <span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn502.6":"b'<note id=\"tn502.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 In spite] For now 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn503.1":"b'<note id=\"tn503.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-2 1<span class=\"tei-hi-italic\">st rdg:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He is a Cock wont</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And would be a Crow if he could</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn503.3":"b'<note id=\"tn503.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These lines seem to begin in medias res, and the poem\\nmay well have begun and (originally) continued on leaves now missing, (There\\nis some evidence for this; see Notebook pp 5-6,     71-72.) In the lines inscribed\\non p 22 in fair copy (1-14, 31-37) Stothard (Stewhard), Blake\\'s former associate\\nwho joined Cromek  (Screwmuch] in preferring Schiavonetti (Assassinetti),\\nis     lamenting the latter\\'s death (June 1810).  In lines added in     the\\nleft and top margins (15-30) he recalls that Blake survived  his sedition\\ntrial of 1804 while others associated with it did   not, then alludes to the\\nweekly <title level=\"s\"><span class=\"tei-hi-italic\">Examiner\\'s</span></title> attack on Blake\\nas mad (17 Sept 1809) and the presumably ominous fate of the <quote>&#8220;weakly\\npaper&#8221;</quote> of <quote>&#8220;trembling Hare&#8221;</quote> (Prince\\nHoare\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Artist,</span></title> which failed to\\nsupport Blake and ceased publication in December 1809).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Lines 38-51,\\nadded in the right margin, declare Cromek     himself dead and gone, <quote>&#8220;Recievd&#8221;</quote> by Death and lamented by his    surviving fellow\\nconspirator; they must have been added after    Cromek\\'s death in March 1812.\\n Stothard\\'s anticipated demise     did not come until 1834.</p></note>'","tn503.4":"b'<note id=\"tn503.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     5 in his Mouth] For a monster bearing souls in\\nhis mouth, see Notebook 15-16&#8212;suggested by Bentley, <title level=\"m\"><span class=\"tei-hi-italic\">Blake Books</span></title> 325n.</p></note>'","tn503.5":"b'<note id=\"tn503.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 So Stewhards Soul] He would bear my soul 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn503.6":"b'<note id=\"tn503.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Stewhards] all my 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn504.1":"b'<note id=\"tn504.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">15-30 <span class=\"tei-hi-italic\">marginal addition</span></p></note>'","tn504.2":"b'<note id=\"tn504.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">16 trembling for the affront] Deadly the affront 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn504.3":"b'<note id=\"tn504.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 Jack Hemps Parson] my Parson 1<span class=\"tei-hi-italic\">st rdg\\n</span> Who was the parson of Jack Hemp (Flaxman) and of Stothard&#8212;or of\\neither in some sense?</p></note>'","tn504.4":"b'<note id=\"tn504.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">41 laughing] mocking 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn504.5":"b'<note id=\"tn504.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">42 Recievd the Contents] what one writes on the back\\nof a note when it is paid, i.e. a promissory note.</p></note>'","tn504.6":"b'<note id=\"tn504.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">43-44 1<span class=\"tei-hi-italic\">st rdg:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>But I have writ with tears of aqua fortis</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>His Epitaph so sorrowful my thought is</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn504.7":"b'<note id=\"tn504.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">45 Come] Ye 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn504.8":"b'<note id=\"tn504.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">46 our friend] your friend 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn504.9":"b'<note id=\"tn504.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">51 Here lies Stewhard the Friend of All &amp;c] Here\\nBlake is putting into Stewhard\\'s mouth the three <quote>&#8220;Epitaphs&#8221;</quote> just above, which perhaps should be considered part of the present\\npoem, changing <quote>&#8220;John Thompson&#8221;</quote> and <quote>&#8220;John\\nTrot&#8221;</quote> to Tom Stewhard. Friend] Fnd of 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn504.10":"b'<note id=\"tn504.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 followed by deleted line, the last word unfinished:\\n          Or angry with Boydell or Bowyer or Ba<supplied>[sire]</supplied></p></note>'","tn504.11":"b'<note id=\"tn504.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Macklin or Boydel or Bowyer] Boydell or Bowyer or\\nBasire 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn504.12":"b'<note id=\"tn504.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 <span class=\"tei-hi-italic\">written over erased line:</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Mirths all your sufferings convey sir</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn505.1":"b'<note id=\"tn505.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">First and much revised draft on pp 62 and 63; title\\non p 62; fair copy, without title, on p 65; Keynes, pp 595-596, separates\\nout the first draft (with one mistake, the including of <quote>&#8220;with\\njoy&#8221;</quote> in line 4), gives a composite of first and revised drafts\\non pp 554-555, and the fair copy on pp 555-556, but without all Blake\\'s renumbering\\nof lines for rearrangement. </p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Here we give the fair copy, with only\\na selection of earlier readings in the notes:</p></note>'","tn505.2":"b'<note id=\"tn505.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Bartolloze] feather Pillows 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn505.3":"b'<note id=\"tn505.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8] How many Thousand Connoisseurs ran raving 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn505.4":"b'<note id=\"tn505.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 Cries] Says 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn505.5":"b'<note id=\"tn505.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11-12 added first on p 63 (as direct statement)    \\n 11 Some say] <span class=\"tei-hi-italic\">added in fair copy</span></p></note>'","tn505.6":"b'<note id=\"tn505.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">12 that] <span class=\"tei-hi-italic\">added in fair copy</span>      nose]\\ntoes 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn505.7":"b'<note id=\"tn505.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">17 looking quite] Tom Cooke proves 1<span class=\"tei-hi-italic\">st\\nrdg del</span>; Looking up 2<span class=\"tei-hi-italic\">nd rdg</span>   Skumference] Circumference\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn505.8":"b'<note id=\"tn505.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">20 The following del lines in the revised 1st draft\\nwere evidently meant as a paraphrase of the <title level=\"s\"><span class=\"tei-hi-italic\">\\nExaminer\\'s</span></title> attack:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>who cries all art is a fraud &amp; Genius a trick</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And Blake is an unfortunate Lunatic</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The title was then crowded in above this addition, <quote>&#8220;Blakes\\napology&#8221;</quote> being his defense against the  <title level=\"s\"><span class=\"tei-hi-italic\">Examiner.</span></title></p></note>'","tn505.9":"b'<note id=\"tn505.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 tother] one 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn505.10":"b'<note id=\"tn505.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Virtuous] Righteous 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn505.11":"b'<note id=\"tn505.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 as a genius] as an<span class=\"tei-del\">[<span class=\"tei-hi-italic\">Artist</span>]\\n</span>&lt;Genius&gt;<span class=\"tei-hi-italic\">ms rdg</span></p></note>'","tn505.12":"b'<note id=\"tn505.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Apparently to Robert Hunt, who criticized Fuseli in\\n <title level=\"s\"><span class=\"tei-hi-italic\">The Examiner.</span></title></p></note>'","tn505.13":"b'<note id=\"tn505.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Plausibly identified in Keynes as <quote>&#8220;Phillips&#8221;</quote>, the publisher.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 He] But 1<span class=\"tei-hi-italic\">st rdg del</span>   and]\\nbut 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn506.1":"b'<note id=\"tn506.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 H------ the painter] interpreted as <quote>&#8220;Haines&#8221;</quote> by Keynes, only a plausible guess</p></note>'","tn506.2":"b'<note id=\"tn506.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The biographical evidence is clear that H and H&#8212;&#8212;y\\nin this and the following verses stand for Hayley.</p></note>'","tn506.3":"b'<note id=\"tn506.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 A peck of poisons not a peck of salt 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn507.1":"b'<note id=\"tn507.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This poem, now truncated, began as an <quote>&#8220;Epitaph\\nfor William Cowper Esq<sup>re</sup>&#8221;</quote>.  <quote>&#8220;Epitaph\\nfor&#8221;</quote> was deleted, as were the first four lines beginning <quote>&#8220;Here lies the Man&#8221;</quote>.  The second line appears to end <quote>&#8220;Hayley &amp; History&#8221;</quote> or <quote>&#8220;Hayley &amp; Victory&#8221;</quote>.  The whole passage seems to have named  Hayley as a callous friend\\nof Cowper, confounded by Cowper\\'s death and by the bookseller Johnson\\'s commission\\nto write his biography.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Blake\\'s thorough erasure of these four\\nlines does not necessarily indicate a change of heart toward Hayley, for what\\nBlake wrote in with a heavy pen to cover the erasure was the four-line outburst\\n(next following) which names <span class=\"tei-hi-italic\">Fuseli</span> as the only humane man <quote>&#8220;that eer I knew&#8221;</quote>.</p></note>'","tn507.2":"b'<note id=\"tn507.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 movd] <span class=\"tei-hi-italic\">mended from</span> moved</p></note>'","tn507.3":"b'<note id=\"tn507.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 provd] <span class=\"tei-hi-italic\">mended from</span> proved</p></note>'","tn507.4":"b'<note id=\"tn507.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9 atrocious] most wicked</p></note>'","tn507.5":"b'<note id=\"tn507.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 dear Christian Friends] sweet Christians 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn507.6":"b'<note id=\"tn507.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Flaxman, of course, to whom the following Poem must\\ninitially be addressed.</p></note>'","tn507.7":"b'<note id=\"tn507.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 tries] seeks 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn507.8":"b'<note id=\"tn507.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Mrs Anna Flaxman, wife of John Flaxman.</p></note>'","tn508.1":"b'<note id=\"tn508.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 but] just 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn508.2":"b'<note id=\"tn508.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Thomas Stothard; see <quote>&#8220;Stewhard&#8221;</quote>\\nlines above.</p></note>'","tn508.3":"b'<note id=\"tn508.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Written over portions of four erased lines which consist\\nof two variants of the couplet which becomes the center of the six lines <quote>&#8220;To S------d&#8221;</quote> that follow at the bottom of the page, but\\nhere given a title later absorbed into the poem:</p><pb n=\"868\"/><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The Golden Rule.</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>?Sporting with ?golden ?Fortune</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>?Blithe &amp; gay Like to the Lion sporting with his prey</span></span><span class=\"tei-line-number\"/></li></ol><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>With Fortune sporting Merry Blithe &amp; gay</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Like to the Lion sporting with his prey a Sparrow</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The first erased words may have been <quote>&#8220;He sports&#8221;</quote>; the second erased couplet is in the form of a prepositional phrase\\nwhich might modify <quote>&#8220;He&#8221;</quote> in the Golden Rule couplet;\\nbut in the final version, below, the blithe and the golden persons take opposite\\nvoices in a dialogue.</p></note>'","tn508.4":"b'<note id=\"tn508.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">To Stothard, Combining the erased and unerased couplets\\nat the top of the page.  First written in the third person, <span class=\"tei-hi-italic\">\\nabout</span> Stothard.</p></note>'","tn508.5":"b'<note id=\"tn508.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 You all your Youth] He all his Youth 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn508.6":"b'<note id=\"tn508.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 youre]   hes 1<span class=\"tei-hi-italic\">st rdg del</span>  golden]\\nold golden 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn508.7":"b'<note id=\"tn508.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Take you] He has 1<span class=\"tei-hi-italic\">st rdg del</span>;  \\nMake thou  2<span class=\"tei-hi-italic\">nd rdg del</span>   you may wear] wear 1<span class=\"tei-hi-italic\">\\nst rdg del</span>; thou maist wear 2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn508.8":"b'<note id=\"tn508.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 your Share] his share 1<span class=\"tei-hi-italic\">st rdg</span>; thy\\nshare  2<span class=\"tei-hi-italic\">nd rdg</span></p></note>'","tn508.9":"b'<note id=\"tn508.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">On Stothard.</p></note>'","tn508.10":"b'<note id=\"tn508.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Whose] His 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn508.11":"b'<note id=\"tn508.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 By . . . get Fat] On . . . feed Fat 1<span class=\"tei-hi-italic\">\\nst rdg del</span> In his <title level=\"m\"><span class=\"tei-hi-italic\">Descriptive Catalogue\\n</span></title>, p 33, Blake adapted the second couplet to a proverb suitable\\nfor prose quotation, by removing the rhyme:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>The fox, the owl, the spider, and the mole</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>By sweet reserve and modesty get fat.</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn508.12":"b'<note id=\"tn508.12\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 old acquaintance well renew] ?Look xxx xxxxx Flaxman\\n&amp; Stothard do 1<span class=\"tei-hi-italic\">st rdg del</span>   The first three words are\\nbadly erased, but the meaning may be guessed: Look bow scurvily my Calibans\\nbehave.  And possibly Blake meant to retain the first two words in his new\\nline: <quote>&#8220;Look how (or what) old acquaintance we\\'ll renew&#8221;</quote>.</p></note>'","tn508.13":"b'<note id=\"tn508.13\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Flaxman &amp; Stothard.  First written <quote>&#8220;To\\nF---------- &amp; S---------&#8221;</quote>.</p></note>'","tn508.14":"b'<note id=\"tn508.14\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 them . . . them] <span class=\"tei-hi-italic\">mended from</span> thee\\n. . . thee</p></note>'","tn508.15":"b'<note id=\"tn508.15\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 they know neither themselves] thou knowst neither\\nthyself 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn509.1":"b'<note id=\"tn509.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Fool . . . Knave] <span class=\"tei-hi-italic\">mended from</span> knave\\n. . . Fool In his <title level=\"m\"><span class=\"tei-hi-italic\">Descriptive Catalogue,</span></title>\\np 34, Blake adapted the first couplet to a proverb suitable for prose quotation,\\nby removing the rhyme:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>I found them blind: I taught them how to see;</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And, now, they know me not, nor yet themselves.</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn509.2":"b'<note id=\"tn509.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">First written <quote>&#8220;Mr Cromek to Mr Stothard&#8221;</quote>, but it can hardly have worked that way.</p></note>'","tn509.3":"b'<note id=\"tn509.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Backbiting]  Calumny 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn509.4":"b'<note id=\"tn509.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 He loves the Art]  Cr----- loves Art 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn509.5":"b'<note id=\"tn509.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The second couplet is an afterthought.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 his judgment\\nis so very Cool]  I know he always judges Cool 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn509.6":"b'<note id=\"tn509.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Amiable state] Because we know 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn509.7":"b'<note id=\"tn509.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake first wrote a <quote>&#8220;straight&#8221;</quote>\\nversion of his interpretation of Cromek\\'s ideas.  He then inserted the subtitle <quote>&#8220;Cromeks opinions put into Rhyme&#8221;</quote> and tampered with the\\nwords in a punning burlesque of the speaker\\'s pronunciation and thoughts,\\nI follow Keynes in separating the two versions; but Keynes adds as part of\\nthe first reading the four lines I treat as the second stanza of the following\\npoem.  That poem uses some of the same ideas and images but within a different\\nframe. (Yet the whole second poem is still Cromekian and a kind of postscript\\nto the first.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     It is too bad to lose from either reading the second\\nand intermediate reading of <quote>&#8220;great multitude&#8221;</quote>,\\nnamely <quote>&#8220;great Madjority&#8221;</quote>.</p></note>'","tn509.8":"b'<note id=\"tn509.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 multitude] Madjority 2<span class=\"tei-hi-italic\">nd rdg del</span>\\n (Deleted because the final reading makes a different statement)</p></note>'","tn510.1":"b'<note id=\"tn510.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Menny wouver] <span class=\"tei-hi-italic\">Cromekian for</span> maneuver\\n</p></note>'","tn510.2":"b'<note id=\"tn510.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Jenous] <span class=\"tei-hi-italic\">Cromekian for</span> Genius (and <quote>&#8220;Je nous&#8221;</quote>?) ham] <span class=\"tei-hi-italic\">Cromekian for</span> them\\n[Compare <quote>&#8220;Pant&#8221;</quote> and <quote>&#8220;Panted&#8221;</quote> in the third item following.]</p></note>'","tn510.3":"b'<note id=\"tn510.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Jenny suck awa\\']  <span class=\"tei-hi-italic\">for</span> Je ne sais\\nquois</p></note>'","tn510.4":"b'<note id=\"tn510.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 can] will 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn510.5":"b'<note id=\"tn510.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Punning on <quote>&#8220;Connoiseurs&#8221;</quote>\\nand <quote>&#8220;Amateurs&#8221;</quote>.</p></note>'","tn510.6":"b'<note id=\"tn510.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake is inconsistent in his burlesque, mixing <quote>&#8220;Panted&#8221;</quote>, <quote>&#8220;Painted&#8221;</quote>, and <quote>&#8220;Pant&#8221;</quote>, but we are hardly faced by mere misspellings.\\n Note the rhyme <quote>&#8220;Thought/Groat&#8221;</quote>.</p></note>'","tn510.7":"b'<note id=\"tn510.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 To be Flogd . . . Fool]  To learn to admire the works\\nof a Fool 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn511.1":"b'<note id=\"tn511.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 All has taken Wing]  tis quite another Thing 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn511.2":"b'<note id=\"tn511.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3-4 what / That Man]  that / Which he 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn511.3":"b'<note id=\"tn511.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 Reynolds Lectures Exactly so] This Reynoldss Lectures\\nplainly shew 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn511.4":"b'<note id=\"tn511.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2   1<span class=\"tei-hi-italic\">st rdg revised and del</span>: <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">And counts it courage</span>]</span>&lt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\nTis but</span>]</span>&lt;Is it&gt; Politeness&gt; thus to praise\\nhis foe</p></note>'","tn511.5":"b'<note id=\"tn511.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> Knaves] fools 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn511.6":"b'<note id=\"tn511.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 3 began with a reference to Reynolds\\' printing\\nhis Discourses,- <quote>&#8220;Printing his praises of&#8221;</quote>, and\\nthen was redrafted:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     It would be Christian Mildness <span class=\"tei-del\">[<span class=\"tei-hi-italic\">\\nto maintain</span>]</span>&lt;all <span class=\"tei-del\">[<span class=\"tei-hi-italic\">might</span>]</span>&lt;must&gt;&gt; say 2<span class=\"tei-hi-italic\">nd rdg del;</span>&lt;But&gt;\\nTwould be Madness <span class=\"tei-del\">[<span class=\"tei-hi-italic\">that we all must</span>]</span>&lt;all\\nthe World <span class=\"tei-del\">[<span class=\"tei-hi-italic\">should</span>]</span>&lt;would&gt;&gt;\\nsay <span class=\"tei-hi-italic\">final rdg</span></p></note>'","tn511.7":"b'<note id=\"tn511.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Should] Act 1<span class=\"tei-hi-italic\">st rdg del</span>;    As 2<span class=\"tei-hi-italic\">nd rdg del</span>;    If 3<span class=\"tei-hi-italic\">rd rdg del</span>    praise] \\npraising 1<span class=\"tei-hi-italic\">st rdg del</span>;  praisd 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn511.8":"b'<note id=\"tn511.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Line 5 was added during final revision of line 2.</p></note>'","tn511.9":"b'<note id=\"tn511.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 And yet] Because 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn511.10":"b'<note id=\"tn511.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 As Crooked limbs &amp; louzy heads of hair] Like\\na filthy infectious head of hair 1<span class=\"tei-hi-italic\">st rdg del</span>;   A Crooked\\nStick &amp; louzy head of hair 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn511.11":"b'<note id=\"tn511.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 Followed by four lines several times revised\\nand finally deleted:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     They said Thus Learning &lt;&amp; Politeness&gt;\\nfrom England <span class=\"tei-del\">[&lt;<span class=\"tei-hi-italic\">&amp; Politeness</span>&gt;<span class=\"tei-hi-italic\">was sent</span>]</span>&lt;we fetch&gt;</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-del\">[<span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">I</span>]</span>&lt;<span class=\"tei-hi-italic\">We</span>&gt;<span class=\"tei-hi-italic\">\\nthought Michael Angelo did never</span>]</span>&lt;For No good Artist will\\nor Can&gt;<span class=\"tei-del\">[<span class=\"tei-hi-italic\">Paint</span>]</span> Sketch</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">Isnt it</span>]</span>&lt;And tis&gt; English Politeness\\nas fair as <span class=\"tei-del\">[<span class=\"tei-hi-italic\">your</span>]</span>&lt;my&gt; Aunt</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     To <span class=\"tei-del\">[<span class=\"tei-hi-italic\">say</span>]</span> speak <span class=\"tei-del\">[<span class=\"tei-hi-italic\">write\\n</span>]</span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">Michael Angelo</span>]</span>&lt;Any other\\nword&gt; &amp;  <span class=\"tei-del\">[<span class=\"tei-hi-italic\">mean</span>]</span>&lt;Act&gt;\\nRembrandt</p></note>'","tn512.1":"b'<note id=\"tn512.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">13 Is This Politeness or is it Cant 1<span class=\"tei-hi-italic\">st\\nrdg del</span></p></note>'","tn512.2":"b'<note id=\"tn512.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">23-24 may have been intended to replace 21-22, but these\\nare not deleted.</p></note>'","tn512.3":"b'<note id=\"tn512.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25-27 were added in a different ink, as a comment that\\nmight be considered a separate poem.</p></note>'","tn512.4":"b'<note id=\"tn512.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Pitiful] <span class=\"tei-hi-italic\">mended from</span> Pitiable</p></note>'","tn512.5":"b'<note id=\"tn512.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 did howl &amp;] was heard to 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn512.6":"b'<note id=\"tn512.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 for it is fit] &amp; you will know 1<span class=\"tei-hi-italic\">\\nst rdg del</span></p></note>'","tn512.7":"b'<note id=\"tn512.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7-8 1<span class=\"tei-hi-italic\">st rdg de</span>l:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>That Sir Joshua never wishd to speak</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Of Michael Angelo</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  7 meer common] either sense or 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn513.1":"b'<note id=\"tn513.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 I Rubens am . . . &amp;]  Rubens had been . . . or\\n1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn513.2":"b'<note id=\"tn513.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 1<span class=\"tei-hi-italic\">st rdg del;</span></p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>He mixd them both &amp; so he Learnd to Paint</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn513.3":"b'<note id=\"tn513.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Title revised in ms thus:  A <span class=\"tei-del\">[<span class=\"tei-hi-italic\">Pretty\\nEpigram for</span>&lt;<span class=\"tei-hi-italic\">the entertainment of</span>&gt;<span class=\"tei-hi-italic\">those who have Given high Prices for Bad Pictures And ?have</span>]\\n</span> Pretty Epigram for <supplied>[those]</supplied> the Entertainment of\\nthose Who <span class=\"tei-hi-italic\">pay</span>] &lt;have Paid&gt; Great Sums in the\\nVenetian &amp; Flemish Ooze</p></note>'","tn513.4":"b'<note id=\"tn513.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 1-2 were written as 5-6 and then numbered to come\\nfirst.  An original first line, <quote>&#8220;Let it be told&#8221;</quote>,\\nwas deleted.</p></note>'","tn514.1":"b'<note id=\"tn514.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Executive Power]  Execution 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn514.2":"b'<note id=\"tn514.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Laborious]  wobly pretentious 1<span class=\"tei-hi-italic\">st rdg</span>;\\nhigh labourd pretentious 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn514.3":"b'<note id=\"tn514.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Given] <span class=\"tei-hi-italic\">mended from</span> ?giving</p></note>'","tn514.4":"b'<note id=\"tn514.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 Sword or] Button 1<span class=\"tei-hi-italic\">st rdg del</span>   Cutlass]\\nBauble 1<span class=\"tei-hi-italic\">st rdg del</span>; Buckle 2<span class=\"tei-hi-italic\">nd rdg del</span>\\n   a dagger or] a Bead or a 1<span class=\"tei-hi-italic\">st rdg de</span>l</p></note>'","tn514.5":"b'<note id=\"tn514.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Taught] wise 1<span class=\"tei-hi-italic\">st rdg del</span>  ; Learned\\n2<span class=\"tei-hi-italic\">nd rdg del;</span>    spends]   gives 1<span class=\"tei-hi-italic\">st rdg del\\n</span></p></note>'","tn514.6":"b'<note id=\"tn514.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 1<span class=\"tei-hi-italic\">st rdg:</span>       For a Smear or a\\nSquall that is not Picture nor Tune</p></note>'","tn514.7":"b'<note id=\"tn514.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 Rubens Rembrant] Rembrant or 1<span class=\"tei-hi-italic\">st rdg\\n</span></p></note>'","tn514.8":"b'<note id=\"tn514.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 question thus] say to myself 1<span class=\"tei-hi-italic\">st rdg\\ndel</span></p></note>'","tn514.9":"b'<note id=\"tn514.9\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 O pray] we pray 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn514.10":"b'<note id=\"tn514.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">7 than be] than let 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn514.11":"b'<note id=\"tn514.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake\\'s <title level=\"a\">&#8220;Book of Moonlight&#8221;\\n</title> has never been found.</p></note>'","tn515.1":"b'<note id=\"tn515.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">At the end the ms reads <quote>&#8220;&amp;c / to come\\nin Barry a Poem&#8221;</quote>, an indication that these verses are but a\\npatch made for a poem (now lost, or never finished) on the rebellious Academician\\nJames Barry.</p></note>'","tn515.2":"b'<note id=\"tn515.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">6 puffing his cheeks he replied] smild like a Cherub\\n&amp; said 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn515.3":"b'<note id=\"tn515.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 smile like a Cherub &amp; say] nod wink &amp; smile\\n&amp; reply 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn515.4":"b'<note id=\"tn515.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A variant of the preceding stanzas, perhaps meant to\\nreplace them, perhaps to follow them, in <title level=\"a\">&#8220;Barry a Poem&#8221;\\n</title>.</p><pb n=\"873\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1-2  Then Reynolds said O woman most sage    \\n O dear Mother outline be not in a Rage 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn515.5":"b'<note id=\"tn515.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 mispunctuated in Keynes; the sense would require: <quote>&#8220;And what is the second&#8212;to Please &amp; Engage?&#8221;</quote></p></note>'","tn515.6":"b'<note id=\"tn515.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 1-2 are an insertion written on p 60 and followed\\nby the link <quote>&#8220;Perhaps this little Fable &amp;c&#8221;</quote>.\\n</p></note>'","tn515.7":"b'<note id=\"tn515.7\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 one Generalizing Tone] heres two for one 1<span class=\"tei-hi-italic\">\\nst rdg</span>; what a brilliant tone 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn515.8":"b'<note id=\"tn515.8\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">9-10 <span class=\"tei-hi-italic\">a marginal insertion</span> (On \"poco\\npiu\" see note below on <span class=\"tei-hi-italic\">Public Address</span>, p 60.)</p></note>'","tn515.10":"b'<note id=\"tn515.10\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">11 Snap. Snap! he has] He snapd &amp; 1<span class=\"tei-hi-italic\">\\nst rdg del</span>; Then he snapd &amp; 2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn515.11":"b'<note id=\"tn515.11\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">14 Those who taste colouring] Ive tasted shadow &amp;\\n1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn516.1":"b'<note id=\"tn516.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Date uncertain.  For a suggestion that it may be a response\\nto Wordsworth\\'s poem of <quote>&#8220;A perfect Woman, nobly planned&#8221;</quote> (marked&#8212;by Blake, or by Crabb Robinson to guide him&#8212;in\\nthe copy of Poems 1815 which Blake read in 1826) see my letter in <span class=\"tei-hi-italic\">\\nTLS</span> Feb 24 1978 p 234.  For a discussion of the <quote>&#8220;several\\nchains of discourse&#8221;</quote> in Blake\\'s poem (and the true meaning of <quote>&#8220;smack smooth&#8221;</quote>) see letter by Alastair Fowler, March 3,\\np 255.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     1 smack smooth] colloq for <quote>&#8220;perfectly smooth,\\nlevel, or even with the surface&#8221;</quote>&#8212;here applying to <quote>&#8220;Epigram&#8221;</quote> and, secondarily, to <quote>&#8220;pend&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     nobly] <span class=\"tei-hi-italic\">begun as</span> nea <span class=\"tei-hi-italic\">but\\nthen mended</span> (avoiding anticipation of <quote>&#8220;neat&#8221;</quote>\\nin the next line)</p></note>'","tn516.2":"b'<note id=\"tn516.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 glued] <span class=\"tei-hi-italic\">mended from</span> glewed</p></note>'","tn516.3":"b'<note id=\"tn516.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">1 World] Earth 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn516.4":"b'<note id=\"tn516.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">4 Worldly) Worldly 1<span class=\"tei-hi-italic\">st rdg del</span>; Earthly\\n2<span class=\"tei-hi-italic\">nd rdg del</span></p></note>'","tn518.1":"b'<note id=\"tn518.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Nine widely scattered entries in Blake\\'s Notebook (in\\nthe British Library) and three sections in a separate scrap of paper (in the\\nRosenbach Foundation library) have long been recognized as parts of a single\\nbut unfinished (or perhaps only unedited) poem.  In previous editions of this\\ntext (and in my essay <quote>&#8220;Uprose Terrible Blake&#8221;</quote>,\\nin <title level=\"m\"><span class=\"tei-hi-italic\">From Sensibility to Romanticism</span></title>,\\nOxford, 1965, and in the Erdman and Moore facsimile of the <title level=\"m\"><span class=\"tei-hi-italic\">Notebook</span></title>, 1973, 1977) Keynes\\'s lettering of these 12\\nsections, from <span class=\"tei-hi-italic\">a</span> to <span class=\"tei-hi-italic\">l</span>, has been followed\\nfor convenience though it represents neither the order nor the probable sequence\\nintended by Blake, who made no known fair copy. In the following table these\\nsections are given a new letter sequence representing the probable order of\\ncomposition established in the essay just cited and accepted in the 1978 Bentley\\ntext.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Two other small sections, not hitherto recognized as such,\\nform a sort of Preface and are included now (1981) as <span class=\"tei-hi-italic\">m</span>\\nand <span class=\"tei-hi-italic\">n</span>. Their identification was prompted by John Grant\\'s\\ncurrent study of the presence of Joseph of Arimathea in Blake.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">    \\nFor an analysis of the poem\\'s growth, section by section, which brings to\\nbear the Gospel texts Blake is recalling or revising, see Randel Helms in <title level=\"m\"><span class=\"tei-hi-italic\">Blake Studies</span></title> 9 (1980) 122-60.</p></note>'","tn518.2":"b'<note id=\"tn518.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">2 very] <span class=\"tei-hi-italic\">inserted above the line</span></p></note>'","tn518.3":"b'<note id=\"tn518.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">These four lines, the words of Joseph announced in <span class=\"tei-hi-italic\">m</span>, have previously been considered to be lines 20-24 of section <span class=\"tei-hi-italic\">k</span>, through what I now think to have been an editorial mistake.\\n</p></note>'","tn518.4":"b'<note id=\"tn518.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines not in the first Humility section (<span class=\"tei-hi-italic\">\\nj</span>) are; 3-4, 22-23, 27-54, 65-66, 81-105.  Lines 12-17 were first written\\nin the order 12 15 16 13 14 17.</p></note>'","tn519.1":"b'<note id=\"tn519.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 betrays]  hates 1<span class=\"tei-hi-italic\">st rdg</span> del (also\\nrdg on p 98)</p></note>'","tn519.2":"b'<note id=\"tn519.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">25 For . . . honest triumphant Pride] But . . . triumphant\\nhonest pride <span class=\"tei-hi-italic\">rdg on p</span> 98</p></note>'","tn519.3":"b'<note id=\"tn519.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">26 the cause that] the Reason <span class=\"tei-hi-italic\">rdg on p\\n</span> 98</p></note>'","tn519.4":"b'<note id=\"tn519.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">34 thrice] so 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn519.5":"b'<note id=\"tn519.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">37 Bacon &amp;] Sir Isaac 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn519.6":"b'<note id=\"tn519.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">54 Lord Caiaphas] <span class=\"tei-hi-italic\">written over erasure,\\nperhaps</span> the guilty</p></note>'","tn520.1":"b'<note id=\"tn520.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">63-64 were in reverse order on p 98</p></note>'","tn520.2":"b'<note id=\"tn520.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">69 If thou humblest thyself thou humblest me] Why dost\\nthou humble thyself to me 1<span class=\"tei-hi-italic\">st rdg on p</span> 98, <span class=\"tei-hi-italic\">\\ndel</span></p></note>'","tn520.3":"b'<note id=\"tn520.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">80 Whom thou shalt Torment at the Last Day 1<span class=\"tei-hi-italic\">\\nst rdg p</span> 98 <span class=\"tei-hi-italic\">del</span></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">80 followed by del couplet\\nrevised in lines 93-94</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span><span class=\"tei-del\">[<span class=\"tei-hi-italic\">All Corporeal lifes a</span>]</span>&lt;This Corporeal &lt;All&gt; lifes&gt; a fiction</span></span><span class=\"tei-line-number\"/></li><pb n=\"880\"/><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>And is made up of Contradiction</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The corresponding couplet in <span class=\"tei-hi-italic\">j</span> (lines 50-51) reads:\\n</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Do what you will this Lifes a Fiction</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>   And is made up <span class=\"tei-del\">[<span class=\"tei-hi-italic\">o</span>]</span> of Contradiction</span></span><span class=\"tei-line-number\"/></li></ol></note>'","tn520.4":"b'<note id=\"tn520.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     83 I] <span class=\"tei-hi-italic\">written</span> a</p></note>'","tn521.1":"b'<note id=\"tn521.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">10 sound of Jesus breath] words of Jesus breath 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn521.2":"b'<note id=\"tn521.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">21 Good] <span class=\"tei-hi-italic\">mended from</span> God</p></note>'","tn521.3":"b'<note id=\"tn521.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">28 Devil] God 1<span class=\"tei-hi-italic\">st rdg del</span>, the deletion\\nand addition made in pencil, but firmly</p></note>'","tn521.4":"b'<note id=\"tn521.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">36 That Heaven] <span class=\"tei-hi-italic\">mended from</span> Tho th\\n</p></note>'","tn522.1":"b'<note id=\"tn522.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">57 see it] see\\'t 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn522.2":"b'<note id=\"tn522.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">62 Some] Twas Some 1<span class=\"tei-hi-italic\">st rdg</span></p></note>'","tn522.3":"b'<note id=\"tn522.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">63 shame] crime 1<span class=\"tei-hi-italic\">st rdg</span> del</p></note>'","tn522.4":"b'<note id=\"tn522.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">64 Loves Temple that] The Temple where 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn522.5":"b'<note id=\"tn522.5\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">85 Crying Crucify] Crying Ive found hi[m] 1<span class=\"tei-hi-italic\">\\nst rdg</span></p></note>'","tn522.6":"b'<note id=\"tn522.6\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">86 Who] You 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn523.1":"b'<note id=\"tn523.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">92 his glittring] The antecedent is <quote>&#8220;the\\nshadowy Man&#8221;</quote> of line 81.</p></note>'","tn523.2":"b'<note id=\"tn523.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">95-96 were written in the next column and guided\\nto come in.</p></note>'","tn524.1":"b'<note id=\"tn524.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">56 And put it off on the Cross &amp; Tomb] And on the\\nCross he Seald its doom 1<span class=\"tei-hi-italic\">st rdg del</span></p></note>'","tn524.2":"b'<note id=\"tn524.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">8 Thy] <span class=\"tei-hi-italic\">written over</span> I Gates] <span class=\"tei-hi-italic\">\\nmended from</span> gates</p></note>'","tn526.1":"b'<note id=\"tn526.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The Advertisement of the Exhibition, a single leaf printed\\non both sides, survives in two copies, each having Blake\\'s ms additions here\\nenclosed in angle brackets.  The Advertisement of the Catalogue survives in\\na single copy.</p></note>'","tn526.2":"b'<note id=\"tn526.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 1 Blake\\'s quotation from the <quote>&#8220;Welch\\nTriades&#8221;</quote> is traced by S. Foster Damon (see his <title level=\"m\"><span class=\"tei-hi-italic\">Dictionary</span></title> under WELSH) to No. LXXXV in the <title level=\"m\"><span class=\"tei-hi-italic\">Myvyrian Archailogy</span></title> (London 1801-7)&#8212;in which case <quote>&#8220;quotation&#8221;</quote> is the wrong term: Blake\\'s first stanza is\\na free adaptation, his second an original addition.</p></note>'","tn529.1":"b'<note id=\"tn529.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This Catalogue of descriptive commentary on sixteen\\npaintings (<quote>&#8220;Inventions&#8221;</quote>) which Blake exhibited\\nat his brother James\\'s shop in Golden Square was included in the half-crown\\nprice of admission.  It is the only work Blake actually published in printed\\nform (if it is true that <title level=\"m\"><span class=\"tei-hi-italic\">Poetical Sketches</span></title>\\nwas printed for him by friends and never sold).  It is alluded to, by the\\nsubtitle, in Blake\\'s letter of 19 Dee 1808 to Cumberland as <quote>&#8220;an\\naccount of my various Inventions in Art, for which I have procured a Publisher&#8221;</quote> (i.e. the printer, D. N.  Shury). </p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Address inserted in Blake\\'s\\nhand, in Huntington Library copy.</p></note>'","tn530.1":"b'<note id=\"tn530.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 1 The Spiritual Form of Nelson . . . ] The Spirit\\nof Nelson . . . folds are entangled . . . <span class=\"tei-hi-italic\">variant inscription\\non sketch</span> (Butlin 650).</p></note>'","tn530.2":"b'<note id=\"tn530.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 2 <span class=\"tei-hi-italic\">ordering the Reaper</span>] commanding\\nthe reaper <span class=\"tei-hi-italic\">variant in the inscription</span> on back of painting,\\n1805; but the inscription also uses the spellings <quote>&#8220;ploughman&#8221;</quote> and <quote>&#8220;plough&#8221;</quote>&#8212;favorite words, never\\nspelled thus elsewhere by Blake; so the inscription, which I have not seen,\\ncan hardly be his own. (Reported in Bentley, <span class=\"tei-hi-italic\">Writings</span>, p\\n892n.) Perhaps by Palmer (Butlin 651).</p></note>'","tn550.1":"b'<note id=\"tn550.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 64 want of idea] idea of want <span class=\"tei-hi-italic\">printer\\'s\\nerror</span> corrected by Blake by pen (Keynes,  p 585)</p></note>'","tn552.1":"b'<note id=\"tn552.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A letter of 1808 to Ozias Humphry, extant in three drafts,\\nhere consolidated by treating as deletions all words not in the final and\\nbriefest draft.  For the separate drafts see <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Letters of William Blake</span></title>, ed.  Geoffrey Keynes, Oxford 1980,\\nitems 109, 110.</p></note>'","tn553.1":"b'<note id=\"tn553.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Adam &amp; Eve kneeling in humiliation] So shown in\\nthe Petworth painting; <quote>&#8220;but Blake later changed his mind,&#8221;</quote> notes Damon; <quote>&#8220;in the Rosenwald version <supplied>[in\\nour illustration]</supplied> they are standing . . .&#8221;</quote>  (<title level=\"m\"><span class=\"tei-hi-italic\">Blake Dictionary</span></title>, under HUMILITY).</p></note>'","tn554.1":"b'<note id=\"tn554.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">From Blake\\'s Notebook, pages 68-72, 76-82, 84-87, 90-93.\\n Deleted passages and insertions are indicated in the text, but insignificant\\ndeletions and mendings are ignored.  The sequence of passages is not always\\ncertainly indicated by position or content; that worked out by Keynes is followed\\nhere.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Blake obviously contemplated holding another exhibition like\\nthe one of 1809, with another printed catalogue; he may have written these <quote>&#8220;Additions&#8221;</quote> and most of the <title level=\"a\">&#8220;Public\\nAddress&#8221;</title>&#8212;both <quote>&#8220;For the Year 1810&#8221;</quote>&#8212;before\\nconvinced of the failure of the first exhibition.  (But see note on <title level=\"a\">&#8220;Public Address&#8221;</title> below.)</p></note>'","tn558.1":"b'<note id=\"tn558.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 81 Brittannia] written with an extra stroke, evidently\\na scribal error; previously transcribed as Brittannica.</p></note>'","tn562.1":"b'<note id=\"tn562.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     PAGE 85 (SECOND PORTION) as a Female Will] Here\\nKeynes adds <quote>&#8220;&amp; Queens [of England <span class=\"tei-hi-italic\">del.</span>]&#8221;\\n</quote> from mistaking the position of a deleted passage that was written\\nin the margin as an appendage to the sentence that follows.</p></note>'","tn567.1":"b'<note id=\"tn567.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The Notebook draft (pages 117-119) of the Second Prospectus\\nis here combined with the printed text, since they are identical in the central\\nportion.  Matter found only in the draft is treated as deleted; words found\\nonly in the printed text are treated as insertions. (Both portions derive\\nlargely from <title level=\"m\"><span class=\"tei-hi-italic\">A Descriptive Catalogue</span></title>.)\\n</p></note>'","tn571.1":"b'<note id=\"tn571.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Untitled essay, referred to as <title level=\"a\">&#8220;this\\nPublic Address&#8221;</title> on p 56, written in scattered pages of Blake\\'s\\nNotebook.  The inclusion of <quote>&#8220;Chaucers Canterbury Pilgrims&#8221;</quote> as a second title rests on the conjecture that <quote>&#8220;it may\\nwell belong to this essay, of which the engraving of <title level=\"m\"><span class=\"tei-hi-italic\">The Canterbury Pilgrims</span></title> is the ostensible subject&#8221;\\n</quote>, as Keynes observes.  <quote>&#8220;It seems probable . . . that\\nBlake was anticipating an announcement of the publication which he intended\\nto work up from the raw materials&#8221;</quote> of these Notebook paragraphs.\\n In the second paragraph Blake conceives of the work as an address <quote>&#8220;to The Chalcographic Society&#8221;</quote>.  Chalcographers (engravers\\non copper) had formed such a Society in 1802.  Blake\\'s old partner James Parker\\nwas a leading officer in 1803; articles in the <title level=\"s\"><span class=\"tei-hi-italic\">\\nExaminer</span></title> indicate its existence in 1810; Blake may have intended\\nto address the group in 1810 on the plight of <title level=\"a\">&#8220;Engraving\\nas an Art&#8221;</title>.  See Dennis Read, <title level=\"a\">&#8220;The Context\\nof Blake\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Public Address</span></title>: Cromek\\nand the Chalcographic Society&#8221;</title>, <title level=\"s\"><span class=\"tei-hi-italic\">\\nPhilological Quarterly</span></title> (1981): 60 (1981) 69-86</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The\\nAddress was begun in the Notebook before <quote>&#8220;A Vision of the Last\\nJudgment&#8221;</quote> (see above) but continued after it.  Keynes has made\\nthe first satisfactory attempt to weld these fragments into a unity, and his\\narrangement is followed with a few minor exceptions.  For a complete transcript\\nand tabulation see the Erdman and Moore facsimile edition of the Notebook.\\n Here I have not recorded all the false starts, duplications, and slight mendings.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date</span>: 1809-10.  If Blake had published these <quote>&#8220;Anecdotes of Artists&#8221;</quote> as he hopefully announces on p\\n56, it would have been in the spring of 1810 when he meant his Chaucer engraving\\nto be finished; some of the notes may have been written in 1809.  The second\\nparagraph On p 67, however, must have been written after a dated memorandum\\nwhich it skirts: <quote>&#8220;23 May 1810 found the Word Golden&#8221;</quote>.\\n</p></note>'","tn572.1":"b'<note id=\"tn572.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     PAGE 52 a Poem concerning my Three years Herculean\\nLabours at Felpham which I will soon Publish] A description which fits <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> better than  <title level=\"m\"><span class=\"tei-hi-italic\">Vala</span></title> or  <title level=\"m\"><span class=\"tei-hi-italic\">Jerusalem</span></title>.\\n</p></note>'","tn576.1":"b'<note id=\"tn576.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 62 smoothd up &amp; Niggled &amp; Poco Piud] The\\nphrase <quote>&#8220;the <span class=\"tei-hi-italic\">poco piu, o\\npoco meno</span>, the little more or little less&#8221;</quote> was\\na commonplace of art criticism in Blake\\'s day, Morris Eaves tells me, quoting\\nJames Barry and Henry Fuseli&#8212;who used sometimes the Italian, sometimes\\nthe English.  Jean H. Hagstrum first proposed this correct reading of what\\nhad always been transcribed <quote>&#8220;Poco pend&#8221;</quote> and (in <span class=\"tei-hi-italic\">N</span> 20) <quote>&#8220;Poco Pen&#8221;</quote>.</p></note>'","tn576.2":"b'<note id=\"tn576.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     PAGE 62 end of paragraph] For the verses which\\nKeynes prints here, see <title level=\"a\">&#8220;Blakes apology for his Catalogue&#8221;\\n</title> (p 505) and textual notes (p 865).</p></note>'","tn579.1":"b'<note id=\"tn579.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 18 It is the Fashion] written along the right margin\\nof page, now broken off&#8212;but visible in the Keynes facsimile of 1935.</p></note>'","tn581.1":"b'<note id=\"tn581.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 23 That Painted as well as Sculptured Monuments\\n. . . the Lips of Pasch himself.] Elaborately deleted by rows of loops and\\nstrokes that turn into actual words, somewhat as follows:</p><ol class=\"tei-linegroup\" style=\"text-align:\"><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>eeeeeeeeeeeeee WwwwwWThomas James Robert</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Clllllnnn AOOJlmm All Alls Hands british alls wwwndj Bluuu</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Laurelllo Affffsw Alllllll Hannalitoe WW Bmillljjj Horses</span></span><span class=\"tei-line-number\"/></li><li xmlns:exist=\"http://exist.sourceforge.net/NS/exist\" class=\"tei-line tei-line-5\"><span class=\"tei-line-note\"/><span class=\"tei-line-text\" style=\"text-align:\"><span>Ollllee W Hyyyiss Well saiithl Blake John Thomas f</span></span><span class=\"tei-line-number\"/></li></ol><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Pasch himself was Count Pasch van Krienen, a Dutchman living in the\\nAegean, who in 1771 was commissioned captain of a Russian man-of-war and in\\n1773 published an account of inscriptions<pb n=\"883\"/> and sculptures on what\\nhe claimed were the sepulchers of Germanico, Demos, Elpis, Lisaundro, Omero,\\nAristion, Promachida, Antenor, Efthinos, Efdigenos, Danae: <span class=\"tei-hi-italic\">Breve Descrizione Dell\\' Arcipelago . . . Con un ragguaglio esatto\\ndi tutte le Antichita. .  . e Specialmente DEL SEPOLCRO D\\'OMERO e d\\'altri\\ncelebri personaggi</span>, In Livorno 1773. (British Museum 10125.C.17.)\\nI find no mention of painted sculptures in the book, however.  Did Pasch visit\\nLondon?  Did Blake obtain this information from the lips of the Savant himself&#8212;and\\nthen discover his falsehood and so delete the paragraph?  In the <title level=\"s\"><span class=\"tei-hi-italic\">Gentleman\\'s Magazine</span></title> for August 1795, p 680, is a review\\nof <title level=\"m\"><span class=\"tei-hi-italic\">The pretended Tomb of Homer . . . with Illustrations\\nand Notes</span></title>, by C. Heyne, beginning: <quote>&#8220;Nothing more\\nstrongly marks the little progress made in literature by the modern Goths\\nthan the pretended discovery of the tomb of Homer, with <span class=\"tei-hi-italic\">his skeleton,\\nsitting, and a marble inkstand, a pen, a marble stylus, and a sharp stone,\\nlike a knife, before him</span>, in the island of Ios, or Nios, just where Paulus\\nSilentiarius, in the time of Justinian, had, in an epigram, placed it.  Count\\nPasch, of Krinen, captain of a Russian man of war, who discovered the <span class=\"tei-hi-italic\">town</span> of Ephesus <span class=\"tei-hi-italic\">entire under ground</span>, had made\\nthe discovery;. . . .&#8221;</quote>. The book itself, which I have not seen,\\nmay treat the matter soberly.</p></note>'","tn583.1":"b'<note id=\"tn583.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Most of the Lavater <title level=\"m\"><span class=\"tei-hi-italic\">Aphorisms\\n</span></title> cited are given in full, but excerpts from the other works annotated\\nhave been trimmed to the bare minimum necessary to show the immediate context\\nof Blake\\'s remarks.  Titles given below are somewhat simplified.</p></note>'","tn601.1":"b'<note id=\"tn601.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations (following someone\\nelse\\'s) is in the Houghton Library, Harvard College Library.  The work was\\nadvertised July 8, 1784., in the <title level=\"s\"><span class=\"tei-hi-italic\">London Gazetteer\\nand New Daily Advertiser</span></title>.  Blake\\'s notes were not made before\\n1787 (see next paragraph).</p></note>'","tn602.1":"b'<note id=\"tn602.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">513. &#8224;See N 73 Worlds in Universe.] A reference\\nto No. 73 in another Swedenborg pamphlet, of which the first English translation\\nwas that of J. Clowes, Manchester, 1787: <title level=\"m\"><span class=\"tei-hi-italic\">Of\\nthe Earths in the Universe and of their Inhabitants</span></title>.  <quote>&#8220;Worlds in the Universe&#8221;</quote> was apparently an alternative\\ntitle to the same edition (see Morton Paley in <span class=\"tei-hi-italic\">Blake . . . Quarterly\\n</span> 13 [1979] 87).</p></note>'","tn602.2":"b'<note id=\"tn602.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Annotations to <title level=\"m\"><span class=\"tei-hi-italic\">\\nThe Wisdom of Angels, concerning Divine Love and Divine Wisdom</span></title>,\\nby Emanuel Swedenborg.  Translated [by N. Tucker] from the Original Latin.\\n London, 1788</p></note>'","tn602.3":"b'<note id=\"tn602.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the British\\nLibrary. The penciled paragraphs on the flyleaf have been badly rubbed or\\nerased, possibly not intentionally; the words supplied within brackets are\\nconjectural.  The flyleaf note cannot have been written before 1790, since\\nthe reference to <quote>&#8220;Wisdom 10&#8221;</quote> is to the work next\\nlisted.</p></note>'","tn606.1":"b'<note id=\"tn606.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">238.  See N 239] <span class=\"tei-hi-italic\">written over the first\\nwords of an erased note</span>:<quote> These Are / For the degree x  x <span class=\"tei-del\">\\n[<span class=\"tei-hi-italic\">or</span>: First in degree x x ?]</span> / xxxx state<supplied>[d]</supplied> / <supplied>[?in]</supplied> his note / [N.] 239.&#8221;</quote></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     This erasure was called to my attention by John McLean, who hesitates\\nbeyond these words as certain: <quote>&#8220;There Are / the degree / state\\n/ Do&#8221;.</quote></p></note>'","tn609.1":"b'<note id=\"tn609.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the collection\\nof Sir Geoffrey Keynes.</p></note>'","tn611.1":"b'<note id=\"tn611.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the Huntington\\nLibrary (HM 11O260).</p></note>'","tn611.2":"b'<note id=\"tn611.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake\\'s second line (<quote>&#8220;The Beast &amp; the\\nWhore . . .&#8221;</quote>) is canceled by a ruled double line, in <pb n=\"885\"/>pencil,\\nuncharacteristic of Blake.  I take it to have been added by Samuel Palmer,\\nwhose signature, partly erased, is on the title page.</p></note>'","tn620.1":"b'<note id=\"tn620.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the collection\\nof Sir Geoffrey Keynes.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">In the quoted excerpts Bacon\\'s colons and\\nsemicolons are treated as full stops.</p></note>'","tn620.2":"b'<note id=\"tn620.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE i Per WILLIAM BLAKE] A curious phrase-until\\none sees it on many Italian title pages; one might say that this is Blake\\nbeing Florentine.</p></note>'","tn627.1":"b'<note id=\"tn627.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 82 Bacons Reformer Villain] A caret in the note,\\nbetween <quote>&#8220;Bacons&#8221;</quote> and <quote>&#8220;Villain&#8221;</quote>, points to the word <quote>&#8220;Reformer&#8221;</quote>, in the\\nline above, indicating its repetition here. (Suggestion of Sir Geoffrey Keynes.)\\n</p></note>'","tn633.1":"b'<note id=\"tn633.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The copy with Blake\\'s annotations is in the collection\\nof Sir Geoffrey Keynes, who first located the volume in 1956. Blake\\'s comments\\nare confined to two of Boyd\\'s <title level=\"a\">&#8220;Historical Notes&#8221;\\n</title>, in Volume 1. In the translation of the  <title level=\"m\"><span class=\"tei-hi-italic\">\\nInferno</span></title> someone (not Blake) corrected two printer\\'s errors (on\\nPage 207 changing <quote>&#8220;wandring son&#8221;</quote> to <quote>&#8220;wandrings\\non&#8221;</quote> and on page 326 changing <quote>&#8220;louban&#8221;</quote>\\nto <quote>&#8220;Soul an&#8221;</quote>) and a translator\\'s error (on page\\n193 changing <quote>&#8220;His&#8221;</quote> to <quote>&#8220;Her&#8221;</quote>).  Blake added the Italian above the English text on page 189: Nel mezzo del cummin de nostra vita.</p></note>'","tn635.1":"b'<note id=\"tn635.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the British\\nMuseum; with it are unmarked copies of Volumes 2 and 3 in the same (modern)\\nbinding.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This volume contains Malone\\'s Account and the first eight\\nof Reynolds\\' fifteen Discourses.  The Discourses were not unknown to Blake,\\nbut this may have been his first opportunity to read them all.  The first\\nhad been delivered at the opening of the Royal Academy, January 2, 1769, the\\nothers at the nearly annual distribution of prizes to students, from 1769\\nto 1790.  In 1779, the year Blake entered the Academy schools, there was no\\ndiscourse, but he may possibly have heard one or both of the Ninth and Tenth\\nDiscourses given in 1780.  Each Discourse was currently printed for limited\\ncirculation; a collection of the first seven was published in 1778, but the\\nnext (and complete) English edition was Malone\\'s first, in 1797.</p><pb n=\"886\"/><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake\\'s notes were written first in pencil and later, with erasures and\\nadditions, in ink.   Differences (here noted for the first time) between pencil\\nand ink versions are treated as deletions and additions.  Notes in pencil\\nonly, but unerased, are not distinguished from notes which are identical in\\npencil and ink; notes in ink only are treated as additions.  Words partly\\ntrimmed away in binding but still legible are treated as complete. (The unerased\\npencil entries are those on pp ix, xxxiv, lx, xcvi, civ, cxx, 3, 5, 13, 48,\\n61, 67, 75, 180, 209, 245, 251, 256, 260, 262, 264, 266, 267, 272, 274, 275,\\n277, 281, 284, 285.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date</span>  : ca l798-1809.  The\\nassumption that these marginalia are all of one kind written all at one tine\\nhas resulted in the usual dating of them circa 1808, from the close relation\\nof some of them to satires in Blake\\'s Notebook made before and perhaps while\\nhe was writing his <title level=\"a\">&#8220;Public Address&#8221;</title> of\\n1809.  But as early as November 22, 1802, he invoked the authority of <quote>&#8220;All Sir J Reynoldss discourses&#8221;</quote> in a letter to Thomas\\nButts, emphasizing particularly Reynolds\\' admission of incompatibility between <quote>&#8220;Venetian finesse&#8221;</quote> and <quote>&#8220;the Majesty of Colouring&#8221;</quote> necessary to historical painting (Blake\\'s kind)-an admission Blake\\npounces on in Discourse IV (see marginalia on pp 89, go, 94., and especially\\n97).</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Keynes (p 908) speaks of <quote>&#8220;the notes on the other\\nvolumes&#8221;</quote> as <quote>&#8220;being in the Note-Book with other\\nepigrams, etc., relating to events which took place about the year 1808&#8221;</quote>.  This derives from a note in Sampson\\'s edition of Blake (p 318)\\nreferring to verse epigrams, not prose notes, and inspired by Sampson\\'s discovery\\nthat two Notebook satires on page 33 constitute Blake\\'s response to the concluding\\nwords of Reynolds\\' fifteenth and last Discourse (1790, in Vol 2): <quote>&#8220;I should desire that the last words which I should pronounce in this\\nAcademy . . . might be the name of Michael Angelo.&#8221;</quote></p></note>'","tn636.1":"b'<note id=\"tn636.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Reynolds . . . hid) Then while Reynolds &amp; Gainsborough\\nprxxx &amp; dxxx themselves xxxxx xxx <supplied>[be]</supplied>came the lords\\ndxxxx Fuseli Indignant hid himself. <span class=\"tei-hi-italic\">erased pencil rdg</span></p></note>'","tn640.1":"b'<note id=\"tn640.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Why . . . Venetians]  Why are Venetians treated more\\n?kindly [?and ?with ?more] Enthusiasm ?Whenever Reynolds ?talks of colouring\\n. . . a Greater colourist would . . . <span class=\"tei-hi-italic\">erased pencil rdg</span></p></note>'","tn642.1":"b'<note id=\"tn642.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Are there . . . Men] <span class=\"tei-hi-italic\">pencil</span>, underneath\\nthe inked verses</p></note>'","tn643.1":"b'<note id=\"tn643.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Artists &amp;c] Blake is probably rejecting the concept\\nof art as progressive; see 226, 231.</p></note>'","tn643.2":"b'<note id=\"tn643.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">3 Farthings] followed by two erased pencil lines</p></note>'","tn643.3":"b'<note id=\"tn643.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     i.e. . . . Determinate]  ?they ?excell both in\\nminute &amp; Discriminating Determination <span class=\"tei-hi-italic\">pencil rdg erased</span></p></note>'","tn643.4":"b'<note id=\"tn643.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The boys who take shadow for substance are a probable\\nsource for Blake\\'s verses on the <quote>&#8220;dog&#8221;</quote> or <quote>&#8220;Puppy&#8221;</quote> who <quote>&#8220;lost shadow &amp; substance\\ntoo&#8221;</quote> in N 61 and 97. (See page 516.)</p></note>'","tn648.1":"b'<note id=\"tn648.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">the Little Bacon] Note that three of the six comments\\non Bacon (this one and those on pages 31 and 147) were never inked (Blake\\'s\\nway of confirming his earlier penciled text).</p></note>'","tn649.1":"b'<note id=\"tn649.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Is Fashion . . . Art] Erased probably because Blake\\nsaw that he had misread Reynolds\\' who, on p 66, rules that <quote>&#8220;fashion\\n. . . must be entirely excluded from the Art of Painting&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\nThe next erasure, of his comment on p 71, may mean that Blake realized he\\nhad picked up the term <quote>&#8220;nobler&#8221;</quote> in a mistaken sense.\\n</p></note>'","tn653.1":"b'<note id=\"tn653.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Caesar . . . Dutch Painter]  Blake is quoting Bacon, <title level=\"m\"><span class=\"tei-hi-italic\">Advancement of Learning</span></title>.</p></note>'","tn654.1":"b'<note id=\"tn654.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Damned Fool]  The fool is either Vasari, for his anecdote,\\nor Reynolds, for making an absurd deduction.</p></note>'","tn658.1":"b'<note id=\"tn658.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Men who] Reynolds is summing up for Durer, Coypel, Jan\\nSteen; Blake for Mortimer, Barry, Fuseli, and himself.</p></note>'","tn659.1":"b'<note id=\"tn659.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Ratio] <span class=\"tei-hi-italic\">first written</span> Ration</p></note>'","tn662.1":"b'<note id=\"tn662.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations has not been\\nlocated since the transcription by Ellis and Yeats, which is relied upon here\\n(with removal of uncharacteristic punctuation).</p></note>'","tn663.1":"b'<note id=\"tn663.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is in the library\\nof Trinity College, Cambridge; freshly collated July 1981.</p></note>'","tn665.1":"b'<note id=\"tn665.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s marginalia (written in 1826) is\\nin the Cornell, University Library.  Blake\\'s notes in pencil were inked over,\\nprobably by H. Crabb Robinson, who owned the volume-and who may have put the\\nX\\'s in the list of contents before he lent it to Blake.  Robinson\\'s list,\\non the fly leaf, of pages containing <quote>&#8220;notes written by Blake\\nin pencil&#8221;</quote> includes <quote>&#8220;4&#8221;</quote> (a page now\\nlacking annotation).</p></note>'","tn665.2":"b'<note id=\"tn665.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 44 Michael Angelos Sonnet vol 2 p. 179] Blake\\nis citing Wordsworth\\'s translation; he quotes it in his inscription in William\\nUpcott\\'s album. q.v.</p></note>'","tn666.1":"b'<note id=\"tn666.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 375 opinions of . . . a Landscape Painter] The <quote>&#8220;Landscape Painter&#8221;</quote> comes out in Wordsworth\\'s contempt\\nfor poetry that <quote>&#8220;does not contain a single new image of external\\nnature&#8221;</quote> or evidence <quote>&#8220;that the eye of the Poet had\\nbeen steadily fixed upon his object&#8221;</quote> (paragraph 20) as well\\nas in his faulting Macpherson for using imagery inappropriate to the actual <quote>&#8220;Morven before his eyes&#8221;</quote> (p 364).  The Preface, from p\\nI on, assumes <quote>&#8220;memory&#8221;</quote> to be the supplier of <quote>&#8220;materials&#8221;</quote> for the production of poetry.</p></note>'","tn666.2":"b'<note id=\"tn666.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Blake\\'s transcript and comment (in 1826) on Wordsworth\\'s\\nPreface and the lines quoted there from <title level=\"a\">&#8220;the first\\nBook of the Recluse&#8221;</title> are in Dr Williams\\'s Library, London.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">\\n     Blake made few mistakes in copying-<quote>&#8220;unpleasant&#8221;</quote>\\nfor <quote>&#8220;unpleasing&#8221;</quote> (a word he never used), <quote>&#8220;Whensoeer&#8221;</quote> for <quote>&#8220;whencesoe\\'er&#8221;</quote>\\n(neither a Blakean word), and two wrong prepositions-but he simplified punctuation\\nand insisted on his own spellings: perceive, mixd, subdud, tho, askd, unalarmd,\\nscoopd, composd, meer (for mere), chaunt (for chant), calld, inflamd, inspirest\\n(for inspir\\'st), starlike (for star-like), and probably chear for cheer (though\\nBlake actually wrote <quote>&#8220;cheear&#8221;</quote>). He capitalized\\nrather heavily: Wordsworth\\'s <quote>&#8220;good and evil of our mortal state&#8221;</quote> became <quote>&#8220;Good &amp; Evil of our Mortal State&#8221;</quote>,\\nand Blake insisted on capitalizing Law Supreme, Earth, Heaven, and <quote>&#8220;Worlds To which the Heaven of Heavens is but a Veil&#8221;</quote>,\\nalso <quote>&#8220;darkest Pit&#8221;</quote> and <quote>&#8220;Song&#8221;</quote>; but he resisted several of Wordsworth\\'s capitals, turning <quote>&#8220;prophetic Spirit! that inspir\\'st / The human Soul of universal earth&#8221;</quote> to <quote>&#8220;Prophetic Spirit that inspirest / The Human soul\\nof Universal Earth&#8221;</quote>.  Similar reversals of case were: <quote>&#8220;illumination,&#8212;may my Life&#8221;</quote> to <quote>&#8220;Illumination\\nmay my life&#8221;</quote> and <quote>&#8220;My Heart . . . thy unfailing\\nlove&#8221;</quote> to <quote>&#8220;My heart . . . thy unfailing Love&#8221;</quote>.</p></note>'","tn667.1":"b'<note id=\"tn667.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The copy with Blake\\'s annotations is iii the Huntington\\nLibrary (HM 113086).  Some pages lack numbers, and the leaves are loose, easily\\ngetting out of order.  For the present edition the inferred sequence and pagination\\nhave been corrected, and some readings have been corrected, thanks to the\\nscrutiny of Robert N. Essick.</p></note>'","tn670.1":"b'<note id=\"tn670.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The volume containing this note has not been located;\\nit was quoted by Edwin J. Ellis, <title level=\"m\"><span class=\"tei-hi-italic\">The Real Blake\\n</span></title>, London 1907, p 420, as found <quote>&#8220;in the margin of\\na copy of Cennini\\'s book on fresco painting that Linnell lent to Blake&#8221;</quote>.  From Gilchrist\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Life of Blake</span></title>,\\nChapter 39, Ellis would have known that John Linnell <quote>&#8220;gave to\\nBlake&#8221;</quote><quote>&#8220;the first copy of Cennino Cennini\\'s book\\nseen in England&#8221;</quote>.  But there is simply nothing in that book\\nthat could have inspired a remark about the Pope and the Virgin. What Blake,\\naccording to Linnell, found in it was that <quote>&#8220;he had been using\\nthe same materials and methods in painting as Cennini describes-particularly\\nthe carpenter\\'s glue&#8221;</quote>.  The book is devoted to materials and\\nmethods throughout.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">But Ellis was notoriously inaccurate.  Knowing\\nof the Cennini book and confusing a tractate by Cellini with a tractate by\\nCennini, he can easily have attributed the marginal note to the wrong work.\\n (Several Cellini editions were available; there was no English translation.)</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     On Nature\\'s incapacity to bear, see Blake\\'s assertion that <quote>&#8220;This World is too poor to produce one Seed&#8221;</quote> (Annotation\\nto Reynolds, p 157).  Harold Bloom suggests that the allegory of <quote>&#8220;Faith,\\nHope, and Charity&#8221;</quote> signified the vegetable glass of Nature to\\nBlake because St Paul speaks of seeing through a glass, darkly, in the verse\\nof I Corinthians preceding that naming Faith, Hope, Charity.</p></note>'","tn670.2":"b'<note id=\"tn670.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The watercolor is designated NT 199, its place\\nin the series.  Prints and Drawings Room, British Museum.  Titles on the spines\\nof books shown in Blake\\'s drawing correspond to the following eighteenth-century\\ntitles:</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     (1) Plato, <title level=\"m\"><span class=\"tei-hi-italic\">Phaedo; or, A\\nDialogue on the Immortality of the Soul</span></title>; (2) Cicero, <title level=\"m\"><span class=\"tei-hi-italic\">De Natura Deorum; or, On the Nature of the Gods</span></title>; (3)\\nPlutarchi Chaeronei (Plutarch of Chaeronea), <title level=\"m\"><span class=\"tei-hi-italic\">\\nVaria Scripti, quae moralia vulgo vocantur; or The Moralia.</span></title></p></note>'","tn671.1":"b'<note id=\"tn671.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Inscriptions that are simply descriptive or wholly derivative\\nfrom the traditional or individual but non-Blakean text of the picture are\\nnot included here.</p></note>'","tn671.2":"b'<note id=\"tn671.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">[Inscriptions on drawings of Edward I in his coffin,\\n1774] Reproduced in Keynes, <title level=\"m\"><span class=\"tei-hi-italic\">Blake Studies</span></title>\\n(Oxford 1971), pl 9; for identification of the handwriting, see pp 19-20.\\n</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     were] <span class=\"tei-hi-italic\">mended from</span> when</p></note>'","tn671.3":"b'<note id=\"tn671.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The inscription engraved in the plate in its final state\\nmay have been made as late as 1810.  Blake must have written on the proof\\nof a first state at a time when he felt no longer <quote>&#8220;a beginner&#8221;</quote>.</p></note>'","tn671.4":"b'<note id=\"tn671.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><span class=\"tei-hi-italic\">Date</span>: <quote>&#8220;WB inv[enit] 1780&#8221;</quote> is Blake\\'s claim to have drawn the picture or its original at that\\ntime.  The engraving, with caption, must belong to ca. 1802 or later; there\\nis a conventional <quote>&#8220;g&#8221;</quote> in the word <quote>&#8220;Giving&#8221;</quote> (visible in copy B). Moreover, <quote>&#8220;Albion&#8221;</quote>\\nis a man only in  <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> and the\\nrevised <title level=\"m\"><span class=\"tei-hi-italic\">Four Zoas</span></title> and after; earlier\\na land (personified once in <title level=\"m\"><span class=\"tei-hi-italic\">Poetical Sketches\\n</span></title> as a woman, once in <title level=\"m\"><span class=\"tei-hi-italic\">America</span></title>,\\nvaguely, as <quote>&#8220;sick&#8221;</quote>); there is no Dance of Death\\nbefore <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title>.</p></note>'","tn672.1":"b'<note id=\"tn672.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Reference is to page 56 in <title level=\"m\"><span class=\"tei-hi-italic\">\\nPoetical Sketches</span></title>, i.e. lines 2-3 of the <title level=\"m\"><span class=\"tei-hi-italic\">Prologue . . . for . . . King Edward the Fourth</span></title>.</p></note>'","tn672.2":"b'<note id=\"tn672.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">See Prospectus of October I793 (below, <quote>&#8220;Miscellaneous\\nProse&#8221;</quote>) Note that the three titles after <quote>&#8220;8&#8221;</quote> and two after <quote>&#8220;15&#8221;</quote> were afterthoughts.\\n The items after <quote>&#8220;15&#8221;</quote><pb n=\"890\"/> were renumbered\\nand rearranged to accommodate <quote>&#8220;17&#8221;</quote> and <quote>&#8220;18&#8221;</quote>, but then these topics, though not their numbers,\\nwere deleted.</p></note>'","tn672.3":"b'<note id=\"tn672.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">5 The Ancient Britons] Blake deleted <quote>&#8220;5&#8221;</quote> to make this <quote>&#8220;The frontispiece&#8221;</quote>, then\\nchanged his mind and deleted that phrase.</p></note>'","tn673.1":"b'<note id=\"tn673.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Notebook p 116] This page was the back cover of the\\nNotebook and these pencil notes were completely rubbed away; they have not\\nhitherto been noticed.</p></note>'","tn673.2":"b'<note id=\"tn673.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Inscriptions beneath color-printed pages from the illuminated\\nworks, as indicated.  The <quote>&#8220;books&#8221;</quote> into which they\\nwere once gathered are sometimes called the <title level=\"a\">&#8220;Small\\nBook of Designs&#8221;</title> and the <title level=\"a\">&#8220;Large Book\\nof Designs&#8221;</title>, See Bentley,  <title level=\"m\"><span class=\"tei-hi-italic\">Blake\\nBooks</span></title>, pp 269, 356-358.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;Teach these\\nSouls to Fly&#8221;</quote> and <quote>&#8220;O flames of furious desire&#8221;</quote> and <quote>&#8220;I labour upwards . . .&#8221;</quote> on  <title level=\"m\"><span class=\"tei-hi-italic\">Urizen</span></title> 2, 3, and 5 respectively are not\\nin Blake\\'s hand yet often quoted.</p></note>'","tn674.1":"b'<note id=\"tn674.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;How I pity&#8221;</quote> (perhaps a rejected\\ndesign for  <title level=\"m\"><span class=\"tei-hi-italic\">The Gates of Paradise</span></title>)\\nis in an Album of Sketches in the British Museum.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;Father\\n&amp; Mother I return . . .&#8221;</quote> is the caption under an emblematic\\nsketch of a bee-winged human, Rosenwald Collection, Library of Congress. \\nOn the back is a harvest emblem which is a variant of the design in <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> 50; under that is an erased caption,\\nnot deciphered.  Both emblems are reproduced in the 1977 <title level=\"m\"><span class=\"tei-hi-italic\">Notebook</span></title> as Figs. 44 and 4.5. (For years the deciphered\\ncaption, <quote>&#8220;Father &amp; Mother . . .&#8221;</quote> was mistakenly\\nreported as written on the back of or on a sketch of <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title> 50, but it has no evident connection with <title level=\"m\"><span class=\"tei-hi-italic\">Milton</span></title>.)</p></note>'","tn674.3":"b'<note id=\"tn674.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><title level=\"a\">&#8220;The Bible of Hell .&#8221;</title>\\nis cited in Ellis &amp; Yeats, <title level=\"m\"><span class=\"tei-hi-italic\">The Works of\\nWilliam Blake</span></title> (1893) 1 46, but has not been located.  This may\\nbe a confused reference to <title level=\"m\"><span class=\"tei-hi-italic\">The Marriage of Heaven\\nand Hell.</span></title></p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The title <quote>&#8220;For Children . .\\n.&#8221;</quote> is on a leaf in the collection of Sir Geoffrey Keynes; the\\ncaptions are written above and below a sketch similar to Emblem 13 in <title level=\"m\"><span class=\"tei-hi-italic\">Notebook</span></title> page 31.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><title level=\"a\">\\n&#8220;Visions of Eternity&#8221;</title> and <title level=\"a\">&#8220;The\\nAMERICAN WAR&#8221;</title> are in the British Museum (see <quote>&#8220;Handlist&#8221;</quote> in <title level=\"s\"><span class=\"tei-hi-italic\">Blake Newsletter</span></title> 20,\\nSpring 1972, p 228 and plate 6).  The stormy scene in the latter sketch is\\na variant of that in the title page of <title level=\"m\"><span class=\"tei-hi-italic\">America\\na Prophecy</span></title>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;The dead ardours&#8221;</quote> is sketched below a trio of human forms on a cloud, on a small sheet\\nof paper in the collection of David Bindman.  <quote>&#8220;VOLUME&#8221;</quote> (partly cut off) is sketched at the top. Evidently a rejected title\\ndesign for Stanley\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Leonora</span></title>, adapted\\nfrom B&#252;rger, published in 1796 with three designs by Blake etched by <quote>&#8220;Perry&#8221;</quote>, of whom little else is known. The poem is full\\nof vampirish spirits; Blake had used the image of <quote>&#8220;a council\\nof ardors seated in clouds&#8221;</quote> in The French Revolution 264; he\\nspelled the word variously <quote>&#8220;ardor&#8221;</quote> or <quote>&#8220;ardour&#8221;</quote>. (The letters of the caption, hitherto conjectured as spelling <quote>&#8220;The dead bad doers&#8221;</quote>, are difficult to read because Blake\\nwas not so much writing them as sketching their shape and position in the\\ndesign.)</p></note>'","tn675.1":"b'<note id=\"tn675.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     This list, a small fraction of all the captions\\non Blake\\'s paintings, is limited to those in Blake\\'s own hand.  See Martin\\nButlin catalogue (1981).  The inscription on the back of <title level=\"m\"><span class=\"tei-hi-italic\">The Fall of Man</span></title>, previously included, is now omitted,\\nas not in Blake\\'s hand.</p></note>'","tn682.1":"b'<note id=\"tn682.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Transcribed from facsimile plates in <title level=\"m\"><span class=\"tei-hi-italic\">Blake, the Mystic Genius</span></title>, by Adrian van Sinderen, Syracuse,\\nN.Y.: Syracuse University Press 1949.  The originals are now in the Morgan\\nLibrary.</p></note>'","tn686.1":"b'<note id=\"tn686.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Pencil notes in John Varley\\'s hand but quoting Blake\\'s\\ncomments on his own drawings; transcribed from facsimile pages in <title level=\"m\"><span class=\"tei-hi-italic\">The Blake- Varley Sketchbook of 1819 in the Collection of M. D. E.\\nClayton-Stamm</span></title> (ed Martin Butlin), London: William Heinemann,\\n2 vols, 1969.</p></note>'","tn686.2":"b'<note id=\"tn686.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 54.  The page is otherwise blank.</p></note>'","tn686.3":"b'<note id=\"tn686.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">PAGE 131 Varley is copying the text under Blake\\'s sketch\\non p 53, now illegible but for the opening <quote>&#8220;Hotspur said&#8221;</quote>.  In the sketch two figures, one a winged angel, the other probably\\nHotspur, stand gesticulating in front of a sun that rises (or sets) behind\\na row of tents. (Butlin mistakes the sun for a halo.)</p></note>'","tn687.1":"b'<note id=\"tn687.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Inscribed also are the names of the pilgrims and the\\nidentification of the Tabarde Inn.</p></note>'","tn687.2":"b'<note id=\"tn687.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Insignificant variants in wording are here ignored.\\n For a full      collation see S.  Foster Damon, <title level=\"m\"><span class=\"tei-hi-italic\">\\nBlake\\'s Job</span></title> (1966), pp 55-66.  The canceled words on designs\\nI and XXI were recently discovered by Robert N. Essick.</p></note>'","tn687.3":"b'<note id=\"tn687.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Blake\\'s symbolic signature on the drawing for design\\nXIV (<quote>&#8220;When the morning Stars sang together&#8221;</quote>) is\\nin the Fitzwilliam Museum.  John Beer begins to recognize the duality of the\\nsymbolism by noting that the central symbol both is and is not a <quote>&#8220;B&#8221;</quote>; it is also a thumb.  Preceding it is a hand which is also a <quote>&#8220;W&#8221;</quote>.  Following these initials, B.W., is an eye, the <quote>&#8220;I&#8221;</quote> of Imagination.  The first and last hieroglyphs are,\\nrespectively, a line which is the graver or pencil with which Blake draws\\nhis line of text and design, and a sun (flanked by two marks that imply a\\nsphere in motion, notes Beer) which supplies the Illumination of his pages.\\n</p></note>'","tn688.3":"b'<note id=\"tn688.3\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Eleven leaves, forming the beginning of an illustrated\\nms copy of Genesis, are in the Hunting- ton Library.  Two are title pages;\\nnine contain the text of Genesis through IV:15, with Blake\\'s own chapter titles,\\ngiven here.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"><quote>&#8220;The text follows the standard King James\\nversion, with only incidental differences in punctuation and word order. \\nWhen the word `ground\\' occurs in the text . . . Blake consistently adds the\\nword \\'Adamah,\\' usually in brackets.  In IV:15, Blake amplifies the original\\ntext from `And the Lord put a mark on Cain\\' to `And the Lord set a mark upon\\nCain\\'s forehead\\' &#8221;</quote>. <title level=\"m\"><span class=\"tei-hi-italic\">Catalogue\\nof William Blake\\'s Drawings and Paintings in the Huntington Library</span></title>,\\n1957, pp 40-42.</p></note>'","tn688.4":"b'<note id=\"tn688.4\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Inscriptions on the unfinished pencil and watercolor\\ndrawings illustrating Dante\\'s <title level=\"m\"><span class=\"tei-hi-italic\">Commedia</span></title>;\\nthey have been reproduced in collotype in 1922, photolithography in Alber\\nt S. Roe, <title level=\"m\"><span class=\"tei-hi-italic\">Blake\\'s Illustrations to the Divine\\nComedy</span></title>, Princeton 1954., and with alternate pairs of pages in\\ncolor in Milton Klonsky, <title level=\"m\"><span class=\"tei-hi-italic\">Blake\\'s Dante</span></title>,\\nHarmony Books 1980.</p></note>'","tn690.1":"b'<note id=\"tn690.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">This . . . Hells Gate] which ought to be at top <span class=\"tei-hi-italic\">added in another hand</span></p></note>'","tn691.1":"b'<note id=\"tn691.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Inscriptions on the pen and water-color drawing in the\\nTate Gallery; No 39 in Martin Butlin, <span class=\"tei-hi-italic\">William Blake . . . a catalogue\\nof the works . . . in the Tate Gallery</span>, London 1957.</p></note>'","tn691.2":"b'<note id=\"tn691.2\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">God out of Christ] <span class=\"tei-hi-italic\">meaning</span> God not\\nincarnate as human (suggestion of Mary Lynn Johnson)</p></note>'","tn692.1":"b'<note id=\"tn692.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Etched by Blake; now known only in the transcript in\\nthe Gilchrist <title level=\"m\"><span class=\"tei-hi-italic\">Life of Blake</span></title>, 1863,\\nII 263-24.  It is of course overpunctuated.</p></note>'","tn694.1":"b'<note id=\"tn694.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">From Bells Weekly Messenger</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> The paragraph from\\nSalisbury occurs in the <title level=\"m\"><span class=\"tei-hi-italic\">Messenger\\'s</span></title>\\n8th page, under the heading SUMMER ASSIZES.  In the Notebook Blake copied\\nit beside and below his emblematic drawing of Ugolino in prison.  In his comment\\nBlake refers to two prints he engraved, from paintings by Morland, i.e. Le\\nCave.  The deleted word is confusing, though legible enough, because he began\\nby writing about <quote>&#8220;two Prints&#8221;</quote> but concluded by\\nturning the focus on those two (paintings) he engraved from.</p></note>'","tn695.1":"b'<note id=\"tn695.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A list of songs to be etched on one plate.  See above,\\npp 460-461.</p></note>'","tn696.1":"b'<note id=\"tn696.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The first selection in Bysshe is under the heading <quote>&#8220;Enjoyment&#8221;</quote>, the second under <quote>&#8220;Oak&#8221;</quote>.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\"> Blake\\'s mistakes in copying are <quote>&#8220;every&#8221;</quote> for <quote>&#8220;either&#8221;</quote> in line 7 of Behn; <quote>&#8220;For&#8221;</quote> for <quote>&#8220;Far&#8221;</quote> in line 9 of\\nDryden (unless he used the 3rd edition which has that variant); and&#8212;possibly\\nthese are revisions rather than mistakes: <quote>&#8220;bear/tear&#8221;</quote>\\nfor <quote>&#8220;bend/rend&#8221;</quote> in lines 3-4 and <quote>&#8220;lowring&#8221;</quote> for <quote>&#8220;towring&#8221;</quote> in line 9 (but this may\\nbe an uncrossed <span class=\"tei-hi-italic\">t</span>).</p></note>'","tn697.1":"b'<note id=\"tn697.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">A trimmed fragment of manuscript, used on the other\\nside for proofing one of Blake\\'s engravings for Hayley\\'s Ballad of  <title level=\"a\"><quote>&#8220;The Dog&#8221;</quote></title> (9 Sept 1802), recently\\ndiscovered and acquired by G. E. Bentley, Jr. See his note, with reproduction\\nand transcript,  <title level=\"a\">&#8220;A New Blake Document: The `Riddle\\'\\nManuscript,&#8221;</title><title level=\"m\"><span class=\"tei-hi-italic\">The Library</span></title>\\nXXIV (1969) 337-343. (The first line of the transcript does not appear in\\nthe photograph; presumably it is hidden by the mounting.) Like the nursery\\nrhyme given above, this material belongs doubtless to oral tradition, Blake\\nserving as transmitter.</p></note>'","tn698.1":"b'<note id=\"tn698.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     The Album is in the Berg Collection of The New\\nYork Public Library.  My brief account of the album appeared in the Library\\'s <title level=\"s\"><span class=\"tei-hi-italic\">Bulletin</span></title> for November 1960.  Some slight\\ndeletions and corrections have been omitted..</p></note>'","tn699.1":"b'<note id=\"tn699.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">The present edition contains all the letters by Blake\\nof which the texts are known.  For receipts and for letters <span class=\"tei-hi-italic\">\\nto</span> Blake see Geoffrey Keynes\\'s edition of the <span class=\"tei-hi-italic\">Letters</span>,\\n1956, revised 1968 and 1980.  For bibliographical information see the Keynes\\nnotes; see also Bentley, <span class=\"tei-hi-italic\">Blake Books</span>, 1977, pp. 270-284.\\n For reproductions of the series to Buts see <span class=\"tei-hi-italic\">Letters from William\\nBlake to Thomas Butts</span> 1800-1803, <span class=\"tei-hi-italic\">Printed in Facsimile</span>,\\ned. Geoffrey Keynes, Oxford: Clarendon Press 1926.</p><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     Addresses and\\ndate lines, regardless of where they appear in the original letters have been\\nplaced at the top and punctuated for clarity.  For the earlier Doubleday text\\nthe letters <quote>&#8220;from the Gilchrist <span class=\"tei-hi-italic\">Life</span>&#8221;\\n</quote> were transcribed from Keynes; they have now been checked against\\nthe 1863 Gilchrist for substantive matters but not punctuation.</p></note>'","tn707.1":"b'<note id=\"tn707.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Transcribed from recently recoverd ms, in Pierpont Morgan\\nLibrary.  Blake mended several words&#8212;first writing <quote>&#8220;dearest&#8221;</quote>, <quote>&#8220;removal from&#8221;</quote>, <quote>&#8220;when men&#8221;</quote>, and <quote>&#8220;nervous Fear&#8221;</quote>.  The <quote>&#8220;ca&#8221;</quote> of <quote>&#8220;call&#8221;</quote> and the <quote>&#8220;h&#8221;</quote> of <quote>&#8220;Earth&#8221;</quote> (in line 8) were torn away\\nby the unsealing.</p></note>'","tn708.1":"b'<note id=\"tn708.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">  at My Cot]  My <span class=\"tei-hi-italic\">mended from</span> my</p></note>'","tn717.1":"b'<note id=\"tn717.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Previously conjectured as written to William Hayley,\\nca 1800; now identified by Mary Lynn Johnson (in a forthcoming article on\\n\"Blake\\'s Biblical Watercolours for Thomas Butts\\').</p></note>'","tn720.1":"b'<note id=\"tn720.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Lines 7 and 8 of the <quote>&#8220;Verses&#8221;</quote>\\nwere written in the margin and then marked for insertion with this note: <quote>&#8220;These 2 lines were omitted in transcribing &amp; ought to come in at\\nX&#8221;</quote></p></note>'","tn723.1":"b'<note id=\"tn723.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">[To] Mr Butts . . . Jany 10. 180[3]  Misdated by Blake <quote>&#8220;1802&#8221;</quote> and accepted as such&#8212;until E. B. Murray published <quote>&#8220;A Suggested Redating of a Blake Letter to Thomas Butts&#8221;</quote>\\nin <span class=\"tei-hi-italic\">Blake: An Illustrated Quarterly</span> 13 (1979-80) 148-51,\\ndemonstrating conclusively the fit of this letter between the letters of 22\\nNovember 1802 and 30 January 1803.</p></note>'","tn725.1":"b'<note id=\"tn725.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">I hear a voice . . .] from Thomas Tickell\\'s <quote>&#8220;Lucy and Colin&#8221;</quote> in Percy\\'s <span class=\"tei-hi-italic\">Reliques</span>\\n(noted by Keynes)</p></note>'","tn733.1":"b'<note id=\"tn733.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">   O why was I born . . .]  compare <quote>&#8220;Mary&#8221;</quote> line 21ff</p></note>'","tn734.1":"b'<note id=\"tn734.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Not in Blake\\'s hand but presumably dictated by him.\\n This draft from a photocopy lent by Geoffrey Keynes, is said to differ from\\nanother draft in Chichester (not seen).  In the 15th paragraph, after the\\nparenthesis <quote>&#8220;(. . . Sedition)&#8221;</quote>, the first <quote>&#8220;Mr. Grinder&#8221;</quote> is evidently a scribal error for <quote>&#8220;Mrs Grinder&#8221;</quote>.</p></note>'","tn742.1":"b'<note id=\"tn742.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">Busy Busy . . .] from <span class=\"tei-hi-italic\">The Rehearsal</span>\\nby Buckingham (noted by Morchard Bishop)</p></note>'","tn745.1":"b'<note id=\"tn745.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">deliver then]   Blake perhaps intended <quote>&#8220;deliver\\nthem&#8221;</quote></p></note>'","tn775.1":"b'<note id=\"tn775.1\"><p xmlns:exist=\"http://exist.sourceforge.net/NS/exist\">     line 3: to the to the <span class=\"tei-hi-italic\">in ms</span></p></note>'"};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(17);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _services = __webpack_require__(18);

	var _data = __webpack_require__(15);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ErdmanController = function () {
	    function ErdmanController($rootScope, $location, $anchorScroll) {
	        _classCallCheck(this, ErdmanController);

	        this.$location = $location;
	        this.$anchorScroll = $anchorScroll;
	        this.scope = $rootScope;
	        this.scope.currentToc = '';
	        this.pages = {};
	        this.loader = true;
	        this.loadPages();
	        this.results = [];
	        this.showSearchResults = false;
	        this.titles = Object.assign({}, _data.titles);
	        this.tocTree = [];
	        this.nestTitles();
	        this.note = false;
	        this.query = '';
	    }

	    _createClass(ErdmanController, [{
	        key: 'loadPages',
	        value: function loadPages() {
	            var _this = this;

	            _services.ErdmanDataService.getPages().then(function (response) {
	                _this.scope.$apply(function () {
	                    _this.pages = Object.assign({}, response);
	                    _this.loader = false;
	                });
	            });
	        }
	    }, {
	        key: 'goToPage',
	        value: function goToPage(pageId) {
	            if (!pageId) {
	                return;
	            }
	            var newHash = pageId;

	            if (this.$location.hash() !== newHash) {
	                this.$location.hash(newHash);
	                (0, _jquery2.default)('html, body').animate({
	                    scrollTop: (0, _jquery2.default)("#" + newHash).offset().top - 55
	                }, 100);
	            }
	        }
	    }, {
	        key: 'searchPages',
	        value: function searchPages(query) {
	            var _this2 = this;

	            if (!query) return;

	            this.query = query;

	            _services.ErdmanDataService.search(query).then(function (response) {
	                var results = {};
	                var resultIds = [];

	                var _iteratorNormalCompletion = true;
	                var _didIteratorError = false;
	                var _iteratorError = undefined;

	                try {
	                    var _loop = function _loop() {
	                        var doc = _step.value;


	                        var pageObject = _data.pages.filter(function (page) {
	                            return page.page_id == doc.page_id;
	                        });
	                        resultIds.push(doc.id);

	                        var headingId = '';
	                        if (pageObject[0].headings[0][1].length > 0) {
	                            headingId = pageObject[0].headings[0][1][0][0];
	                        } else {
	                            headingId = pageObject[0].headings[0][0];
	                        }

	                        var headingText = _data.titles[headingId];

	                        var result = {
	                            preview: response.highlighting[doc.id].text_contents,
	                            page_id: doc.page_id
	                        };

	                        if (results[headingId]) {
	                            results[headingId].results.push(result);
	                        } else {
	                            results[headingId] = {
	                                'heading': headingText,
	                                'results': []
	                            };
	                            results[headingId].results.push(result);
	                        }
	                    };

	                    for (var _iterator = response.docs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                        _loop();
	                    }
	                } catch (err) {
	                    _didIteratorError = true;
	                    _iteratorError = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion && _iterator.return) {
	                            _iterator.return();
	                        }
	                    } finally {
	                        if (_didIteratorError) {
	                            throw _iteratorError;
	                        }
	                    }
	                }

	                _this2.scope.$apply(function () {
	                    _this2.results = Object.assign({}, results);
	                    _this2.showSearchResults = true;
	                    _this2.highlightPages(resultIds);
	                });
	                _this2.scope.$broadcast('newSearch');
	            });
	        }
	    }, {
	        key: 'highlightPages',
	        value: function highlightPages(resultIds) {
	            for (var key in this.pages) {
	                if (resultIds.includes(parseInt(key))) {
	                    this.pages[key].highlight_contents = this.highlightSearchTerm(this.query, this.pages[key].contents, this.pages[key].text_contents);
	                } else {
	                    this.pages[key].highlight_contents = false;
	                }
	            }
	        }
	    }, {
	        key: 'nestTitles',
	        value: function nestTitles() {
	            for (var k in this.titles) {
	                if (k.indexOf('.') === -1) {
	                    var toplvl = {
	                        title: this.titles[k].heading,
	                        key: k,
	                        children: this.getChildren(k),
	                        expanded: false
	                    };
	                    this.tocTree.push(toplvl);
	                    delete this.titles[k];
	                }
	            }
	        }
	    }, {
	        key: 'getChildren',
	        value: function getChildren(parent) {
	            var children = [];
	            for (var k in this.titles) {
	                var test = k.substring(0, k.lastIndexOf("."));
	                if (parent === test) {
	                    var grandChildren = this.getChildren(k);
	                    var child = {
	                        title: this.titles[k].heading,
	                        key: k,
	                        children: grandChildren,
	                        expanded: false
	                    };
	                    children.push(child);
	                    delete this.titles[k];
	                }
	            }
	            return children;
	        }
	    }, {
	        key: 'closeSearchResults',
	        value: function closeSearchResults() {
	            this.showSearchResults = false;
	        }
	    }, {
	        key: 'openNote',
	        value: function openNote(id) {
	            this.scope.$apply(this.note = _data.notes[id]);
	        }
	    }, {
	        key: 'closeNote',
	        value: function closeNote() {
	            this.scope.$apply(this.note = false);
	        }
	    }, {
	        key: 'highlightSearchTerm',
	        value: function highlightSearchTerm(phrase, text, noHtmlText) {
	            if (phrase !== '') {
	                if (phrase.startsWith('"') && phrase.endsWith('"')) {
	                    phrase = phrase.replace(/"/g, '');
	                    if (noHtmlText.match(new RegExp('(' + phrase + ')', 'gim'))) {
	                        text = text.replace(new RegExp('(' + phrase + ')', 'gim'), '<span class="highlighted">$1</span>');
	                    }
	                } else if (phrase.indexOf(' ') > -1) {
	                    var phraseArray = phrase.split(' ');
	                    angular.forEach(phraseArray, function (ph) {
	                        if (ph !== 'AND' || ph !== 'OR') {
	                            if (noHtmlText.match(new RegExp('(\\b' + ph + '\\b)', 'gim'))) {
	                                text = text.replace(new RegExp('(\\b' + ph + '\\b)', 'gim'), '<span class="highlighted">$1</span>');
	                            }
	                        }
	                    });
	                } else {
	                    if (noHtmlText.match(new RegExp('(' + phrase + ')', 'gim'))) {
	                        text = text.replace(new RegExp('(' + phrase + ')', 'gim'), '<span class="highlighted">$1</span>');
	                    }
	                }
	            }

	            return text;
	        }
	    }]);

	    return ErdmanController;
	}();

	exports.default = ErdmanController;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*!
	 * jQuery JavaScript Library v3.7.1
	 * https://jquery.com/
	 *
	 * Copyright OpenJS Foundation and other contributors
	 * Released under the MIT license
	 * https://jquery.org/license
	 *
	 * Date: 2023-08-28T13:37Z
	 */
	(function (global, factory) {

		"use strict";

		if (( false ? "undefined" : _typeof(module)) === "object" && _typeof(module.exports) === "object") {

			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket trac-14549 for more info.
			module.exports = global.document ? factory(global, true) : function (w) {
				if (!w.document) {
					throw new Error("jQuery requires a window with a document");
				}
				return factory(w);
			};
		} else {
			factory(global);
		}

		// Pass this if window is not defined yet
	})(typeof window !== "undefined" ? window : undefined, function (window, noGlobal) {

		// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
		// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
		// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
		// enough that all such attempts are guarded in a try block.
		"use strict";

		var arr = [];

		var getProto = Object.getPrototypeOf;

		var _slice = arr.slice;

		var flat = arr.flat ? function (array) {
			return arr.flat.call(array);
		} : function (array) {
			return arr.concat.apply([], array);
		};

		var push = arr.push;

		var indexOf = arr.indexOf;

		var class2type = {};

		var toString = class2type.toString;

		var hasOwn = class2type.hasOwnProperty;

		var fnToString = hasOwn.toString;

		var ObjectFunctionString = fnToString.call(Object);

		var support = {};

		var isFunction = function isFunction(obj) {

			// Support: Chrome <=57, Firefox <=52
			// In some browsers, typeof returns "function" for HTML <object> elements
			// (i.e., `typeof document.createElement( "object" ) === "function"`).
			// We don't want to classify *any* DOM node as a function.
			// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
			// Plus for old WebKit, typeof returns "function" for HTML collections
			// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
			return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
		};

		var isWindow = function isWindow(obj) {
			return obj != null && obj === obj.window;
		};

		var document = window.document;

		var preservedScriptAttributes = {
			type: true,
			src: true,
			nonce: true,
			noModule: true
		};

		function DOMEval(code, node, doc) {
			doc = doc || document;

			var i,
			    val,
			    script = doc.createElement("script");

			script.text = code;
			if (node) {
				for (i in preservedScriptAttributes) {

					// Support: Firefox 64+, Edge 18+
					// Some browsers don't support the "nonce" property on scripts.
					// On the other hand, just using `getAttribute` is not enough as
					// the `nonce` attribute is reset to an empty string whenever it
					// becomes browsing-context connected.
					// See https://github.com/whatwg/html/issues/2369
					// See https://html.spec.whatwg.org/#nonce-attributes
					// The `node.getAttribute` check was added for the sake of
					// `jQuery.globalEval` so that it can fake a nonce-containing node
					// via an object.
					val = node[i] || node.getAttribute && node.getAttribute(i);
					if (val) {
						script.setAttribute(i, val);
					}
				}
			}
			doc.head.appendChild(script).parentNode.removeChild(script);
		}

		function toType(obj) {
			if (obj == null) {
				return obj + "";
			}

			// Support: Android <=2.3 only (functionish RegExp)
			return (typeof obj === "undefined" ? "undefined" : _typeof(obj)) === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
		}
		/* global Symbol */
		// Defining this global in .eslintrc.json would create a danger of using the global
		// unguarded in another place, it seems safer to define global only for this module


		var version = "3.7.1",
		    rhtmlSuffix = /HTML$/i,


		// Define a local copy of jQuery
		jQuery = function jQuery(selector, context) {

			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init(selector, context);
		};

		jQuery.fn = jQuery.prototype = {

			// The current version of jQuery being used
			jquery: version,

			constructor: jQuery,

			// The default length of a jQuery object is 0
			length: 0,

			toArray: function toArray() {
				return _slice.call(this);
			},

			// Get the Nth element in the matched element set OR
			// Get the whole matched element set as a clean array
			get: function get(num) {

				// Return all the elements in a clean array
				if (num == null) {
					return _slice.call(this);
				}

				// Return just the one element from the set
				return num < 0 ? this[num + this.length] : this[num];
			},

			// Take an array of elements and push it onto the stack
			// (returning the new matched element set)
			pushStack: function pushStack(elems) {

				// Build a new jQuery matched element set
				var ret = jQuery.merge(this.constructor(), elems);

				// Add the old object onto the stack (as a reference)
				ret.prevObject = this;

				// Return the newly-formed element set
				return ret;
			},

			// Execute a callback for every element in the matched set.
			each: function each(callback) {
				return jQuery.each(this, callback);
			},

			map: function map(callback) {
				return this.pushStack(jQuery.map(this, function (elem, i) {
					return callback.call(elem, i, elem);
				}));
			},

			slice: function slice() {
				return this.pushStack(_slice.apply(this, arguments));
			},

			first: function first() {
				return this.eq(0);
			},

			last: function last() {
				return this.eq(-1);
			},

			even: function even() {
				return this.pushStack(jQuery.grep(this, function (_elem, i) {
					return (i + 1) % 2;
				}));
			},

			odd: function odd() {
				return this.pushStack(jQuery.grep(this, function (_elem, i) {
					return i % 2;
				}));
			},

			eq: function eq(i) {
				var len = this.length,
				    j = +i + (i < 0 ? len : 0);
				return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
			},

			end: function end() {
				return this.prevObject || this.constructor();
			},

			// For internal use only.
			// Behaves like an Array's method, not like a jQuery method.
			push: push,
			sort: arr.sort,
			splice: arr.splice
		};

		jQuery.extend = jQuery.fn.extend = function () {
			var options,
			    name,
			    src,
			    copy,
			    copyIsArray,
			    clone,
			    target = arguments[0] || {},
			    i = 1,
			    length = arguments.length,
			    deep = false;

			// Handle a deep copy situation
			if (typeof target === "boolean") {
				deep = target;

				// Skip the boolean and the target
				target = arguments[i] || {};
				i++;
			}

			// Handle case when target is a string or something (possible in deep copy)
			if ((typeof target === "undefined" ? "undefined" : _typeof(target)) !== "object" && !isFunction(target)) {
				target = {};
			}

			// Extend jQuery itself if only one argument is passed
			if (i === length) {
				target = this;
				i--;
			}

			for (; i < length; i++) {

				// Only deal with non-null/undefined values
				if ((options = arguments[i]) != null) {

					// Extend the base object
					for (name in options) {
						copy = options[name];

						// Prevent Object.prototype pollution
						// Prevent never-ending loop
						if (name === "__proto__" || target === copy) {
							continue;
						}

						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
							src = target[name];

							// Ensure proper type for the source value
							if (copyIsArray && !Array.isArray(src)) {
								clone = [];
							} else if (!copyIsArray && !jQuery.isPlainObject(src)) {
								clone = {};
							} else {
								clone = src;
							}
							copyIsArray = false;

							// Never move original objects, clone them
							target[name] = jQuery.extend(deep, clone, copy);

							// Don't bring in undefined values
						} else if (copy !== undefined) {
							target[name] = copy;
						}
					}
				}
			}

			// Return the modified object
			return target;
		};

		jQuery.extend({

			// Unique for each copy of jQuery on the page
			expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),

			// Assume jQuery is ready without the ready module
			isReady: true,

			error: function error(msg) {
				throw new Error(msg);
			},

			noop: function noop() {},

			isPlainObject: function isPlainObject(obj) {
				var proto, Ctor;

				// Detect obvious negatives
				// Use toString instead of jQuery.type to catch host objects
				if (!obj || toString.call(obj) !== "[object Object]") {
					return false;
				}

				proto = getProto(obj);

				// Objects with no prototype (e.g., `Object.create( null )`) are plain
				if (!proto) {
					return true;
				}

				// Objects with prototype are plain iff they were constructed by a global Object function
				Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
				return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
			},

			isEmptyObject: function isEmptyObject(obj) {
				var name;

				for (name in obj) {
					return false;
				}
				return true;
			},

			// Evaluates a script in a provided context; falls back to the global one
			// if not specified.
			globalEval: function globalEval(code, options, doc) {
				DOMEval(code, { nonce: options && options.nonce }, doc);
			},

			each: function each(obj, callback) {
				var length,
				    i = 0;

				if (isArrayLike(obj)) {
					length = obj.length;
					for (; i < length; i++) {
						if (callback.call(obj[i], i, obj[i]) === false) {
							break;
						}
					}
				} else {
					for (i in obj) {
						if (callback.call(obj[i], i, obj[i]) === false) {
							break;
						}
					}
				}

				return obj;
			},

			// Retrieve the text value of an array of DOM nodes
			text: function text(elem) {
				var node,
				    ret = "",
				    i = 0,
				    nodeType = elem.nodeType;

				if (!nodeType) {

					// If no nodeType, this is expected to be an array
					while (node = elem[i++]) {

						// Do not traverse comment nodes
						ret += jQuery.text(node);
					}
				}
				if (nodeType === 1 || nodeType === 11) {
					return elem.textContent;
				}
				if (nodeType === 9) {
					return elem.documentElement.textContent;
				}
				if (nodeType === 3 || nodeType === 4) {
					return elem.nodeValue;
				}

				// Do not include comment or processing instruction nodes

				return ret;
			},

			// results is for internal usage only
			makeArray: function makeArray(arr, results) {
				var ret = results || [];

				if (arr != null) {
					if (isArrayLike(Object(arr))) {
						jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
					} else {
						push.call(ret, arr);
					}
				}

				return ret;
			},

			inArray: function inArray(elem, arr, i) {
				return arr == null ? -1 : indexOf.call(arr, elem, i);
			},

			isXMLDoc: function isXMLDoc(elem) {
				var namespace = elem && elem.namespaceURI,
				    docElem = elem && (elem.ownerDocument || elem).documentElement;

				// Assume HTML when documentElement doesn't yet exist, such as inside
				// document fragments.
				return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || "HTML");
			},

			// Support: Android <=4.0 only, PhantomJS 1 only
			// push.apply(_, arraylike) throws on ancient WebKit
			merge: function merge(first, second) {
				var len = +second.length,
				    j = 0,
				    i = first.length;

				for (; j < len; j++) {
					first[i++] = second[j];
				}

				first.length = i;

				return first;
			},

			grep: function grep(elems, callback, invert) {
				var callbackInverse,
				    matches = [],
				    i = 0,
				    length = elems.length,
				    callbackExpect = !invert;

				// Go through the array, only saving the items
				// that pass the validator function
				for (; i < length; i++) {
					callbackInverse = !callback(elems[i], i);
					if (callbackInverse !== callbackExpect) {
						matches.push(elems[i]);
					}
				}

				return matches;
			},

			// arg is for internal usage only
			map: function map(elems, callback, arg) {
				var length,
				    value,
				    i = 0,
				    ret = [];

				// Go through the array, translating each of the items to their new values
				if (isArrayLike(elems)) {
					length = elems.length;
					for (; i < length; i++) {
						value = callback(elems[i], i, arg);

						if (value != null) {
							ret.push(value);
						}
					}

					// Go through every key on the object,
				} else {
					for (i in elems) {
						value = callback(elems[i], i, arg);

						if (value != null) {
							ret.push(value);
						}
					}
				}

				// Flatten any nested arrays
				return flat(ret);
			},

			// A global GUID counter for objects
			guid: 1,

			// jQuery.support is not used in Core but other projects attach their
			// properties to it so it needs to exist.
			support: support
		});

		if (typeof Symbol === "function") {
			jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
		}

		// Populate the class2type map
		jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_i, name) {
			class2type["[object " + name + "]"] = name.toLowerCase();
		});

		function isArrayLike(obj) {

			// Support: real iOS 8.2 only (not reproducible in simulator)
			// `in` check used to prevent JIT error (gh-2145)
			// hasOwn isn't used here due to false negatives
			// regarding Nodelist length in IE
			var length = !!obj && "length" in obj && obj.length,
			    type = toType(obj);

			if (isFunction(obj) || isWindow(obj)) {
				return false;
			}

			return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
		}

		function nodeName(elem, name) {

			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		}
		var pop = arr.pop;

		var sort = arr.sort;

		var splice = arr.splice;

		var whitespace = "[\\x20\\t\\r\\n\\f]";

		var rtrimCSS = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g");

		// Note: an element does not contain itself
		jQuery.contains = function (a, b) {
			var bup = b && b.parentNode;

			return a === bup || !!(bup && bup.nodeType === 1 && (

			// Support: IE 9 - 11+
			// IE doesn't have `contains` on SVG.
			a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
		};

		// CSS string/identifier serialization
		// https://drafts.csswg.org/cssom/#common-serializing-idioms
		var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

		function fcssescape(ch, asCodePoint) {
			if (asCodePoint) {

				// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
				if (ch === "\0") {
					return "\uFFFD";
				}

				// Control characters and (dependent upon position) numbers get escaped as code points
				return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
			}

			// Other potentially-special ASCII characters get backslash-escaped
			return "\\" + ch;
		}

		jQuery.escapeSelector = function (sel) {
			return (sel + "").replace(rcssescape, fcssescape);
		};

		var preferredDoc = document,
		    pushNative = push;

		(function () {

			var i,
			    Expr,
			    outermostContext,
			    sortInput,
			    hasDuplicate,
			    push = pushNative,


			// Local document vars
			document,
			    documentElement,
			    documentIsHTML,
			    rbuggyQSA,
			    matches,


			// Instance-specific data
			expando = jQuery.expando,
			    dirruns = 0,
			    done = 0,
			    classCache = createCache(),
			    tokenCache = createCache(),
			    compilerCache = createCache(),
			    nonnativeSelectorCache = createCache(),
			    sortOrder = function sortOrder(a, b) {
				if (a === b) {
					hasDuplicate = true;
				}
				return 0;
			},
			    booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|" + "loop|multiple|open|readonly|required|scoped",


			// Regular expressions

			// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
			identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",


			// Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors
			attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +

			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
			    pseudos = ":(" + identifier + ")(?:\\((" +

			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

			// 3. anything else (capture 2)
			".*" + ")\\)|)",


			// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
			rwhitespace = new RegExp(whitespace + "+", "g"),
			    rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
			    rleadingCombinator = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
			    rdescend = new RegExp(whitespace + "|>"),
			    rpseudo = new RegExp(pseudos),
			    ridentifier = new RegExp("^" + identifier + "$"),
			    matchExpr = {
				ID: new RegExp("^#(" + identifier + ")"),
				CLASS: new RegExp("^\\.(" + identifier + ")"),
				TAG: new RegExp("^(" + identifier + "|[*])"),
				ATTR: new RegExp("^" + attributes),
				PSEUDO: new RegExp("^" + pseudos),
				CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
				bool: new RegExp("^(?:" + booleans + ")$", "i"),

				// For use in libraries implementing .is()
				// We use this for POS matching in `select`
				needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
			},
			    rinputs = /^(?:input|select|textarea|button)$/i,
			    rheader = /^h\d$/i,


			// Easily-parseable/retrievable ID or TAG or CLASS selectors
			rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
			    rsibling = /[+~]/,


			// CSS escapes
			// https://www.w3.org/TR/CSS21/syndata.html#escaped-characters
			runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"),
			    funescape = function funescape(escape, nonHex) {
				var high = "0x" + escape.slice(1) - 0x10000;

				if (nonHex) {

					// Strip the backslash prefix from a non-hex escape sequence
					return nonHex;
				}

				// Replace a hexadecimal escape sequence with the encoded Unicode code point
				// Support: IE <=11+
				// For values outside the Basic Multilingual Plane (BMP), manually construct a
				// surrogate pair
				return high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
			},


			// Used for iframes; see `setDocument`.
			// Support: IE 9 - 11+, Edge 12 - 18+
			// Removing the function wrapper causes a "Permission Denied"
			// error in IE/Edge.
			unloadHandler = function unloadHandler() {
				setDocument();
			},
			    inDisabledFieldset = addCombinator(function (elem) {
				return elem.disabled === true && nodeName(elem, "fieldset");
			}, { dir: "parentNode", next: "legend" });

			// Support: IE <=9 only
			// Accessing document.activeElement can throw unexpectedly
			// https://bugs.jquery.com/ticket/13393
			function safeActiveElement() {
				try {
					return document.activeElement;
				} catch (err) {}
			}

			// Optimize for push.apply( _, NodeList )
			try {
				push.apply(arr = _slice.call(preferredDoc.childNodes), preferredDoc.childNodes);

				// Support: Android <=4.0
				// Detect silently failing push.apply
				// eslint-disable-next-line no-unused-expressions
				arr[preferredDoc.childNodes.length].nodeType;
			} catch (e) {
				push = {
					apply: function apply(target, els) {
						pushNative.apply(target, _slice.call(els));
					},
					call: function call(target) {
						pushNative.apply(target, _slice.call(arguments, 1));
					}
				};
			}

			function find(selector, context, results, seed) {
				var m,
				    i,
				    elem,
				    nid,
				    match,
				    groups,
				    newSelector,
				    newContext = context && context.ownerDocument,


				// nodeType defaults to 9, since context defaults to document
				nodeType = context ? context.nodeType : 9;

				results = results || [];

				// Return early from calls with invalid selector or context
				if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {

					return results;
				}

				// Try to shortcut find operations (as opposed to filters) in HTML documents
				if (!seed) {
					setDocument(context);
					context = context || document;

					if (documentIsHTML) {

						// If the selector is sufficiently simple, try using a "get*By*" DOM method
						// (excepting DocumentFragment context, where the methods don't exist)
						if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {

							// ID selector
							if (m = match[1]) {

								// Document context
								if (nodeType === 9) {
									if (elem = context.getElementById(m)) {

										// Support: IE 9 only
										// getElementById can match elements by name instead of ID
										if (elem.id === m) {
											push.call(results, elem);
											return results;
										}
									} else {
										return results;
									}

									// Element context
								} else {

									// Support: IE 9 only
									// getElementById can match elements by name instead of ID
									if (newContext && (elem = newContext.getElementById(m)) && find.contains(context, elem) && elem.id === m) {

										push.call(results, elem);
										return results;
									}
								}

								// Type selector
							} else if (match[2]) {
								push.apply(results, context.getElementsByTagName(selector));
								return results;

								// Class selector
							} else if ((m = match[3]) && context.getElementsByClassName) {
								push.apply(results, context.getElementsByClassName(m));
								return results;
							}
						}

						// Take advantage of querySelectorAll
						if (!nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {

							newSelector = selector;
							newContext = context;

							// qSA considers elements outside a scoping root when evaluating child or
							// descendant combinators, which is not what we want.
							// In such cases, we work around the behavior by prefixing every selector in the
							// list with an ID selector referencing the scope context.
							// The technique has to be used as well when a leading combinator is used
							// as such selectors are not recognized by querySelectorAll.
							// Thanks to Andrew Dupont for this technique.
							if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {

								// Expand context for sibling selectors
								newContext = rsibling.test(selector) && testContext(context.parentNode) || context;

								// We can use :scope instead of the ID hack if the browser
								// supports it & if we're not changing the context.
								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when
								// strict-comparing two documents; shallow comparisons work.
								// eslint-disable-next-line eqeqeq
								if (newContext != context || !support.scope) {

									// Capture the context ID, setting it first if necessary
									if (nid = context.getAttribute("id")) {
										nid = jQuery.escapeSelector(nid);
									} else {
										context.setAttribute("id", nid = expando);
									}
								}

								// Prefix every selector in the list
								groups = tokenize(selector);
								i = groups.length;
								while (i--) {
									groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);
								}
								newSelector = groups.join(",");
							}

							try {
								push.apply(results, newContext.querySelectorAll(newSelector));
								return results;
							} catch (qsaError) {
								nonnativeSelectorCache(selector, true);
							} finally {
								if (nid === expando) {
									context.removeAttribute("id");
								}
							}
						}
					}
				}

				// All others
				return select(selector.replace(rtrimCSS, "$1"), context, results, seed);
			}

			/**
	   * Create key-value caches of limited size
	   * @returns {function(string, object)} Returns the Object data after storing it on itself with
	   *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	   *	deleting the oldest entry
	   */
			function createCache() {
				var keys = [];

				function cache(key, value) {

					// Use (key + " ") to avoid collision with native prototype properties
					// (see https://github.com/jquery/sizzle/issues/157)
					if (keys.push(key + " ") > Expr.cacheLength) {

						// Only keep the most recent entries
						delete cache[keys.shift()];
					}
					return cache[key + " "] = value;
				}
				return cache;
			}

			/**
	   * Mark a function for special use by jQuery selector module
	   * @param {Function} fn The function to mark
	   */
			function markFunction(fn) {
				fn[expando] = true;
				return fn;
			}

			/**
	   * Support testing using an element
	   * @param {Function} fn Passed the created element and returns a boolean result
	   */
			function assert(fn) {
				var el = document.createElement("fieldset");

				try {
					return !!fn(el);
				} catch (e) {
					return false;
				} finally {

					// Remove from its parent by default
					if (el.parentNode) {
						el.parentNode.removeChild(el);
					}

					// release memory in IE
					el = null;
				}
			}

			/**
	   * Returns a function to use in pseudos for input types
	   * @param {String} type
	   */
			function createInputPseudo(type) {
				return function (elem) {
					return nodeName(elem, "input") && elem.type === type;
				};
			}

			/**
	   * Returns a function to use in pseudos for buttons
	   * @param {String} type
	   */
			function createButtonPseudo(type) {
				return function (elem) {
					return (nodeName(elem, "input") || nodeName(elem, "button")) && elem.type === type;
				};
			}

			/**
	   * Returns a function to use in pseudos for :enabled/:disabled
	   * @param {Boolean} disabled true for :disabled; false for :enabled
	   */
			function createDisabledPseudo(disabled) {

				// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
				return function (elem) {

					// Only certain elements can match :enabled or :disabled
					// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
					// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
					if ("form" in elem) {

						// Check for inherited disabledness on relevant non-disabled elements:
						// * listed form-associated elements in a disabled fieldset
						//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
						//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
						// * option elements in a disabled optgroup
						//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
						// All such elements have a "form" property.
						if (elem.parentNode && elem.disabled === false) {

							// Option elements defer to a parent optgroup if present
							if ("label" in elem) {
								if ("label" in elem.parentNode) {
									return elem.parentNode.disabled === disabled;
								} else {
									return elem.disabled === disabled;
								}
							}

							// Support: IE 6 - 11+
							// Use the isDisabled shortcut property to check for disabled fieldset ancestors
							return elem.isDisabled === disabled ||

							// Where there is no isDisabled, check manually
							elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
						}

						return elem.disabled === disabled;

						// Try to winnow out elements that can't be disabled before trusting the disabled property.
						// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
						// even exist on them, let alone have a boolean value.
					} else if ("label" in elem) {
						return elem.disabled === disabled;
					}

					// Remaining elements are neither :enabled nor :disabled
					return false;
				};
			}

			/**
	   * Returns a function to use in pseudos for positionals
	   * @param {Function} fn
	   */
			function createPositionalPseudo(fn) {
				return markFunction(function (argument) {
					argument = +argument;
					return markFunction(function (seed, matches) {
						var j,
						    matchIndexes = fn([], seed.length, argument),
						    i = matchIndexes.length;

						// Match elements found at the specified indexes
						while (i--) {
							if (seed[j = matchIndexes[i]]) {
								seed[j] = !(matches[j] = seed[j]);
							}
						}
					});
				});
			}

			/**
	   * Checks a node for validity as a jQuery selector context
	   * @param {Element|Object=} context
	   * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	   */
			function testContext(context) {
				return context && typeof context.getElementsByTagName !== "undefined" && context;
			}

			/**
	   * Sets document-related variables once based on the current document
	   * @param {Element|Object} [node] An element or document object to use to set the document
	   * @returns {Object} Returns the current document
	   */
			function setDocument(node) {
				var subWindow,
				    doc = node ? node.ownerDocument || node : preferredDoc;

				// Return early if doc is invalid or already selected
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {
					return document;
				}

				// Update global variables
				document = doc;
				documentElement = document.documentElement;
				documentIsHTML = !jQuery.isXMLDoc(document);

				// Support: iOS 7 only, IE 9 - 11+
				// Older browsers didn't support unprefixed `matches`.
				matches = documentElement.matches || documentElement.webkitMatchesSelector || documentElement.msMatchesSelector;

				// Support: IE 9 - 11+, Edge 12 - 18+
				// Accessing iframe documents after unload throws "permission denied" errors
				// (see trac-13936).
				// Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,
				// all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.
				if (documentElement.msMatchesSelector &&

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {

					// Support: IE 9 - 11+, Edge 12 - 18+
					subWindow.addEventListener("unload", unloadHandler);
				}

				// Support: IE <10
				// Check if getElementById returns elements by name
				// The broken getElementById methods don't pick up programmatically-set names,
				// so use a roundabout getElementsByName test
				support.getById = assert(function (el) {
					documentElement.appendChild(el).id = jQuery.expando;
					return !document.getElementsByName || !document.getElementsByName(jQuery.expando).length;
				});

				// Support: IE 9 only
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node.
				support.disconnectedMatch = assert(function (el) {
					return matches.call(el, "*");
				});

				// Support: IE 9 - 11+, Edge 12 - 18+
				// IE/Edge don't support the :scope pseudo-class.
				support.scope = assert(function () {
					return document.querySelectorAll(":scope");
				});

				// Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only
				// Make sure the `:has()` argument is parsed unforgivingly.
				// We include `*` in the test to detect buggy implementations that are
				// _selectively_ forgiving (specifically when the list includes at least
				// one valid selector).
				// Note that we treat complete lack of support for `:has()` as if it were
				// spec-compliant support, which is fine because use of `:has()` in such
				// environments will fail in the qSA path and fall back to jQuery traversal
				// anyway.
				support.cssHas = assert(function () {
					try {
						document.querySelector(":has(*,:jqfake)");
						return false;
					} catch (e) {
						return true;
					}
				});

				// ID filter and find
				if (support.getById) {
					Expr.filter.ID = function (id) {
						var attrId = id.replace(runescape, funescape);
						return function (elem) {
							return elem.getAttribute("id") === attrId;
						};
					};
					Expr.find.ID = function (id, context) {
						if (typeof context.getElementById !== "undefined" && documentIsHTML) {
							var elem = context.getElementById(id);
							return elem ? [elem] : [];
						}
					};
				} else {
					Expr.filter.ID = function (id) {
						var attrId = id.replace(runescape, funescape);
						return function (elem) {
							var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
							return node && node.value === attrId;
						};
					};

					// Support: IE 6 - 7 only
					// getElementById is not reliable as a find shortcut
					Expr.find.ID = function (id, context) {
						if (typeof context.getElementById !== "undefined" && documentIsHTML) {
							var node,
							    i,
							    elems,
							    elem = context.getElementById(id);

							if (elem) {

								// Verify the id attribute
								node = elem.getAttributeNode("id");
								if (node && node.value === id) {
									return [elem];
								}

								// Fall back on getElementsByName
								elems = context.getElementsByName(id);
								i = 0;
								while (elem = elems[i++]) {
									node = elem.getAttributeNode("id");
									if (node && node.value === id) {
										return [elem];
									}
								}
							}

							return [];
						}
					};
				}

				// Tag
				Expr.find.TAG = function (tag, context) {
					if (typeof context.getElementsByTagName !== "undefined") {
						return context.getElementsByTagName(tag);

						// DocumentFragment nodes don't have gEBTN
					} else {
						return context.querySelectorAll(tag);
					}
				};

				// Class
				Expr.find.CLASS = function (className, context) {
					if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
						return context.getElementsByClassName(className);
					}
				};

				/* QSA/matchesSelector
	   ---------------------------------------------------------------------- */

				// QSA and matchesSelector support

				rbuggyQSA = [];

				// Build QSA regex
				// Regex strategy adopted from Diego Perini
				assert(function (el) {

					var input;

					documentElement.appendChild(el).innerHTML = "<a id='" + expando + "' href='' disabled='disabled'></a>" + "<select id='" + expando + "-\r\\' disabled='disabled'>" + "<option selected=''></option></select>";

					// Support: iOS <=7 - 8 only
					// Boolean attributes and "value" are not treated correctly in some XML documents
					if (!el.querySelectorAll("[selected]").length) {
						rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
					}

					// Support: iOS <=7 - 8 only
					if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
						rbuggyQSA.push("~=");
					}

					// Support: iOS 8 only
					// https://bugs.webkit.org/show_bug.cgi?id=136851
					// In-page `selector#id sibling-combinator selector` fails
					if (!el.querySelectorAll("a#" + expando + "+*").length) {
						rbuggyQSA.push(".#.+[+~]");
					}

					// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
					// In some of the document kinds, these selectors wouldn't work natively.
					// This is probably OK but for backwards compatibility we want to maintain
					// handling them through jQuery traversal in jQuery 3.x.
					if (!el.querySelectorAll(":checked").length) {
						rbuggyQSA.push(":checked");
					}

					// Support: Windows 8 Native Apps
					// The type and name attributes are restricted during .innerHTML assignment
					input = document.createElement("input");
					input.setAttribute("type", "hidden");
					el.appendChild(input).setAttribute("name", "D");

					// Support: IE 9 - 11+
					// IE's :disabled selector does not pick up the children of disabled fieldsets
					// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
					// In some of the document kinds, these selectors wouldn't work natively.
					// This is probably OK but for backwards compatibility we want to maintain
					// handling them through jQuery traversal in jQuery 3.x.
					documentElement.appendChild(el).disabled = true;
					if (el.querySelectorAll(":disabled").length !== 2) {
						rbuggyQSA.push(":enabled", ":disabled");
					}

					// Support: IE 11+, Edge 15 - 18+
					// IE 11/Edge don't find elements on a `[name='']` query in some cases.
					// Adding a temporary attribute to the document before the selection works
					// around the issue.
					// Interestingly, IE 10 & older don't seem to have the issue.
					input = document.createElement("input");
					input.setAttribute("name", "");
					el.appendChild(input);
					if (!el.querySelectorAll("[name='']").length) {
						rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")");
					}
				});

				if (!support.cssHas) {

					// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+
					// Our regular `try-catch` mechanism fails to detect natively-unsupported
					// pseudo-classes inside `:has()` (such as `:has(:contains("Foo"))`)
					// in browsers that parse the `:has()` argument as a forgiving selector list.
					// https://drafts.csswg.org/selectors/#relational now requires the argument
					// to be parsed unforgivingly, but browsers have not yet fully adjusted.
					rbuggyQSA.push(":has");
				}

				rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));

				/* Sorting
	   ---------------------------------------------------------------------- */

				// Document order sorting
				sortOrder = function sortOrder(a, b) {

					// Flag for duplicate removal
					if (a === b) {
						hasDuplicate = true;
						return 0;
					}

					// Sort on method existence if only one input has compareDocumentPosition
					var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
					if (compare) {
						return compare;
					}

					// Calculate position if both inputs belong to the same document
					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) :

					// Otherwise we know they are disconnected
					1;

					// Disconnected nodes
					if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {

						// Choose the first element that is related to our preferred document
						// Support: IE 11+, Edge 17 - 18+
						// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
						// two documents; shallow comparisons work.
						// eslint-disable-next-line eqeqeq
						if (a === document || a.ownerDocument == preferredDoc && find.contains(preferredDoc, a)) {
							return -1;
						}

						// Support: IE 11+, Edge 17 - 18+
						// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
						// two documents; shallow comparisons work.
						// eslint-disable-next-line eqeqeq
						if (b === document || b.ownerDocument == preferredDoc && find.contains(preferredDoc, b)) {
							return 1;
						}

						// Maintain original order
						return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
					}

					return compare & 4 ? -1 : 1;
				};

				return document;
			}

			find.matches = function (expr, elements) {
				return find(expr, null, null, elements);
			};

			find.matchesSelector = function (elem, expr) {
				setDocument(elem);

				if (documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {

					try {
						var ret = matches.call(elem, expr);

						// IE 9's matchesSelector returns false on disconnected nodes
						if (ret || support.disconnectedMatch ||

						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11) {
							return ret;
						}
					} catch (e) {
						nonnativeSelectorCache(expr, true);
					}
				}

				return find(expr, document, null, [elem]).length > 0;
			};

			find.contains = function (context, elem) {

				// Set document vars if needed
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if ((context.ownerDocument || context) != document) {
					setDocument(context);
				}
				return jQuery.contains(context, elem);
			};

			find.attr = function (elem, name) {

				// Set document vars if needed
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if ((elem.ownerDocument || elem) != document) {
					setDocument(elem);
				}

				var fn = Expr.attrHandle[name.toLowerCase()],


				// Don't get fooled by Object.prototype properties (see trac-13807)
				val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;

				if (val !== undefined) {
					return val;
				}

				return elem.getAttribute(name);
			};

			find.error = function (msg) {
				throw new Error("Syntax error, unrecognized expression: " + msg);
			};

			/**
	   * Document sorting and removing duplicates
	   * @param {ArrayLike} results
	   */
			jQuery.uniqueSort = function (results) {
				var elem,
				    duplicates = [],
				    j = 0,
				    i = 0;

				// Unless we *know* we can detect duplicates, assume their presence
				//
				// Support: Android <=4.0+
				// Testing for detecting duplicates is unpredictable so instead assume we can't
				// depend on duplicate detection in all browsers without a stable sort.
				hasDuplicate = !support.sortStable;
				sortInput = !support.sortStable && _slice.call(results, 0);
				sort.call(results, sortOrder);

				if (hasDuplicate) {
					while (elem = results[i++]) {
						if (elem === results[i]) {
							j = duplicates.push(i);
						}
					}
					while (j--) {
						splice.call(results, duplicates[j], 1);
					}
				}

				// Clear input after sorting to release objects
				// See https://github.com/jquery/sizzle/pull/225
				sortInput = null;

				return results;
			};

			jQuery.fn.uniqueSort = function () {
				return this.pushStack(jQuery.uniqueSort(_slice.apply(this)));
			};

			Expr = jQuery.expr = {

				// Can be adjusted by the user
				cacheLength: 50,

				createPseudo: markFunction,

				match: matchExpr,

				attrHandle: {},

				find: {},

				relative: {
					">": { dir: "parentNode", first: true },
					" ": { dir: "parentNode" },
					"+": { dir: "previousSibling", first: true },
					"~": { dir: "previousSibling" }
				},

				preFilter: {
					ATTR: function ATTR(match) {
						match[1] = match[1].replace(runescape, funescape);

						// Move the given value to match[3] whether quoted or unquoted
						match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);

						if (match[2] === "~=") {
							match[3] = " " + match[3] + " ";
						}

						return match.slice(0, 4);
					},

					CHILD: function CHILD(match) {

						/* matches from matchExpr["CHILD"]
	     	1 type (only|nth|...)
	     	2 what (child|of-type)
	     	3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
	     	4 xn-component of xn+y argument ([+-]?\d*n|)
	     	5 sign of xn-component
	     	6 x of xn-component
	     	7 sign of y-component
	     	8 y of y-component
	     */
						match[1] = match[1].toLowerCase();

						if (match[1].slice(0, 3) === "nth") {

							// nth-* requires argument
							if (!match[3]) {
								find.error(match[0]);
							}

							// numeric x and y parameters for Expr.filter.CHILD
							// remember that false/true cast respectively to 0/1
							match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
							match[5] = +(match[7] + match[8] || match[3] === "odd");

							// other types prohibit arguments
						} else if (match[3]) {
							find.error(match[0]);
						}

						return match;
					},

					PSEUDO: function PSEUDO(match) {
						var excess,
						    unquoted = !match[6] && match[2];

						if (matchExpr.CHILD.test(match[0])) {
							return null;
						}

						// Accept quoted arguments as-is
						if (match[3]) {
							match[2] = match[4] || match[5] || "";

							// Strip excess characters from unquoted arguments
						} else if (unquoted && rpseudo.test(unquoted) && (

						// Get excess from tokenize (recursively)
						excess = tokenize(unquoted, true)) && (

						// advance to the next closing parenthesis
						excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {

							// excess is a negative index
							match[0] = match[0].slice(0, excess);
							match[2] = unquoted.slice(0, excess);
						}

						// Return only captures needed by the pseudo filter method (type and argument)
						return match.slice(0, 3);
					}
				},

				filter: {

					TAG: function TAG(nodeNameSelector) {
						var expectedNodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
						return nodeNameSelector === "*" ? function () {
							return true;
						} : function (elem) {
							return nodeName(elem, expectedNodeName);
						};
					},

					CLASS: function CLASS(className) {
						var pattern = classCache[className + " "];

						return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
							return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
						});
					},

					ATTR: function ATTR(name, operator, check) {
						return function (elem) {
							var result = find.attr(elem, name);

							if (result == null) {
								return operator === "!=";
							}
							if (!operator) {
								return true;
							}

							result += "";

							if (operator === "=") {
								return result === check;
							}
							if (operator === "!=") {
								return result !== check;
							}
							if (operator === "^=") {
								return check && result.indexOf(check) === 0;
							}
							if (operator === "*=") {
								return check && result.indexOf(check) > -1;
							}
							if (operator === "$=") {
								return check && result.slice(-check.length) === check;
							}
							if (operator === "~=") {
								return (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1;
							}
							if (operator === "|=") {
								return result === check || result.slice(0, check.length + 1) === check + "-";
							}

							return false;
						};
					},

					CHILD: function CHILD(type, what, _argument, first, last) {
						var simple = type.slice(0, 3) !== "nth",
						    forward = type.slice(-4) !== "last",
						    ofType = what === "of-type";

						return first === 1 && last === 0 ?

						// Shortcut for :nth-*(n)
						function (elem) {
							return !!elem.parentNode;
						} : function (elem, _context, xml) {
							var cache,
							    outerCache,
							    node,
							    nodeIndex,
							    start,
							    dir = simple !== forward ? "nextSibling" : "previousSibling",
							    parent = elem.parentNode,
							    name = ofType && elem.nodeName.toLowerCase(),
							    useCache = !xml && !ofType,
							    diff = false;

							if (parent) {

								// :(first|last|only)-(child|of-type)
								if (simple) {
									while (dir) {
										node = elem;
										while (node = node[dir]) {
											if (ofType ? nodeName(node, name) : node.nodeType === 1) {

												return false;
											}
										}

										// Reverse direction for :only-* (if we haven't yet done so)
										start = dir = type === "only" && !start && "nextSibling";
									}
									return true;
								}

								start = [forward ? parent.firstChild : parent.lastChild];

								// non-xml :nth-child(...) stores cache data on `parent`
								if (forward && useCache) {

									// Seek `elem` from a previously-cached index
									outerCache = parent[expando] || (parent[expando] = {});
									cache = outerCache[type] || [];
									nodeIndex = cache[0] === dirruns && cache[1];
									diff = nodeIndex && cache[2];
									node = nodeIndex && parent.childNodes[nodeIndex];

									while (node = ++nodeIndex && node && node[dir] || (

									// Fallback to seeking `elem` from the start
									diff = nodeIndex = 0) || start.pop()) {

										// When found, cache indexes on `parent` and break
										if (node.nodeType === 1 && ++diff && node === elem) {
											outerCache[type] = [dirruns, nodeIndex, diff];
											break;
										}
									}
								} else {

									// Use previously-cached element index if available
									if (useCache) {
										outerCache = elem[expando] || (elem[expando] = {});
										cache = outerCache[type] || [];
										nodeIndex = cache[0] === dirruns && cache[1];
										diff = nodeIndex;
									}

									// xml :nth-child(...)
									// or :nth-last-child(...) or :nth(-last)?-of-type(...)
									if (diff === false) {

										// Use the same loop as above to seek `elem` from the start
										while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {

											if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {

												// Cache the index of each encountered element
												if (useCache) {
													outerCache = node[expando] || (node[expando] = {});
													outerCache[type] = [dirruns, diff];
												}

												if (node === elem) {
													break;
												}
											}
										}
									}
								}

								// Incorporate the offset, then check against cycle size
								diff -= last;
								return diff === first || diff % first === 0 && diff / first >= 0;
							}
						};
					},

					PSEUDO: function PSEUDO(pseudo, argument) {

						// pseudo-class names are case-insensitive
						// https://www.w3.org/TR/selectors/#pseudo-classes
						// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
						// Remember that setFilters inherits from pseudos
						var args,
						    fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || find.error("unsupported pseudo: " + pseudo);

						// The user may use createPseudo to indicate that
						// arguments are needed to create the filter function
						// just as jQuery does
						if (fn[expando]) {
							return fn(argument);
						}

						// But maintain support for old signatures
						if (fn.length > 1) {
							args = [pseudo, pseudo, "", argument];
							return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
								var idx,
								    matched = fn(seed, argument),
								    i = matched.length;
								while (i--) {
									idx = indexOf.call(seed, matched[i]);
									seed[idx] = !(matches[idx] = matched[i]);
								}
							}) : function (elem) {
								return fn(elem, 0, args);
							};
						}

						return fn;
					}
				},

				pseudos: {

					// Potentially complex pseudos
					not: markFunction(function (selector) {

						// Trim the selector passed to compile
						// to avoid treating leading and trailing
						// spaces as combinators
						var input = [],
						    results = [],
						    matcher = compile(selector.replace(rtrimCSS, "$1"));

						return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {
							var elem,
							    unmatched = matcher(seed, null, xml, []),
							    i = seed.length;

							// Match elements unmatched by `matcher`
							while (i--) {
								if (elem = unmatched[i]) {
									seed[i] = !(matches[i] = elem);
								}
							}
						}) : function (elem, _context, xml) {
							input[0] = elem;
							matcher(input, null, xml, results);

							// Don't keep the element
							// (see https://github.com/jquery/sizzle/issues/299)
							input[0] = null;
							return !results.pop();
						};
					}),

					has: markFunction(function (selector) {
						return function (elem) {
							return find(selector, elem).length > 0;
						};
					}),

					contains: markFunction(function (text) {
						text = text.replace(runescape, funescape);
						return function (elem) {
							return (elem.textContent || jQuery.text(elem)).indexOf(text) > -1;
						};
					}),

					// "Whether an element is represented by a :lang() selector
					// is based solely on the element's language value
					// being equal to the identifier C,
					// or beginning with the identifier C immediately followed by "-".
					// The matching of C against the element's language value is performed case-insensitively.
					// The identifier C does not have to be a valid language name."
					// https://www.w3.org/TR/selectors/#lang-pseudo
					lang: markFunction(function (lang) {

						// lang value must be a valid identifier
						if (!ridentifier.test(lang || "")) {
							find.error("unsupported lang: " + lang);
						}
						lang = lang.replace(runescape, funescape).toLowerCase();
						return function (elem) {
							var elemLang;
							do {
								if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {

									elemLang = elemLang.toLowerCase();
									return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
								}
							} while ((elem = elem.parentNode) && elem.nodeType === 1);
							return false;
						};
					}),

					// Miscellaneous
					target: function target(elem) {
						var hash = window.location && window.location.hash;
						return hash && hash.slice(1) === elem.id;
					},

					root: function root(elem) {
						return elem === documentElement;
					},

					focus: function focus(elem) {
						return elem === safeActiveElement() && document.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);
					},

					// Boolean properties
					enabled: createDisabledPseudo(false),
					disabled: createDisabledPseudo(true),

					checked: function checked(elem) {

						// In CSS3, :checked should return both checked and selected elements
						// https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
						return nodeName(elem, "input") && !!elem.checked || nodeName(elem, "option") && !!elem.selected;
					},

					selected: function selected(elem) {

						// Support: IE <=11+
						// Accessing the selectedIndex property
						// forces the browser to treat the default option as
						// selected when in an optgroup.
						if (elem.parentNode) {
							// eslint-disable-next-line no-unused-expressions
							elem.parentNode.selectedIndex;
						}

						return elem.selected === true;
					},

					// Contents
					empty: function empty(elem) {

						// https://www.w3.org/TR/selectors/#empty-pseudo
						// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
						//   but not by others (comment: 8; processing instruction: 7; etc.)
						// nodeType < 6 works because attributes (2) do not appear as children
						for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
							if (elem.nodeType < 6) {
								return false;
							}
						}
						return true;
					},

					parent: function parent(elem) {
						return !Expr.pseudos.empty(elem);
					},

					// Element/input types
					header: function header(elem) {
						return rheader.test(elem.nodeName);
					},

					input: function input(elem) {
						return rinputs.test(elem.nodeName);
					},

					button: function button(elem) {
						return nodeName(elem, "input") && elem.type === "button" || nodeName(elem, "button");
					},

					text: function text(elem) {
						var attr;
						return nodeName(elem, "input") && elem.type === "text" && (

						// Support: IE <10 only
						// New HTML5 attribute values (e.g., "search") appear
						// with elem.type === "text"
						(attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
					},

					// Position-in-collection
					first: createPositionalPseudo(function () {
						return [0];
					}),

					last: createPositionalPseudo(function (_matchIndexes, length) {
						return [length - 1];
					}),

					eq: createPositionalPseudo(function (_matchIndexes, length, argument) {
						return [argument < 0 ? argument + length : argument];
					}),

					even: createPositionalPseudo(function (matchIndexes, length) {
						var i = 0;
						for (; i < length; i += 2) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					odd: createPositionalPseudo(function (matchIndexes, length) {
						var i = 1;
						for (; i < length; i += 2) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					lt: createPositionalPseudo(function (matchIndexes, length, argument) {
						var i;

						if (argument < 0) {
							i = argument + length;
						} else if (argument > length) {
							i = length;
						} else {
							i = argument;
						}

						for (; --i >= 0;) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					gt: createPositionalPseudo(function (matchIndexes, length, argument) {
						var i = argument < 0 ? argument + length : argument;
						for (; ++i < length;) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					})
				}
			};

			Expr.pseudos.nth = Expr.pseudos.eq;

			// Add button/input type pseudos
			for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {
				Expr.pseudos[i] = createInputPseudo(i);
			}
			for (i in { submit: true, reset: true }) {
				Expr.pseudos[i] = createButtonPseudo(i);
			}

			// Easy API for creating new setFilters
			function setFilters() {}
			setFilters.prototype = Expr.filters = Expr.pseudos;
			Expr.setFilters = new setFilters();

			function tokenize(selector, parseOnly) {
				var matched,
				    match,
				    tokens,
				    type,
				    soFar,
				    groups,
				    preFilters,
				    cached = tokenCache[selector + " "];

				if (cached) {
					return parseOnly ? 0 : cached.slice(0);
				}

				soFar = selector;
				groups = [];
				preFilters = Expr.preFilter;

				while (soFar) {

					// Comma and first run
					if (!matched || (match = rcomma.exec(soFar))) {
						if (match) {

							// Don't consume trailing commas as valid
							soFar = soFar.slice(match[0].length) || soFar;
						}
						groups.push(tokens = []);
					}

					matched = false;

					// Combinators
					if (match = rleadingCombinator.exec(soFar)) {
						matched = match.shift();
						tokens.push({
							value: matched,

							// Cast descendant combinators to space
							type: match[0].replace(rtrimCSS, " ")
						});
						soFar = soFar.slice(matched.length);
					}

					// Filters
					for (type in Expr.filter) {
						if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
							matched = match.shift();
							tokens.push({
								value: matched,
								type: type,
								matches: match
							});
							soFar = soFar.slice(matched.length);
						}
					}

					if (!matched) {
						break;
					}
				}

				// Return the length of the invalid excess
				// if we're just parsing
				// Otherwise, throw an error or return tokens
				if (parseOnly) {
					return soFar.length;
				}

				return soFar ? find.error(selector) :

				// Cache the tokens
				tokenCache(selector, groups).slice(0);
			}

			function toSelector(tokens) {
				var i = 0,
				    len = tokens.length,
				    selector = "";
				for (; i < len; i++) {
					selector += tokens[i].value;
				}
				return selector;
			}

			function addCombinator(matcher, combinator, base) {
				var dir = combinator.dir,
				    skip = combinator.next,
				    key = skip || dir,
				    checkNonElements = base && key === "parentNode",
				    doneName = done++;

				return combinator.first ?

				// Check against closest ancestor/preceding element
				function (elem, context, xml) {
					while (elem = elem[dir]) {
						if (elem.nodeType === 1 || checkNonElements) {
							return matcher(elem, context, xml);
						}
					}
					return false;
				} :

				// Check against all ancestor/preceding elements
				function (elem, context, xml) {
					var oldCache,
					    outerCache,
					    newCache = [dirruns, doneName];

					// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
					if (xml) {
						while (elem = elem[dir]) {
							if (elem.nodeType === 1 || checkNonElements) {
								if (matcher(elem, context, xml)) {
									return true;
								}
							}
						}
					} else {
						while (elem = elem[dir]) {
							if (elem.nodeType === 1 || checkNonElements) {
								outerCache = elem[expando] || (elem[expando] = {});

								if (skip && nodeName(elem, skip)) {
									elem = elem[dir] || elem;
								} else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {

									// Assign to newCache so results back-propagate to previous elements
									return newCache[2] = oldCache[2];
								} else {

									// Reuse newcache so results back-propagate to previous elements
									outerCache[key] = newCache;

									// A match means we're done; a fail means we have to keep checking
									if (newCache[2] = matcher(elem, context, xml)) {
										return true;
									}
								}
							}
						}
					}
					return false;
				};
			}

			function elementMatcher(matchers) {
				return matchers.length > 1 ? function (elem, context, xml) {
					var i = matchers.length;
					while (i--) {
						if (!matchers[i](elem, context, xml)) {
							return false;
						}
					}
					return true;
				} : matchers[0];
			}

			function multipleContexts(selector, contexts, results) {
				var i = 0,
				    len = contexts.length;
				for (; i < len; i++) {
					find(selector, contexts[i], results);
				}
				return results;
			}

			function condense(unmatched, map, filter, context, xml) {
				var elem,
				    newUnmatched = [],
				    i = 0,
				    len = unmatched.length,
				    mapped = map != null;

				for (; i < len; i++) {
					if (elem = unmatched[i]) {
						if (!filter || filter(elem, context, xml)) {
							newUnmatched.push(elem);
							if (mapped) {
								map.push(i);
							}
						}
					}
				}

				return newUnmatched;
			}

			function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
				if (postFilter && !postFilter[expando]) {
					postFilter = setMatcher(postFilter);
				}
				if (postFinder && !postFinder[expando]) {
					postFinder = setMatcher(postFinder, postSelector);
				}
				return markFunction(function (seed, results, context, xml) {
					var temp,
					    i,
					    elem,
					    matcherOut,
					    preMap = [],
					    postMap = [],
					    preexisting = results.length,


					// Get initial elements from seed or context
					elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),


					// Prefilter to get matcher input, preserving a map for seed-results synchronization
					matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems;

					if (matcher) {

						// If we have a postFinder, or filtered seed, or non-seed postFilter
						// or preexisting results,
						matcherOut = postFinder || (seed ? preFilter : preexisting || postFilter) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results;

						// Find primary matches
						matcher(matcherIn, matcherOut, context, xml);
					} else {
						matcherOut = matcherIn;
					}

					// Apply postFilter
					if (postFilter) {
						temp = condense(matcherOut, postMap);
						postFilter(temp, [], context, xml);

						// Un-match failing elements by moving them back to matcherIn
						i = temp.length;
						while (i--) {
							if (elem = temp[i]) {
								matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
							}
						}
					}

					if (seed) {
						if (postFinder || preFilter) {
							if (postFinder) {

								// Get the final matcherOut by condensing this intermediate into postFinder contexts
								temp = [];
								i = matcherOut.length;
								while (i--) {
									if (elem = matcherOut[i]) {

										// Restore matcherIn since elem is not yet a final match
										temp.push(matcherIn[i] = elem);
									}
								}
								postFinder(null, matcherOut = [], temp, xml);
							}

							// Move matched elements from seed to results to keep them synchronized
							i = matcherOut.length;
							while (i--) {
								if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {

									seed[temp] = !(results[temp] = elem);
								}
							}
						}

						// Add elements to results, through postFinder if defined
					} else {
						matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
						if (postFinder) {
							postFinder(null, results, matcherOut, xml);
						} else {
							push.apply(results, matcherOut);
						}
					}
				});
			}

			function matcherFromTokens(tokens) {
				var checkContext,
				    matcher,
				    j,
				    len = tokens.length,
				    leadingRelative = Expr.relative[tokens[0].type],
				    implicitRelative = leadingRelative || Expr.relative[" "],
				    i = leadingRelative ? 1 : 0,


				// The foundational matcher ensures that elements are reachable from top-level context(s)
				matchContext = addCombinator(function (elem) {
					return elem === checkContext;
				}, implicitRelative, true),
				    matchAnyContext = addCombinator(function (elem) {
					return indexOf.call(checkContext, elem) > -1;
				}, implicitRelative, true),
				    matchers = [function (elem, context, xml) {

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));

					// Avoid hanging onto element
					// (see https://github.com/jquery/sizzle/issues/299)
					checkContext = null;
					return ret;
				}];

				for (; i < len; i++) {
					if (matcher = Expr.relative[tokens[i].type]) {
						matchers = [addCombinator(elementMatcher(matchers), matcher)];
					} else {
						matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);

						// Return special upon seeing a positional matcher
						if (matcher[expando]) {

							// Find the next relative operator (if any) for proper handling
							j = ++i;
							for (; j < len; j++) {
								if (Expr.relative[tokens[j].type]) {
									break;
								}
							}
							return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(

							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === " " ? "*" : "" })).replace(rtrimCSS, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
						}
						matchers.push(matcher);
					}
				}

				return elementMatcher(matchers);
			}

			function matcherFromGroupMatchers(elementMatchers, setMatchers) {
				var bySet = setMatchers.length > 0,
				    byElement = elementMatchers.length > 0,
				    superMatcher = function superMatcher(seed, context, xml, results, outermost) {
					var elem,
					    j,
					    matcher,
					    matchedCount = 0,
					    i = "0",
					    unmatched = seed && [],
					    setMatched = [],
					    contextBackup = outermostContext,


					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find.TAG("*", outermost),


					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
					    len = elems.length;

					if (outermost) {

						// Support: IE 11+, Edge 17 - 18+
						// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
						// two documents; shallow comparisons work.
						// eslint-disable-next-line eqeqeq
						outermostContext = context == document || context || outermost;
					}

					// Add elements passing elementMatchers directly to results
					// Support: iOS <=7 - 9 only
					// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching
					// elements by id. (see trac-14142)
					for (; i !== len && (elem = elems[i]) != null; i++) {
						if (byElement && elem) {
							j = 0;

							// Support: IE 11+, Edge 17 - 18+
							// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
							// two documents; shallow comparisons work.
							// eslint-disable-next-line eqeqeq
							if (!context && elem.ownerDocument != document) {
								setDocument(elem);
								xml = !documentIsHTML;
							}
							while (matcher = elementMatchers[j++]) {
								if (matcher(elem, context || document, xml)) {
									push.call(results, elem);
									break;
								}
							}
							if (outermost) {
								dirruns = dirrunsUnique;
							}
						}

						// Track unmatched elements for set filters
						if (bySet) {

							// They will have gone through all possible matchers
							if (elem = !matcher && elem) {
								matchedCount--;
							}

							// Lengthen the array for every element, matched or not
							if (seed) {
								unmatched.push(elem);
							}
						}
					}

					// `i` is now the count of elements visited above, and adding it to `matchedCount`
					// makes the latter nonnegative.
					matchedCount += i;

					// Apply set filters to unmatched elements
					// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
					// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
					// no element matchers and no seed.
					// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
					// case, which will result in a "00" `matchedCount` that differs from `i` but is also
					// numerically zero.
					if (bySet && i !== matchedCount) {
						j = 0;
						while (matcher = setMatchers[j++]) {
							matcher(unmatched, setMatched, context, xml);
						}

						if (seed) {

							// Reintegrate element matches to eliminate the need for sorting
							if (matchedCount > 0) {
								while (i--) {
									if (!(unmatched[i] || setMatched[i])) {
										setMatched[i] = pop.call(results);
									}
								}
							}

							// Discard index placeholder values to get only actual matches
							setMatched = condense(setMatched);
						}

						// Add matches to results
						push.apply(results, setMatched);

						// Seedless set matches succeeding multiple successful matchers stipulate sorting
						if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {

							jQuery.uniqueSort(results);
						}
					}

					// Override manipulation of globals by nested matchers
					if (outermost) {
						dirruns = dirrunsUnique;
						outermostContext = contextBackup;
					}

					return unmatched;
				};

				return bySet ? markFunction(superMatcher) : superMatcher;
			}

			function compile(selector, match /* Internal Use Only */) {
				var i,
				    setMatchers = [],
				    elementMatchers = [],
				    cached = compilerCache[selector + " "];

				if (!cached) {

					// Generate a function of recursive functions that can be used to check each element
					if (!match) {
						match = tokenize(selector);
					}
					i = match.length;
					while (i--) {
						cached = matcherFromTokens(match[i]);
						if (cached[expando]) {
							setMatchers.push(cached);
						} else {
							elementMatchers.push(cached);
						}
					}

					// Cache the compiled function
					cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));

					// Save selector and tokenization
					cached.selector = selector;
				}
				return cached;
			}

			/**
	   * A low-level selection function that works with jQuery's compiled
	   *  selector functions
	   * @param {String|Function} selector A selector or a pre-compiled
	   *  selector function built with jQuery selector compile
	   * @param {Element} context
	   * @param {Array} [results]
	   * @param {Array} [seed] A set of elements to match against
	   */
			function select(selector, context, results, seed) {
				var i,
				    tokens,
				    token,
				    type,
				    find,
				    compiled = typeof selector === "function" && selector,
				    match = !seed && tokenize(selector = compiled.selector || selector);

				results = results || [];

				// Try to minimize operations if there is only one selector in the list and no seed
				// (the latter of which guarantees us context)
				if (match.length === 1) {

					// Reduce context if the leading compound selector is an ID
					tokens = match[0] = match[0].slice(0);
					if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {

						context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];
						if (!context) {
							return results;

							// Precompiled matchers will still verify ancestry, so step up a level
						} else if (compiled) {
							context = context.parentNode;
						}

						selector = selector.slice(tokens.shift().value.length);
					}

					// Fetch a seed set for right-to-left matching
					i = matchExpr.needsContext.test(selector) ? 0 : tokens.length;
					while (i--) {
						token = tokens[i];

						// Abort if we hit a combinator
						if (Expr.relative[type = token.type]) {
							break;
						}
						if (find = Expr.find[type]) {

							// Search, expanding context for leading sibling combinators
							if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {

								// If seed is empty or no tokens remain, we can return early
								tokens.splice(i, 1);
								selector = seed.length && toSelector(tokens);
								if (!selector) {
									push.apply(results, seed);
									return results;
								}

								break;
							}
						}
					}
				}

				// Compile and execute a filtering function if one is not provided
				// Provide `match` to avoid retokenization if we modified the selector above
				(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
				return results;
			}

			// One-time assignments

			// Support: Android <=4.0 - 4.1+
			// Sort stability
			support.sortStable = expando.split("").sort(sortOrder).join("") === expando;

			// Initialize against the default document
			setDocument();

			// Support: Android <=4.0 - 4.1+
			// Detached nodes confoundingly follow *each other*
			support.sortDetached = assert(function (el) {

				// Should return 1, but returns 4 (following)
				return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
			});

			jQuery.find = find;

			// Deprecated
			jQuery.expr[":"] = jQuery.expr.pseudos;
			jQuery.unique = jQuery.uniqueSort;

			// These have always been private, but they used to be documented as part of
			// Sizzle so let's maintain them for now for backwards compatibility purposes.
			find.compile = compile;
			find.select = select;
			find.setDocument = setDocument;
			find.tokenize = tokenize;

			find.escape = jQuery.escapeSelector;
			find.getText = jQuery.text;
			find.isXML = jQuery.isXMLDoc;
			find.selectors = jQuery.expr;
			find.support = jQuery.support;
			find.uniqueSort = jQuery.uniqueSort;

			/* eslint-enable */
		})();

		var dir = function dir(elem, _dir, until) {
			var matched = [],
			    truncate = until !== undefined;

			while ((elem = elem[_dir]) && elem.nodeType !== 9) {
				if (elem.nodeType === 1) {
					if (truncate && jQuery(elem).is(until)) {
						break;
					}
					matched.push(elem);
				}
			}
			return matched;
		};

		var _siblings = function _siblings(n, elem) {
			var matched = [];

			for (; n; n = n.nextSibling) {
				if (n.nodeType === 1 && n !== elem) {
					matched.push(n);
				}
			}

			return matched;
		};

		var rneedsContext = jQuery.expr.match.needsContext;

		var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

		// Implement the identical functionality for filter and not
		function winnow(elements, qualifier, not) {
			if (isFunction(qualifier)) {
				return jQuery.grep(elements, function (elem, i) {
					return !!qualifier.call(elem, i, elem) !== not;
				});
			}

			// Single element
			if (qualifier.nodeType) {
				return jQuery.grep(elements, function (elem) {
					return elem === qualifier !== not;
				});
			}

			// Arraylike of elements (jQuery, arguments, Array)
			if (typeof qualifier !== "string") {
				return jQuery.grep(elements, function (elem) {
					return indexOf.call(qualifier, elem) > -1 !== not;
				});
			}

			// Filtered directly for both simple and complex selectors
			return jQuery.filter(qualifier, elements, not);
		}

		jQuery.filter = function (expr, elems, not) {
			var elem = elems[0];

			if (not) {
				expr = ":not(" + expr + ")";
			}

			if (elems.length === 1 && elem.nodeType === 1) {
				return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
			}

			return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
				return elem.nodeType === 1;
			}));
		};

		jQuery.fn.extend({
			find: function find(selector) {
				var i,
				    ret,
				    len = this.length,
				    self = this;

				if (typeof selector !== "string") {
					return this.pushStack(jQuery(selector).filter(function () {
						for (i = 0; i < len; i++) {
							if (jQuery.contains(self[i], this)) {
								return true;
							}
						}
					}));
				}

				ret = this.pushStack([]);

				for (i = 0; i < len; i++) {
					jQuery.find(selector, self[i], ret);
				}

				return len > 1 ? jQuery.uniqueSort(ret) : ret;
			},
			filter: function filter(selector) {
				return this.pushStack(winnow(this, selector || [], false));
			},
			not: function not(selector) {
				return this.pushStack(winnow(this, selector || [], true));
			},
			is: function is(selector) {
				return !!winnow(this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
			}
		});

		// Initialize a jQuery object


		// A central reference to the root jQuery(document)
		var rootjQuery,


		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)
		// Strict HTML recognition (trac-11290: must start with <)
		// Shortcut simple #id case for speed
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
		    init = jQuery.fn.init = function (selector, context, root) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if (!selector) {
				return this;
			}

			// Method init() accepts an alternate rootjQuery
			// so migrate can support jQuery.sub (gh-2101)
			root = root || rootjQuery;

			// Handle HTML strings
			if (typeof selector === "string") {
				if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {

					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [null, selector, null];
				} else {
					match = rquickExpr.exec(selector);
				}

				// Match html or make sure no context is specified for #id
				if (match && (match[1] || !context)) {

					// HANDLE: $(html) -> $(array)
					if (match[1]) {
						context = context instanceof jQuery ? context[0] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));

						// HANDLE: $(html, props)
						if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
							for (match in context) {

								// Properties of context are called as methods if possible
								if (isFunction(this[match])) {
									this[match](context[match]);

									// ...and otherwise set as attributes
								} else {
									this.attr(match, context[match]);
								}
							}
						}

						return this;

						// HANDLE: $(#id)
					} else {
						elem = document.getElementById(match[2]);

						if (elem) {

							// Inject the element directly into the jQuery object
							this[0] = elem;
							this.length = 1;
						}
						return this;
					}

					// HANDLE: $(expr, $(...))
				} else if (!context || context.jquery) {
					return (context || root).find(selector);

					// HANDLE: $(expr, context)
					// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor(context).find(selector);
				}

				// HANDLE: $(DOMElement)
			} else if (selector.nodeType) {
				this[0] = selector;
				this.length = 1;
				return this;

				// HANDLE: $(function)
				// Shortcut for document ready
			} else if (isFunction(selector)) {
				return root.ready !== undefined ? root.ready(selector) :

				// Execute immediately if ready is not present
				selector(jQuery);
			}

			return jQuery.makeArray(selector, this);
		};

		// Give the init function the jQuery prototype for later instantiation
		init.prototype = jQuery.fn;

		// Initialize central reference
		rootjQuery = jQuery(document);

		var rparentsprev = /^(?:parents|prev(?:Until|All))/,


		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

		jQuery.fn.extend({
			has: function has(target) {
				var targets = jQuery(target, this),
				    l = targets.length;

				return this.filter(function () {
					var i = 0;
					for (; i < l; i++) {
						if (jQuery.contains(this, targets[i])) {
							return true;
						}
					}
				});
			},

			closest: function closest(selectors, context) {
				var cur,
				    i = 0,
				    l = this.length,
				    matched = [],
				    targets = typeof selectors !== "string" && jQuery(selectors);

				// Positional selectors never match, since there's no _selection_ context
				if (!rneedsContext.test(selectors)) {
					for (; i < l; i++) {
						for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {

							// Always skip document fragments
							if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 :

							// Don't pass non-elements to jQuery#find
							cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {

								matched.push(cur);
								break;
							}
						}
					}
				}

				return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
			},

			// Determine the position of an element within the set
			index: function index(elem) {

				// No argument, return index in parent
				if (!elem) {
					return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
				}

				// Index in selector
				if (typeof elem === "string") {
					return indexOf.call(jQuery(elem), this[0]);
				}

				// Locate the position of the desired element
				return indexOf.call(this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[0] : elem);
			},

			add: function add(selector, context) {
				return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
			},

			addBack: function addBack(selector) {
				return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
			}
		});

		function sibling(cur, dir) {
			while ((cur = cur[dir]) && cur.nodeType !== 1) {}
			return cur;
		}

		jQuery.each({
			parent: function parent(elem) {
				var parent = elem.parentNode;
				return parent && parent.nodeType !== 11 ? parent : null;
			},
			parents: function parents(elem) {
				return dir(elem, "parentNode");
			},
			parentsUntil: function parentsUntil(elem, _i, until) {
				return dir(elem, "parentNode", until);
			},
			next: function next(elem) {
				return sibling(elem, "nextSibling");
			},
			prev: function prev(elem) {
				return sibling(elem, "previousSibling");
			},
			nextAll: function nextAll(elem) {
				return dir(elem, "nextSibling");
			},
			prevAll: function prevAll(elem) {
				return dir(elem, "previousSibling");
			},
			nextUntil: function nextUntil(elem, _i, until) {
				return dir(elem, "nextSibling", until);
			},
			prevUntil: function prevUntil(elem, _i, until) {
				return dir(elem, "previousSibling", until);
			},
			siblings: function siblings(elem) {
				return _siblings((elem.parentNode || {}).firstChild, elem);
			},
			children: function children(elem) {
				return _siblings(elem.firstChild);
			},
			contents: function contents(elem) {
				if (elem.contentDocument != null &&

				// Support: IE 11+
				// <object> elements with no `data` attribute has an object
				// `contentDocument` with a `null` prototype.
				getProto(elem.contentDocument)) {

					return elem.contentDocument;
				}

				// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
				// Treat the template element as a regular one in browsers that
				// don't support it.
				if (nodeName(elem, "template")) {
					elem = elem.content || elem;
				}

				return jQuery.merge([], elem.childNodes);
			}
		}, function (name, fn) {
			jQuery.fn[name] = function (until, selector) {
				var matched = jQuery.map(this, fn, until);

				if (name.slice(-5) !== "Until") {
					selector = until;
				}

				if (selector && typeof selector === "string") {
					matched = jQuery.filter(selector, matched);
				}

				if (this.length > 1) {

					// Remove duplicates
					if (!guaranteedUnique[name]) {
						jQuery.uniqueSort(matched);
					}

					// Reverse order for parents* and prev-derivatives
					if (rparentsprev.test(name)) {
						matched.reverse();
					}
				}

				return this.pushStack(matched);
			};
		});
		var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;

		// Convert String-formatted options into Object-formatted ones
		function createOptions(options) {
			var object = {};
			jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
				object[flag] = true;
			});
			return object;
		}

		/*
	  * Create a callback list using the following parameters:
	  *
	  *	options: an optional list of space-separated options that will change how
	  *			the callback list behaves or a more traditional option object
	  *
	  * By default a callback list will act like an event callback list and can be
	  * "fired" multiple times.
	  *
	  * Possible options:
	  *
	  *	once:			will ensure the callback list can only be fired once (like a Deferred)
	  *
	  *	memory:			will keep track of previous values and will call any callback added
	  *					after the list has been fired right away with the latest "memorized"
	  *					values (like a Deferred)
	  *
	  *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	  *
	  *	stopOnFalse:	interrupt callings when a callback returns false
	  *
	  */
		jQuery.Callbacks = function (options) {

			// Convert options from String-formatted to Object-formatted if needed
			// (we check in cache first)
			options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);

			var // Flag to know if list is currently firing
			firing,


			// Last fire value for non-forgettable lists
			memory,


			// Flag to know if list was already fired
			_fired,


			// Flag to prevent firing
			_locked,


			// Actual callback list
			list = [],


			// Queue of execution data for repeatable lists
			queue = [],


			// Index of currently firing callback (modified by add/remove as needed)
			firingIndex = -1,


			// Fire callbacks
			fire = function fire() {

				// Enforce single-firing
				_locked = _locked || options.once;

				// Execute callbacks for all pending executions,
				// respecting firingIndex overrides and runtime changes
				_fired = firing = true;
				for (; queue.length; firingIndex = -1) {
					memory = queue.shift();
					while (++firingIndex < list.length) {

						// Run callback and check for early termination
						if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {

							// Jump to end and forget the data so .add doesn't re-fire
							firingIndex = list.length;
							memory = false;
						}
					}
				}

				// Forget the data if we're done with it
				if (!options.memory) {
					memory = false;
				}

				firing = false;

				// Clean up if we're done firing for good
				if (_locked) {

					// Keep an empty list if we have data for future add calls
					if (memory) {
						list = [];

						// Otherwise, this object is spent
					} else {
						list = "";
					}
				}
			},


			// Actual Callbacks object
			self = {

				// Add a callback or a collection of callbacks to the list
				add: function add() {
					if (list) {

						// If we have memory from a past run, we should fire after adding
						if (memory && !firing) {
							firingIndex = list.length - 1;
							queue.push(memory);
						}

						(function add(args) {
							jQuery.each(args, function (_, arg) {
								if (isFunction(arg)) {
									if (!options.unique || !self.has(arg)) {
										list.push(arg);
									}
								} else if (arg && arg.length && toType(arg) !== "string") {

									// Inspect recursively
									add(arg);
								}
							});
						})(arguments);

						if (memory && !firing) {
							fire();
						}
					}
					return this;
				},

				// Remove a callback from the list
				remove: function remove() {
					jQuery.each(arguments, function (_, arg) {
						var index;
						while ((index = jQuery.inArray(arg, list, index)) > -1) {
							list.splice(index, 1);

							// Handle firing indexes
							if (index <= firingIndex) {
								firingIndex--;
							}
						}
					});
					return this;
				},

				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function has(fn) {
					return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
				},

				// Remove all callbacks from the list
				empty: function empty() {
					if (list) {
						list = [];
					}
					return this;
				},

				// Disable .fire and .add
				// Abort any current/pending executions
				// Clear all callbacks and values
				disable: function disable() {
					_locked = queue = [];
					list = memory = "";
					return this;
				},
				disabled: function disabled() {
					return !list;
				},

				// Disable .fire
				// Also disable .add unless we have memory (since it would have no effect)
				// Abort any pending executions
				lock: function lock() {
					_locked = queue = [];
					if (!memory && !firing) {
						list = memory = "";
					}
					return this;
				},
				locked: function locked() {
					return !!_locked;
				},

				// Call all callbacks with the given context and arguments
				fireWith: function fireWith(context, args) {
					if (!_locked) {
						args = args || [];
						args = [context, args.slice ? args.slice() : args];
						queue.push(args);
						if (!firing) {
							fire();
						}
					}
					return this;
				},

				// Call all the callbacks with the given arguments
				fire: function fire() {
					self.fireWith(this, arguments);
					return this;
				},

				// To know if the callbacks have already been called at least once
				fired: function fired() {
					return !!_fired;
				}
			};

			return self;
		};

		function Identity(v) {
			return v;
		}
		function Thrower(ex) {
			throw ex;
		}

		function adoptValue(value, resolve, reject, noValue) {
			var method;

			try {

				// Check for promise aspect first to privilege synchronous behavior
				if (value && isFunction(method = value.promise)) {
					method.call(value).done(resolve).fail(reject);

					// Other thenables
				} else if (value && isFunction(method = value.then)) {
					method.call(value, resolve, reject);

					// Other non-thenables
				} else {

					// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
					// * false: [ value ].slice( 0 ) => resolve( value )
					// * true: [ value ].slice( 1 ) => resolve()
					resolve.apply(undefined, [value].slice(noValue));
				}

				// For Promises/A+, convert exceptions into rejections
				// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
				// Deferred#then to conditionally suppress rejection.
			} catch (value) {

				// Support: Android 4.0 only
				// Strict mode functions invoked without .call/.apply get global-object context
				reject.apply(undefined, [value]);
			}
		}

		jQuery.extend({

			Deferred: function Deferred(func) {
				var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],
				    _state = "pending",
				    _promise = {
					state: function state() {
						return _state;
					},
					always: function always() {
						deferred.done(arguments).fail(arguments);
						return this;
					},
					"catch": function _catch(fn) {
						return _promise.then(null, fn);
					},

					// Keep pipe for back-compat
					pipe: function pipe() /* fnDone, fnFail, fnProgress */{
						var fns = arguments;

						return jQuery.Deferred(function (newDefer) {
							jQuery.each(tuples, function (_i, tuple) {

								// Map tuples (progress, done, fail) to arguments (done, fail, progress)
								var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];

								// deferred.progress(function() { bind to newDefer or newDefer.notify })
								// deferred.done(function() { bind to newDefer or newDefer.resolve })
								// deferred.fail(function() { bind to newDefer or newDefer.reject })
								deferred[tuple[1]](function () {
									var returned = fn && fn.apply(this, arguments);
									if (returned && isFunction(returned.promise)) {
										returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
									} else {
										newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
									}
								});
							});
							fns = null;
						}).promise();
					},
					then: function then(onFulfilled, onRejected, onProgress) {
						var maxDepth = 0;
						function resolve(depth, deferred, handler, special) {
							return function () {
								var that = this,
								    args = arguments,
								    mightThrow = function mightThrow() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if (depth < maxDepth) {
										return;
									}

									returned = handler.apply(that, args);

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if (returned === deferred.promise()) {
										throw new TypeError("Thenable self-resolution");
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned && (

									// Support: Promises/A+ section 2.3.4
									// https://promisesaplus.com/#point-64
									// Only check objects and functions for thenability
									(typeof returned === "undefined" ? "undefined" : _typeof(returned)) === "object" || typeof returned === "function") && returned.then;

									// Handle a returned thenable
									if (isFunction(then)) {

										// Special processors (notify) just wait for resolution
										if (special) {
											then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));

											// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
										}

										// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if (handler !== Identity) {
											that = undefined;
											args = [returned];
										}

										// Process the value(s)
										// Default process is resolve
										(special || deferred.resolveWith)(that, args);
									}
								},


								// Only normal processors (resolve) catch and reject exceptions
								process = special ? mightThrow : function () {
									try {
										mightThrow();
									} catch (e) {

										if (jQuery.Deferred.exceptionHook) {
											jQuery.Deferred.exceptionHook(e, process.error);
										}

										// Support: Promises/A+ section 2.3.3.3.4.1
										// https://promisesaplus.com/#point-61
										// Ignore post-resolution exceptions
										if (depth + 1 >= maxDepth) {

											// Only substitute handlers pass on context
											// and multiple values (non-spec behavior)
											if (handler !== Thrower) {
												that = undefined;
												args = [e];
											}

											deferred.rejectWith(that, args);
										}
									}
								};

								// Support: Promises/A+ section 2.3.3.3.1
								// https://promisesaplus.com/#point-57
								// Re-resolve promises immediately to dodge false rejection from
								// subsequent errors
								if (depth) {
									process();
								} else {

									// Call an optional hook to record the error, in case of exception
									// since it's otherwise lost when execution goes async
									if (jQuery.Deferred.getErrorHook) {
										process.error = jQuery.Deferred.getErrorHook();

										// The deprecated alias of the above. While the name suggests
										// returning the stack, not an error instance, jQuery just passes
										// it directly to `console.warn` so both will work; an instance
										// just better cooperates with source maps.
									} else if (jQuery.Deferred.getStackHook) {
										process.error = jQuery.Deferred.getStackHook();
									}
									window.setTimeout(process);
								}
							};
						}

						return jQuery.Deferred(function (newDefer) {

							// progress_handlers.add( ... )
							tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));

							// fulfilled_handlers.add( ... )
							tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));

							// rejected_handlers.add( ... )
							tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
						}).promise();
					},

					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function promise(obj) {
						return obj != null ? jQuery.extend(obj, _promise) : _promise;
					}
				},
				    deferred = {};

				// Add list-specific methods
				jQuery.each(tuples, function (i, tuple) {
					var list = tuple[2],
					    stateString = tuple[5];

					// promise.progress = list.add
					// promise.done = list.add
					// promise.fail = list.add
					_promise[tuple[1]] = list.add;

					// Handle state
					if (stateString) {
						list.add(function () {

							// state = "resolved" (i.e., fulfilled)
							// state = "rejected"
							_state = stateString;
						},

						// rejected_callbacks.disable
						// fulfilled_callbacks.disable
						tuples[3 - i][2].disable,

						// rejected_handlers.disable
						// fulfilled_handlers.disable
						tuples[3 - i][3].disable,

						// progress_callbacks.lock
						tuples[0][2].lock,

						// progress_handlers.lock
						tuples[0][3].lock);
					}

					// progress_handlers.fire
					// fulfilled_handlers.fire
					// rejected_handlers.fire
					list.add(tuple[3].fire);

					// deferred.notify = function() { deferred.notifyWith(...) }
					// deferred.resolve = function() { deferred.resolveWith(...) }
					// deferred.reject = function() { deferred.rejectWith(...) }
					deferred[tuple[0]] = function () {
						deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
						return this;
					};

					// deferred.notifyWith = list.fireWith
					// deferred.resolveWith = list.fireWith
					// deferred.rejectWith = list.fireWith
					deferred[tuple[0] + "With"] = list.fireWith;
				});

				// Make the deferred a promise
				_promise.promise(deferred);

				// Call given func if any
				if (func) {
					func.call(deferred, deferred);
				}

				// All done!
				return deferred;
			},

			// Deferred helper
			when: function when(singleValue) {
				var

				// count of uncompleted subordinates
				remaining = arguments.length,


				// count of unprocessed arguments
				i = remaining,


				// subordinate fulfillment data
				resolveContexts = Array(i),
				    resolveValues = _slice.call(arguments),


				// the primary Deferred
				primary = jQuery.Deferred(),


				// subordinate callback factory
				updateFunc = function updateFunc(i) {
					return function (value) {
						resolveContexts[i] = this;
						resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;
						if (! --remaining) {
							primary.resolveWith(resolveContexts, resolveValues);
						}
					};
				};

				// Single- and empty arguments are adopted like Promise.resolve
				if (remaining <= 1) {
					adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining);

					// Use .then() to unwrap secondary thenables (cf. gh-3000)
					if (primary.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {

						return primary.then();
					}
				}

				// Multiple arguments are aggregated like Promise.all array elements
				while (i--) {
					adoptValue(resolveValues[i], updateFunc(i), primary.reject);
				}

				return primary.promise();
			}
		});

		// These usually indicate a programmer mistake during development,
		// warn about them ASAP rather than swallowing them by default.
		var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

		// If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error
		// captured before the async barrier to get the original error cause
		// which may otherwise be hidden.
		jQuery.Deferred.exceptionHook = function (error, asyncError) {

			// Support: IE 8 - 9 only
			// Console exists when dev tools are open, which can happen at any time
			if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
				window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, asyncError);
			}
		};

		jQuery.readyException = function (error) {
			window.setTimeout(function () {
				throw error;
			});
		};

		// The deferred used on DOM ready
		var readyList = jQuery.Deferred();

		jQuery.fn.ready = function (fn) {

			readyList.then(fn)

			// Wrap jQuery.readyException in a function so that the lookup
			// happens at the time of error handling instead of callback
			// registration.
			.catch(function (error) {
				jQuery.readyException(error);
			});

			return this;
		};

		jQuery.extend({

			// Is the DOM ready to be used? Set to true once it occurs.
			isReady: false,

			// A counter to track how many items to wait for before
			// the ready event fires. See trac-6781
			readyWait: 1,

			// Handle when the DOM is ready
			ready: function ready(wait) {

				// Abort if there are pending holds or we're already ready
				if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
					return;
				}

				// Remember that the DOM is ready
				jQuery.isReady = true;

				// If a normal DOM Ready event fired, decrement, and wait if need be
				if (wait !== true && --jQuery.readyWait > 0) {
					return;
				}

				// If there are functions bound, to execute
				readyList.resolveWith(document, [jQuery]);
			}
		});

		jQuery.ready.then = readyList.then;

		// The ready event handler and self cleanup method
		function completed() {
			document.removeEventListener("DOMContentLoaded", completed);
			window.removeEventListener("load", completed);
			jQuery.ready();
		}

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE <=9 - 10 only
		// Older IE sometimes signals "interactive" too soon
		if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout(jQuery.ready);
		} else {

			// Use the handy event callback
			document.addEventListener("DOMContentLoaded", completed);

			// A fallback to window.onload, that will always work
			window.addEventListener("load", completed);
		}

		// Multifunctional method to get and set values of a collection
		// The value/s can optionally be executed if it's a function
		var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {
			var i = 0,
			    len = elems.length,
			    bulk = key == null;

			// Sets many values
			if (toType(key) === "object") {
				chainable = true;
				for (i in key) {
					access(elems, fn, i, key[i], true, emptyGet, raw);
				}

				// Sets one value
			} else if (value !== undefined) {
				chainable = true;

				if (!isFunction(value)) {
					raw = true;
				}

				if (bulk) {

					// Bulk operations run against the entire set
					if (raw) {
						fn.call(elems, value);
						fn = null;

						// ...except when executing function values
					} else {
						bulk = fn;
						fn = function fn(elem, _key, value) {
							return bulk.call(jQuery(elem), value);
						};
					}
				}

				if (fn) {
					for (; i < len; i++) {
						fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
					}
				}
			}

			if (chainable) {
				return elems;
			}

			// Gets
			if (bulk) {
				return fn.call(elems);
			}

			return len ? fn(elems[0], key) : emptyGet;
		};

		// Matches dashed string for camelizing
		var rmsPrefix = /^-ms-/,
		    rdashAlpha = /-([a-z])/g;

		// Used by camelCase as callback to replace()
		function fcamelCase(_all, letter) {
			return letter.toUpperCase();
		}

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE <=9 - 11, Edge 12 - 15
		// Microsoft forgot to hump their vendor prefix (trac-9572)
		function camelCase(string) {
			return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
		}
		var acceptData = function acceptData(owner) {

			// Accepts only:
			//  - Node
			//    - Node.ELEMENT_NODE
			//    - Node.DOCUMENT_NODE
			//  - Object
			//    - Any
			return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
		};

		function Data() {
			this.expando = jQuery.expando + Data.uid++;
		}

		Data.uid = 1;

		Data.prototype = {

			cache: function cache(owner) {

				// Check if the owner object already has a cache
				var value = owner[this.expando];

				// If not, create one
				if (!value) {
					value = {};

					// We can accept data for non-element nodes in modern browsers,
					// but we should not, see trac-8335.
					// Always return an empty object.
					if (acceptData(owner)) {

						// If it is a node unlikely to be stringify-ed or looped over
						// use plain assignment
						if (owner.nodeType) {
							owner[this.expando] = value;

							// Otherwise secure it in a non-enumerable property
							// configurable must be true to allow the property to be
							// deleted when data is removed
						} else {
							Object.defineProperty(owner, this.expando, {
								value: value,
								configurable: true
							});
						}
					}
				}

				return value;
			},
			set: function set(owner, data, value) {
				var prop,
				    cache = this.cache(owner);

				// Handle: [ owner, key, value ] args
				// Always use camelCase key (gh-2257)
				if (typeof data === "string") {
					cache[camelCase(data)] = value;

					// Handle: [ owner, { properties } ] args
				} else {

					// Copy the properties one-by-one to the cache object
					for (prop in data) {
						cache[camelCase(prop)] = data[prop];
					}
				}
				return cache;
			},
			get: function get(owner, key) {
				return key === undefined ? this.cache(owner) :

				// Always use camelCase key (gh-2257)
				owner[this.expando] && owner[this.expando][camelCase(key)];
			},
			access: function access(owner, key, value) {

				// In cases where either:
				//
				//   1. No key was specified
				//   2. A string key was specified, but no value provided
				//
				// Take the "read" path and allow the get method to determine
				// which value to return, respectively either:
				//
				//   1. The entire cache object
				//   2. The data stored at the key
				//
				if (key === undefined || key && typeof key === "string" && value === undefined) {

					return this.get(owner, key);
				}

				// When the key is not a string, or both a key and value
				// are specified, set or extend (existing objects) with either:
				//
				//   1. An object of properties
				//   2. A key and value
				//
				this.set(owner, key, value);

				// Since the "set" path can have two possible entry points
				// return the expected data based on which path was taken[*]
				return value !== undefined ? value : key;
			},
			remove: function remove(owner, key) {
				var i,
				    cache = owner[this.expando];

				if (cache === undefined) {
					return;
				}

				if (key !== undefined) {

					// Support array or space separated string of keys
					if (Array.isArray(key)) {

						// If key is an array of keys...
						// We always set camelCase keys, so remove that.
						key = key.map(camelCase);
					} else {
						key = camelCase(key);

						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
					}

					i = key.length;

					while (i--) {
						delete cache[key[i]];
					}
				}

				// Remove the expando if there's no more data
				if (key === undefined || jQuery.isEmptyObject(cache)) {

					// Support: Chrome <=35 - 45
					// Webkit & Blink performance suffers when deleting properties
					// from DOM nodes, so set to undefined instead
					// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
					if (owner.nodeType) {
						owner[this.expando] = undefined;
					} else {
						delete owner[this.expando];
					}
				}
			},
			hasData: function hasData(owner) {
				var cache = owner[this.expando];
				return cache !== undefined && !jQuery.isEmptyObject(cache);
			}
		};
		var dataPriv = new Data();

		var dataUser = new Data();

		//	Implementation Summary
		//
		//	1. Enforce API surface and semantic compatibility with 1.9.x branch
		//	2. Improve the module's maintainability by reducing the storage
		//		paths to a single mechanism.
		//	3. Use the same single mechanism to support "private" and "user" data.
		//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
		//	5. Avoid exposing implementation details on user objects (eg. expando properties)
		//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

		var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		    rmultiDash = /[A-Z]/g;

		function getData(data) {
			if (data === "true") {
				return true;
			}

			if (data === "false") {
				return false;
			}

			if (data === "null") {
				return null;
			}

			// Only convert to a number if it doesn't change the string
			if (data === +data + "") {
				return +data;
			}

			if (rbrace.test(data)) {
				return JSON.parse(data);
			}

			return data;
		}

		function dataAttr(elem, key, data) {
			var name;

			// If nothing was found internally, try to fetch any
			// data from the HTML5 data-* attribute
			if (data === undefined && elem.nodeType === 1) {
				name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
				data = elem.getAttribute(name);

				if (typeof data === "string") {
					try {
						data = getData(data);
					} catch (e) {}

					// Make sure we set the data so it isn't changed later
					dataUser.set(elem, key, data);
				} else {
					data = undefined;
				}
			}
			return data;
		}

		jQuery.extend({
			hasData: function hasData(elem) {
				return dataUser.hasData(elem) || dataPriv.hasData(elem);
			},

			data: function data(elem, name, _data) {
				return dataUser.access(elem, name, _data);
			},

			removeData: function removeData(elem, name) {
				dataUser.remove(elem, name);
			},

			// TODO: Now that all calls to _data and _removeData have been replaced
			// with direct calls to dataPriv methods, these can be deprecated.
			_data: function _data(elem, name, data) {
				return dataPriv.access(elem, name, data);
			},

			_removeData: function _removeData(elem, name) {
				dataPriv.remove(elem, name);
			}
		});

		jQuery.fn.extend({
			data: function data(key, value) {
				var i,
				    name,
				    data,
				    elem = this[0],
				    attrs = elem && elem.attributes;

				// Gets all values
				if (key === undefined) {
					if (this.length) {
						data = dataUser.get(elem);

						if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
							i = attrs.length;
							while (i--) {

								// Support: IE 11 only
								// The attrs elements can be null (trac-14894)
								if (attrs[i]) {
									name = attrs[i].name;
									if (name.indexOf("data-") === 0) {
										name = camelCase(name.slice(5));
										dataAttr(elem, name, data[name]);
									}
								}
							}
							dataPriv.set(elem, "hasDataAttrs", true);
						}
					}

					return data;
				}

				// Sets multiple values
				if ((typeof key === "undefined" ? "undefined" : _typeof(key)) === "object") {
					return this.each(function () {
						dataUser.set(this, key);
					});
				}

				return access(this, function (value) {
					var data;

					// The calling jQuery object (element matches) is not empty
					// (and therefore has an element appears at this[ 0 ]) and the
					// `value` parameter was not undefined. An empty jQuery object
					// will result in `undefined` for elem = this[ 0 ] which will
					// throw an exception if an attempt to read a data cache is made.
					if (elem && value === undefined) {

						// Attempt to get data from the cache
						// The key will always be camelCased in Data
						data = dataUser.get(elem, key);
						if (data !== undefined) {
							return data;
						}

						// Attempt to "discover" the data in
						// HTML5 custom data-* attrs
						data = dataAttr(elem, key);
						if (data !== undefined) {
							return data;
						}

						// We tried really hard, but the data doesn't exist.
						return;
					}

					// Set the data...
					this.each(function () {

						// We always store the camelCased key
						dataUser.set(this, key, value);
					});
				}, null, value, arguments.length > 1, null, true);
			},

			removeData: function removeData(key) {
				return this.each(function () {
					dataUser.remove(this, key);
				});
			}
		});

		jQuery.extend({
			queue: function queue(elem, type, data) {
				var queue;

				if (elem) {
					type = (type || "fx") + "queue";
					queue = dataPriv.get(elem, type);

					// Speed up dequeue by getting out quickly if this is just a lookup
					if (data) {
						if (!queue || Array.isArray(data)) {
							queue = dataPriv.access(elem, type, jQuery.makeArray(data));
						} else {
							queue.push(data);
						}
					}
					return queue || [];
				}
			},

			dequeue: function dequeue(elem, type) {
				type = type || "fx";

				var queue = jQuery.queue(elem, type),
				    startLength = queue.length,
				    fn = queue.shift(),
				    hooks = jQuery._queueHooks(elem, type),
				    next = function next() {
					jQuery.dequeue(elem, type);
				};

				// If the fx queue is dequeued, always remove the progress sentinel
				if (fn === "inprogress") {
					fn = queue.shift();
					startLength--;
				}

				if (fn) {

					// Add a progress sentinel to prevent the fx queue from being
					// automatically dequeued
					if (type === "fx") {
						queue.unshift("inprogress");
					}

					// Clear up the last queue stop function
					delete hooks.stop;
					fn.call(elem, next, hooks);
				}

				if (!startLength && hooks) {
					hooks.empty.fire();
				}
			},

			// Not public - generate a queueHooks object, or return the current one
			_queueHooks: function _queueHooks(elem, type) {
				var key = type + "queueHooks";
				return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
					empty: jQuery.Callbacks("once memory").add(function () {
						dataPriv.remove(elem, [type + "queue", key]);
					})
				});
			}
		});

		jQuery.fn.extend({
			queue: function queue(type, data) {
				var setter = 2;

				if (typeof type !== "string") {
					data = type;
					type = "fx";
					setter--;
				}

				if (arguments.length < setter) {
					return jQuery.queue(this[0], type);
				}

				return data === undefined ? this : this.each(function () {
					var queue = jQuery.queue(this, type, data);

					// Ensure a hooks for this queue
					jQuery._queueHooks(this, type);

					if (type === "fx" && queue[0] !== "inprogress") {
						jQuery.dequeue(this, type);
					}
				});
			},
			dequeue: function dequeue(type) {
				return this.each(function () {
					jQuery.dequeue(this, type);
				});
			},
			clearQueue: function clearQueue(type) {
				return this.queue(type || "fx", []);
			},

			// Get a promise resolved when queues of a certain type
			// are emptied (fx is the type by default)
			promise: function promise(type, obj) {
				var tmp,
				    count = 1,
				    defer = jQuery.Deferred(),
				    elements = this,
				    i = this.length,
				    resolve = function resolve() {
					if (! --count) {
						defer.resolveWith(elements, [elements]);
					}
				};

				if (typeof type !== "string") {
					obj = type;
					type = undefined;
				}
				type = type || "fx";

				while (i--) {
					tmp = dataPriv.get(elements[i], type + "queueHooks");
					if (tmp && tmp.empty) {
						count++;
						tmp.empty.add(resolve);
					}
				}
				resolve();
				return defer.promise(obj);
			}
		});
		var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;

		var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");

		var cssExpand = ["Top", "Right", "Bottom", "Left"];

		var documentElement = document.documentElement;

		var isAttached = function isAttached(elem) {
			return jQuery.contains(elem.ownerDocument, elem);
		},
		    composed = { composed: true };

		// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
		// Check attachment across shadow DOM boundaries when possible (gh-3504)
		// Support: iOS 10.0-10.2 only
		// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
		// leading to errors. We need to check for `getRootNode`.
		if (documentElement.getRootNode) {
			isAttached = function isAttached(elem) {
				return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
			};
		}
		var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {

			// isHiddenWithinTree might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;

			// Inline style trumps all
			return elem.style.display === "none" || elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached(elem) && jQuery.css(elem, "display") === "none";
		};

		function adjustCSS(elem, prop, valueParts, tween) {
			var adjusted,
			    scale,
			    maxIterations = 20,
			    currentValue = tween ? function () {
				return tween.cur();
			} : function () {
				return jQuery.css(elem, prop, "");
			},
			    initial = currentValue(),
			    unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),


			// Starting value computation is required for potential unit mismatches
			initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));

			if (initialInUnit && initialInUnit[3] !== unit) {

				// Support: Firefox <=54
				// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
				initial = initial / 2;

				// Trust units reported by jQuery.css
				unit = unit || initialInUnit[3];

				// Iteratively approximate from a nonzero starting point
				initialInUnit = +initial || 1;

				while (maxIterations--) {

					// Evaluate and update our best guess (doubling guesses that zero out).
					// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
					jQuery.style(elem, prop, initialInUnit + unit);
					if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
						maxIterations = 0;
					}
					initialInUnit = initialInUnit / scale;
				}

				initialInUnit = initialInUnit * 2;
				jQuery.style(elem, prop, initialInUnit + unit);

				// Make sure we update the tween properties later on
				valueParts = valueParts || [];
			}

			if (valueParts) {
				initialInUnit = +initialInUnit || +initial || 0;

				// Apply relative offset (+=/-=) if specified
				adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
				if (tween) {
					tween.unit = unit;
					tween.start = initialInUnit;
					tween.end = adjusted;
				}
			}
			return adjusted;
		}

		var defaultDisplayMap = {};

		function getDefaultDisplay(elem) {
			var temp,
			    doc = elem.ownerDocument,
			    nodeName = elem.nodeName,
			    display = defaultDisplayMap[nodeName];

			if (display) {
				return display;
			}

			temp = doc.body.appendChild(doc.createElement(nodeName));
			display = jQuery.css(temp, "display");

			temp.parentNode.removeChild(temp);

			if (display === "none") {
				display = "block";
			}
			defaultDisplayMap[nodeName] = display;

			return display;
		}

		function showHide(elements, show) {
			var display,
			    elem,
			    values = [],
			    index = 0,
			    length = elements.length;

			// Determine new display value for elements that need to change
			for (; index < length; index++) {
				elem = elements[index];
				if (!elem.style) {
					continue;
				}

				display = elem.style.display;
				if (show) {

					// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
					// check is required in this first loop unless we have a nonempty display value (either
					// inline or about-to-be-restored)
					if (display === "none") {
						values[index] = dataPriv.get(elem, "display") || null;
						if (!values[index]) {
							elem.style.display = "";
						}
					}
					if (elem.style.display === "" && isHiddenWithinTree(elem)) {
						values[index] = getDefaultDisplay(elem);
					}
				} else {
					if (display !== "none") {
						values[index] = "none";

						// Remember what we're overwriting
						dataPriv.set(elem, "display", display);
					}
				}
			}

			// Set the display of the elements in a second loop to avoid constant reflow
			for (index = 0; index < length; index++) {
				if (values[index] != null) {
					elements[index].style.display = values[index];
				}
			}

			return elements;
		}

		jQuery.fn.extend({
			show: function show() {
				return showHide(this, true);
			},
			hide: function hide() {
				return showHide(this);
			},
			toggle: function toggle(state) {
				if (typeof state === "boolean") {
					return state ? this.show() : this.hide();
				}

				return this.each(function () {
					if (isHiddenWithinTree(this)) {
						jQuery(this).show();
					} else {
						jQuery(this).hide();
					}
				});
			}
		});
		var rcheckableType = /^(?:checkbox|radio)$/i;

		var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;

		var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

		(function () {
			var fragment = document.createDocumentFragment(),
			    div = fragment.appendChild(document.createElement("div")),
			    input = document.createElement("input");

			// Support: Android 4.0 - 4.3 only
			// Check state lost if the name is set (trac-11217)
			// Support: Windows Web Apps (WWA)
			// `name` and `type` must use .setAttribute for WWA (trac-14901)
			input.setAttribute("type", "radio");
			input.setAttribute("checked", "checked");
			input.setAttribute("name", "t");

			div.appendChild(input);

			// Support: Android <=4.1 only
			// Older WebKit doesn't clone checked state correctly in fragments
			support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;

			// Support: IE <=11 only
			// Make sure textarea (and checkbox) defaultValue is properly cloned
			div.innerHTML = "<textarea>x</textarea>";
			support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;

			// Support: IE <=9 only
			// IE <=9 replaces <option> tags with their contents when inserted outside of
			// the select element.
			div.innerHTML = "<option></option>";
			support.option = !!div.lastChild;
		})();

		// We have to close these tags to support XHTML (trac-13200)
		var wrapMap = {

			// XHTML parsers do not magically insert elements in the
			// same way that tag soup parsers do. So we cannot shorten
			// this by omitting <tbody> or other required elements.
			thead: [1, "<table>", "</table>"],
			col: [2, "<table><colgroup>", "</colgroup></table>"],
			tr: [2, "<table><tbody>", "</tbody></table>"],
			td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],

			_default: [0, "", ""]
		};

		wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
		wrapMap.th = wrapMap.td;

		// Support: IE <=9 only
		if (!support.option) {
			wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
		}

		function getAll(context, tag) {

			// Support: IE <=9 - 11 only
			// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)
			var ret;

			if (typeof context.getElementsByTagName !== "undefined") {
				ret = context.getElementsByTagName(tag || "*");
			} else if (typeof context.querySelectorAll !== "undefined") {
				ret = context.querySelectorAll(tag || "*");
			} else {
				ret = [];
			}

			if (tag === undefined || tag && nodeName(context, tag)) {
				return jQuery.merge([context], ret);
			}

			return ret;
		}

		// Mark scripts as having already been evaluated
		function setGlobalEval(elems, refElements) {
			var i = 0,
			    l = elems.length;

			for (; i < l; i++) {
				dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
			}
		}

		var rhtml = /<|&#?\w+;/;

		function buildFragment(elems, context, scripts, selection, ignored) {
			var elem,
			    tmp,
			    tag,
			    wrap,
			    attached,
			    j,
			    fragment = context.createDocumentFragment(),
			    nodes = [],
			    i = 0,
			    l = elems.length;

			for (; i < l; i++) {
				elem = elems[i];

				if (elem || elem === 0) {

					// Add nodes directly
					if (toType(elem) === "object") {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge(nodes, elem.nodeType ? [elem] : elem);

						// Convert non-html into a text node
					} else if (!rhtml.test(elem)) {
						nodes.push(context.createTextNode(elem));

						// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild(context.createElement("div"));

						// Deserialize a standard representation
						tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
						wrap = wrapMap[tag] || wrapMap._default;
						tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

						// Descend through wrappers to the right content
						j = wrap[0];
						while (j--) {
							tmp = tmp.lastChild;
						}

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge(nodes, tmp.childNodes);

						// Remember the top-level container
						tmp = fragment.firstChild;

						// Ensure the created nodes are orphaned (trac-12392)
						tmp.textContent = "";
					}
				}
			}

			// Remove wrapper from fragment
			fragment.textContent = "";

			i = 0;
			while (elem = nodes[i++]) {

				// Skip elements already in the context collection (trac-4087)
				if (selection && jQuery.inArray(elem, selection) > -1) {
					if (ignored) {
						ignored.push(elem);
					}
					continue;
				}

				attached = isAttached(elem);

				// Append to fragment
				tmp = getAll(fragment.appendChild(elem), "script");

				// Preserve script evaluation history
				if (attached) {
					setGlobalEval(tmp);
				}

				// Capture executables
				if (scripts) {
					j = 0;
					while (elem = tmp[j++]) {
						if (rscriptType.test(elem.type || "")) {
							scripts.push(elem);
						}
					}
				}
			}

			return fragment;
		}

		var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

		function returnTrue() {
			return true;
		}

		function returnFalse() {
			return false;
		}

		function _on(elem, types, selector, data, fn, one) {
			var origFn, type;

			// Types can be a map of types/handlers
			if ((typeof types === "undefined" ? "undefined" : _typeof(types)) === "object") {

				// ( types-Object, selector, data )
				if (typeof selector !== "string") {

					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for (type in types) {
					_on(elem, type, selector, data, types[type], one);
				}
				return elem;
			}

			if (data == null && fn == null) {

				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if (fn == null) {
				if (typeof selector === "string") {

					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {

					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if (fn === false) {
				fn = returnFalse;
			} else if (!fn) {
				return elem;
			}

			if (one === 1) {
				origFn = fn;
				fn = function fn(event) {

					// Can use an empty set, since event contains the info
					jQuery().off(event);
					return origFn.apply(this, arguments);
				};

				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
			}
			return elem.each(function () {
				jQuery.event.add(this, types, fn, data, selector);
			});
		}

		/*
	  * Helper functions for managing events -- not part of the public interface.
	  * Props to Dean Edwards' addEvent library for many of the ideas.
	  */
		jQuery.event = {

			global: {},

			add: function add(elem, types, handler, data, selector) {

				var handleObjIn,
				    eventHandle,
				    tmp,
				    events,
				    t,
				    handleObj,
				    special,
				    handlers,
				    type,
				    namespaces,
				    origType,
				    elemData = dataPriv.get(elem);

				// Only attach events to objects that accept data
				if (!acceptData(elem)) {
					return;
				}

				// Caller can pass in an object of custom data in lieu of the handler
				if (handler.handler) {
					handleObjIn = handler;
					handler = handleObjIn.handler;
					selector = handleObjIn.selector;
				}

				// Ensure that invalid selectors throw exceptions at attach time
				// Evaluate against documentElement in case elem is a non-element node (e.g., document)
				if (selector) {
					jQuery.find.matchesSelector(documentElement, selector);
				}

				// Make sure that the handler has a unique ID, used to find/remove it later
				if (!handler.guid) {
					handler.guid = jQuery.guid++;
				}

				// Init the element's event structure and main handler, if this is the first
				if (!(events = elemData.events)) {
					events = elemData.events = Object.create(null);
				}
				if (!(eventHandle = elemData.handle)) {
					eventHandle = elemData.handle = function (e) {

						// Discard the second event of a jQuery.event.trigger() and
						// when an event is called after a page has unloaded
						return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
					};
				}

				// Handle multiple events separated by a space
				types = (types || "").match(rnothtmlwhite) || [""];
				t = types.length;
				while (t--) {
					tmp = rtypenamespace.exec(types[t]) || [];
					type = origType = tmp[1];
					namespaces = (tmp[2] || "").split(".").sort();

					// There *must* be a type, no attaching namespace-only handlers
					if (!type) {
						continue;
					}

					// If event changes its type, use the special event handlers for the changed type
					special = jQuery.event.special[type] || {};

					// If selector defined, determine special event api type, otherwise given type
					type = (selector ? special.delegateType : special.bindType) || type;

					// Update special based on newly reset type
					special = jQuery.event.special[type] || {};

					// handleObj is passed to all event handlers
					handleObj = jQuery.extend({
						type: type,
						origType: origType,
						data: data,
						handler: handler,
						guid: handler.guid,
						selector: selector,
						needsContext: selector && jQuery.expr.match.needsContext.test(selector),
						namespace: namespaces.join(".")
					}, handleObjIn);

					// Init the event handler queue if we're the first
					if (!(handlers = events[type])) {
						handlers = events[type] = [];
						handlers.delegateCount = 0;

						// Only use addEventListener if the special events handler returns false
						if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {

							if (elem.addEventListener) {
								elem.addEventListener(type, eventHandle);
							}
						}
					}

					if (special.add) {
						special.add.call(elem, handleObj);

						if (!handleObj.handler.guid) {
							handleObj.handler.guid = handler.guid;
						}
					}

					// Add to the element's handler list, delegates in front
					if (selector) {
						handlers.splice(handlers.delegateCount++, 0, handleObj);
					} else {
						handlers.push(handleObj);
					}

					// Keep track of which events have ever been used, for event optimization
					jQuery.event.global[type] = true;
				}
			},

			// Detach an event or set of events from an element
			remove: function remove(elem, types, handler, selector, mappedTypes) {

				var j,
				    origCount,
				    tmp,
				    events,
				    t,
				    handleObj,
				    special,
				    handlers,
				    type,
				    namespaces,
				    origType,
				    elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

				if (!elemData || !(events = elemData.events)) {
					return;
				}

				// Once for each type.namespace in types; type may be omitted
				types = (types || "").match(rnothtmlwhite) || [""];
				t = types.length;
				while (t--) {
					tmp = rtypenamespace.exec(types[t]) || [];
					type = origType = tmp[1];
					namespaces = (tmp[2] || "").split(".").sort();

					// Unbind all events (on this namespace, if provided) for the element
					if (!type) {
						for (type in events) {
							jQuery.event.remove(elem, type + types[t], handler, selector, true);
						}
						continue;
					}

					special = jQuery.event.special[type] || {};
					type = (selector ? special.delegateType : special.bindType) || type;
					handlers = events[type] || [];
					tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");

					// Remove matching events
					origCount = j = handlers.length;
					while (j--) {
						handleObj = handlers[j];

						if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
							handlers.splice(j, 1);

							if (handleObj.selector) {
								handlers.delegateCount--;
							}
							if (special.remove) {
								special.remove.call(elem, handleObj);
							}
						}
					}

					// Remove generic event handler if we removed something and no more handlers exist
					// (avoids potential for endless recursion during removal of special event handlers)
					if (origCount && !handlers.length) {
						if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {

							jQuery.removeEvent(elem, type, elemData.handle);
						}

						delete events[type];
					}
				}

				// Remove data and the expando if it's no longer used
				if (jQuery.isEmptyObject(events)) {
					dataPriv.remove(elem, "handle events");
				}
			},

			dispatch: function dispatch(nativeEvent) {

				var i,
				    j,
				    ret,
				    matched,
				    handleObj,
				    handlerQueue,
				    args = new Array(arguments.length),


				// Make a writable jQuery.Event from the native event object
				event = jQuery.event.fix(nativeEvent),
				    handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [],
				    special = jQuery.event.special[event.type] || {};

				// Use the fix-ed jQuery.Event rather than the (read-only) native event
				args[0] = event;

				for (i = 1; i < arguments.length; i++) {
					args[i] = arguments[i];
				}

				event.delegateTarget = this;

				// Call the preDispatch hook for the mapped type, and let it bail if desired
				if (special.preDispatch && special.preDispatch.call(this, event) === false) {
					return;
				}

				// Determine handlers
				handlerQueue = jQuery.event.handlers.call(this, event, handlers);

				// Run delegates first; they may want to stop propagation beneath us
				i = 0;
				while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
					event.currentTarget = matched.elem;

					j = 0;
					while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {

						// If the event is namespaced, then each handler is only invoked if it is
						// specially universal or its namespaces are a superset of the event's.
						if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {

							event.handleObj = handleObj;
							event.data = handleObj.data;

							ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);

							if (ret !== undefined) {
								if ((event.result = ret) === false) {
									event.preventDefault();
									event.stopPropagation();
								}
							}
						}
					}
				}

				// Call the postDispatch hook for the mapped type
				if (special.postDispatch) {
					special.postDispatch.call(this, event);
				}

				return event.result;
			},

			handlers: function handlers(event, _handlers) {
				var i,
				    handleObj,
				    sel,
				    matchedHandlers,
				    matchedSelectors,
				    handlerQueue = [],
				    delegateCount = _handlers.delegateCount,
				    cur = event.target;

				// Find delegate handlers
				if (delegateCount &&

				// Support: IE <=9
				// Black-hole SVG <use> instance trees (trac-13180)
				cur.nodeType &&

				// Support: Firefox <=42
				// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
				// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
				// Support: IE 11 only
				// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
				!(event.type === "click" && event.button >= 1)) {

					for (; cur !== this; cur = cur.parentNode || this) {

						// Don't check non-elements (trac-13208)
						// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)
						if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
							matchedHandlers = [];
							matchedSelectors = {};
							for (i = 0; i < delegateCount; i++) {
								handleObj = _handlers[i];

								// Don't conflict with Object.prototype properties (trac-13203)
								sel = handleObj.selector + " ";

								if (matchedSelectors[sel] === undefined) {
									matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
								}
								if (matchedSelectors[sel]) {
									matchedHandlers.push(handleObj);
								}
							}
							if (matchedHandlers.length) {
								handlerQueue.push({ elem: cur, handlers: matchedHandlers });
							}
						}
					}
				}

				// Add the remaining (directly-bound) handlers
				cur = this;
				if (delegateCount < _handlers.length) {
					handlerQueue.push({ elem: cur, handlers: _handlers.slice(delegateCount) });
				}

				return handlerQueue;
			},

			addProp: function addProp(name, hook) {
				Object.defineProperty(jQuery.Event.prototype, name, {
					enumerable: true,
					configurable: true,

					get: isFunction(hook) ? function () {
						if (this.originalEvent) {
							return hook(this.originalEvent);
						}
					} : function () {
						if (this.originalEvent) {
							return this.originalEvent[name];
						}
					},

					set: function set(value) {
						Object.defineProperty(this, name, {
							enumerable: true,
							configurable: true,
							writable: true,
							value: value
						});
					}
				});
			},

			fix: function fix(originalEvent) {
				return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
			},

			special: {
				load: {

					// Prevent triggered image.load events from bubbling to window.load
					noBubble: true
				},
				click: {

					// Utilize native event to ensure correct state for checkable inputs
					setup: function setup(data) {

						// For mutual compressibility with _default, replace `this` access with a local var.
						// `|| data` is dead code meant only to preserve the variable through minification.
						var el = this || data;

						// Claim the first handler
						if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {

							// dataPriv.set( el, "click", ... )
							leverageNative(el, "click", true);
						}

						// Return false to allow normal processing in the caller
						return false;
					},
					trigger: function trigger(data) {

						// For mutual compressibility with _default, replace `this` access with a local var.
						// `|| data` is dead code meant only to preserve the variable through minification.
						var el = this || data;

						// Force setup before triggering a click
						if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {

							leverageNative(el, "click");
						}

						// Return non-false to allow normal event-path propagation
						return true;
					},

					// For cross-browser consistency, suppress native .click() on links
					// Also prevent it if we're currently inside a leveraged native-event stack
					_default: function _default(event) {
						var target = event.target;
						return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
					}
				},

				beforeunload: {
					postDispatch: function postDispatch(event) {

						// Support: Firefox 20+
						// Firefox doesn't alert if the returnValue field is not set.
						if (event.result !== undefined && event.originalEvent) {
							event.originalEvent.returnValue = event.result;
						}
					}
				}
			}
		};

		// Ensure the presence of an event listener that handles manually-triggered
		// synthetic events by interrupting progress until reinvoked in response to
		// *native* events that it fires directly, ensuring that state changes have
		// already occurred before other listeners are invoked.
		function leverageNative(el, type, isSetup) {

			// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add
			if (!isSetup) {
				if (dataPriv.get(el, type) === undefined) {
					jQuery.event.add(el, type, returnTrue);
				}
				return;
			}

			// Register the controller as a special universal handler for all event namespaces
			dataPriv.set(el, type, false);
			jQuery.event.add(el, type, {
				namespace: false,
				handler: function handler(event) {
					var result,
					    saved = dataPriv.get(this, type);

					if (event.isTrigger & 1 && this[type]) {

						// Interrupt processing of the outer synthetic .trigger()ed event
						if (!saved) {

							// Store arguments for use when handling the inner native event
							// There will always be at least one argument (an event object), so this array
							// will not be confused with a leftover capture object.
							saved = _slice.call(arguments);
							dataPriv.set(this, type, saved);

							// Trigger the native event and capture its result
							this[type]();
							result = dataPriv.get(this, type);
							dataPriv.set(this, type, false);

							if (saved !== result) {

								// Cancel the outer synthetic event
								event.stopImmediatePropagation();
								event.preventDefault();

								return result;
							}

							// If this is an inner synthetic event for an event with a bubbling surrogate
							// (focus or blur), assume that the surrogate already propagated from triggering
							// the native event and prevent that from happening again here.
							// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
							// bubbling surrogate propagates *after* the non-bubbling base), but that seems
							// less bad than duplication.
						} else if ((jQuery.event.special[type] || {}).delegateType) {
							event.stopPropagation();
						}

						// If this is a native event triggered above, everything is now in order
						// Fire an inner synthetic event with the original arguments
					} else if (saved) {

						// ...and capture the result
						dataPriv.set(this, type, jQuery.event.trigger(saved[0], saved.slice(1), this));

						// Abort handling of the native event by all jQuery handlers while allowing
						// native handlers on the same element to run. On target, this is achieved
						// by stopping immediate propagation just on the jQuery event. However,
						// the native event is re-wrapped by a jQuery one on each level of the
						// propagation so the only way to stop it for jQuery is to stop it for
						// everyone via native `stopPropagation()`. This is not a problem for
						// focus/blur which don't bubble, but it does also stop click on checkboxes
						// and radios. We accept this limitation.
						event.stopPropagation();
						event.isImmediatePropagationStopped = returnTrue;
					}
				}
			});
		}

		jQuery.removeEvent = function (elem, type, handle) {

			// This "if" is needed for plain objects
			if (elem.removeEventListener) {
				elem.removeEventListener(type, handle);
			}
		};

		jQuery.Event = function (src, props) {

			// Allow instantiation without the 'new' keyword
			if (!(this instanceof jQuery.Event)) {
				return new jQuery.Event(src, props);
			}

			// Event object
			if (src && src.type) {
				this.originalEvent = src;
				this.type = src.type;

				// Events bubbling up the document may have been marked as prevented
				// by a handler lower down the tree; reflect the correct value.
				this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ? returnTrue : returnFalse;

				// Create target properties
				// Support: Safari <=6 - 7 only
				// Target should not be a text node (trac-504, trac-13143)
				this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;

				this.currentTarget = src.currentTarget;
				this.relatedTarget = src.relatedTarget;

				// Event type
			} else {
				this.type = src;
			}

			// Put explicitly provided properties onto the event object
			if (props) {
				jQuery.extend(this, props);
			}

			// Create a timestamp if incoming event doesn't have one
			this.timeStamp = src && src.timeStamp || Date.now();

			// Mark it as fixed
			this[jQuery.expando] = true;
		};

		// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
		// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
		jQuery.Event.prototype = {
			constructor: jQuery.Event,
			isDefaultPrevented: returnFalse,
			isPropagationStopped: returnFalse,
			isImmediatePropagationStopped: returnFalse,
			isSimulated: false,

			preventDefault: function preventDefault() {
				var e = this.originalEvent;

				this.isDefaultPrevented = returnTrue;

				if (e && !this.isSimulated) {
					e.preventDefault();
				}
			},
			stopPropagation: function stopPropagation() {
				var e = this.originalEvent;

				this.isPropagationStopped = returnTrue;

				if (e && !this.isSimulated) {
					e.stopPropagation();
				}
			},
			stopImmediatePropagation: function stopImmediatePropagation() {
				var e = this.originalEvent;

				this.isImmediatePropagationStopped = returnTrue;

				if (e && !this.isSimulated) {
					e.stopImmediatePropagation();
				}

				this.stopPropagation();
			}
		};

		// Includes all common event props including KeyEvent and MouseEvent specific props
		jQuery.each({
			altKey: true,
			bubbles: true,
			cancelable: true,
			changedTouches: true,
			ctrlKey: true,
			detail: true,
			eventPhase: true,
			metaKey: true,
			pageX: true,
			pageY: true,
			shiftKey: true,
			view: true,
			"char": true,
			code: true,
			charCode: true,
			key: true,
			keyCode: true,
			button: true,
			buttons: true,
			clientX: true,
			clientY: true,
			offsetX: true,
			offsetY: true,
			pointerId: true,
			pointerType: true,
			screenX: true,
			screenY: true,
			targetTouches: true,
			toElement: true,
			touches: true,
			which: true
		}, jQuery.event.addProp);

		jQuery.each({ focus: "focusin", blur: "focusout" }, function (type, delegateType) {

			function focusMappedHandler(nativeEvent) {
				if (document.documentMode) {

					// Support: IE 11+
					// Attach a single focusin/focusout handler on the document while someone wants
					// focus/blur. This is because the former are synchronous in IE while the latter
					// are async. In other browsers, all those handlers are invoked synchronously.

					// `handle` from private data would already wrap the event, but we need
					// to change the `type` here.
					var handle = dataPriv.get(this, "handle"),
					    event = jQuery.event.fix(nativeEvent);
					event.type = nativeEvent.type === "focusin" ? "focus" : "blur";
					event.isSimulated = true;

					// First, handle focusin/focusout
					handle(nativeEvent);

					// ...then, handle focus/blur
					//
					// focus/blur don't bubble while focusin/focusout do; simulate the former by only
					// invoking the handler at the lower level.
					if (event.target === event.currentTarget) {

						// The setup part calls `leverageNative`, which, in turn, calls
						// `jQuery.event.add`, so event handle will already have been set
						// by this point.
						handle(event);
					}
				} else {

					// For non-IE browsers, attach a single capturing handler on the document
					// while someone wants focusin/focusout.
					jQuery.event.simulate(delegateType, nativeEvent.target, jQuery.event.fix(nativeEvent));
				}
			}

			jQuery.event.special[type] = {

				// Utilize native event if possible so blur/focus sequence is correct
				setup: function setup() {

					var attaches;

					// Claim the first handler
					// dataPriv.set( this, "focus", ... )
					// dataPriv.set( this, "blur", ... )
					leverageNative(this, type, true);

					if (document.documentMode) {

						// Support: IE 9 - 11+
						// We use the same native handler for focusin & focus (and focusout & blur)
						// so we need to coordinate setup & teardown parts between those events.
						// Use `delegateType` as the key as `type` is already used by `leverageNative`.
						attaches = dataPriv.get(this, delegateType);
						if (!attaches) {
							this.addEventListener(delegateType, focusMappedHandler);
						}
						dataPriv.set(this, delegateType, (attaches || 0) + 1);
					} else {

						// Return false to allow normal processing in the caller
						return false;
					}
				},
				trigger: function trigger() {

					// Force setup before trigger
					leverageNative(this, type);

					// Return non-false to allow normal event-path propagation
					return true;
				},

				teardown: function teardown() {
					var attaches;

					if (document.documentMode) {
						attaches = dataPriv.get(this, delegateType) - 1;
						if (!attaches) {
							this.removeEventListener(delegateType, focusMappedHandler);
							dataPriv.remove(this, delegateType);
						} else {
							dataPriv.set(this, delegateType, attaches);
						}
					} else {

						// Return false to indicate standard teardown should be applied
						return false;
					}
				},

				// Suppress native focus or blur if we're currently inside
				// a leveraged native-event stack
				_default: function _default(event) {
					return dataPriv.get(event.target, type);
				},

				delegateType: delegateType
			};

			// Support: Firefox <=44
			// Firefox doesn't have focus(in | out) events
			// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
			//
			// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
			// focus(in | out) events fire after focus & blur events,
			// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
			// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
			//
			// Support: IE 9 - 11+
			// To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,
			// attach a single handler for both events in IE.
			jQuery.event.special[delegateType] = {
				setup: function setup() {

					// Handle: regular nodes (via `this.ownerDocument`), window
					// (via `this.document`) & document (via `this`).
					var doc = this.ownerDocument || this.document || this,
					    dataHolder = document.documentMode ? this : doc,
					    attaches = dataPriv.get(dataHolder, delegateType);

					// Support: IE 9 - 11+
					// We use the same native handler for focusin & focus (and focusout & blur)
					// so we need to coordinate setup & teardown parts between those events.
					// Use `delegateType` as the key as `type` is already used by `leverageNative`.
					if (!attaches) {
						if (document.documentMode) {
							this.addEventListener(delegateType, focusMappedHandler);
						} else {
							doc.addEventListener(type, focusMappedHandler, true);
						}
					}
					dataPriv.set(dataHolder, delegateType, (attaches || 0) + 1);
				},
				teardown: function teardown() {
					var doc = this.ownerDocument || this.document || this,
					    dataHolder = document.documentMode ? this : doc,
					    attaches = dataPriv.get(dataHolder, delegateType) - 1;

					if (!attaches) {
						if (document.documentMode) {
							this.removeEventListener(delegateType, focusMappedHandler);
						} else {
							doc.removeEventListener(type, focusMappedHandler, true);
						}
						dataPriv.remove(dataHolder, delegateType);
					} else {
						dataPriv.set(dataHolder, delegateType, attaches);
					}
				}
			};
		});

		// Create mouseenter/leave events using mouseover/out and event-time checks
		// so that event delegation works in jQuery.
		// Do the same for pointerenter/pointerleave and pointerover/pointerout
		//
		// Support: Safari 7 only
		// Safari sends mouseenter too often; see:
		// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
		// for the description of the bug (it existed in older Chrome versions as well).
		jQuery.each({
			mouseenter: "mouseover",
			mouseleave: "mouseout",
			pointerenter: "pointerover",
			pointerleave: "pointerout"
		}, function (orig, fix) {
			jQuery.event.special[orig] = {
				delegateType: fix,
				bindType: fix,

				handle: function handle(event) {
					var ret,
					    target = this,
					    related = event.relatedTarget,
					    handleObj = event.handleObj;

					// For mouseenter/leave call the handler if related is outside the target.
					// NB: No relatedTarget if the mouse left/entered the browser window
					if (!related || related !== target && !jQuery.contains(target, related)) {
						event.type = handleObj.origType;
						ret = handleObj.handler.apply(this, arguments);
						event.type = fix;
					}
					return ret;
				}
			};
		});

		jQuery.fn.extend({

			on: function on(types, selector, data, fn) {
				return _on(this, types, selector, data, fn);
			},
			one: function one(types, selector, data, fn) {
				return _on(this, types, selector, data, fn, 1);
			},
			off: function off(types, selector, fn) {
				var handleObj, type;
				if (types && types.preventDefault && types.handleObj) {

					// ( event )  dispatched jQuery.Event
					handleObj = types.handleObj;
					jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
					return this;
				}
				if ((typeof types === "undefined" ? "undefined" : _typeof(types)) === "object") {

					// ( types-object [, selector] )
					for (type in types) {
						this.off(type, selector, types[type]);
					}
					return this;
				}
				if (selector === false || typeof selector === "function") {

					// ( types [, fn] )
					fn = selector;
					selector = undefined;
				}
				if (fn === false) {
					fn = returnFalse;
				}
				return this.each(function () {
					jQuery.event.remove(this, types, fn, selector);
				});
			}
		});

		var

		// Support: IE <=10 - 11, Edge 12 - 13 only
		// In IE/Edge using regex groups here causes severe slowdowns.
		// See https://connect.microsoft.com/IE/feedback/details/1736512/
		rnoInnerhtml = /<script|<style|<link/i,


		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		    rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

		// Prefer a tbody over its parent table for containing new rows
		function manipulationTarget(elem, content) {
			if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {

				return jQuery(elem).children("tbody")[0] || elem;
			}

			return elem;
		}

		// Replace/restore the type attribute of script elements for safe DOM manipulation
		function disableScript(elem) {
			elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
			return elem;
		}
		function restoreScript(elem) {
			if ((elem.type || "").slice(0, 5) === "true/") {
				elem.type = elem.type.slice(5);
			} else {
				elem.removeAttribute("type");
			}

			return elem;
		}

		function cloneCopyEvent(src, dest) {
			var i, l, type, pdataOld, udataOld, udataCur, events;

			if (dest.nodeType !== 1) {
				return;
			}

			// 1. Copy private data: events, handlers, etc.
			if (dataPriv.hasData(src)) {
				pdataOld = dataPriv.get(src);
				events = pdataOld.events;

				if (events) {
					dataPriv.remove(dest, "handle events");

					for (type in events) {
						for (i = 0, l = events[type].length; i < l; i++) {
							jQuery.event.add(dest, type, events[type][i]);
						}
					}
				}
			}

			// 2. Copy user data
			if (dataUser.hasData(src)) {
				udataOld = dataUser.access(src);
				udataCur = jQuery.extend({}, udataOld);

				dataUser.set(dest, udataCur);
			}
		}

		// Fix IE bugs, see support tests
		function fixInput(src, dest) {
			var nodeName = dest.nodeName.toLowerCase();

			// Fails to persist the checked state of a cloned checkbox or radio button.
			if (nodeName === "input" && rcheckableType.test(src.type)) {
				dest.checked = src.checked;

				// Fails to return the selected option to the default selected state when cloning options
			} else if (nodeName === "input" || nodeName === "textarea") {
				dest.defaultValue = src.defaultValue;
			}
		}

		function domManip(collection, args, callback, ignored) {

			// Flatten any nested arrays
			args = flat(args);

			var fragment,
			    first,
			    scripts,
			    hasScripts,
			    node,
			    doc,
			    i = 0,
			    l = collection.length,
			    iNoClone = l - 1,
			    value = args[0],
			    valueIsFunction = isFunction(value);

			// We can't cloneNode fragments that contain checked, in WebKit
			if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
				return collection.each(function (index) {
					var self = collection.eq(index);
					if (valueIsFunction) {
						args[0] = value.call(this, index, self.html());
					}
					domManip(self, args, callback, ignored);
				});
			}

			if (l) {
				fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
				first = fragment.firstChild;

				if (fragment.childNodes.length === 1) {
					fragment = first;
				}

				// Require either new content or an interest in ignored elements to invoke the callback
				if (first || ignored) {
					scripts = jQuery.map(getAll(fragment, "script"), disableScript);
					hasScripts = scripts.length;

					// Use the original fragment for the last item
					// instead of the first because it can end up
					// being emptied incorrectly in certain situations (trac-8070).
					for (; i < l; i++) {
						node = fragment;

						if (i !== iNoClone) {
							node = jQuery.clone(node, true, true);

							// Keep references to cloned scripts for later restoration
							if (hasScripts) {

								// Support: Android <=4.0 only, PhantomJS 1 only
								// push.apply(_, arraylike) throws on ancient WebKit
								jQuery.merge(scripts, getAll(node, "script"));
							}
						}

						callback.call(collection[i], node, i);
					}

					if (hasScripts) {
						doc = scripts[scripts.length - 1].ownerDocument;

						// Re-enable scripts
						jQuery.map(scripts, restoreScript);

						// Evaluate executable scripts on first document insertion
						for (i = 0; i < hasScripts; i++) {
							node = scripts[i];
							if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {

								if (node.src && (node.type || "").toLowerCase() !== "module") {

									// Optional AJAX dependency, but won't run scripts if not present
									if (jQuery._evalUrl && !node.noModule) {
										jQuery._evalUrl(node.src, {
											nonce: node.nonce || node.getAttribute("nonce")
										}, doc);
									}
								} else {

									// Unwrap a CDATA section containing script contents. This shouldn't be
									// needed as in XML documents they're already not visible when
									// inspecting element contents and in HTML documents they have no
									// meaning but we're preserving that logic for backwards compatibility.
									// This will be removed completely in 4.0. See gh-4904.
									DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
								}
							}
						}
					}
				}
			}

			return collection;
		}

		function _remove(elem, selector, keepData) {
			var node,
			    nodes = selector ? jQuery.filter(selector, elem) : elem,
			    i = 0;

			for (; (node = nodes[i]) != null; i++) {
				if (!keepData && node.nodeType === 1) {
					jQuery.cleanData(getAll(node));
				}

				if (node.parentNode) {
					if (keepData && isAttached(node)) {
						setGlobalEval(getAll(node, "script"));
					}
					node.parentNode.removeChild(node);
				}
			}

			return elem;
		}

		jQuery.extend({
			htmlPrefilter: function htmlPrefilter(html) {
				return html;
			},

			clone: function clone(elem, dataAndEvents, deepDataAndEvents) {
				var i,
				    l,
				    srcElements,
				    destElements,
				    clone = elem.cloneNode(true),
				    inPage = isAttached(elem);

				// Fix IE cloning issues
				if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {

					// We eschew jQuery#find here for performance reasons:
					// https://jsperf.com/getall-vs-sizzle/2
					destElements = getAll(clone);
					srcElements = getAll(elem);

					for (i = 0, l = srcElements.length; i < l; i++) {
						fixInput(srcElements[i], destElements[i]);
					}
				}

				// Copy the events from the original to the clone
				if (dataAndEvents) {
					if (deepDataAndEvents) {
						srcElements = srcElements || getAll(elem);
						destElements = destElements || getAll(clone);

						for (i = 0, l = srcElements.length; i < l; i++) {
							cloneCopyEvent(srcElements[i], destElements[i]);
						}
					} else {
						cloneCopyEvent(elem, clone);
					}
				}

				// Preserve script evaluation history
				destElements = getAll(clone, "script");
				if (destElements.length > 0) {
					setGlobalEval(destElements, !inPage && getAll(elem, "script"));
				}

				// Return the cloned set
				return clone;
			},

			cleanData: function cleanData(elems) {
				var data,
				    elem,
				    type,
				    special = jQuery.event.special,
				    i = 0;

				for (; (elem = elems[i]) !== undefined; i++) {
					if (acceptData(elem)) {
						if (data = elem[dataPriv.expando]) {
							if (data.events) {
								for (type in data.events) {
									if (special[type]) {
										jQuery.event.remove(elem, type);

										// This is a shortcut to avoid jQuery.event.remove's overhead
									} else {
										jQuery.removeEvent(elem, type, data.handle);
									}
								}
							}

							// Support: Chrome <=35 - 45+
							// Assign undefined instead of using delete, see Data#remove
							elem[dataPriv.expando] = undefined;
						}
						if (elem[dataUser.expando]) {

							// Support: Chrome <=35 - 45+
							// Assign undefined instead of using delete, see Data#remove
							elem[dataUser.expando] = undefined;
						}
					}
				}
			}
		});

		jQuery.fn.extend({
			detach: function detach(selector) {
				return _remove(this, selector, true);
			},

			remove: function remove(selector) {
				return _remove(this, selector);
			},

			text: function text(value) {
				return access(this, function (value) {
					return value === undefined ? jQuery.text(this) : this.empty().each(function () {
						if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
							this.textContent = value;
						}
					});
				}, null, value, arguments.length);
			},

			append: function append() {
				return domManip(this, arguments, function (elem) {
					if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
						var target = manipulationTarget(this, elem);
						target.appendChild(elem);
					}
				});
			},

			prepend: function prepend() {
				return domManip(this, arguments, function (elem) {
					if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
						var target = manipulationTarget(this, elem);
						target.insertBefore(elem, target.firstChild);
					}
				});
			},

			before: function before() {
				return domManip(this, arguments, function (elem) {
					if (this.parentNode) {
						this.parentNode.insertBefore(elem, this);
					}
				});
			},

			after: function after() {
				return domManip(this, arguments, function (elem) {
					if (this.parentNode) {
						this.parentNode.insertBefore(elem, this.nextSibling);
					}
				});
			},

			empty: function empty() {
				var elem,
				    i = 0;

				for (; (elem = this[i]) != null; i++) {
					if (elem.nodeType === 1) {

						// Prevent memory leaks
						jQuery.cleanData(getAll(elem, false));

						// Remove any remaining nodes
						elem.textContent = "";
					}
				}

				return this;
			},

			clone: function clone(dataAndEvents, deepDataAndEvents) {
				dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
				deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

				return this.map(function () {
					return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
				});
			},

			html: function html(value) {
				return access(this, function (value) {
					var elem = this[0] || {},
					    i = 0,
					    l = this.length;

					if (value === undefined && elem.nodeType === 1) {
						return elem.innerHTML;
					}

					// See if we can take a shortcut and just use innerHTML
					if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {

						value = jQuery.htmlPrefilter(value);

						try {
							for (; i < l; i++) {
								elem = this[i] || {};

								// Remove element nodes and prevent memory leaks
								if (elem.nodeType === 1) {
									jQuery.cleanData(getAll(elem, false));
									elem.innerHTML = value;
								}
							}

							elem = 0;

							// If using innerHTML throws an exception, use the fallback method
						} catch (e) {}
					}

					if (elem) {
						this.empty().append(value);
					}
				}, null, value, arguments.length);
			},

			replaceWith: function replaceWith() {
				var ignored = [];

				// Make the changes, replacing each non-ignored context element with the new content
				return domManip(this, arguments, function (elem) {
					var parent = this.parentNode;

					if (jQuery.inArray(this, ignored) < 0) {
						jQuery.cleanData(getAll(this));
						if (parent) {
							parent.replaceChild(elem, this);
						}
					}

					// Force callback invocation
				}, ignored);
			}
		});

		jQuery.each({
			appendTo: "append",
			prependTo: "prepend",
			insertBefore: "before",
			insertAfter: "after",
			replaceAll: "replaceWith"
		}, function (name, original) {
			jQuery.fn[name] = function (selector) {
				var elems,
				    ret = [],
				    insert = jQuery(selector),
				    last = insert.length - 1,
				    i = 0;

				for (; i <= last; i++) {
					elems = i === last ? this : this.clone(true);
					jQuery(insert[i])[original](elems);

					// Support: Android <=4.0 only, PhantomJS 1 only
					// .get() because push.apply(_, arraylike) throws on ancient WebKit
					push.apply(ret, elems.get());
				}

				return this.pushStack(ret);
			};
		});
		var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

		var rcustomProp = /^--/;

		var getStyles = function getStyles(elem) {

			// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			var view = elem.ownerDocument.defaultView;

			if (!view || !view.opener) {
				view = window;
			}

			return view.getComputedStyle(elem);
		};

		var swap = function swap(elem, options, callback) {
			var ret,
			    name,
			    old = {};

			// Remember the old values, and insert the new ones
			for (name in options) {
				old[name] = elem.style[name];
				elem.style[name] = options[name];
			}

			ret = callback.call(elem);

			// Revert the old values
			for (name in options) {
				elem.style[name] = old[name];
			}

			return ret;
		};

		var rboxStyle = new RegExp(cssExpand.join("|"), "i");

		(function () {

			// Executing both pixelPosition & boxSizingReliable tests require only one layout
			// so they're executed at the same time to save the second computation.
			function computeStyleTests() {

				// This is a singleton, we need to execute it only once
				if (!div) {
					return;
				}

				container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";
				div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";
				documentElement.appendChild(container).appendChild(div);

				var divStyle = window.getComputedStyle(div);
				pixelPositionVal = divStyle.top !== "1%";

				// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
				reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;

				// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
				// Some styles come back with percentage values, even though they shouldn't
				div.style.right = "60%";
				pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;

				// Support: IE 9 - 11 only
				// Detect misreporting of content dimensions for box-sizing:border-box elements
				boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;

				// Support: IE 9 only
				// Detect overflow:scroll screwiness (gh-3699)
				// Support: Chrome <=64
				// Don't get tricked when zoom affects offsetWidth (gh-4029)
				div.style.position = "absolute";
				scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;

				documentElement.removeChild(container);

				// Nullify the div so it wouldn't be stored in the memory and
				// it will also be a sign that checks already performed
				div = null;
			}

			function roundPixelMeasures(measure) {
				return Math.round(parseFloat(measure));
			}

			var pixelPositionVal,
			    boxSizingReliableVal,
			    scrollboxSizeVal,
			    pixelBoxStylesVal,
			    reliableTrDimensionsVal,
			    reliableMarginLeftVal,
			    container = document.createElement("div"),
			    div = document.createElement("div");

			// Finish early in limited (non-browser) environments
			if (!div.style) {
				return;
			}

			// Support: IE <=9 - 11 only
			// Style of cloned element affects source element cloned (trac-8908)
			div.style.backgroundClip = "content-box";
			div.cloneNode(true).style.backgroundClip = "";
			support.clearCloneStyle = div.style.backgroundClip === "content-box";

			jQuery.extend(support, {
				boxSizingReliable: function boxSizingReliable() {
					computeStyleTests();
					return boxSizingReliableVal;
				},
				pixelBoxStyles: function pixelBoxStyles() {
					computeStyleTests();
					return pixelBoxStylesVal;
				},
				pixelPosition: function pixelPosition() {
					computeStyleTests();
					return pixelPositionVal;
				},
				reliableMarginLeft: function reliableMarginLeft() {
					computeStyleTests();
					return reliableMarginLeftVal;
				},
				scrollboxSize: function scrollboxSize() {
					computeStyleTests();
					return scrollboxSizeVal;
				},

				// Support: IE 9 - 11+, Edge 15 - 18+
				// IE/Edge misreport `getComputedStyle` of table rows with width/height
				// set in CSS while `offset*` properties report correct values.
				// Behavior in IE 9 is more subtle than in newer versions & it passes
				// some versions of this test; make sure not to make it pass there!
				//
				// Support: Firefox 70+
				// Only Firefox includes border widths
				// in computed dimensions. (gh-4529)
				reliableTrDimensions: function reliableTrDimensions() {
					var table, tr, trChild, trStyle;
					if (reliableTrDimensionsVal == null) {
						table = document.createElement("table");
						tr = document.createElement("tr");
						trChild = document.createElement("div");

						table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
						tr.style.cssText = "box-sizing:content-box;border:1px solid";

						// Support: Chrome 86+
						// Height set through cssText does not get applied.
						// Computed height then comes back as 0.
						tr.style.height = "1px";
						trChild.style.height = "9px";

						// Support: Android 8 Chrome 86+
						// In our bodyBackground.html iframe,
						// display for all div elements is set to "inline",
						// which causes a problem only in Android 8 Chrome 86.
						// Ensuring the div is `display: block`
						// gets around this issue.
						trChild.style.display = "block";

						documentElement.appendChild(table).appendChild(tr).appendChild(trChild);

						trStyle = window.getComputedStyle(tr);
						reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;

						documentElement.removeChild(table);
					}
					return reliableTrDimensionsVal;
				}
			});
		})();

		function curCSS(elem, name, computed) {
			var width,
			    minWidth,
			    maxWidth,
			    ret,
			    isCustomProp = rcustomProp.test(name),


			// Support: Firefox 51+
			// Retrieving style before computed somehow
			// fixes an issue with getting wrong values
			// on detached elements
			style = elem.style;

			computed = computed || getStyles(elem);

			// getPropertyValue is needed for:
			//   .css('filter') (IE 9 only, trac-12537)
			//   .css('--customProperty) (gh-3144)
			if (computed) {

				// Support: IE <=9 - 11+
				// IE only supports `"float"` in `getPropertyValue`; in computed styles
				// it's only available as `"cssFloat"`. We no longer modify properties
				// sent to `.css()` apart from camelCasing, so we need to check both.
				// Normally, this would create difference in behavior: if
				// `getPropertyValue` returns an empty string, the value returned
				// by `.css()` would be `undefined`. This is usually the case for
				// disconnected elements. However, in IE even disconnected elements
				// with no styles return `"none"` for `getPropertyValue( "float" )`
				ret = computed.getPropertyValue(name) || computed[name];

				if (isCustomProp && ret) {

					// Support: Firefox 105+, Chrome <=105+
					// Spec requires trimming whitespace for custom properties (gh-4926).
					// Firefox only trims leading whitespace. Chrome just collapses
					// both leading & trailing whitespace to a single space.
					//
					// Fall back to `undefined` if empty string returned.
					// This collapses a missing definition with property defined
					// and set to an empty string but there's no standard API
					// allowing us to differentiate them without a performance penalty
					// and returning `undefined` aligns with older jQuery.
					//
					// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED
					// as whitespace while CSS does not, but this is not a problem
					// because CSS preprocessing replaces them with U+000A LINE FEED
					// (which *is* CSS whitespace)
					// https://www.w3.org/TR/css-syntax-3/#input-preprocessing
					ret = ret.replace(rtrimCSS, "$1") || undefined;
				}

				if (ret === "" && !isAttached(elem)) {
					ret = jQuery.style(elem, name);
				}

				// A tribute to the "awesome hack by Dean Edwards"
				// Android Browser returns percentage for some values,
				// but width seems to be reliably pixels.
				// This is against the CSSOM draft spec:
				// https://drafts.csswg.org/cssom/#resolved-values
				if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {

					// Remember the original values
					width = style.width;
					minWidth = style.minWidth;
					maxWidth = style.maxWidth;

					// Put in the new values to get a computed value out
					style.minWidth = style.maxWidth = style.width = ret;
					ret = computed.width;

					// Revert the changed values
					style.width = width;
					style.minWidth = minWidth;
					style.maxWidth = maxWidth;
				}
			}

			return ret !== undefined ?

			// Support: IE <=9 - 11 only
			// IE returns zIndex value as an integer.
			ret + "" : ret;
		}

		function addGetHookIf(conditionFn, hookFn) {

			// Define the hook, we'll check on the first run if it's really needed.
			return {
				get: function get() {
					if (conditionFn()) {

						// Hook not needed (or it's not possible to use it due
						// to missing dependency), remove it.
						delete this.get;
						return;
					}

					// Hook needed; redefine it so that the support test is not executed again.
					return (this.get = hookFn).apply(this, arguments);
				}
			};
		}

		var cssPrefixes = ["Webkit", "Moz", "ms"],
		    emptyStyle = document.createElement("div").style,
		    vendorProps = {};

		// Return a vendor-prefixed property or undefined
		function vendorPropName(name) {

			// Check for vendor prefixed names
			var capName = name[0].toUpperCase() + name.slice(1),
			    i = cssPrefixes.length;

			while (i--) {
				name = cssPrefixes[i] + capName;
				if (name in emptyStyle) {
					return name;
				}
			}
		}

		// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
		function finalPropName(name) {
			var final = jQuery.cssProps[name] || vendorProps[name];

			if (final) {
				return final;
			}
			if (name in emptyStyle) {
				return name;
			}
			return vendorProps[name] = vendorPropName(name) || name;
		}

		var

		// Swappable if display is none or starts with table
		// except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		    cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		    cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		};

		function setPositiveNumber(_elem, value, subtract) {

			// Any relative (+/-) values have already been
			// normalized at this point
			var matches = rcssNum.exec(value);
			return matches ?

			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
		}

		function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
			var i = dimension === "width" ? 1 : 0,
			    extra = 0,
			    delta = 0,
			    marginDelta = 0;

			// Adjustment may not be necessary
			if (box === (isBorderBox ? "border" : "content")) {
				return 0;
			}

			for (; i < 4; i += 2) {

				// Both box models exclude margin
				// Count margin delta separately to only add it after scroll gutter adjustment.
				// This is needed to make negative margins work with `outerHeight( true )` (gh-3982).
				if (box === "margin") {
					marginDelta += jQuery.css(elem, box + cssExpand[i], true, styles);
				}

				// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
				if (!isBorderBox) {

					// Add padding
					delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles);

					// For "border" or "margin", add border
					if (box !== "padding") {
						delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);

						// But still keep track of it otherwise
					} else {
						extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
					}

					// If we get here with a border-box (content + padding + border), we're seeking "content" or
					// "padding" or "margin"
				} else {

					// For "content", subtract padding
					if (box === "content") {
						delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
					}

					// For "content" or "padding", subtract border
					if (box !== "margin") {
						delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
					}
				}
			}

			// Account for positive content-box scroll gutter when requested by providing computedVal
			if (!isBorderBox && computedVal >= 0) {

				// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
				// Assuming integer scroll gutter, subtract the rest and round down
				delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5

				// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
				// Use an explicit zero to avoid NaN (gh-3964)
				)) || 0;
			}

			return delta + marginDelta;
		}

		function getWidthOrHeight(elem, dimension, extra) {

			// Start with computed style
			var styles = getStyles(elem),


			// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
			// Fake content-box until we know it's needed to know the true value.
			boxSizingNeeded = !support.boxSizingReliable() || extra,
			    isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
			    valueIsBorderBox = isBorderBox,
			    val = curCSS(elem, dimension, styles),
			    offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);

			// Support: Firefox <=54
			// Return a confounding non-pixel value or feign ignorance, as appropriate.
			if (rnumnonpx.test(val)) {
				if (!extra) {
					return val;
				}
				val = "auto";
			}

			// Support: IE 9 - 11 only
			// Use offsetWidth/offsetHeight for when box sizing is unreliable.
			// In those cases, the computed value can be trusted to be border-box.
			if ((!support.boxSizingReliable() && isBorderBox ||

			// Support: IE 10 - 11+, Edge 15 - 18+
			// IE/Edge misreport `getComputedStyle` of table rows with width/height
			// set in CSS while `offset*` properties report correct values.
			// Interestingly, in some cases IE 9 doesn't suffer from this issue.
			!support.reliableTrDimensions() && nodeName(elem, "tr") ||

			// Fall back to offsetWidth/offsetHeight when value is "auto"
			// This happens for inline elements with no explicit setting (gh-3571)
			val === "auto" ||

			// Support: Android <=4.1 - 4.3 only
			// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
			!parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") &&

			// Make sure the element is visible & connected
			elem.getClientRects().length) {

				isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";

				// Where available, offsetWidth/offsetHeight approximate border box dimensions.
				// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
				// retrieved value as a content box dimension.
				valueIsBorderBox = offsetProp in elem;
				if (valueIsBorderBox) {
					val = elem[offsetProp];
				}
			}

			// Normalize "" and auto
			val = parseFloat(val) || 0;

			// Adjust for the element's box model
			return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val) + "px";
		}

		jQuery.extend({

			// Add in style property hooks for overriding the default
			// behavior of getting and setting a style property
			cssHooks: {
				opacity: {
					get: function get(elem, computed) {
						if (computed) {

							// We should always get a number back from opacity
							var ret = curCSS(elem, "opacity");
							return ret === "" ? "1" : ret;
						}
					}
				}
			},

			// Don't automatically add "px" to these possibly-unitless properties
			cssNumber: {
				animationIterationCount: true,
				aspectRatio: true,
				borderImageSlice: true,
				columnCount: true,
				flexGrow: true,
				flexShrink: true,
				fontWeight: true,
				gridArea: true,
				gridColumn: true,
				gridColumnEnd: true,
				gridColumnStart: true,
				gridRow: true,
				gridRowEnd: true,
				gridRowStart: true,
				lineHeight: true,
				opacity: true,
				order: true,
				orphans: true,
				scale: true,
				widows: true,
				zIndex: true,
				zoom: true,

				// SVG-related
				fillOpacity: true,
				floodOpacity: true,
				stopOpacity: true,
				strokeMiterlimit: true,
				strokeOpacity: true
			},

			// Add in properties whose names you wish to fix before
			// setting or getting the value
			cssProps: {},

			// Get and set the style property on a DOM Node
			style: function style(elem, name, value, extra) {

				// Don't set styles on text and comment nodes
				if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
					return;
				}

				// Make sure that we're working with the right name
				var ret,
				    type,
				    hooks,
				    origName = camelCase(name),
				    isCustomProp = rcustomProp.test(name),
				    style = elem.style;

				// Make sure that we're working with the right name. We don't
				// want to query the value if it is a CSS custom property
				// since they are user-defined.
				if (!isCustomProp) {
					name = finalPropName(origName);
				}

				// Gets hook for the prefixed version, then unprefixed version
				hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

				// Check if we're setting a value
				if (value !== undefined) {
					type = typeof value === "undefined" ? "undefined" : _typeof(value);

					// Convert "+=" or "-=" to relative numbers (trac-7345)
					if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
						value = adjustCSS(elem, name, ret);

						// Fixes bug trac-9237
						type = "number";
					}

					// Make sure that null and NaN values aren't set (trac-7116)
					if (value == null || value !== value) {
						return;
					}

					// If a number was passed in, add the unit (except for certain CSS properties)
					// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
					// "px" to a few hardcoded values.
					if (type === "number" && !isCustomProp) {
						value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
					}

					// background-* props affect original clone's values
					if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
						style[name] = "inherit";
					}

					// If a hook was provided, use that value, otherwise just set the specified value
					if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {

						if (isCustomProp) {
							style.setProperty(name, value);
						} else {
							style[name] = value;
						}
					}
				} else {

					// If a hook was provided get the non-computed value from there
					if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {

						return ret;
					}

					// Otherwise just get the value from the style object
					return style[name];
				}
			},

			css: function css(elem, name, extra, styles) {
				var val,
				    num,
				    hooks,
				    origName = camelCase(name),
				    isCustomProp = rcustomProp.test(name);

				// Make sure that we're working with the right name. We don't
				// want to modify the value if it is a CSS custom property
				// since they are user-defined.
				if (!isCustomProp) {
					name = finalPropName(origName);
				}

				// Try prefixed name followed by the unprefixed name
				hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

				// If a hook was provided get the computed value from there
				if (hooks && "get" in hooks) {
					val = hooks.get(elem, true, extra);
				}

				// Otherwise, if a way to get the computed value exists, use that
				if (val === undefined) {
					val = curCSS(elem, name, styles);
				}

				// Convert "normal" to computed value
				if (val === "normal" && name in cssNormalTransform) {
					val = cssNormalTransform[name];
				}

				// Make numeric if forced or a qualifier was provided and val looks numeric
				if (extra === "" || extra) {
					num = parseFloat(val);
					return extra === true || isFinite(num) ? num || 0 : val;
				}

				return val;
			}
		});

		jQuery.each(["height", "width"], function (_i, dimension) {
			jQuery.cssHooks[dimension] = {
				get: function get(elem, computed, extra) {
					if (computed) {

						// Certain elements can have dimension info if we invisibly show them
						// but it must have a current display style that would benefit
						return rdisplayswap.test(jQuery.css(elem, "display")) && (

						// Support: Safari 8+
						// Table columns in Safari have non-zero offsetWidth & zero
						// getBoundingClientRect().width unless display is changed.
						// Support: IE <=11 only
						// Running getBoundingClientRect on a disconnected node
						// in IE throws an error.
						!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
							return getWidthOrHeight(elem, dimension, extra);
						}) : getWidthOrHeight(elem, dimension, extra);
					}
				},

				set: function set(elem, value, extra) {
					var matches,
					    styles = getStyles(elem),


					// Only read styles.position if the test has a chance to fail
					// to avoid forcing a reflow.
					scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute",


					// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
					boxSizingNeeded = scrollboxSizeBuggy || extra,
					    isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
					    subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;

					// Account for unreliable border-box dimensions by comparing offset* to computed and
					// faking a content-box to get border and padding (gh-3699)
					if (isBorderBox && scrollboxSizeBuggy) {
						subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
					}

					// Convert to pixels if value adjustment is needed
					if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {

						elem.style[dimension] = value;
						value = jQuery.css(elem, dimension);
					}

					return setPositiveNumber(elem, value, subtract);
				}
			};
		});

		jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
			if (computed) {
				return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {
					return elem.getBoundingClientRect().left;
				})) + "px";
			}
		});

		// These hooks are used by animate to expand properties
		jQuery.each({
			margin: "",
			padding: "",
			border: "Width"
		}, function (prefix, suffix) {
			jQuery.cssHooks[prefix + suffix] = {
				expand: function expand(value) {
					var i = 0,
					    expanded = {},


					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split(" ") : [value];

					for (; i < 4; i++) {
						expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
					}

					return expanded;
				}
			};

			if (prefix !== "margin") {
				jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
			}
		});

		jQuery.fn.extend({
			css: function css(name, value) {
				return access(this, function (elem, name, value) {
					var styles,
					    len,
					    map = {},
					    i = 0;

					if (Array.isArray(name)) {
						styles = getStyles(elem);
						len = name.length;

						for (; i < len; i++) {
							map[name[i]] = jQuery.css(elem, name[i], false, styles);
						}

						return map;
					}

					return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
				}, name, value, arguments.length > 1);
			}
		});

		function Tween(elem, options, prop, end, easing) {
			return new Tween.prototype.init(elem, options, prop, end, easing);
		}
		jQuery.Tween = Tween;

		Tween.prototype = {
			constructor: Tween,
			init: function init(elem, options, prop, end, easing, unit) {
				this.elem = elem;
				this.prop = prop;
				this.easing = easing || jQuery.easing._default;
				this.options = options;
				this.start = this.now = this.cur();
				this.end = end;
				this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
			},
			cur: function cur() {
				var hooks = Tween.propHooks[this.prop];

				return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
			},
			run: function run(percent) {
				var eased,
				    hooks = Tween.propHooks[this.prop];

				if (this.options.duration) {
					this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
				} else {
					this.pos = eased = percent;
				}
				this.now = (this.end - this.start) * eased + this.start;

				if (this.options.step) {
					this.options.step.call(this.elem, this.now, this);
				}

				if (hooks && hooks.set) {
					hooks.set(this);
				} else {
					Tween.propHooks._default.set(this);
				}
				return this;
			}
		};

		Tween.prototype.init.prototype = Tween.prototype;

		Tween.propHooks = {
			_default: {
				get: function get(tween) {
					var result;

					// Use a property on the element directly when it is not a DOM element,
					// or when there is no matching style property that exists.
					if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
						return tween.elem[tween.prop];
					}

					// Passing an empty string as a 3rd parameter to .css will automatically
					// attempt a parseFloat and fallback to a string if the parse fails.
					// Simple values such as "10px" are parsed to Float;
					// complex values such as "rotate(1rad)" are returned as-is.
					result = jQuery.css(tween.elem, tween.prop, "");

					// Empty strings, null, undefined and "auto" are converted to 0.
					return !result || result === "auto" ? 0 : result;
				},
				set: function set(tween) {

					// Use step hook for back compat.
					// Use cssHook if its there.
					// Use .style if available and use plain properties where available.
					if (jQuery.fx.step[tween.prop]) {
						jQuery.fx.step[tween.prop](tween);
					} else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
						jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
					} else {
						tween.elem[tween.prop] = tween.now;
					}
				}
			}
		};

		// Support: IE <=9 only
		// Panic based approach to setting things on disconnected nodes
		Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
			set: function set(tween) {
				if (tween.elem.nodeType && tween.elem.parentNode) {
					tween.elem[tween.prop] = tween.now;
				}
			}
		};

		jQuery.easing = {
			linear: function linear(p) {
				return p;
			},
			swing: function swing(p) {
				return 0.5 - Math.cos(p * Math.PI) / 2;
			},
			_default: "swing"
		};

		jQuery.fx = Tween.prototype.init;

		// Back compat <1.8 extension point
		jQuery.fx.step = {};

		var fxNow,
		    inProgress,
		    rfxtypes = /^(?:toggle|show|hide)$/,
		    rrun = /queueHooks$/;

		function schedule() {
			if (inProgress) {
				if (document.hidden === false && window.requestAnimationFrame) {
					window.requestAnimationFrame(schedule);
				} else {
					window.setTimeout(schedule, jQuery.fx.interval);
				}

				jQuery.fx.tick();
			}
		}

		// Animations created synchronously will run synchronously
		function createFxNow() {
			window.setTimeout(function () {
				fxNow = undefined;
			});
			return fxNow = Date.now();
		}

		// Generate parameters to create a standard animation
		function genFx(type, includeWidth) {
			var which,
			    i = 0,
			    attrs = { height: type };

			// If we include width, step value is 1 to do all cssExpand values,
			// otherwise step value is 2 to skip over Left and Right
			includeWidth = includeWidth ? 1 : 0;
			for (; i < 4; i += 2 - includeWidth) {
				which = cssExpand[i];
				attrs["margin" + which] = attrs["padding" + which] = type;
			}

			if (includeWidth) {
				attrs.opacity = attrs.width = type;
			}

			return attrs;
		}

		function createTween(value, prop, animation) {
			var tween,
			    collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
			    index = 0,
			    length = collection.length;
			for (; index < length; index++) {
				if (tween = collection[index].call(animation, prop, value)) {

					// We're done with this property
					return tween;
				}
			}
		}

		function defaultPrefilter(elem, props, opts) {
			var prop,
			    value,
			    toggle,
			    hooks,
			    oldfire,
			    propTween,
			    restoreDisplay,
			    display,
			    isBox = "width" in props || "height" in props,
			    anim = this,
			    orig = {},
			    style = elem.style,
			    hidden = elem.nodeType && isHiddenWithinTree(elem),
			    dataShow = dataPriv.get(elem, "fxshow");

			// Queue-skipping animations hijack the fx hooks
			if (!opts.queue) {
				hooks = jQuery._queueHooks(elem, "fx");
				if (hooks.unqueued == null) {
					hooks.unqueued = 0;
					oldfire = hooks.empty.fire;
					hooks.empty.fire = function () {
						if (!hooks.unqueued) {
							oldfire();
						}
					};
				}
				hooks.unqueued++;

				anim.always(function () {

					// Ensure the complete handler is called before this completes
					anim.always(function () {
						hooks.unqueued--;
						if (!jQuery.queue(elem, "fx").length) {
							hooks.empty.fire();
						}
					});
				});
			}

			// Detect show/hide animations
			for (prop in props) {
				value = props[prop];
				if (rfxtypes.test(value)) {
					delete props[prop];
					toggle = toggle || value === "toggle";
					if (value === (hidden ? "hide" : "show")) {

						// Pretend to be hidden if this is a "show" and
						// there is still data from a stopped show/hide
						if (value === "show" && dataShow && dataShow[prop] !== undefined) {
							hidden = true;

							// Ignore all other no-op show/hide data
						} else {
							continue;
						}
					}
					orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
				}
			}

			// Bail out if this is a no-op like .hide().hide()
			propTween = !jQuery.isEmptyObject(props);
			if (!propTween && jQuery.isEmptyObject(orig)) {
				return;
			}

			// Restrict "overflow" and "display" styles during box animations
			if (isBox && elem.nodeType === 1) {

				// Support: IE <=9 - 11, Edge 12 - 15
				// Record all 3 overflow attributes because IE does not infer the shorthand
				// from identically-valued overflowX and overflowY and Edge just mirrors
				// the overflowX value there.
				opts.overflow = [style.overflow, style.overflowX, style.overflowY];

				// Identify a display type, preferring old show/hide data over the CSS cascade
				restoreDisplay = dataShow && dataShow.display;
				if (restoreDisplay == null) {
					restoreDisplay = dataPriv.get(elem, "display");
				}
				display = jQuery.css(elem, "display");
				if (display === "none") {
					if (restoreDisplay) {
						display = restoreDisplay;
					} else {

						// Get nonempty value(s) by temporarily forcing visibility
						showHide([elem], true);
						restoreDisplay = elem.style.display || restoreDisplay;
						display = jQuery.css(elem, "display");
						showHide([elem]);
					}
				}

				// Animate inline elements as inline-block
				if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
					if (jQuery.css(elem, "float") === "none") {

						// Restore the original display value at the end of pure show/hide animations
						if (!propTween) {
							anim.done(function () {
								style.display = restoreDisplay;
							});
							if (restoreDisplay == null) {
								display = style.display;
								restoreDisplay = display === "none" ? "" : display;
							}
						}
						style.display = "inline-block";
					}
				}
			}

			if (opts.overflow) {
				style.overflow = "hidden";
				anim.always(function () {
					style.overflow = opts.overflow[0];
					style.overflowX = opts.overflow[1];
					style.overflowY = opts.overflow[2];
				});
			}

			// Implement show/hide animations
			propTween = false;
			for (prop in orig) {

				// General show/hide setup for this element animation
				if (!propTween) {
					if (dataShow) {
						if ("hidden" in dataShow) {
							hidden = dataShow.hidden;
						}
					} else {
						dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay });
					}

					// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
					if (toggle) {
						dataShow.hidden = !hidden;
					}

					// Show elements before animating them
					if (hidden) {
						showHide([elem], true);
					}

					/* eslint-disable no-loop-func */

					anim.done(function () {

						/* eslint-enable no-loop-func */

						// The final step of a "hide" animation is actually hiding the element
						if (!hidden) {
							showHide([elem]);
						}
						dataPriv.remove(elem, "fxshow");
						for (prop in orig) {
							jQuery.style(elem, prop, orig[prop]);
						}
					});
				}

				// Per-property setup
				propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
				if (!(prop in dataShow)) {
					dataShow[prop] = propTween.start;
					if (hidden) {
						propTween.end = propTween.start;
						propTween.start = 0;
					}
				}
			}
		}

		function propFilter(props, specialEasing) {
			var index, name, easing, value, hooks;

			// camelCase, specialEasing and expand cssHook pass
			for (index in props) {
				name = camelCase(index);
				easing = specialEasing[name];
				value = props[index];
				if (Array.isArray(value)) {
					easing = value[1];
					value = props[index] = value[0];
				}

				if (index !== name) {
					props[name] = value;
					delete props[index];
				}

				hooks = jQuery.cssHooks[name];
				if (hooks && "expand" in hooks) {
					value = hooks.expand(value);
					delete props[name];

					// Not quite $.extend, this won't overwrite existing keys.
					// Reusing 'index' because we have the correct "name"
					for (index in value) {
						if (!(index in props)) {
							props[index] = value[index];
							specialEasing[index] = easing;
						}
					}
				} else {
					specialEasing[name] = easing;
				}
			}
		}

		function Animation(elem, properties, options) {
			var result,
			    stopped,
			    index = 0,
			    length = Animation.prefilters.length,
			    deferred = jQuery.Deferred().always(function () {

				// Don't match elem in the :animated selector
				delete tick.elem;
			}),
			    tick = function tick() {
				if (stopped) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
				    remaining = Math.max(0, animation.startTime + animation.duration - currentTime),


				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)
				temp = remaining / animation.duration || 0,
				    percent = 1 - temp,
				    index = 0,
				    length = animation.tweens.length;

				for (; index < length; index++) {
					animation.tweens[index].run(percent);
				}

				deferred.notifyWith(elem, [animation, percent, remaining]);

				// If there's more to do, yield
				if (percent < 1 && length) {
					return remaining;
				}

				// If this was an empty animation, synthesize a final progress notification
				if (!length) {
					deferred.notifyWith(elem, [animation, 1, 0]);
				}

				// Resolve the animation and report its conclusion
				deferred.resolveWith(elem, [animation]);
				return false;
			},
			    animation = deferred.promise({
				elem: elem,
				props: jQuery.extend({}, properties),
				opts: jQuery.extend(true, {
					specialEasing: {},
					easing: jQuery.easing._default
				}, options),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function createTween(prop, end) {
					var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
					animation.tweens.push(tween);
					return tween;
				},
				stop: function stop(gotoEnd) {
					var index = 0,


					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
					if (stopped) {
						return this;
					}
					stopped = true;
					for (; index < length; index++) {
						animation.tweens[index].run(1);
					}

					// Resolve when we played the last frame; otherwise, reject
					if (gotoEnd) {
						deferred.notifyWith(elem, [animation, 1, 0]);
						deferred.resolveWith(elem, [animation, gotoEnd]);
					} else {
						deferred.rejectWith(elem, [animation, gotoEnd]);
					}
					return this;
				}
			}),
			    props = animation.props;

			propFilter(props, animation.opts.specialEasing);

			for (; index < length; index++) {
				result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
				if (result) {
					if (isFunction(result.stop)) {
						jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
					}
					return result;
				}
			}

			jQuery.map(props, createTween, animation);

			if (isFunction(animation.opts.start)) {
				animation.opts.start.call(elem, animation);
			}

			// Attach callbacks from options
			animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);

			jQuery.fx.timer(jQuery.extend(tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			}));

			return animation;
		}

		jQuery.Animation = jQuery.extend(Animation, {

			tweeners: {
				"*": [function (prop, value) {
					var tween = this.createTween(prop, value);
					adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
					return tween;
				}]
			},

			tweener: function tweener(props, callback) {
				if (isFunction(props)) {
					callback = props;
					props = ["*"];
				} else {
					props = props.match(rnothtmlwhite);
				}

				var prop,
				    index = 0,
				    length = props.length;

				for (; index < length; index++) {
					prop = props[index];
					Animation.tweeners[prop] = Animation.tweeners[prop] || [];
					Animation.tweeners[prop].unshift(callback);
				}
			},

			prefilters: [defaultPrefilter],

			prefilter: function prefilter(callback, prepend) {
				if (prepend) {
					Animation.prefilters.unshift(callback);
				} else {
					Animation.prefilters.push(callback);
				}
			}
		});

		jQuery.speed = function (speed, easing, fn) {
			var opt = speed && (typeof speed === "undefined" ? "undefined" : _typeof(speed)) === "object" ? jQuery.extend({}, speed) : {
				complete: fn || !fn && easing || isFunction(speed) && speed,
				duration: speed,
				easing: fn && easing || easing && !isFunction(easing) && easing
			};

			// Go to the end state if fx are off
			if (jQuery.fx.off) {
				opt.duration = 0;
			} else {
				if (typeof opt.duration !== "number") {
					if (opt.duration in jQuery.fx.speeds) {
						opt.duration = jQuery.fx.speeds[opt.duration];
					} else {
						opt.duration = jQuery.fx.speeds._default;
					}
				}
			}

			// Normalize opt.queue - true/undefined/null -> "fx"
			if (opt.queue == null || opt.queue === true) {
				opt.queue = "fx";
			}

			// Queueing
			opt.old = opt.complete;

			opt.complete = function () {
				if (isFunction(opt.old)) {
					opt.old.call(this);
				}

				if (opt.queue) {
					jQuery.dequeue(this, opt.queue);
				}
			};

			return opt;
		};

		jQuery.fn.extend({
			fadeTo: function fadeTo(speed, to, easing, callback) {

				// Show any hidden elements after setting opacity to 0
				return this.filter(isHiddenWithinTree).css("opacity", 0).show()

				// Animate to the value specified
				.end().animate({ opacity: to }, speed, easing, callback);
			},
			animate: function animate(prop, speed, easing, callback) {
				var empty = jQuery.isEmptyObject(prop),
				    optall = jQuery.speed(speed, easing, callback),
				    doAnimation = function doAnimation() {

					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation(this, jQuery.extend({}, prop), optall);

					// Empty animations, or finishing resolves immediately
					if (empty || dataPriv.get(this, "finish")) {
						anim.stop(true);
					}
				};

				doAnimation.finish = doAnimation;

				return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
			},
			stop: function stop(type, clearQueue, gotoEnd) {
				var stopQueue = function stopQueue(hooks) {
					var stop = hooks.stop;
					delete hooks.stop;
					stop(gotoEnd);
				};

				if (typeof type !== "string") {
					gotoEnd = clearQueue;
					clearQueue = type;
					type = undefined;
				}
				if (clearQueue) {
					this.queue(type || "fx", []);
				}

				return this.each(function () {
					var dequeue = true,
					    index = type != null && type + "queueHooks",
					    timers = jQuery.timers,
					    data = dataPriv.get(this);

					if (index) {
						if (data[index] && data[index].stop) {
							stopQueue(data[index]);
						}
					} else {
						for (index in data) {
							if (data[index] && data[index].stop && rrun.test(index)) {
								stopQueue(data[index]);
							}
						}
					}

					for (index = timers.length; index--;) {
						if (timers[index].elem === this && (type == null || timers[index].queue === type)) {

							timers[index].anim.stop(gotoEnd);
							dequeue = false;
							timers.splice(index, 1);
						}
					}

					// Start the next in the queue if the last step wasn't forced.
					// Timers currently will call their complete callbacks, which
					// will dequeue but only if they were gotoEnd.
					if (dequeue || !gotoEnd) {
						jQuery.dequeue(this, type);
					}
				});
			},
			finish: function finish(type) {
				if (type !== false) {
					type = type || "fx";
				}
				return this.each(function () {
					var index,
					    data = dataPriv.get(this),
					    queue = data[type + "queue"],
					    hooks = data[type + "queueHooks"],
					    timers = jQuery.timers,
					    length = queue ? queue.length : 0;

					// Enable finishing flag on private data
					data.finish = true;

					// Empty the queue first
					jQuery.queue(this, type, []);

					if (hooks && hooks.stop) {
						hooks.stop.call(this, true);
					}

					// Look for any active animations, and finish them
					for (index = timers.length; index--;) {
						if (timers[index].elem === this && timers[index].queue === type) {
							timers[index].anim.stop(true);
							timers.splice(index, 1);
						}
					}

					// Look for any animations in the old queue and finish them
					for (index = 0; index < length; index++) {
						if (queue[index] && queue[index].finish) {
							queue[index].finish.call(this);
						}
					}

					// Turn off finishing flag
					delete data.finish;
				});
			}
		});

		jQuery.each(["toggle", "show", "hide"], function (_i, name) {
			var cssFn = jQuery.fn[name];
			jQuery.fn[name] = function (speed, easing, callback) {
				return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
			};
		});

		// Generate shortcuts for custom animations
		jQuery.each({
			slideDown: genFx("show"),
			slideUp: genFx("hide"),
			slideToggle: genFx("toggle"),
			fadeIn: { opacity: "show" },
			fadeOut: { opacity: "hide" },
			fadeToggle: { opacity: "toggle" }
		}, function (name, props) {
			jQuery.fn[name] = function (speed, easing, callback) {
				return this.animate(props, speed, easing, callback);
			};
		});

		jQuery.timers = [];
		jQuery.fx.tick = function () {
			var timer,
			    i = 0,
			    timers = jQuery.timers;

			fxNow = Date.now();

			for (; i < timers.length; i++) {
				timer = timers[i];

				// Run the timer and safely remove it when done (allowing for external removal)
				if (!timer() && timers[i] === timer) {
					timers.splice(i--, 1);
				}
			}

			if (!timers.length) {
				jQuery.fx.stop();
			}
			fxNow = undefined;
		};

		jQuery.fx.timer = function (timer) {
			jQuery.timers.push(timer);
			jQuery.fx.start();
		};

		jQuery.fx.interval = 13;
		jQuery.fx.start = function () {
			if (inProgress) {
				return;
			}

			inProgress = true;
			schedule();
		};

		jQuery.fx.stop = function () {
			inProgress = null;
		};

		jQuery.fx.speeds = {
			slow: 600,
			fast: 200,

			// Default speed
			_default: 400
		};

		// Based off of the plugin by Clint Helfers, with permission.
		jQuery.fn.delay = function (time, type) {
			time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
			type = type || "fx";

			return this.queue(type, function (next, hooks) {
				var timeout = window.setTimeout(next, time);
				hooks.stop = function () {
					window.clearTimeout(timeout);
				};
			});
		};

		(function () {
			var input = document.createElement("input"),
			    select = document.createElement("select"),
			    opt = select.appendChild(document.createElement("option"));

			input.type = "checkbox";

			// Support: Android <=4.3 only
			// Default value for a checkbox should be "on"
			support.checkOn = input.value !== "";

			// Support: IE <=11 only
			// Must access selectedIndex to make default options select
			support.optSelected = opt.selected;

			// Support: IE <=11 only
			// An input loses its value after becoming a radio
			input = document.createElement("input");
			input.value = "t";
			input.type = "radio";
			support.radioValue = input.value === "t";
		})();

		var boolHook,
		    attrHandle = jQuery.expr.attrHandle;

		jQuery.fn.extend({
			attr: function attr(name, value) {
				return access(this, jQuery.attr, name, value, arguments.length > 1);
			},

			removeAttr: function removeAttr(name) {
				return this.each(function () {
					jQuery.removeAttr(this, name);
				});
			}
		});

		jQuery.extend({
			attr: function attr(elem, name, value) {
				var ret,
				    hooks,
				    nType = elem.nodeType;

				// Don't get/set attributes on text, comment and attribute nodes
				if (nType === 3 || nType === 8 || nType === 2) {
					return;
				}

				// Fallback to prop when attributes are not supported
				if (typeof elem.getAttribute === "undefined") {
					return jQuery.prop(elem, name, value);
				}

				// Attribute hooks are determined by the lowercase version
				// Grab necessary hook if one is defined
				if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
					hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
				}

				if (value !== undefined) {
					if (value === null) {
						jQuery.removeAttr(elem, name);
						return;
					}

					if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
						return ret;
					}

					elem.setAttribute(name, value + "");
					return value;
				}

				if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
					return ret;
				}

				ret = jQuery.find.attr(elem, name);

				// Non-existent attributes return null, we normalize to undefined
				return ret == null ? undefined : ret;
			},

			attrHooks: {
				type: {
					set: function set(elem, value) {
						if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
							var val = elem.value;
							elem.setAttribute("type", value);
							if (val) {
								elem.value = val;
							}
							return value;
						}
					}
				}
			},

			removeAttr: function removeAttr(elem, value) {
				var name,
				    i = 0,


				// Attribute names can contain non-HTML whitespace characters
				// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
				attrNames = value && value.match(rnothtmlwhite);

				if (attrNames && elem.nodeType === 1) {
					while (name = attrNames[i++]) {
						elem.removeAttribute(name);
					}
				}
			}
		});

		// Hooks for boolean attributes
		boolHook = {
			set: function set(elem, value, name) {
				if (value === false) {

					// Remove boolean attributes when set to false
					jQuery.removeAttr(elem, name);
				} else {
					elem.setAttribute(name, name);
				}
				return name;
			}
		};

		jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (_i, name) {
			var getter = attrHandle[name] || jQuery.find.attr;

			attrHandle[name] = function (elem, name, isXML) {
				var ret,
				    handle,
				    lowercaseName = name.toLowerCase();

				if (!isXML) {

					// Avoid an infinite loop by temporarily removing this function from the getter
					handle = attrHandle[lowercaseName];
					attrHandle[lowercaseName] = ret;
					ret = getter(elem, name, isXML) != null ? lowercaseName : null;
					attrHandle[lowercaseName] = handle;
				}
				return ret;
			};
		});

		var rfocusable = /^(?:input|select|textarea|button)$/i,
		    rclickable = /^(?:a|area)$/i;

		jQuery.fn.extend({
			prop: function prop(name, value) {
				return access(this, jQuery.prop, name, value, arguments.length > 1);
			},

			removeProp: function removeProp(name) {
				return this.each(function () {
					delete this[jQuery.propFix[name] || name];
				});
			}
		});

		jQuery.extend({
			prop: function prop(elem, name, value) {
				var ret,
				    hooks,
				    nType = elem.nodeType;

				// Don't get/set properties on text, comment and attribute nodes
				if (nType === 3 || nType === 8 || nType === 2) {
					return;
				}

				if (nType !== 1 || !jQuery.isXMLDoc(elem)) {

					// Fix name and attach hooks
					name = jQuery.propFix[name] || name;
					hooks = jQuery.propHooks[name];
				}

				if (value !== undefined) {
					if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
						return ret;
					}

					return elem[name] = value;
				}

				if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
					return ret;
				}

				return elem[name];
			},

			propHooks: {
				tabIndex: {
					get: function get(elem) {

						// Support: IE <=9 - 11 only
						// elem.tabIndex doesn't always return the
						// correct value when it hasn't been explicitly set
						// Use proper attribute retrieval (trac-12072)
						var tabindex = jQuery.find.attr(elem, "tabindex");

						if (tabindex) {
							return parseInt(tabindex, 10);
						}

						if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
							return 0;
						}

						return -1;
					}
				}
			},

			propFix: {
				"for": "htmlFor",
				"class": "className"
			}
		});

		// Support: IE <=11 only
		// Accessing the selectedIndex property
		// forces the browser to respect setting selected
		// on the option
		// The getter ensures a default option is selected
		// when in an optgroup
		// eslint rule "no-unused-expressions" is disabled for this code
		// since it considers such accessions noop
		if (!support.optSelected) {
			jQuery.propHooks.selected = {
				get: function get(elem) {

					/* eslint no-unused-expressions: "off" */

					var parent = elem.parentNode;
					if (parent && parent.parentNode) {
						parent.parentNode.selectedIndex;
					}
					return null;
				},
				set: function set(elem) {

					/* eslint no-unused-expressions: "off" */

					var parent = elem.parentNode;
					if (parent) {
						parent.selectedIndex;

						if (parent.parentNode) {
							parent.parentNode.selectedIndex;
						}
					}
				}
			};
		}

		jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
			jQuery.propFix[this.toLowerCase()] = this;
		});

		// Strip and collapse whitespace according to HTML spec
		// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
		function stripAndCollapse(value) {
			var tokens = value.match(rnothtmlwhite) || [];
			return tokens.join(" ");
		}

		function getClass(elem) {
			return elem.getAttribute && elem.getAttribute("class") || "";
		}

		function classesToArray(value) {
			if (Array.isArray(value)) {
				return value;
			}
			if (typeof value === "string") {
				return value.match(rnothtmlwhite) || [];
			}
			return [];
		}

		jQuery.fn.extend({
			addClass: function addClass(value) {
				var classNames, cur, curValue, className, i, finalValue;

				if (isFunction(value)) {
					return this.each(function (j) {
						jQuery(this).addClass(value.call(this, j, getClass(this)));
					});
				}

				classNames = classesToArray(value);

				if (classNames.length) {
					return this.each(function () {
						curValue = getClass(this);
						cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

						if (cur) {
							for (i = 0; i < classNames.length; i++) {
								className = classNames[i];
								if (cur.indexOf(" " + className + " ") < 0) {
									cur += className + " ";
								}
							}

							// Only assign if different to avoid unneeded rendering.
							finalValue = stripAndCollapse(cur);
							if (curValue !== finalValue) {
								this.setAttribute("class", finalValue);
							}
						}
					});
				}

				return this;
			},

			removeClass: function removeClass(value) {
				var classNames, cur, curValue, className, i, finalValue;

				if (isFunction(value)) {
					return this.each(function (j) {
						jQuery(this).removeClass(value.call(this, j, getClass(this)));
					});
				}

				if (!arguments.length) {
					return this.attr("class", "");
				}

				classNames = classesToArray(value);

				if (classNames.length) {
					return this.each(function () {
						curValue = getClass(this);

						// This expression is here for better compressibility (see addClass)
						cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

						if (cur) {
							for (i = 0; i < classNames.length; i++) {
								className = classNames[i];

								// Remove *all* instances
								while (cur.indexOf(" " + className + " ") > -1) {
									cur = cur.replace(" " + className + " ", " ");
								}
							}

							// Only assign if different to avoid unneeded rendering.
							finalValue = stripAndCollapse(cur);
							if (curValue !== finalValue) {
								this.setAttribute("class", finalValue);
							}
						}
					});
				}

				return this;
			},

			toggleClass: function toggleClass(value, stateVal) {
				var classNames,
				    className,
				    i,
				    self,
				    type = typeof value === "undefined" ? "undefined" : _typeof(value),
				    isValidValue = type === "string" || Array.isArray(value);

				if (isFunction(value)) {
					return this.each(function (i) {
						jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
					});
				}

				if (typeof stateVal === "boolean" && isValidValue) {
					return stateVal ? this.addClass(value) : this.removeClass(value);
				}

				classNames = classesToArray(value);

				return this.each(function () {
					if (isValidValue) {

						// Toggle individual class names
						self = jQuery(this);

						for (i = 0; i < classNames.length; i++) {
							className = classNames[i];

							// Check each className given, space separated list
							if (self.hasClass(className)) {
								self.removeClass(className);
							} else {
								self.addClass(className);
							}
						}

						// Toggle whole class name
					} else if (value === undefined || type === "boolean") {
						className = getClass(this);
						if (className) {

							// Store className if set
							dataPriv.set(this, "__className__", className);
						}

						// If the element has a class name or if we're passed `false`,
						// then remove the whole classname (if there was one, the above saved it).
						// Otherwise bring back whatever was previously saved (if anything),
						// falling back to the empty string if nothing was stored.
						if (this.setAttribute) {
							this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
						}
					}
				});
			},

			hasClass: function hasClass(selector) {
				var className,
				    elem,
				    i = 0;

				className = " " + selector + " ";
				while (elem = this[i++]) {
					if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
						return true;
					}
				}

				return false;
			}
		});

		var rreturn = /\r/g;

		jQuery.fn.extend({
			val: function val(value) {
				var hooks,
				    ret,
				    valueIsFunction,
				    elem = this[0];

				if (!arguments.length) {
					if (elem) {
						hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];

						if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
							return ret;
						}

						ret = elem.value;

						// Handle most common string cases
						if (typeof ret === "string") {
							return ret.replace(rreturn, "");
						}

						// Handle cases where value is null/undef or number
						return ret == null ? "" : ret;
					}

					return;
				}

				valueIsFunction = isFunction(value);

				return this.each(function (i) {
					var val;

					if (this.nodeType !== 1) {
						return;
					}

					if (valueIsFunction) {
						val = value.call(this, i, jQuery(this).val());
					} else {
						val = value;
					}

					// Treat null/undefined as ""; convert numbers to string
					if (val == null) {
						val = "";
					} else if (typeof val === "number") {
						val += "";
					} else if (Array.isArray(val)) {
						val = jQuery.map(val, function (value) {
							return value == null ? "" : value + "";
						});
					}

					hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];

					// If set returns undefined, fall back to normal setting
					if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
						this.value = val;
					}
				});
			}
		});

		jQuery.extend({
			valHooks: {
				option: {
					get: function get(elem) {

						var val = jQuery.find.attr(elem, "value");
						return val != null ? val :

						// Support: IE <=10 - 11 only
						// option.text throws exceptions (trac-14686, trac-14858)
						// Strip and collapse whitespace
						// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
						stripAndCollapse(jQuery.text(elem));
					}
				},
				select: {
					get: function get(elem) {
						var value,
						    option,
						    i,
						    options = elem.options,
						    index = elem.selectedIndex,
						    one = elem.type === "select-one",
						    values = one ? null : [],
						    max = one ? index + 1 : options.length;

						if (index < 0) {
							i = max;
						} else {
							i = one ? index : 0;
						}

						// Loop through all the selected options
						for (; i < max; i++) {
							option = options[i];

							// Support: IE <=9 only
							// IE8-9 doesn't update selected after form reset (trac-2551)
							if ((option.selected || i === index) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {

								// Get the specific value for the option
								value = jQuery(option).val();

								// We don't need an array for one selects
								if (one) {
									return value;
								}

								// Multi-Selects return an array
								values.push(value);
							}
						}

						return values;
					},

					set: function set(elem, value) {
						var optionSet,
						    option,
						    options = elem.options,
						    values = jQuery.makeArray(value),
						    i = options.length;

						while (i--) {
							option = options[i];

							/* eslint-disable no-cond-assign */

							if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
								optionSet = true;
							}

							/* eslint-enable no-cond-assign */
						}

						// Force browsers to behave consistently when non-matching value is set
						if (!optionSet) {
							elem.selectedIndex = -1;
						}
						return values;
					}
				}
			}
		});

		// Radios and checkboxes getter/setter
		jQuery.each(["radio", "checkbox"], function () {
			jQuery.valHooks[this] = {
				set: function set(elem, value) {
					if (Array.isArray(value)) {
						return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
					}
				}
			};
			if (!support.checkOn) {
				jQuery.valHooks[this].get = function (elem) {
					return elem.getAttribute("value") === null ? "on" : elem.value;
				};
			}
		});

		// Return jQuery for attributes-only inclusion
		var location = window.location;

		var nonce = { guid: Date.now() };

		var rquery = /\?/;

		// Cross-browser xml parsing
		jQuery.parseXML = function (data) {
			var xml, parserErrorElem;
			if (!data || typeof data !== "string") {
				return null;
			}

			// Support: IE 9 - 11 only
			// IE throws on parseFromString with invalid input.
			try {
				xml = new window.DOMParser().parseFromString(data, "text/xml");
			} catch (e) {}

			parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
			if (!xml || parserErrorElem) {
				jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {
					return el.textContent;
				}).join("\n") : data));
			}
			return xml;
		};

		var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		    stopPropagationCallback = function stopPropagationCallback(e) {
			e.stopPropagation();
		};

		jQuery.extend(jQuery.event, {

			trigger: function trigger(event, data, elem, onlyHandlers) {

				var i,
				    cur,
				    tmp,
				    bubbleType,
				    ontype,
				    handle,
				    special,
				    lastElement,
				    eventPath = [elem || document],
				    type = hasOwn.call(event, "type") ? event.type : event,
				    namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];

				cur = lastElement = tmp = elem = elem || document;

				// Don't do events on text and comment nodes
				if (elem.nodeType === 3 || elem.nodeType === 8) {
					return;
				}

				// focus/blur morphs to focusin/out; ensure we're not firing them right now
				if (rfocusMorph.test(type + jQuery.event.triggered)) {
					return;
				}

				if (type.indexOf(".") > -1) {

					// Namespaced trigger; create a regexp to match event type in handle()
					namespaces = type.split(".");
					type = namespaces.shift();
					namespaces.sort();
				}
				ontype = type.indexOf(":") < 0 && "on" + type;

				// Caller can pass in a jQuery.Event object, Object, or just an event type string
				event = event[jQuery.expando] ? event : new jQuery.Event(type, (typeof event === "undefined" ? "undefined" : _typeof(event)) === "object" && event);

				// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
				event.isTrigger = onlyHandlers ? 2 : 3;
				event.namespace = namespaces.join(".");
				event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

				// Clean up the event in case it is being reused
				event.result = undefined;
				if (!event.target) {
					event.target = elem;
				}

				// Clone any incoming data and prepend the event, creating the handler arg list
				data = data == null ? [event] : jQuery.makeArray(data, [event]);

				// Allow special events to draw outside the lines
				special = jQuery.event.special[type] || {};
				if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
					return;
				}

				// Determine event propagation path in advance, per W3C events spec (trac-9951)
				// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)
				if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {

					bubbleType = special.delegateType || type;
					if (!rfocusMorph.test(bubbleType + type)) {
						cur = cur.parentNode;
					}
					for (; cur; cur = cur.parentNode) {
						eventPath.push(cur);
						tmp = cur;
					}

					// Only add window if we got to document (e.g., not plain obj or detached DOM)
					if (tmp === (elem.ownerDocument || document)) {
						eventPath.push(tmp.defaultView || tmp.parentWindow || window);
					}
				}

				// Fire handlers on the event path
				i = 0;
				while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
					lastElement = cur;
					event.type = i > 1 ? bubbleType : special.bindType || type;

					// jQuery handler
					handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");
					if (handle) {
						handle.apply(cur, data);
					}

					// Native handler
					handle = ontype && cur[ontype];
					if (handle && handle.apply && acceptData(cur)) {
						event.result = handle.apply(cur, data);
						if (event.result === false) {
							event.preventDefault();
						}
					}
				}
				event.type = type;

				// If nobody prevented the default action, do it now
				if (!onlyHandlers && !event.isDefaultPrevented()) {

					if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {

						// Call a native DOM method on the target with the same name as the event.
						// Don't do default actions on window, that's where global variables be (trac-6170)
						if (ontype && isFunction(elem[type]) && !isWindow(elem)) {

							// Don't re-trigger an onFOO event when we call its FOO() method
							tmp = elem[ontype];

							if (tmp) {
								elem[ontype] = null;
							}

							// Prevent re-triggering of the same event, since we already bubbled it above
							jQuery.event.triggered = type;

							if (event.isPropagationStopped()) {
								lastElement.addEventListener(type, stopPropagationCallback);
							}

							elem[type]();

							if (event.isPropagationStopped()) {
								lastElement.removeEventListener(type, stopPropagationCallback);
							}

							jQuery.event.triggered = undefined;

							if (tmp) {
								elem[ontype] = tmp;
							}
						}
					}
				}

				return event.result;
			},

			// Piggyback on a donor event to simulate a different one
			// Used only for `focus(in | out)` events
			simulate: function simulate(type, elem, event) {
				var e = jQuery.extend(new jQuery.Event(), event, {
					type: type,
					isSimulated: true
				});

				jQuery.event.trigger(e, null, elem);
			}

		});

		jQuery.fn.extend({

			trigger: function trigger(type, data) {
				return this.each(function () {
					jQuery.event.trigger(type, data, this);
				});
			},
			triggerHandler: function triggerHandler(type, data) {
				var elem = this[0];
				if (elem) {
					return jQuery.event.trigger(type, data, elem, true);
				}
			}
		});

		var rbracket = /\[\]$/,
		    rCRLF = /\r?\n/g,
		    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		    rsubmittable = /^(?:input|select|textarea|keygen)/i;

		function buildParams(prefix, obj, traditional, add) {
			var name;

			if (Array.isArray(obj)) {

				// Serialize array item.
				jQuery.each(obj, function (i, v) {
					if (traditional || rbracket.test(prefix)) {

						// Treat each array item as a scalar.
						add(prefix, v);
					} else {

						// Item is non-scalar (array or object), encode its numeric index.
						buildParams(prefix + "[" + ((typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" && v != null ? i : "") + "]", v, traditional, add);
					}
				});
			} else if (!traditional && toType(obj) === "object") {

				// Serialize object item.
				for (name in obj) {
					buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
				}
			} else {

				// Serialize scalar item.
				add(prefix, obj);
			}
		}

		// Serialize an array of form elements or a set of
		// key/values into a query string
		jQuery.param = function (a, traditional) {
			var prefix,
			    s = [],
			    add = function add(key, valueOrFunction) {

				// If value is a function, invoke it and use its return value
				var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;

				s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
			};

			if (a == null) {
				return "";
			}

			// If an array was passed in, assume that it is an array of form elements.
			if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {

				// Serialize the form elements
				jQuery.each(a, function () {
					add(this.name, this.value);
				});
			} else {

				// If traditional, encode the "old" way (the way 1.3.2 or older
				// did it), otherwise encode params recursively.
				for (prefix in a) {
					buildParams(prefix, a[prefix], traditional, add);
				}
			}

			// Return the resulting serialization
			return s.join("&");
		};

		jQuery.fn.extend({
			serialize: function serialize() {
				return jQuery.param(this.serializeArray());
			},
			serializeArray: function serializeArray() {
				return this.map(function () {

					// Can add propHook for "elements" to filter or add form elements
					var elements = jQuery.prop(this, "elements");
					return elements ? jQuery.makeArray(elements) : this;
				}).filter(function () {
					var type = this.type;

					// Use .is( ":disabled" ) so that fieldset[disabled] works
					return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
				}).map(function (_i, elem) {
					var val = jQuery(this).val();

					if (val == null) {
						return null;
					}

					if (Array.isArray(val)) {
						return jQuery.map(val, function (val) {
							return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
						});
					}

					return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
				}).get();
			}
		});

		var r20 = /%20/g,
		    rhash = /#.*$/,
		    rantiCache = /([?&])_=[^&]*/,
		    rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,


		// trac-7653, trac-8125, trac-8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		    rnoContent = /^(?:GET|HEAD)$/,
		    rprotocol = /^\/\//,


		/* Prefilters
	  * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	  * 2) These are called:
	  *    - BEFORE asking for a transport
	  *    - AFTER param serialization (s.data is a string if s.processData is true)
	  * 3) key is the dataType
	  * 4) the catchall symbol "*" can be used
	  * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	  */
		prefilters = {},


		/* Transports bindings
	  * 1) key is the dataType
	  * 2) the catchall symbol "*" can be used
	  * 3) selection will start with transport dataType and THEN go to "*" if needed
	  */
		transports = {},


		// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression
		allTypes = "*/".concat("*"),


		// Anchor tag for parsing the document origin
		originAnchor = document.createElement("a");

		originAnchor.href = location.href;

		// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
		function addToPrefiltersOrTransports(structure) {

			// dataTypeExpression is optional and defaults to "*"
			return function (dataTypeExpression, func) {

				if (typeof dataTypeExpression !== "string") {
					func = dataTypeExpression;
					dataTypeExpression = "*";
				}

				var dataType,
				    i = 0,
				    dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

				if (isFunction(func)) {

					// For each dataType in the dataTypeExpression
					while (dataType = dataTypes[i++]) {

						// Prepend if requested
						if (dataType[0] === "+") {
							dataType = dataType.slice(1) || "*";
							(structure[dataType] = structure[dataType] || []).unshift(func);

							// Otherwise append
						} else {
							(structure[dataType] = structure[dataType] || []).push(func);
						}
					}
				}
			};
		}

		// Base inspection function for prefilters and transports
		function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {

			var inspected = {},
			    seekingTransport = structure === transports;

			function inspect(dataType) {
				var selected;
				inspected[dataType] = true;
				jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
					var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
					if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {

						options.dataTypes.unshift(dataTypeOrTransport);
						inspect(dataTypeOrTransport);
						return false;
					} else if (seekingTransport) {
						return !(selected = dataTypeOrTransport);
					}
				});
				return selected;
			}

			return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
		}

		// A special extend for ajax options
		// that takes "flat" options (not to be deep extended)
		// Fixes trac-9887
		function ajaxExtend(target, src) {
			var key,
			    deep,
			    flatOptions = jQuery.ajaxSettings.flatOptions || {};

			for (key in src) {
				if (src[key] !== undefined) {
					(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
				}
			}
			if (deep) {
				jQuery.extend(true, target, deep);
			}

			return target;
		}

		/* Handles responses to an ajax request:
	  * - finds the right dataType (mediates between content-type and expected dataType)
	  * - returns the corresponding response
	  */
		function ajaxHandleResponses(s, jqXHR, responses) {

			var ct,
			    type,
			    finalDataType,
			    firstDataType,
			    contents = s.contents,
			    dataTypes = s.dataTypes;

			// Remove auto dataType and get content-type in the process
			while (dataTypes[0] === "*") {
				dataTypes.shift();
				if (ct === undefined) {
					ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
				}
			}

			// Check if we're dealing with a known content-type
			if (ct) {
				for (type in contents) {
					if (contents[type] && contents[type].test(ct)) {
						dataTypes.unshift(type);
						break;
					}
				}
			}

			// Check to see if we have a response for the expected dataType
			if (dataTypes[0] in responses) {
				finalDataType = dataTypes[0];
			} else {

				// Try convertible dataTypes
				for (type in responses) {
					if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
						finalDataType = type;
						break;
					}
					if (!firstDataType) {
						firstDataType = type;
					}
				}

				// Or just use first one
				finalDataType = finalDataType || firstDataType;
			}

			// If we found a dataType
			// We add the dataType to the list if needed
			// and return the corresponding response
			if (finalDataType) {
				if (finalDataType !== dataTypes[0]) {
					dataTypes.unshift(finalDataType);
				}
				return responses[finalDataType];
			}
		}

		/* Chain conversions given the request and the original response
	  * Also sets the responseXXX fields on the jqXHR instance
	  */
		function ajaxConvert(s, response, jqXHR, isSuccess) {
			var conv2,
			    current,
			    conv,
			    tmp,
			    prev,
			    converters = {},


			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

			// Create converters map with lowercased keys
			if (dataTypes[1]) {
				for (conv in s.converters) {
					converters[conv.toLowerCase()] = s.converters[conv];
				}
			}

			current = dataTypes.shift();

			// Convert to each sequential dataType
			while (current) {

				if (s.responseFields[current]) {
					jqXHR[s.responseFields[current]] = response;
				}

				// Apply the dataFilter if provided
				if (!prev && isSuccess && s.dataFilter) {
					response = s.dataFilter(response, s.dataType);
				}

				prev = current;
				current = dataTypes.shift();

				if (current) {

					// There's only work to do if current dataType is non-auto
					if (current === "*") {

						current = prev;

						// Convert response if prev dataType is non-auto and differs from current
					} else if (prev !== "*" && prev !== current) {

						// Seek a direct converter
						conv = converters[prev + " " + current] || converters["* " + current];

						// If none found, seek a pair
						if (!conv) {
							for (conv2 in converters) {

								// If conv2 outputs current
								tmp = conv2.split(" ");
								if (tmp[1] === current) {

									// If prev can be converted to accepted input
									conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
									if (conv) {

										// Condense equivalence converters
										if (conv === true) {
											conv = converters[conv2];

											// Otherwise, insert the intermediate dataType
										} else if (converters[conv2] !== true) {
											current = tmp[0];
											dataTypes.unshift(tmp[1]);
										}
										break;
									}
								}
							}
						}

						// Apply converter (if not an equivalence)
						if (conv !== true) {

							// Unless errors are allowed to bubble, catch and return them
							if (conv && s.throws) {
								response = conv(response);
							} else {
								try {
									response = conv(response);
								} catch (e) {
									return {
										state: "parsererror",
										error: conv ? e : "No conversion from " + prev + " to " + current
									};
								}
							}
						}
					}
				}
			}

			return { state: "success", data: response };
		}

		jQuery.extend({

			// Counter for holding the number of active queries
			active: 0,

			// Last-Modified header cache for next request
			lastModified: {},
			etag: {},

			ajaxSettings: {
				url: location.href,
				type: "GET",
				isLocal: rlocalProtocol.test(location.protocol),
				global: true,
				processData: true,
				async: true,
				contentType: "application/x-www-form-urlencoded; charset=UTF-8",

				/*
	   timeout: 0,
	   data: null,
	   dataType: null,
	   username: null,
	   password: null,
	   cache: null,
	   throws: false,
	   traditional: false,
	   headers: {},
	   */

				accepts: {
					"*": allTypes,
					text: "text/plain",
					html: "text/html",
					xml: "application/xml, text/xml",
					json: "application/json, text/javascript"
				},

				contents: {
					xml: /\bxml\b/,
					html: /\bhtml/,
					json: /\bjson\b/
				},

				responseFields: {
					xml: "responseXML",
					text: "responseText",
					json: "responseJSON"
				},

				// Data converters
				// Keys separate source (or catchall "*") and destination types with a single space
				converters: {

					// Convert anything to text
					"* text": String,

					// Text to html (true = no transformation)
					"text html": true,

					// Evaluate text as a json expression
					"text json": JSON.parse,

					// Parse text as xml
					"text xml": jQuery.parseXML
				},

				// For options that shouldn't be deep extended:
				// you can add your own custom options here if
				// and when you create one that shouldn't be
				// deep extended (see ajaxExtend)
				flatOptions: {
					url: true,
					context: true
				}
			},

			// Creates a full fledged settings object into target
			// with both ajaxSettings and settings fields.
			// If target is omitted, writes into ajaxSettings.
			ajaxSetup: function ajaxSetup(target, settings) {
				return settings ?

				// Building a settings object
				ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :

				// Extending ajaxSettings
				ajaxExtend(jQuery.ajaxSettings, target);
			},

			ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
			ajaxTransport: addToPrefiltersOrTransports(transports),

			// Main method
			ajax: function ajax(url, options) {

				// If url is an object, simulate pre-1.5 signature
				if ((typeof url === "undefined" ? "undefined" : _typeof(url)) === "object") {
					options = url;
					url = undefined;
				}

				// Force options to be an object
				options = options || {};

				var transport,


				// URL without anti-cache param
				cacheURL,


				// Response headers
				responseHeadersString,
				    responseHeaders,


				// timeout handle
				timeoutTimer,


				// Url cleanup var
				urlAnchor,


				// Request state (becomes false upon send and true upon completion)
				completed,


				// To know if global events are to be dispatched
				fireGlobals,


				// Loop variable
				i,


				// uncached part of the url
				uncached,


				// Create the final options object
				s = jQuery.ajaxSetup({}, options),


				// Callbacks context
				callbackContext = s.context || s,


				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,


				// Deferreds
				deferred = jQuery.Deferred(),
				    completeDeferred = jQuery.Callbacks("once memory"),


				// Status-dependent callbacks
				_statusCode = s.statusCode || {},


				// Headers (they are sent all at once)
				requestHeaders = {},
				    requestHeadersNames = {},


				// Default abort message
				strAbort = "canceled",


				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function getResponseHeader(key) {
						var match;
						if (completed) {
							if (!responseHeaders) {
								responseHeaders = {};
								while (match = rheaders.exec(responseHeadersString)) {
									responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
								}
							}
							match = responseHeaders[key.toLowerCase() + " "];
						}
						return match == null ? null : match.join(", ");
					},

					// Raw string
					getAllResponseHeaders: function getAllResponseHeaders() {
						return completed ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function setRequestHeader(name, value) {
						if (completed == null) {
							name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
							requestHeaders[name] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function overrideMimeType(type) {
						if (completed == null) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function statusCode(map) {
						var code;
						if (map) {
							if (completed) {

								// Execute the appropriate callbacks
								jqXHR.always(map[jqXHR.status]);
							} else {

								// Lazy-add the new callbacks in a way that preserves old ones
								for (code in map) {
									_statusCode[code] = [_statusCode[code], map[code]];
								}
							}
						}
						return this;
					},

					// Cancel the request
					abort: function abort(statusText) {
						var finalText = statusText || strAbort;
						if (transport) {
							transport.abort(finalText);
						}
						done(0, finalText);
						return this;
					}
				};

				// Attach deferreds
				deferred.promise(jqXHR);

				// Add protocol if not provided (prefilters might expect it)
				// Handle falsy url in the settings object (trac-10093: consistency with old signature)
				// We also use the url parameter if available
				s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//");

				// Alias method option to type as per ticket trac-12004
				s.type = options.method || options.type || s.method || s.type;

				// Extract dataTypes list
				s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];

				// A cross-domain request is in order when the origin doesn't match the current origin.
				if (s.crossDomain == null) {
					urlAnchor = document.createElement("a");

					// Support: IE <=8 - 11, Edge 12 - 15
					// IE throws exception on accessing the href property if url is malformed,
					// e.g. http://example.com:80x/
					try {
						urlAnchor.href = s.url;

						// Support: IE <=8 - 11 only
						// Anchor's host property isn't correctly set when s.url is relative
						urlAnchor.href = urlAnchor.href;
						s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
					} catch (e) {

						// If there is an error parsing the URL, assume it is crossDomain,
						// it can be rejected by the transport if it is invalid
						s.crossDomain = true;
					}
				}

				// Convert data if not already a string
				if (s.data && s.processData && typeof s.data !== "string") {
					s.data = jQuery.param(s.data, s.traditional);
				}

				// Apply prefilters
				inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

				// If request was aborted inside a prefilter, stop there
				if (completed) {
					return jqXHR;
				}

				// We can fire global events as of now if asked to
				// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)
				fireGlobals = jQuery.event && s.global;

				// Watch for a new set of requests
				if (fireGlobals && jQuery.active++ === 0) {
					jQuery.event.trigger("ajaxStart");
				}

				// Uppercase the type
				s.type = s.type.toUpperCase();

				// Determine if request has content
				s.hasContent = !rnoContent.test(s.type);

				// Save the URL in case we're toying with the If-Modified-Since
				// and/or If-None-Match header later on
				// Remove hash to simplify url manipulation
				cacheURL = s.url.replace(rhash, "");

				// More options handling for requests with no content
				if (!s.hasContent) {

					// Remember the hash so we can put it back
					uncached = s.url.slice(cacheURL.length);

					// If data is available and should be processed, append data to url
					if (s.data && (s.processData || typeof s.data === "string")) {
						cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;

						// trac-9682: remove data so that it's not used in an eventual retry
						delete s.data;
					}

					// Add or update anti-cache param if needed
					if (s.cache === false) {
						cacheURL = cacheURL.replace(rantiCache, "$1");
						uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
					}

					// Put hash and anti-cache on the URL that will be requested (gh-1732)
					s.url = cacheURL + uncached;

					// Change '%20' to '+' if this is encoded form body content (gh-2658)
				} else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
					s.data = s.data.replace(r20, "+");
				}

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if (s.ifModified) {
					if (jQuery.lastModified[cacheURL]) {
						jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
					}
					if (jQuery.etag[cacheURL]) {
						jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
					}
				}

				// Set the correct header, if data is being sent
				if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
					jqXHR.setRequestHeader("Content-Type", s.contentType);
				}

				// Set the Accepts header for the server, depending on the dataType
				jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);

				// Check for headers option
				for (i in s.headers) {
					jqXHR.setRequestHeader(i, s.headers[i]);
				}

				// Allow custom headers/mimetypes and early abort
				if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {

					// Abort if not done already and return
					return jqXHR.abort();
				}

				// Aborting is no longer a cancellation
				strAbort = "abort";

				// Install callbacks on deferreds
				completeDeferred.add(s.complete);
				jqXHR.done(s.success);
				jqXHR.fail(s.error);

				// Get transport
				transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

				// If no transport, we auto-abort
				if (!transport) {
					done(-1, "No Transport");
				} else {
					jqXHR.readyState = 1;

					// Send global event
					if (fireGlobals) {
						globalEventContext.trigger("ajaxSend", [jqXHR, s]);
					}

					// If request was aborted inside ajaxSend, stop there
					if (completed) {
						return jqXHR;
					}

					// Timeout
					if (s.async && s.timeout > 0) {
						timeoutTimer = window.setTimeout(function () {
							jqXHR.abort("timeout");
						}, s.timeout);
					}

					try {
						completed = false;
						transport.send(requestHeaders, done);
					} catch (e) {

						// Rethrow post-completion exceptions
						if (completed) {
							throw e;
						}

						// Propagate others as results
						done(-1, e);
					}
				}

				// Callback for when everything is done
				function done(status, nativeStatusText, responses, headers) {
					var isSuccess,
					    success,
					    error,
					    response,
					    modified,
					    statusText = nativeStatusText;

					// Ignore repeat invocations
					if (completed) {
						return;
					}

					completed = true;

					// Clear timeout if it exists
					if (timeoutTimer) {
						window.clearTimeout(timeoutTimer);
					}

					// Dereference transport for early garbage collection
					// (no matter how long the jqXHR object will be used)
					transport = undefined;

					// Cache response headers
					responseHeadersString = headers || "";

					// Set readyState
					jqXHR.readyState = status > 0 ? 4 : 0;

					// Determine if successful
					isSuccess = status >= 200 && status < 300 || status === 304;

					// Get response data
					if (responses) {
						response = ajaxHandleResponses(s, jqXHR, responses);
					}

					// Use a noop converter for missing script but not if jsonp
					if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1 && jQuery.inArray("json", s.dataTypes) < 0) {
						s.converters["text script"] = function () {};
					}

					// Convert no matter what (that way responseXXX fields are always set)
					response = ajaxConvert(s, response, jqXHR, isSuccess);

					// If successful, handle type chaining
					if (isSuccess) {

						// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
						if (s.ifModified) {
							modified = jqXHR.getResponseHeader("Last-Modified");
							if (modified) {
								jQuery.lastModified[cacheURL] = modified;
							}
							modified = jqXHR.getResponseHeader("etag");
							if (modified) {
								jQuery.etag[cacheURL] = modified;
							}
						}

						// if no content
						if (status === 204 || s.type === "HEAD") {
							statusText = "nocontent";

							// if not modified
						} else if (status === 304) {
							statusText = "notmodified";

							// If we have data, let's convert it
						} else {
							statusText = response.state;
							success = response.data;
							error = response.error;
							isSuccess = !error;
						}
					} else {

						// Extract error from statusText and normalize for non-aborts
						error = statusText;
						if (status || !statusText) {
							statusText = "error";
							if (status < 0) {
								status = 0;
							}
						}
					}

					// Set data for the fake xhr object
					jqXHR.status = status;
					jqXHR.statusText = (nativeStatusText || statusText) + "";

					// Success/Error
					if (isSuccess) {
						deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
					} else {
						deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
					}

					// Status-dependent callbacks
					jqXHR.statusCode(_statusCode);
					_statusCode = undefined;

					if (fireGlobals) {
						globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
					}

					// Complete
					completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

					if (fireGlobals) {
						globalEventContext.trigger("ajaxComplete", [jqXHR, s]);

						// Handle the global AJAX counter
						if (! --jQuery.active) {
							jQuery.event.trigger("ajaxStop");
						}
					}
				}

				return jqXHR;
			},

			getJSON: function getJSON(url, data, callback) {
				return jQuery.get(url, data, callback, "json");
			},

			getScript: function getScript(url, callback) {
				return jQuery.get(url, undefined, callback, "script");
			}
		});

		jQuery.each(["get", "post"], function (_i, method) {
			jQuery[method] = function (url, data, callback, type) {

				// Shift arguments if data argument was omitted
				if (isFunction(data)) {
					type = type || callback;
					callback = data;
					data = undefined;
				}

				// The url can be an options object (which then must have .url)
				return jQuery.ajax(jQuery.extend({
					url: url,
					type: method,
					dataType: type,
					data: data,
					success: callback
				}, jQuery.isPlainObject(url) && url));
			};
		});

		jQuery.ajaxPrefilter(function (s) {
			var i;
			for (i in s.headers) {
				if (i.toLowerCase() === "content-type") {
					s.contentType = s.headers[i] || "";
				}
			}
		});

		jQuery._evalUrl = function (url, options, doc) {
			return jQuery.ajax({
				url: url,

				// Make this explicit, since user can override this through ajaxSetup (trac-11264)
				type: "GET",
				dataType: "script",
				cache: true,
				async: false,
				global: false,

				// Only evaluate the response if it is successful (gh-4126)
				// dataFilter is not invoked for failure responses, so using it instead
				// of the default converter is kludgy but it works.
				converters: {
					"text script": function textScript() {}
				},
				dataFilter: function dataFilter(response) {
					jQuery.globalEval(response, options, doc);
				}
			});
		};

		jQuery.fn.extend({
			wrapAll: function wrapAll(html) {
				var wrap;

				if (this[0]) {
					if (isFunction(html)) {
						html = html.call(this[0]);
					}

					// The elements to wrap the target around
					wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

					if (this[0].parentNode) {
						wrap.insertBefore(this[0]);
					}

					wrap.map(function () {
						var elem = this;

						while (elem.firstElementChild) {
							elem = elem.firstElementChild;
						}

						return elem;
					}).append(this);
				}

				return this;
			},

			wrapInner: function wrapInner(html) {
				if (isFunction(html)) {
					return this.each(function (i) {
						jQuery(this).wrapInner(html.call(this, i));
					});
				}

				return this.each(function () {
					var self = jQuery(this),
					    contents = self.contents();

					if (contents.length) {
						contents.wrapAll(html);
					} else {
						self.append(html);
					}
				});
			},

			wrap: function wrap(html) {
				var htmlIsFunction = isFunction(html);

				return this.each(function (i) {
					jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
				});
			},

			unwrap: function unwrap(selector) {
				this.parent(selector).not("body").each(function () {
					jQuery(this).replaceWith(this.childNodes);
				});
				return this;
			}
		});

		jQuery.expr.pseudos.hidden = function (elem) {
			return !jQuery.expr.pseudos.visible(elem);
		};
		jQuery.expr.pseudos.visible = function (elem) {
			return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
		};

		jQuery.ajaxSettings.xhr = function () {
			try {
				return new window.XMLHttpRequest();
			} catch (e) {}
		};

		var xhrSuccessStatus = {

			// File protocol always yields status code 0, assume 200
			0: 200,

			// Support: IE <=9 only
			// trac-1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		    xhrSupported = jQuery.ajaxSettings.xhr();

		support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
		support.ajax = xhrSupported = !!xhrSupported;

		jQuery.ajaxTransport(function (options) {
			var _callback, errorCallback;

			// Cross domain only allowed if supported through XMLHttpRequest
			if (support.cors || xhrSupported && !options.crossDomain) {
				return {
					send: function send(headers, complete) {
						var i,
						    xhr = options.xhr();

						xhr.open(options.type, options.url, options.async, options.username, options.password);

						// Apply custom fields if provided
						if (options.xhrFields) {
							for (i in options.xhrFields) {
								xhr[i] = options.xhrFields[i];
							}
						}

						// Override mime type if needed
						if (options.mimeType && xhr.overrideMimeType) {
							xhr.overrideMimeType(options.mimeType);
						}

						// X-Requested-With header
						// For cross-domain requests, seeing as conditions for a preflight are
						// akin to a jigsaw puzzle, we simply never set it to be sure.
						// (it can always be set on a per-request basis or even using ajaxSetup)
						// For same-domain requests, won't change header if already provided.
						if (!options.crossDomain && !headers["X-Requested-With"]) {
							headers["X-Requested-With"] = "XMLHttpRequest";
						}

						// Set headers
						for (i in headers) {
							xhr.setRequestHeader(i, headers[i]);
						}

						// Callback
						_callback = function callback(type) {
							return function () {
								if (_callback) {
									_callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;

									if (type === "abort") {
										xhr.abort();
									} else if (type === "error") {

										// Support: IE <=9 only
										// On a manual native abort, IE9 throws
										// errors on any property access that is not readyState
										if (typeof xhr.status !== "number") {
											complete(0, "error");
										} else {
											complete(

											// File: protocol always yields status 0; see trac-8605, trac-14207
											xhr.status, xhr.statusText);
										}
									} else {
										complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText,

										// Support: IE <=9 only
										// IE9 has no XHR2 but throws on binary (trac-11426)
										// For XHR2 non-text, let the caller handle it (gh-2498)
										(xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());
									}
								}
							};
						};

						// Listen to events
						xhr.onload = _callback();
						errorCallback = xhr.onerror = xhr.ontimeout = _callback("error");

						// Support: IE 9 only
						// Use onreadystatechange to replace onabort
						// to handle uncaught aborts
						if (xhr.onabort !== undefined) {
							xhr.onabort = errorCallback;
						} else {
							xhr.onreadystatechange = function () {

								// Check readyState before timeout as it changes
								if (xhr.readyState === 4) {

									// Allow onerror to be called first,
									// but that will not handle a native abort
									// Also, save errorCallback to a variable
									// as xhr.onerror cannot be accessed
									window.setTimeout(function () {
										if (_callback) {
											errorCallback();
										}
									});
								}
							};
						}

						// Create the abort callback
						_callback = _callback("abort");

						try {

							// Do send the request (this may raise an exception)
							xhr.send(options.hasContent && options.data || null);
						} catch (e) {

							// trac-14683: Only rethrow if this hasn't been notified as an error yet
							if (_callback) {
								throw e;
							}
						}
					},

					abort: function abort() {
						if (_callback) {
							_callback();
						}
					}
				};
			}
		});

		// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
		jQuery.ajaxPrefilter(function (s) {
			if (s.crossDomain) {
				s.contents.script = false;
			}
		});

		// Install script dataType
		jQuery.ajaxSetup({
			accepts: {
				script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
			},
			contents: {
				script: /\b(?:java|ecma)script\b/
			},
			converters: {
				"text script": function textScript(text) {
					jQuery.globalEval(text);
					return text;
				}
			}
		});

		// Handle cache's special case and crossDomain
		jQuery.ajaxPrefilter("script", function (s) {
			if (s.cache === undefined) {
				s.cache = false;
			}
			if (s.crossDomain) {
				s.type = "GET";
			}
		});

		// Bind script tag hack transport
		jQuery.ajaxTransport("script", function (s) {

			// This transport only deals with cross domain or forced-by-attrs requests
			if (s.crossDomain || s.scriptAttrs) {
				var script, _callback2;
				return {
					send: function send(_, complete) {
						script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({ charset: s.scriptCharset, src: s.url }).on("load error", _callback2 = function callback(evt) {
							script.remove();
							_callback2 = null;
							if (evt) {
								complete(evt.type === "error" ? 404 : 200, evt.type);
							}
						});

						// Use native DOM manipulation to avoid our domManip AJAX trickery
						document.head.appendChild(script[0]);
					},
					abort: function abort() {
						if (_callback2) {
							_callback2();
						}
					}
				};
			}
		});

		var oldCallbacks = [],
		    rjsonp = /(=)\?(?=&|$)|\?\?/;

		// Default jsonp settings
		jQuery.ajaxSetup({
			jsonp: "callback",
			jsonpCallback: function jsonpCallback() {
				var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
				this[callback] = true;
				return callback;
			}
		});

		// Detect, normalize options and install callbacks for jsonp requests
		jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {

			var callbackName,
			    overwritten,
			    responseContainer,
			    jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");

			// Handle iff the expected data type is "jsonp" or we have a parameter to set
			if (jsonProp || s.dataTypes[0] === "jsonp") {

				// Get callback name, remembering preexisting value associated with it
				callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;

				// Insert callback into url or form data
				if (jsonProp) {
					s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
				} else if (s.jsonp !== false) {
					s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
				}

				// Use data converter to retrieve json after script execution
				s.converters["script json"] = function () {
					if (!responseContainer) {
						jQuery.error(callbackName + " was not called");
					}
					return responseContainer[0];
				};

				// Force json dataType
				s.dataTypes[0] = "json";

				// Install callback
				overwritten = window[callbackName];
				window[callbackName] = function () {
					responseContainer = arguments;
				};

				// Clean-up function (fires after converters)
				jqXHR.always(function () {

					// If previous value didn't exist - remove it
					if (overwritten === undefined) {
						jQuery(window).removeProp(callbackName);

						// Otherwise restore preexisting value
					} else {
						window[callbackName] = overwritten;
					}

					// Save back as free
					if (s[callbackName]) {

						// Make sure that re-using the options doesn't screw things around
						s.jsonpCallback = originalSettings.jsonpCallback;

						// Save the callback name for future use
						oldCallbacks.push(callbackName);
					}

					// Call if it was a function and we have a response
					if (responseContainer && isFunction(overwritten)) {
						overwritten(responseContainer[0]);
					}

					responseContainer = overwritten = undefined;
				});

				// Delegate to script
				return "script";
			}
		});

		// Support: Safari 8 only
		// In Safari 8 documents created via document.implementation.createHTMLDocument
		// collapse sibling forms: the second one becomes a child of the first one.
		// Because of that, this security measure has to be disabled in Safari 8.
		// https://bugs.webkit.org/show_bug.cgi?id=137337
		support.createHTMLDocument = function () {
			var body = document.implementation.createHTMLDocument("").body;
			body.innerHTML = "<form></form><form></form>";
			return body.childNodes.length === 2;
		}();

		// Argument "data" should be string of html
		// context (optional): If specified, the fragment will be created in this context,
		// defaults to document
		// keepScripts (optional): If true, will include scripts passed in the html string
		jQuery.parseHTML = function (data, context, keepScripts) {
			if (typeof data !== "string") {
				return [];
			}
			if (typeof context === "boolean") {
				keepScripts = context;
				context = false;
			}

			var base, parsed, scripts;

			if (!context) {

				// Stop scripts or inline event handlers from being executed immediately
				// by using document.implementation
				if (support.createHTMLDocument) {
					context = document.implementation.createHTMLDocument("");

					// Set the base href for the created document
					// so any parsed elements with URLs
					// are based on the document's URL (gh-2965)
					base = context.createElement("base");
					base.href = document.location.href;
					context.head.appendChild(base);
				} else {
					context = document;
				}
			}

			parsed = rsingleTag.exec(data);
			scripts = !keepScripts && [];

			// Single tag
			if (parsed) {
				return [context.createElement(parsed[1])];
			}

			parsed = buildFragment([data], context, scripts);

			if (scripts && scripts.length) {
				jQuery(scripts).remove();
			}

			return jQuery.merge([], parsed.childNodes);
		};

		/**
	  * Load a url into a page
	  */
		jQuery.fn.load = function (url, params, callback) {
			var selector,
			    type,
			    response,
			    self = this,
			    off = url.indexOf(" ");

			if (off > -1) {
				selector = stripAndCollapse(url.slice(off));
				url = url.slice(0, off);
			}

			// If it's a function
			if (isFunction(params)) {

				// We assume that it's the callback
				callback = params;
				params = undefined;

				// Otherwise, build a param string
			} else if (params && (typeof params === "undefined" ? "undefined" : _typeof(params)) === "object") {
				type = "POST";
			}

			// If we have elements to modify, make the request
			if (self.length > 0) {
				jQuery.ajax({
					url: url,

					// If "type" variable is undefined, then "GET" method will be used.
					// Make value of this field explicit since
					// user can override it through ajaxSetup method
					type: type || "GET",
					dataType: "html",
					data: params
				}).done(function (responseText) {

					// Save response for use in complete callback
					response = arguments;

					self.html(selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) :

					// Otherwise use the full result
					responseText);

					// If the request succeeds, this function gets "data", "status", "jqXHR"
					// but they are ignored because response was set above.
					// If it fails, this function gets "jqXHR", "status", "error"
				}).always(callback && function (jqXHR, status) {
					self.each(function () {
						callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
					});
				});
			}

			return this;
		};

		jQuery.expr.pseudos.animated = function (elem) {
			return jQuery.grep(jQuery.timers, function (fn) {
				return elem === fn.elem;
			}).length;
		};

		jQuery.offset = {
			setOffset: function setOffset(elem, options, i) {
				var curPosition,
				    curLeft,
				    curCSSTop,
				    curTop,
				    curOffset,
				    curCSSLeft,
				    calculatePosition,
				    position = jQuery.css(elem, "position"),
				    curElem = jQuery(elem),
				    props = {};

				// Set position first, in-case top/left are set even on static elem
				if (position === "static") {
					elem.style.position = "relative";
				}

				curOffset = curElem.offset();
				curCSSTop = jQuery.css(elem, "top");
				curCSSLeft = jQuery.css(elem, "left");
				calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;

				// Need to be able to calculate position if either
				// top or left is auto and position is either absolute or fixed
				if (calculatePosition) {
					curPosition = curElem.position();
					curTop = curPosition.top;
					curLeft = curPosition.left;
				} else {
					curTop = parseFloat(curCSSTop) || 0;
					curLeft = parseFloat(curCSSLeft) || 0;
				}

				if (isFunction(options)) {

					// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
					options = options.call(elem, i, jQuery.extend({}, curOffset));
				}

				if (options.top != null) {
					props.top = options.top - curOffset.top + curTop;
				}
				if (options.left != null) {
					props.left = options.left - curOffset.left + curLeft;
				}

				if ("using" in options) {
					options.using.call(elem, props);
				} else {
					curElem.css(props);
				}
			}
		};

		jQuery.fn.extend({

			// offset() relates an element's border box to the document origin
			offset: function offset(options) {

				// Preserve chaining for setter
				if (arguments.length) {
					return options === undefined ? this : this.each(function (i) {
						jQuery.offset.setOffset(this, options, i);
					});
				}

				var rect,
				    win,
				    elem = this[0];

				if (!elem) {
					return;
				}

				// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
				// Support: IE <=11 only
				// Running getBoundingClientRect on a
				// disconnected node in IE throws an error
				if (!elem.getClientRects().length) {
					return { top: 0, left: 0 };
				}

				// Get document-relative position by adding viewport scroll to viewport-relative gBCR
				rect = elem.getBoundingClientRect();
				win = elem.ownerDocument.defaultView;
				return {
					top: rect.top + win.pageYOffset,
					left: rect.left + win.pageXOffset
				};
			},

			// position() relates an element's margin box to its offset parent's padding box
			// This corresponds to the behavior of CSS absolute positioning
			position: function position() {
				if (!this[0]) {
					return;
				}

				var offsetParent,
				    offset,
				    doc,
				    elem = this[0],
				    parentOffset = { top: 0, left: 0 };

				// position:fixed elements are offset from the viewport, which itself always has zero offset
				if (jQuery.css(elem, "position") === "fixed") {

					// Assume position:fixed implies availability of getBoundingClientRect
					offset = elem.getBoundingClientRect();
				} else {
					offset = this.offset();

					// Account for the *real* offset parent, which can be the document or its root element
					// when a statically positioned element is identified
					doc = elem.ownerDocument;
					offsetParent = elem.offsetParent || doc.documentElement;
					while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {

						offsetParent = offsetParent.parentNode;
					}
					if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {

						// Incorporate borders into its offset, since they are outside its content origin
						parentOffset = jQuery(offsetParent).offset();
						parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
						parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
					}
				}

				// Subtract parent offsets and element margins
				return {
					top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
					left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
				};
			},

			// This method will return documentElement in the following cases:
			// 1) For the element inside the iframe without offsetParent, this method will return
			//    documentElement of the parent window
			// 2) For the hidden or detached element
			// 3) For body or html element, i.e. in case of the html node - it will return itself
			//
			// but those exceptions were never presented as a real life use-cases
			// and might be considered as more preferable results.
			//
			// This logic, however, is not guaranteed and can change at any point in the future
			offsetParent: function offsetParent() {
				return this.map(function () {
					var offsetParent = this.offsetParent;

					while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
						offsetParent = offsetParent.offsetParent;
					}

					return offsetParent || documentElement;
				});
			}
		});

		// Create scrollLeft and scrollTop methods
		jQuery.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (method, prop) {
			var top = "pageYOffset" === prop;

			jQuery.fn[method] = function (val) {
				return access(this, function (elem, method, val) {

					// Coalesce documents and windows
					var win;
					if (isWindow(elem)) {
						win = elem;
					} else if (elem.nodeType === 9) {
						win = elem.defaultView;
					}

					if (val === undefined) {
						return win ? win[prop] : elem[method];
					}

					if (win) {
						win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
					} else {
						elem[method] = val;
					}
				}, method, val, arguments.length);
			};
		});

		// Support: Safari <=7 - 9.1, Chrome <=37 - 49
		// Add the top/left cssHooks using jQuery.fn.position
		// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
		// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
		// getComputedStyle returns percent when specified for top/left/bottom/right;
		// rather than make the css module depend on the offset module, just check for it here
		jQuery.each(["top", "left"], function (_i, prop) {
			jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
				if (computed) {
					computed = curCSS(elem, prop);

					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
				}
			});
		});

		// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
		jQuery.each({ Height: "height", Width: "width" }, function (name, type) {
			jQuery.each({
				padding: "inner" + name,
				content: type,
				"": "outer" + name
			}, function (defaultExtra, funcName) {

				// Margin is only for outerHeight, outerWidth
				jQuery.fn[funcName] = function (margin, value) {
					var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
					    extra = defaultExtra || (margin === true || value === true ? "margin" : "border");

					return access(this, function (elem, type, value) {
						var doc;

						if (isWindow(elem)) {

							// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
							return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
						}

						// Get document width or height
						if (elem.nodeType === 9) {
							doc = elem.documentElement;

							// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
							// whichever is greatest
							return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
						}

						return value === undefined ?

						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css(elem, type, extra) :

						// Set width or height on the element
						jQuery.style(elem, type, value, extra);
					}, type, chainable ? margin : undefined, chainable);
				};
			});
		});

		jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (_i, type) {
			jQuery.fn[type] = function (fn) {
				return this.on(type, fn);
			};
		});

		jQuery.fn.extend({

			bind: function bind(types, data, fn) {
				return this.on(types, null, data, fn);
			},
			unbind: function unbind(types, fn) {
				return this.off(types, null, fn);
			},

			delegate: function delegate(selector, types, data, fn) {
				return this.on(types, selector, data, fn);
			},
			undelegate: function undelegate(selector, types, fn) {

				// ( namespace ) or ( selector, types [, fn] )
				return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
			},

			hover: function hover(fnOver, fnOut) {
				return this.on("mouseenter", fnOver).on("mouseleave", fnOut || fnOver);
			}
		});

		jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (_i, name) {

			// Handle event binding
			jQuery.fn[name] = function (data, fn) {
				return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
			};
		});

		// Support: Android <=4.0 only
		// Make sure we trim BOM and NBSP
		// Require that the "whitespace run" starts from a non-whitespace
		// to avoid O(N^2) behavior when the engine would try matching "\s+$" at each space position.
		var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;

		// Bind a function to a context, optionally partially applying any
		// arguments.
		// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
		// However, it is not slated for removal any time soon
		jQuery.proxy = function (fn, context) {
			var tmp, args, proxy;

			if (typeof context === "string") {
				tmp = fn[context];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if (!isFunction(fn)) {
				return undefined;
			}

			// Simulated bind
			args = _slice.call(arguments, 2);
			proxy = function proxy() {
				return fn.apply(context || this, args.concat(_slice.call(arguments)));
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		};

		jQuery.holdReady = function (hold) {
			if (hold) {
				jQuery.readyWait++;
			} else {
				jQuery.ready(true);
			}
		};
		jQuery.isArray = Array.isArray;
		jQuery.parseJSON = JSON.parse;
		jQuery.nodeName = nodeName;
		jQuery.isFunction = isFunction;
		jQuery.isWindow = isWindow;
		jQuery.camelCase = camelCase;
		jQuery.type = toType;

		jQuery.now = Date.now;

		jQuery.isNumeric = function (obj) {

			// As of jQuery 3.0, isNumeric is limited to
			// strings and numbers (primitives or objects)
			// that can be coerced to finite numbers (gh-2662)
			var type = jQuery.type(obj);
			return (type === "number" || type === "string") &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN(obj - parseFloat(obj));
		};

		jQuery.trim = function (text) {
			return text == null ? "" : (text + "").replace(rtrim, "$1");
		};

		// Register as a named AMD module, since jQuery can be concatenated with other
		// files that may use define, but not via a proper concatenation script that
		// understands anonymous AMD modules. A named AMD is safest and most robust
		// way to register. Lowercase jquery is used because AMD module names are
		// derived from file names, and jQuery is normally delivered in a lowercase
		// file name. Do this after creating the global so that if an AMD module wants
		// to call noConflict to hide this version of jQuery, it will work.

		// Note that for maximum portability, libraries that are not jQuery should
		// declare themselves as anonymous modules, and avoid setting a global if an
		// AMD loader is present. jQuery is a special case. For more information, see
		// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

		if (true) {
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return jQuery;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}

		var

		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,


		// Map over the $ in case of overwrite
		_$ = window.$;

		jQuery.noConflict = function (deep) {
			if (window.$ === jQuery) {
				window.$ = _$;
			}

			if (deep && window.jQuery === jQuery) {
				window.jQuery = _jQuery;
			}

			return jQuery;
		};

		// Expose jQuery and $ identifiers, even in AMD
		// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)
		// and CommonJS for browser emulators (trac-13566)
		if (typeof noGlobal === "undefined") {
			window.jQuery = window.$ = jQuery;
		}

		return jQuery;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ErdmanDataService = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(17);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	_jquery2.default.ajaxSettings.traditional = true;

	var _ErdmanDataService = function () {
	    function _ErdmanDataService() {
	        _classCallCheck(this, _ErdmanDataService);
	    }

	    _createClass(_ErdmanDataService, [{
	        key: 'getPages',
	        value: function getPages() {
	            var url = '/api/pages';
	            var promise = _jquery2.default.get(url);
	            return promise.then(function (data) {
	                return JSON.parse(data);
	            });
	        }
	    }, {
	        key: 'search',
	        value: function search(query) {
	            var url = '/api/search',
	                promise = _jquery2.default.post(url, { "q": query || '' });
	            return promise.then(function (data) {
	                return JSON.parse(data);
	            });
	        }
	    }]);

	    return _ErdmanDataService;
	}();

	var ErdmanDataService = exports.ErdmanDataService = new _ErdmanDataService();

/***/ })
/******/ ]);